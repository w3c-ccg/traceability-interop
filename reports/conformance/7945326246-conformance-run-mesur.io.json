{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "64b92208-3e7e-4ffd-b62e-3e5adeb8a4f1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "91d04e15-d631-4a8c-ae44-f99f2fa6b96f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f6f35f1-24d8-4262-8757-aacd8f7ab79a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c6d83d4-5ce9-427e-8a4a-2bf8a06a842d"
                }
              }
            ]
          },
          {
            "id": "c0398fb8-626f-4d16-963e-1a9f833c13bf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14050538-ef9c-4066-a556-c84fbaac0fc9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5696f314-6e56-40db-a61a-5af63530e427"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ae502954-b54c-4688-9ddb-138769a0f0fa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bcd87963-b9d1-4d22-ad58-02c0a26ecae9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60fac391-cde8-4b97-9c50-e14161c4b6c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0f83b9-d3fe-48ff-951a-c262217ae4d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e18cef5-50b4-4707-babb-c0d2b0d589f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e14e026c-ec1d-4c2b-b01f-603df1d3c829",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2159a606-3bf5-494e-b7f6-0df6bf295c63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e7dea1b-04fe-4f35-9a40-219feba59166",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "530b4f22-98bb-4f64-8100-129daa54ca8b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3ecbe62-cdcd-4d87-b80b-da3ed6b2cf38",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9db9e2b5-33d1-49c8-9203-f0b41d99c60f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98eb3315-df68-44b8-921b-b4664c92d228",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28d28143-3b63-4de5-a867-f32c2baaed8e"
            }
          }
        ]
      },
      {
        "id": "229f16a2-c044-4ea0-9a37-9894fd2a04a9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e33bd2ea-0a2f-4fc6-a67a-cc4f52f8ba98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c359e20-dde0-4477-8568-e90b71ba1006",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a982da85-cf1f-4d4f-ad28-cfa6e860b282",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4758bf-603e-4f00-9d31-09a8993cdba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a36ed86-132a-4dfe-b729-157872fcbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f061b6ce-2f5e-46f5-a36e-a821070466bd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2249e1c-43d4-4c67-9288-55dd97fd3c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3162410-e6e4-473c-a993-18781354e0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d58d8a3-85b5-4303-8999-46f12f220615",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec703639-33d9-448e-ad72-a43f1f83843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "732a48bf-b451-4ba3-beea-1aab85686971"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1811c174-dd2d-4d2c-9659-0320f2da4d01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10c6a26b-ca24-4302-82a0-e4779aa6d749",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752e6851-dffc-4bb8-b706-333cda038a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8393691e-45d3-4cf6-989c-f9fb2292ca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841b6d77-6a26-4664-acab-8dc212ef6269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8e40fa-750f-4255-bcc5-90d1a5ab8895"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aac9fb7f-9360-47d3-b910-460954881902",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1da687e0-e432-456a-97a7-853332dea072",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10bceb3b-f5b5-4d63-af86-eef09247b23c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4fca1067-7371-4cea-a5a1-3ed833390203"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f343fd-b9c9-45cb-8b31-ce6c381f3a20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3e27ad3f-7937-4470-bdca-bf104fa7bfbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bfd0c6b-937f-4b4f-89a1-4ba1b49cb9ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8fd41c0-15c7-4c08-8def-e1fee3249467"
            }
          }
        ]
      },
      {
        "id": "5bb34daa-e6af-4f7d-ab56-42e3aadb6106",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "996d1839-b823-4840-9da2-15020de46624",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1153ed8-e537-43c0-8b8e-958937e00e9b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e16b1c5d-0d4b-4716-a5e3-bb5c19dda25f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b5324a-633d-4802-84dd-aeff0026eb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cb2241-9500-4dc4-9e81-ada3b7ad786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab18457-3ac5-46c2-affb-3a288f219a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a3fa32-0d9d-4bd7-8ebd-fc114c9fa69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51159654-33d3-424c-80ed-c312a6ceaf3d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4538f99-10a3-473b-a36f-6dd86167c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecef9abf-fc56-4fc2-b472-eaca89ab5095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe19f428-0cbb-4e1f-beea-04425fce90be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddcc4bfc-f366-4b9b-80ee-c2b15ea5849e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af73dd85-8f9a-4640-89b4-2e9b156fa673",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ccf33d-5141-4d78-b13c-09acc0a9a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123f21c6-3eb7-465b-888a-f96aaa401bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8af980-49de-445e-9ff6-676783dbaf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04ecec56-e180-4eda-b726-d701a4ad9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f562a3c-115d-4027-8812-c9f38f51417d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9846bab8-6a26-461c-9c10-75fcea6c8507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fefea4f-bdba-4cda-ac6d-48e1df1d916f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f1795f-be9b-4888-a738-3116b8ce55e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb2706c-bc8d-4eab-82a7-89cfa76e4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d6f48-dcd2-4e7b-b4ca-c777957a42f9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160d9fc8-9c92-4156-b94a-a19f81bb6823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4c220b-baa1-4b48-a30b-a07c9cfb6932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fecad2-e77b-4f1b-9a9d-c1acf886e63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "319800b7-25a9-4471-97f5-3f8bb0f7aff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7661d2-b96c-4809-a70c-528559ebf406",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1d4a4e-52c8-4d65-801a-7d7cda8239d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a854b1ab-4b70-410e-9a02-e37249057d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf7b9f-a83f-468f-9eb1-2deb7b7adb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe847730-8458-4fe0-9afe-94aa38035177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd09457-118a-46b7-9f84-a4b8f2451e80",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ecd8d9-4395-4e52-ab93-d732ccb7c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444d6d6b-e77b-41d4-8595-39d7b60538a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395e7ab7-3060-4ebc-9b65-4f4df27ccc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3bd8af4-effb-47ae-a2b8-c00d32c7b6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aac3e6-4a09-468b-841f-d3afa9d6a0fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b5db2-82cd-45d5-aa97-2848beab07e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83fee7d-026a-4d3a-aff8-0ddcfb401257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510eca04-0e9a-4b11-bb40-5fb4f0bf9f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4828f396-7322-4d47-bfa7-3825c406c03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ce8d8-88ea-482b-87b2-054a4a390815",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b2cd26-d835-49a1-9eec-91bad0255340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a227e56a-a7b4-48a4-896d-48c1e73bbd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7270aba-a4fc-4b44-84c6-ead1b2aaa1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c26396f-6fe3-4597-9132-4f77d9a1003e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ea19d1-8061-4730-8e7a-4a3d5724b811",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3169c750-f6f1-4505-9cf0-9848387e057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3493c94-2048-49a2-89a6-4f6bb4588807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d60514-154c-44c3-84be-aa68888ff376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28fe4199-e0e7-4858-adbb-f26710570f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d808fb0-534f-49a8-82f2-4530b2f1954b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b07ae17-f03c-46c3-a2af-76ceded80666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003cadfa-ee24-4def-ba20-1e76f19387f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b63c6a9-bacc-4900-95e8-f79e513a4b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f9be66b-5000-45d0-8c74-f9f73595e09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc87d4dc-489a-4d9e-b37a-9fe3f108e8ee",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c122ea6-e388-4673-9d02-9d11a763a99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a822fd-1f84-41f0-9102-de44522fbf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c67404-b6fd-4dfa-ab6a-1a699ad04813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcbf887a-dc61-4257-b75d-602cb3611d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31575c6-7849-42c7-82df-df07a51a88d5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c2d2b4-4a68-4696-84a9-714a17080295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe9ddf8-e434-45aa-8acd-c3137f30fa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bd71aa-2a01-4c84-97de-cc28d6abf2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b931d8db-44b5-4177-99e7-f9589fcde165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba9b38d-0fca-4192-8d6a-99e36933dca7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511a73d1-1829-4741-8d4e-e5f56c1a4cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f135c21-dc45-42b0-97e6-4d1415ab6e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea4bbd-3df9-4278-939c-21382b1286ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c64d9f-73c4-4cd1-b415-9879e1f5bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715a41bb-f7da-48ed-b6da-3142f20546e9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78974322-0f95-40e3-a89b-a4cd617edac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4393d9-0b48-4013-b46d-9aac42c54ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4315d84e-8511-4c4e-9572-70b3bafbb11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a9014e6-25e5-4a86-b1fe-0db305bd93b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835c1b3a-8cfd-4f94-a6ea-722b1c2f6d54",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b57bd7-540b-4f60-a9a0-919eb81189a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c78900-1d8b-4974-8fca-963dac140eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ba801c-6470-47eb-abcd-ddee6c60c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b08377-f661-4d25-b40c-eee697196282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab511726-ef97-4213-9128-e4174abf29cb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dce55b8-4b32-4bff-9379-ed435a912578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b312c9f-cc9c-412e-bff3-ba95bcbce90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d8d288-fc91-4a4a-bb20-3e29c4ce25e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "905dd882-7349-4ca7-869e-31647fe8a086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2a987-4e75-4b59-b8cb-dc969637febc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d221c4a2-3015-4d6c-8e22-443389ed1d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ccdd81-4931-4ce6-b0c8-7d35130ebd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4376a455-b982-41a2-9f96-9048bdc8ddc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3d0f73-2435-41c8-84fd-9446b87e11bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f644bf25-c242-4be6-ae59-39d781577096",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafb66a8-d4cb-4ffa-a615-b445e579f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5e3453-c3fd-4161-bee4-617926d75853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57e5dff-a6f5-4caa-8933-a4325d1720ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd1cd80-3627-4904-8dad-929e0740b8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4413c7-e956-46b1-9e27-215c80d49ea8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcb9107-c1a2-4921-88b0-a181fe5b7bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cced637-1999-4888-9845-aa74cf344dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb2f8f4-8ce8-4766-8ea7-5f0fb67b1a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8473c5a4-9a7a-48c4-af64-5066b3134ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bbff5b-afe4-4b6d-bc07-ce815dee2b35",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d867df-6aac-4e10-aadb-01edb1d1f95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8b6072-7e9e-4d07-a210-ecabb1b3a7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f23d50-e308-412f-91cd-aa59e1ab0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7cb671-3151-4822-955e-8f4565e8e21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f070d5-be54-4d4c-9e2c-d3b58412496c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e704306a-e7b4-4a6d-bfef-917e3c346f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de714ac4-7332-434e-b0df-7ceb905720b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adb74a3-3460-4905-9d45-dd00fd6e5f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d6b19f-bfb7-4006-a131-80dd9885fc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d830b-c9ce-4a96-80ca-fc8ecd3f20cc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2249d6-d777-48bf-92b7-5ff28dddfb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0bd3e3-b8ae-48c2-aa1f-c09ff63962ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e706cf-6b64-425d-99f2-30a9423c43a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e360b2f4-bf91-4f43-9910-f8a803030d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb8f850-2a5b-45ae-9313-6ba08c26a37d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5745e1-ece2-415b-a141-109fbe96b83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d216ce-180f-4e04-813f-87ba7cbd767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1973eca7-1892-4a02-991a-4ee1c6e17678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3062b7a6-d182-47c3-a630-3b8ecabf2117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338a57a2-af92-4099-bdca-aed7e351ed6e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd41ba1-3d50-4449-86ff-ded2a9ae48b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fe25e4-5edb-4a5b-a4d0-fee0882465b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ee8087-2af2-44cd-811e-6a5a3d11227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f31f49-b751-4bb5-9995-51a70b779e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04600262-9f13-4d64-a650-122914ca0a8d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef5855e-97c4-4123-8b98-ce1e9e444663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93993add-9e96-4794-a451-cdf29236dd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c3e64c-1207-421a-829e-d807f4ccb08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f90d1f-7fbf-46e3-b1a7-f3a3cc299369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5174ed-b5ac-41a3-806c-7e144de7cf85",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d531e0de-aa5e-4ad8-b0d4-d84e2355ea39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7325df3a-8f26-4df7-a0cc-4a252cca79cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98890f92-1248-4abf-887a-d92eef9c8281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fbbb92-fb62-47fe-bb8a-8edff4cc7430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73e3c2-1f08-46cb-bc0f-c03e38a3cfc1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7adb50-a5b1-4543-88e8-f8dfb7ffc706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a9fbc5-9911-4fbf-9f0a-c6b73687dc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2519f53-8cb9-4fb4-becd-09460435a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ece755-6b9e-4254-8a63-4202d3de1f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013ff12-3c98-4cfe-9a19-db8abc7f090c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a9b6f1-6543-4359-9948-c06af130cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b391b9a3-8a08-4fda-b5fa-486f21b6b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704f2c08-833a-4c63-b7fd-4f908aa0b17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06300207-af93-4722-a890-9f508b2901ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fa773f-ecd3-424a-ab2d-027f59c27a1c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f955d7-c9e8-47df-a814-1dd2f701d4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88132d05-b26c-40e5-95d0-fe148998147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b141497-f2be-427c-b00b-6e98e6a03a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e491cb60-4c9f-446e-b5f9-30a9909da7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3e9ce0-3d65-482a-b223-34472d80b8d2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c9e02-1f30-44a3-b50f-5cb078636475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f157cbb-e7e2-49e9-98f7-fcb1efb37184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99370c0-1488-4c71-9a74-3ee4171153dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "627e8a05-da8f-4a52-bb80-dd0a20be99e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b23bcd-b589-45e3-82c8-3ae5eb0ac5f7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f71eb3-febc-427a-9a4b-3bf046672fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba360af-d3ae-4462-b19e-47e7e7272a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4da20-d35f-4153-9525-eedb24d42a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f6facf-296a-4af7-a66b-66fcb5dcbaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26331dce-d7ae-4ba4-9c4b-d7dbf8110c01",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b368bc4-2e47-429f-b60f-79de8fbaafc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395c392f-b792-444e-bcef-35025cfdf7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ed9bfe-6737-4b5c-9504-fe8665970fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc64011-2428-4e77-a1cd-3c3e71cfee11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0a114c-b123-41d9-aa3c-075369d295dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d3cc9c-e8e6-49f4-a0b4-72a1a1349e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bcc032-f7e8-4512-b357-decbc3a6174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55c793b-d180-49c8-b7b0-5eaaadfb0e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3752bc30-d6ae-4897-aaf3-cf7b8ce6d390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0267cc20-920c-43c1-97cc-7428d7b618c5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cabfdd-86e0-4acc-b123-4bda0ee94c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62b52a0-7596-4c7e-9dbe-6d275d8ab718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aab1266-aae4-44c1-85a0-74d902f990e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "97a74faf-4f17-44d0-a864-4101c6611e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8842a5c2-0d32-4f03-80be-a7c75b4e85dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce25b95-7ca7-4651-a5f8-5f85b2bf1b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a5f4c39-49f6-4d00-953d-da5db25ba560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a19aa3-f2e6-4fa9-be98-c7c3c4be366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5221257-6f48-4158-9da8-fe530314c3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95259d8d-dc60-42bb-95ff-ba4ab28a2a33",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85113782-ba45-458f-b459-a70996a8e704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d25b1b3-34dc-46dc-a936-c6751029fcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea083ae-b6d5-458d-a75b-a04cdd9d1b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3d882f-d155-4764-a2ff-15fc7c90fec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ce3396-6f54-4116-9ee9-9051522e25f4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40e6622-e662-47ca-96e1-1ece6a4e5bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b55f4f-5a4c-41d6-99ef-b47ff6350fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e4c9a1-8c22-45c4-b714-a1de3994096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd6df59-edfc-46fa-a4a4-dc59566c010e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ead6b1-ce40-46b6-abb3-e9744b06b792",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0b6ff8-8226-4ce9-a9a4-fa8c4fdb88b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b8616b-7865-42ec-a8ef-56eb3e094b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d7ad9e-2450-4e72-bd7c-e9d8b693f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "58e205ee-771d-43e5-9831-42e65838f483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80df5890-f86a-46b7-8098-8ddfa0d74e9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f325e305-e45a-4d1a-a2b0-807b7b475e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d97701-9d38-4d22-850d-01aa6a7aa6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18562081-6674-44c0-8e23-3d15fc8f1420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a50b096-f498-4a26-b01c-de1b882b598e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb99d5-1b16-495d-b633-374f597a1bbf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30acae03-ae64-4b1d-8276-114b5aacbba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb6ec88-9702-445a-8466-b17bfd5886f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a17d853-6d88-46fd-be7e-cb816ee3089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfb66fe-21cc-4a9c-8aea-c3c061a29f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d575fd6-8265-4b96-9b58-92aa518b5f80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6128ad84-d02f-43a6-825f-5041867666f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054d81f2-fc8c-4897-9a87-9027a88bf9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d8914c-9b3c-42b5-ade1-c74b893785a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90fc975e-bba3-4abd-b286-eea6d07aae5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca92b70-78fc-4b20-b49a-ed22dab99412",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2e3a15-32ac-490c-ad03-32a53894e7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dee66d8-5f3d-498a-bd99-3fbcdcbdfd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f736433-753f-49e5-9ab1-621d673488ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31abaeea-ad5a-49e5-b30a-15eb7488911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8381e7-c5d0-463b-8a85-517c60c3a0e6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30cae7-cb0d-4dde-b423-7ebe1a9888cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfdc9b2-cb4d-4cbd-b6e9-7766a6a40356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb13c102-01c0-4a8e-9f21-79e17c80e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ef947b-e368-4912-97e7-cd383077b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65bab40-e226-4888-a337-2d6ca23a6690",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08c7ca7-8603-4098-b537-893d9f86500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ac1f6e-c931-4cf1-8730-4e4a408cbfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bbde55-7c07-43fd-b636-44f3ef750638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2f71a9-f91c-4804-a7b0-5450f54c0d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d74ef19-565e-4070-91fa-50a4201df30d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a09ff67-4b5e-41cf-97d6-70f1628b993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a6cb94-ab1f-4d4c-a444-d2e263292276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be445c5e-8c11-4717-b703-45a18648c184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deea3e1c-824a-4466-8c47-1dfb58072965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224307c8-8bad-43c5-851f-f8b2ad32884a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f212578-2e40-44ec-97b4-daff128f3fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9633fa0d-6ba7-465b-b89a-3e4ba0f3aa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296a99ab-3cc9-48a9-9834-70947574d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6010490c-b65c-490c-9ab3-47cc07d4847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecc4557-7daf-4553-b0a9-c26826fb7c40",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8960265-06b9-4503-a64d-a4ad87bf4360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88952d2-80af-4d7d-bf55-297f3336214a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a575ef-aa9e-40bf-b4d8-d9d02f1322cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee32d2bc-1c6b-4029-8807-9a4317fa748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b360af4-3e53-4706-a6fb-0b4fbbbc39ce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7c2ab7-2ee5-4ba5-af3f-e50592096193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0051cdca-4f26-4f66-a027-f5b180fb81ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35508db-131e-47d2-9bc8-6177ee528942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b039c31-0fc4-43d8-99ba-f9d7af827681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b13de8-a1ed-4244-af94-c2ffe353aa33",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d06b58-67c5-471d-81c4-76a7f7b5c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266987b1-8035-4eef-8455-62c3922e8fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037570d8-1cc1-4f00-9119-0b39dd25deaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e796fee0-d084-4d56-a99d-2db5f0ecfad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93516c11-b61b-47a6-b231-99584ea56185",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfe4d7d-9c39-4faa-b5cf-9084351be8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ebd580-3e4e-480f-8d16-af7bc62eb860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f298303-1cf7-4d38-8a1a-521177bd83a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1861885-f4b4-49fd-a937-a39f3d3c55bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81c2c3c-0d20-43fc-9aa0-8b796dc0e67b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af525732-cd63-4241-852e-2d2e5b93f29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6c71fc-38e4-465c-b2a4-db5e5913b080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975876b-a884-481a-b575-1df36e41d87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f22eaf-3278-465f-a45e-7f8665c8291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93289649-2915-4c89-b6fb-4895c7031b1c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6111d0-f876-437f-90a1-68c6f8368836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4703d672-a2bb-4303-a11f-8dee1251b531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acec9973-2fa2-421f-8267-492bf3927106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "028b5285-a894-46c9-90c5-f3c56ddfcd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e353c2cd-87bc-4360-8b55-682189149693",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8288cf6b-c909-4d97-bf2c-5b54e3a498fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45045c8b-9309-4754-bc3b-642137b1c556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1886f9-17a7-4a8e-bccb-f05bbbea5f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb7167a-7bbb-4ac7-8172-d701eab2caa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d3da3f-c156-40c9-8679-83cb9d4dfa73",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcd30ef-a327-4ab2-9e4c-78bc2818871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2e072f-47e7-451d-ae3b-e7b185ddaae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd016ee-d964-417c-8d8a-ca2768b98ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66935c9d-793c-49d4-bfdb-3238a6cec835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c64e70-48c4-4fa6-b928-550a2221e744",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edcc3af-4a34-4293-b75b-743a7732a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfcc73e-23c9-499d-ba25-99460e98f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a9fbd5-f06c-4efa-bc39-9d7a2c511f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "be727a94-22d3-4554-88ea-b8057ae02b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfb848b-c139-417f-88b8-c3ac300e7d07",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a72cc5-9dd0-4290-8428-1da54badf833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5b3dfb-3c6e-4c6a-bf72-eabbdfda8d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8cd58c-9ff5-439c-b64a-0de80555bf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45e2562b-3772-4331-bcf3-52fd91e02e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6cf0af-450c-4e87-b601-2c8132a84b4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5858844-315e-4797-b8af-35bdbe681978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9014e0-c263-4f12-bc00-dbe5f7ea9104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc901ef-ec41-4511-8a8e-e15da770d69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1731d46f-deea-46ae-ae1a-2638b391793f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3837535-a1e4-4a5c-b9ae-f701bb05998b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7409e1f2-197d-4e7b-afcd-89882ad38753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20de15f7-68b2-4795-ad16-4b99c3e8a067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70af815f-4ab7-4cb3-aeac-46d2e6c591e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2a315b-4d70-4bcd-808d-5f4f32c14fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72947001-9785-490e-b53a-acd07dd994ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f75f7-ed84-4eef-b518-cf28eacf833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a5aa5b-99cf-4b91-a7d8-913e131392ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9fd977-3cb8-4b43-9e87-626292c72c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "794f4c32-b9ac-4246-bceb-241956c8cd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe5134-2868-4eb3-bbf6-bb119a4fde1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a766bbf-61ab-4271-9d22-845af935cf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c05a65f-6bad-432c-bfec-4b896541ff40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f7b243-d5d4-4393-b422-0f5a138fff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "294fe107-8366-4165-8099-a4ee3ffa4e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd68284e-5dd9-4e7e-9849-787a18cd2aab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb571fa-8362-4359-9cd2-ef3d1537b264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7163e714-62b0-4b51-b816-094836374526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55025782-5ac2-4c23-a069-70e51ea72fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f389721-d9a4-4f3a-9414-6660e2ed33cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f97d09-3a37-4c73-9329-ce4c0a4d7f52",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46956f9-ce78-4293-bd32-5faf82e8eea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae35b6d-d214-4656-8d8d-c434ced4d78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e50f2fb-2f8c-4346-9f47-b95e9dbc3617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "63cfc3f5-9d0b-4514-8e92-434e0d88f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e23ce6-aa03-4d62-943b-704cae0ffe49",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80afba74-4143-4e78-b19a-0c77e7d84970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161aea89-2450-49e5-ac3e-e1a072e2b9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81fbb16-1791-4037-91a9-1f69edc61e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b558cb-8cd4-4f18-9b3b-55ea82ebc57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b076c4-98cc-436f-8d96-64cde999e240",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada5721-335e-4280-98af-016af3b2ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce5998e-3460-4383-9f8f-08f95e86366a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90b0660-0ebd-4a79-b214-418fc22a7f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57dc87f9-7269-4e82-919a-8346da5b2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd96a36-c3d4-4f84-b484-0e7156b27ba7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fba8419-84ed-49e6-8317-f60527f41787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fdf3a8-7b84-4743-9580-e0b89e0adb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a93961-910f-4429-85ac-cefa03eab142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f99b04-612d-4e98-9a4c-163e08bb5e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612239e2-3263-4883-8586-005e56d84560",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aada49b0-2e8f-4842-984d-4e659d47839e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8f73b0-cb02-4c2b-baaf-a30fbf5664ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576232d1-c624-4c05-9b2a-7bf8656f15a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa77dcf-3a3c-4e03-b6ce-975918d590ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee18e10-15d1-4306-9161-122b12794c62",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594bede-a1c9-4bcc-ac18-1806228eb20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df47c53-c36d-4996-abb5-80af1bc2292a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a09647-b92e-41bd-b71e-d128493244b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "050bd1e8-d731-438e-b56a-9f8571a5f84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62c1fa0-ccfa-4edf-a534-96ac3a8080a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a222f114-1a86-461f-a1bb-4dfb2f6b1906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a914393-e6eb-4493-8c96-cc4f51e8414f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d7d0c7-91b5-4338-aebc-e1c43c127803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2faceb95-0890-44cf-b8d6-4eb2fb0c7a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5898e7-02d6-44a0-b203-9b1b61cd863e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa099c1-5010-4c94-a992-36feef383ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14699f85-2d17-485d-b76f-e3bb27961953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e0b722-9559-4226-9841-6e4557c98a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "802038e0-6ce9-4d4d-944a-795cd3d50420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c1128f-8256-4c2f-8d99-7edec73c4fee",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b8cd1e-5213-4a26-96b7-46be4f759a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc508ef-ddfa-49b0-83f5-23e8986a5b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a89a0ad-41b7-4ddb-9cf6-d73acee8e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdb4e1f-63bd-453f-a5d0-041483c1279a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693b49b8-1f21-4a9b-80c3-ed895e68a2fd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e327cb2c-36fe-42f1-84e2-c76b754b699a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72d59c4-afce-40b6-b3ad-36809c72eccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ab39f-906c-45f9-8ce8-3b53c723a2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "986cabfe-100f-43e4-a329-93013dfa85f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2277a52d-2ef5-45a4-986f-35b3393b1ed6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad8096-308b-4959-9039-2574d5f56e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba6387-b19e-43a8-a3b7-465e6e609818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59e7e2-238c-41e5-bdb4-be4cc01228b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f7710e-d18e-44fd-b4b3-4511ccb4094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e93363-679f-43c5-9188-63f0a7d29fd1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3636f4dd-ad03-44b2-9dcb-b810b0dfa29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26444014-47a3-4f54-bfed-bcd873dc716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853ad1e1-bf2a-4f17-911f-530d544be41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "921a357e-cebd-4b84-91ae-61c77f9b68b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3966868-8c1a-4220-8c7a-a77ca082e192",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927f06a5-829b-4024-b1b8-5ee6324c0614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afc355-349a-47f1-ba00-5503fae61af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d12589-c4d0-4383-86ad-940050aaf97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff045cf0-e4be-4917-a9fc-bf16cfab82ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10416e0d-0059-4d93-9368-329f8820f99a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e997266b-38d6-4284-909a-47ce36007453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754cfbcf-e7a4-4dad-bf3d-3e3c4e0af5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2334d2f8-962d-4bdd-a570-75ebea1345db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a8a465-6b9c-46d8-ba90-e367e89b44c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4929db-9010-4d73-9236-281601a994fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04770e6a-9ac4-4452-a569-f3e17577b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232bc2f0-7bf3-419e-8e1e-00ff8deb3497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df20fc75-a5f8-4186-8fc6-f24ebc07269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed855bae-13f3-436b-9efb-22d82212bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edcd5a9-d865-4cc8-9908-af01f3484f20",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c7b76a-54ea-4dfd-9787-fdaac874a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e735a7c5-b4e8-4d9e-b6db-20e8029b5c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a66fa8-e1ad-42de-98f0-aa6a86a5452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f882996-e7d6-4141-8288-a39ffac71e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019a3825-dc57-4ba4-8802-c98ec1c642ae",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf90872-eb45-4707-962d-284a4627216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8934de1d-9435-4863-bd16-1e6fbdd97fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3983fb-9855-425f-aa77-358ea3ea2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e19360a-efac-4464-84b7-af7d8309859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f9dd6a-f989-46c5-bb0f-9a4a807c3dd8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd120e-df9b-47d8-aa45-b443151fb572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f164cd-18b2-4d27-9299-41aeefce11e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21063edb-c849-426d-a5a7-86b4cc775f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37783461-2149-4fa4-85c4-17039b8d653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c10d59a-b30d-4938-9c2b-1e4170cdcb99",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425bc8e1-c343-4e98-b678-367b28592171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf411e35-18ad-495a-b81c-7336cddf8217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afa4bc2-7304-4a82-86fa-c5746ab7e4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafa2bd9-a09f-4288-ba4b-acb99f584fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abf9a0b-fd94-4af2-b371-535da71af25c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5985800-217b-49f5-82b5-b55d3879bdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cb967a-041b-49b2-846d-234f01fb7ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac60b5f-e68b-4d16-9b60-c8c5be79bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "231ca5cb-0d78-459e-8fdf-e855d7874f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd73d30-26c7-4b43-b36a-6999bb8cc995",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61cfe35-5654-4c39-ae72-2f47f3bf730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b5ea4c-2148-4725-9823-c3bff24b9bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57245f9b-849f-48b5-9db6-42557995e034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0ff310-8056-4f7f-8b3c-dbf16783b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f24a5e2-eaa3-4373-892c-97a5d1932ddd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9adbf5-d1a0-4fca-9a8f-92ae65017404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb41380e-8bde-4ba6-99a6-762e7ef13704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7980a423-af27-4aee-bcc2-9be7e163dbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b5b206-634e-4d8e-9967-d3d0222c6a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f9ab2c-628c-46a7-bb4a-a7c87c9817bc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d205df-796a-48db-9f11-6dca90299b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4692f9b1-8062-4c89-9172-274818af1e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a41bbfa-d885-4b5a-8597-76287e62a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "637812bd-1233-4785-939c-504757b99b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f46d3-e975-4a19-a37d-676d70a5e3de",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d704f-655d-4e5d-a212-70791241c643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33932ec5-4cd9-4e60-9265-4612f70b3637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e6f627-7aac-4c68-b366-760fbbd41db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3657cae-e97b-4fa9-806e-a72d2ece3d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d94dc1-60fe-4683-a320-136cad5a91ab",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acee0bee-fef7-4c31-81a9-e132da431d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74a893b-a51f-4976-b1ad-525d22e88c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fd3603-4730-471a-89cd-df9d9880cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "689ff0ef-f177-472b-b396-572e78202023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42b3fe0-9cda-4e0a-a913-896902e2d25a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbd929a-16b5-45ed-8de0-145c3719f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58499574-ea95-4a34-bb22-20fefe425b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e649c959-d51c-483a-a99e-3a2f641c8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8022033e-edd5-4962-b223-75621fb3c733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909d61c6-9c5c-4513-929a-34fba8fe54d0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6715375-b64e-4d4b-a95f-0842207f8c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe46866-87a8-4783-a88b-9a0a9f5d6aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98abf90-6a78-4155-8555-bc89e32ceb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a07da0-6300-480e-b21c-ebbe10dd707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540e3d9-a178-4963-bb62-dd9c60748853",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a31c06-ec80-4aef-9d05-cd46bb26ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f1caf9-388c-4323-babc-04b361de8a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc43d5e-838e-4a9f-a8ec-88630cef47b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adb6d26-77d1-4a9d-80d0-3b118229fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93246302-81b3-44ef-a464-68357b84478a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a011c9b7-882d-463b-80ca-58278dfee4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb1baea-6e80-4293-84f3-662604e12bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca030f5a-d26b-44c3-8c28-5d6506bd6e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e8a722-2696-442d-8d6f-b5c1a99dea2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a431b8-0fdd-4e0b-b5d7-bbf7248cd845",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52284f57-7cac-49c2-b4a6-9f00c179281f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0dc4f3c1-c407-4d0e-a1bb-841909013438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a2caf2-2522-42a7-9047-5d2a01d852f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea96e37-afd8-4362-89e1-5db741b2f263"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6db28728-7b16-4bd3-a796-49496f7a7d5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43aa77ce-705a-45ea-b133-9016f38d0308",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c965e0f-c6ab-4308-b457-f1bc8391bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f53ef27b-2108-46fd-a1a9-ca4a1d5886bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc626ce-eb4c-4318-b8ec-256c5a13feb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1fb239e-ef12-4e94-a5d5-cca887c2067d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c935dc-e1f9-4978-9437-2d21701c0fe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe3d232-e26e-4354-8c66-9c42f1d69dd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc4a802-e8b0-4d1d-8b42-2c272855a40f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cfee086-1c12-4d06-9687-bfcee63d8dd8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "639e2186-758f-479c-b850-a35c0cffe789",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c12d3e8-ced9-4758-a112-702ba40b1ed9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "840b6c15-913f-4adf-9924-511de58c6892",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ec2e846-0503-4c37-b2aa-96f1727a6e53"
                }
              }
            ]
          },
          {
            "id": "fcba6c88-a441-4666-9a3a-d34755ecf1fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1a8351d-7cd5-4f70-be7a-51f0d14b9da2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9ced9e20-4e5f-4df1-b0a4-de1bd906e79b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed782931-267c-4f29-92c8-62e0d0dc1fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0c3e507-6452-4c2c-959f-a9d9276e3f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd489e0-ed5c-48f6-a49c-ef0c197e4a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a802a1fb-3a31-422e-9bce-7ca0959bcd12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c32df7e-d094-42e2-945f-8f2f30209eb4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73708eda-e5cb-4371-8e8f-d03e4c46de53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7074d504-84c8-4164-a515-7a9ea5b468d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaa2bd44-c4bd-45f9-baa5-16b5068fa89f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06195053-fab6-47c6-9f51-90a94bfd118e"
                    }
                  }
                ]
              },
              {
                "id": "d817cf8f-7c72-4b17-bee4-5afd132250ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d8c8a1d-4b59-4ed5-ba2d-21fbefae4792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb40a76c-bb1c-40c3-be99-b831afbcc645"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d44bfd00-0e36-4c9d-8be3-fbb2bacbab0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4d0c762-14e4-486e-8ddd-b0860e782aa4"
                    }
                  }
                ]
              },
              {
                "id": "1ba20064-5a48-4d03-b1b4-55d2a2585855",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45fdde5e-dfd5-41e2-8b7f-c543595276af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc8efa2c-4dd3-48bd-9087-40a28560c7b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8541f4a-e309-4b22-a9ff-9ba1d062f67f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e97a6c16-7590-4f5d-b9d0-cd7ac4800cd0"
                    }
                  }
                ]
              },
              {
                "id": "3d83c64d-4a0b-4971-bdd4-d8a2040dcb71",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5686362a-c24a-4559-9a0d-d1d95a0fe1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb17a782-eee3-448e-b9c3-b79e62a29d90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1311fdf5-de4f-47a5-890d-3ccddd0ddc85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2b8b22e7-2c2c-4bfc-9594-82b5ff422ba9"
                    }
                  }
                ]
              },
              {
                "id": "9b9b2216-cdaf-4443-8092-5dab7d073306",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56848a2-adcc-4c74-96f6-3cb676226675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45cb26e0-3cc6-46c1-9a91-753f56bcf902"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c32349c-a700-44db-a513-49ecfb3e4ec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "206fe364-7148-4949-baf6-6b3e7266f2d8"
                    }
                  }
                ]
              },
              {
                "id": "936cf0ac-c9ac-4118-87ad-7b6f1f828b4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b10b3a5c-f005-484a-ac2b-c6749cbb7d61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18a965b2-25ef-49b3-a157-42351bfb067c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "370f4bda-89e7-4344-9326-3dbc23a87946",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecb0cbf8-71af-471c-9d7f-513f95ee1587"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8ad2e89-558c-45db-b78f-399e723d9113",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3496f2c9-10a6-42d2-b241-eed00b6e9433"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d925666c-2493-4471-9671-d76999d55f96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27cb76ab-3fbb-4879-b8b1-ecceaa19ba33"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9475557-1e22-4f9f-a805-70e5dd4a11b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b8b3c454-fee6-4395-88e3-d3317a2acb40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79b59d9a-a629-472e-bf69-45466791a210",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "688a6d78-0a54-4f9c-8776-36ea523d7009"
            }
          }
        ]
      },
      {
        "id": "fad54b5a-4d37-458b-bac2-74112b561f38",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ff322c2-4418-42f2-a1a7-af908d645ca8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60687785-6e1f-4fc4-b78a-8efbe36e6a17",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7238193c-621d-4efa-a8b4-480d130d5b28",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b4b0c1-cb9d-4ee3-85dd-4a1b0901f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c60816-6c63-4205-a25d-f7d8d2ec351b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440a016-dc29-453d-a91b-099ad92d2266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42912d7f-60f5-4fdc-921c-f92e5e587018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ed0271-322a-4cc6-bef1-07c39f5a8d2f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7672633-c25d-48ab-a502-6886186d90aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcc872c-6865-4fcf-bbdc-c8ee4c990904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac4b48-eafc-4f2a-8a89-93697720d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15d4682-6d58-4236-9953-e4097333b157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764cc6b3-3755-44df-9449-d14c56df162f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e50d1e-06b6-406c-aa00-1a099f84fb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c17be81-c437-4e76-9c4d-fda162153d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad02abaf-0110-4fbd-8f22-ce1003b168e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d94e2c-8fe1-4dc9-9456-84920205a4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0049e867-cb79-4168-9870-4691cdadf574",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ded67e-7d9c-48f8-b027-c91f8b506391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f808fb75-777b-451b-844a-d0281ee5c06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c99bd83-02a3-4491-9362-4d4104b236d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5ad32f-0ea3-4917-9f65-5734e7246157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbbdb21-5988-46e6-806e-c62dd31052cf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de98454-166b-4310-97fc-70fcbafdba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1e9d5d-e1d4-4459-b7f7-f584a6fd2b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745c0e10-d1c8-4e2b-803a-6cf0ed74e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "301bb49c-10da-4650-89d1-c0ae0418d458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01d1b3c-d1a9-46d4-8bae-cb3baeb301c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229fdc86-28c8-4aae-879e-12c6493a7075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e93f41e-6d12-4f43-b26c-e9b54ccbe8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301007d5-4e37-403c-8816-ea72a49255c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09211baa-1431-401a-969f-0d08eec1b979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ca52cb-197d-4a22-aa3f-1342b32448ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abfa51-693e-4b74-803f-6bd1b0863c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e547496a-08ff-4962-aa42-ded5cc0fd95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc54af63-ece7-41f8-b1be-a43077b8f326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a65b12-538e-42a9-b62f-c23d65f0e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183ff88-3fcd-4119-b1be-c2bea5c9131f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3960734-46ff-4b2b-a30c-1e8b4119cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9672f2ad-2501-402f-bde0-eff7ffb3bd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322468b6-7b4a-453e-9de7-c4e580fd157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9181db54-0645-47a6-a5ce-a04a8d6bf7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1d0526-112e-4103-af33-7edcf480c6f7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7955e22-f34f-4747-99f0-9bcb41eb0747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d978bd9a-8808-438b-8634-c70c2da3ac7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082ff000-0edd-407c-90ff-aac7382ef15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8179396-c6c9-4c3d-afee-d93214a8bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a454c70c-d0c5-4599-acaf-f81930ba18c9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a5ac81-6dda-43c4-bb01-2e69ffa5d174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16eff96-9bd0-4d1a-a145-ce839e6b5595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b8631a-d089-4dbe-a6a4-cb9b3bab8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c92bb04e-07a3-4e0b-88bb-ef10bd82f9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae96b537-584b-4ceb-800c-011701924e4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d7a66-cf4d-4ebc-a3d1-05f20aac26ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7663b-92ac-4061-ba82-df8bad62d1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6721fa-462c-4967-8660-ab966c4a364e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bbc5e1-0f97-4d23-80fa-c8fe86d3d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bab329b-7a2a-4244-a552-c0526f9da3e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975d60e3-9634-484a-acc5-2cd7705db2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40697aba-6c6e-406a-88ea-06e7725ee261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c399f2a1-e654-4200-b686-ba462f01c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c76a4860-c095-4992-8bbc-1970d2bff37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8a54d9-bd00-4596-b53e-cf4937e31180",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a842ccf-5d0d-49f1-b02b-2d8373f352f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8716c98-7bee-4d50-863f-c340337e268a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1ed66-ae9c-41c4-bf2f-c70f78b5139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5713a2c9-d2d6-4416-a62f-0606bf2005db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b74babd-e4ce-4a03-a947-4f49ecc3abaf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194d98df-bf45-44dc-906f-f845678915ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3764fb6d-4456-430c-a420-b37457c83ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60537f3-a934-4d1a-a457-9c32907ee914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7028fc49-9dc9-47d7-bd8b-0b107bd27e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adde2d2-6f25-4d90-b754-d56cf95b5b5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f439833-ad26-4ea1-b66e-96daf544820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a17acb9-3299-4f9b-b6f0-06884c3cad4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4524accf-ec32-4f10-ba05-f3328c88ecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e0344f-5058-4cee-a84b-8e9234e73141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d159af4e-f2c1-4380-9e20-c3ffa917818f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53581e5-a097-4e1b-aff4-6f2a8101b4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80025fd7-ef80-4b16-8ac0-419a2e055469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6b2a9b-293f-4597-ad46-b7ce055fbb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9738918-7cf1-498a-a6be-a0790d33e4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb29d855-1b6d-4cfb-bf72-a48b657d5826",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a1afff-1838-4e31-8871-f5ae5953837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c5e53e-3fa5-4327-b4c7-a2a6e3c0c4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125daf33-0d53-4024-afa4-f998fcb59560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "294bb1d2-2ac9-4911-a568-0633614b4fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e72b5c0-de5d-4496-bd19-de201f75ccaa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc5d92c-e885-486b-a4fe-2c1fde3c573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5457ff-963e-4d81-9e92-300d2a8d5a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bb2f39-bdc7-4178-ac02-990625d2a118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "adef8241-063a-4ddf-8c47-9499b481b35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa7ba4e-281d-4f69-ac23-43e5434aff34",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84c1a91-bb74-4fb2-8c5d-649c1ab1ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da275de-f2ca-4608-9fc3-1ff064f51467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea317b96-58df-40a3-8c00-e0959b19d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70882df7-85e3-43cb-93b7-e989c5b65b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f37d0a-7c91-4303-bffe-bdcb7864cc94",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9772a31a-f34b-4180-b99c-bf08f2ae92c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c078770-b384-4cf4-937e-784552a42e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3fe5c6-6aa8-4df6-bf0d-592c1813fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d56692-f22b-442c-bb49-04bcd5c3e3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d50033-72d9-4a36-ba6d-f9f8945f9101",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c587061-9589-4a03-bbe8-584baeb17f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e9412b-e8f2-4496-b758-5e2d02032657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b89ca7e-98e0-4439-a236-14be2423f2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5323a9b5-2e56-447e-b760-c066074b26d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4876be3-73bc-4325-a8e5-5cc2362e52d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76345abf-b7c1-4325-9534-39d3ae616bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c953475-6c45-4037-94e0-9f23fda3e93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77888157-1bfe-46ed-ba73-4d7652ff1e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49268a7d-e7cc-42b8-9fab-3ecdfbdcaaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e613161-b945-4c6f-88da-87c56064c821",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19ff0cd-b419-48d4-95d0-4f4cc02ebd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d3980a-2751-4d48-8e9d-9e2bdc97bd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6445d8d-273c-455d-adec-8049d9481536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f432ef-2ede-4d66-8a84-f3a831d399f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3042152c-abdd-41f1-bcdf-d486161e1d1a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60696be6-29a5-454e-827c-798f1901ac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43da6b63-93c0-40ac-ae4a-44182e835fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef33c929-0aa9-4129-9e25-323ab1b9eca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d9e425-c2fe-44bf-97dd-0d2075d7a24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b75b5a-9fb1-42b9-b597-a784a7592253",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d5b3e-90b1-44ad-9ec2-0a6b2c1991f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea5f2bd-e9ef-4825-a440-38b6063ae346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b56348-8fe8-4968-828e-78e3feee8efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67108413-db66-47d9-8500-4bb455acaea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f24e68a-0826-4c6b-85fb-c71edf47150c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1002e5-c72a-4480-8741-ca8d0ef48e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc69a3d-af70-4021-9dd6-457da877f50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4f72b6-e99c-454d-8595-5bb9124c7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed7492c-ce5c-4ae4-b5fb-a35228c8035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05b4b30-46ac-4e51-bb02-709966c70de2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f0e75a-22b2-4135-9ee9-b2a71ab97531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a483a946-8be0-4375-a03e-96d7bfd62618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf73fb-17aa-4148-9406-1480eb0b169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06074ec-d008-4f3f-be7e-247a07efb82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edb0849-b004-4081-95fb-c6c444cc9b99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e778c775-31af-4c01-b6b9-b99ce757a833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4f63af-d938-4caa-b1e3-c1f26bca8ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8033e06f-1ecc-4886-891b-717c9fbd258c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f11a52f-58b0-43ed-baf5-e1fe45c4634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344d8744-2735-4772-bca3-807165108df2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d903f3-b829-48ba-af0a-94da0fd99b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e41c5a9-cc16-4d18-a388-b87b76bceef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e84cf99-7c89-46b6-adc3-bc130c3826d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22e37c92-6ff3-4cef-874a-a34236558386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab38f8fd-0192-45bf-8cff-94b63ebb2430",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a5539a-3547-4e60-abc3-d9e13cfbfd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e2ef00-b772-4145-a06c-6c40a814209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e11904-7b0a-4977-913e-9658e22da9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2f870b-c006-4391-bc37-2f6fd017f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57caa72-d9f1-4107-a174-d087051503b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d015f5bd-f09e-432a-96c6-65f559c0f97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90db75fe-aff3-44fb-b2a9-6a5181cd14b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea0b156-a255-4f73-8df2-174bbd715e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2fb002-53bf-4a79-a229-bd739e4fd13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaf3339-5bad-4865-a037-8f1b40d318a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd728ae9-55b2-4fb9-96e7-ce408c4efc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186d41f8-8652-4b11-b3c8-ef467f1e37ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35caab0d-3d78-4723-bce2-de2c54dba069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77629d54-5c19-440a-9504-d8cc5a533c52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bd1c6e1-e8ad-4266-a172-d11e987da3dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8745fd42-0460-4f53-87d8-31b029bbef7a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dae6307-bffa-4570-a507-804d859189da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e144960a-0e9b-45e3-9c1e-ee569b50dc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cf39b2-24c5-4d36-ba68-0c0c126bc69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f657fe8e-f28b-49c5-845d-0eb9d3d29dff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "592f64e8-7d59-45a2-9315-42dd0c71ea0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d6dff78-9bc5-44b3-9f20-100f45e0eaeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46d5ff5c-2757-47c3-b369-a5f801c325ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faec3a5b-7860-42bc-94d0-fd8574257b77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1a89075-1a16-4482-8d86-55405dfed487",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6075ac16-650a-404d-b1d3-989906a7390a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2c80ac7-eda3-41ad-b679-23a05120fd45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21bff3d5-9ca1-4a87-bb4b-5be0afa6f17d"
            }
          }
        ]
      },
      {
        "id": "d6c40d99-950d-4f2c-871f-0a4126bf480f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "683f50c2-58a3-4fb5-8cec-0719fed25ea1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5c031a6-a723-45d8-9942-4940a5c78e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92def440-90dc-4b46-b8ff-cedd72b270de",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b219b3c-24df-4d22-b778-a7f9b9f650a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef0c46e-32ef-45c7-aa02-f5d47fb4a790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed01efee-17b6-4b74-9280-b9ad6b85c31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae59335a-84a0-46fd-a4db-f14943a32d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98013384-7a8c-44e3-a2e6-81d60c90d69e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9764a-42d8-4ae2-b6b0-f1f2d52eed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d445a83-3df2-4641-af8c-ff0abf218b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d92797-f39e-48b6-857b-987d51c5ac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec4ba9a-cc3e-4d21-b058-0ff76205b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625cb6d7-60ed-4729-92b4-4549122281f7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4a5e0c-b18d-449d-b0dc-3b106a30ff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f78141-bda7-4bdf-8689-337545e624c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bbef5-34b7-41db-86e9-b99575f3b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb69ab28-25f4-44a4-a0ce-0410effe4b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f53fbc4-5173-421e-b5ac-3eb5045d2cbb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9053fb-e025-4dd2-bddb-c5866b49670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d189d46-1b72-4f2d-bffb-e5511975d1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80363624-23f1-4dbe-b03c-96bb8bd3d01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8758425-aa88-4271-ae1a-e835d8276652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527e9218-e702-441e-83c9-46332a7dffdc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690394d2-e155-4dbc-912a-f26aead0cd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6007750b-9cb9-4c86-a308-1dd48ac51e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60426077-4eb0-4ab9-9fed-dd655e402113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4237d3b8-68fb-47b3-afca-0fe1ded99485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41513cf-2409-4172-975e-0c0a685ff551",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f89a49-a10b-4ac3-9fb0-e7fe1870eafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b2b106-c01a-4baa-9c20-f89921c95838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aee63d1-87da-4a1c-8ecc-d5594b3ccef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4998890f-577e-4b4f-b0d2-49665d1d4874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f92e33-f540-41e0-afb0-b105200fe70f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fdd42f-4b38-4e9b-87db-70d10413664d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461d3468-206f-4802-ba40-924f1b7e1e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6182ab74-85bb-4066-905f-1288b5a805a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a3aeac-c051-4193-a695-464b0615605e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05d29b4-b874-49bd-a2b5-ee3d4064a275",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d5199d-3fd2-4399-a1e9-27f0f4aeedf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a126de-2216-4b75-90d6-997aa3e592aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900d84c-8c91-41e6-a0c9-54077a3ed5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cea18f-c5f9-4419-93d0-3bc05e104da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab36380-ef4a-42b4-8bfa-3a0d6a523c0f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1365981e-8633-447c-955c-4be0e510a129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414f72fd-a5ea-4010-8e0e-0d2351efe69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c84120-80ba-41d9-8476-843625674be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e738d9fb-1513-4a0c-bcb5-dc1ebfadd430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27d49ba-3f2b-4c02-8e91-8e7de29b6f33",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a6a684-91f4-44af-b720-caf196936608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d435729-9d41-4fc4-b43a-0edb49759373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f87805e-2c96-4e0c-a6ec-cbe71813c10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6a4157-c2f8-49fa-beae-43133a28d4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eecffd-7ee7-4012-800a-339c2f3c53dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a62b1c-1575-4bc3-ab49-898a136eaab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126abf85-5cbb-4ba3-bdca-0b7c67951fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912e1e2b-61e6-465e-b0ba-1342e18a20ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7beedb5f-7f0e-4c57-8db4-699d6c83ef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f401a7-7f01-4c35-9084-a0157ee95ca0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877cf3f-1e51-4e95-b59d-e8da5d00f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71c6e6e-10ee-4394-84a7-d6ecaaa9d161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3ff7f5-95d0-48e1-bb6a-adc13973d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0e0425-e2b6-4ea1-9c2c-e6e8dbcedf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798f225f-a3fc-46ed-9b85-a814f7bbf47c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066054c0-7ca5-42c8-9463-7052c6cf2f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaede98b-406f-4cc5-9d68-66c57114f3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c0e0c-817b-423c-831b-7041b95873e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef37646-fe1f-469c-b2e8-71c2d3946529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92b5ffc-a717-4c6e-bb83-741f5397919a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b6d860-0f62-42bf-99ad-dc3bffca0828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c670d3-b2d6-4d3d-8833-bb9712a51790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d04f6d-a1a2-45a9-9377-659734a47f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cfbb36-c9fa-43b8-b547-4e4715d95d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d14971d-b7a6-4f0e-b6fe-bea3707b5429",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575b6489-c459-4ec5-817c-28d8b3c04492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20649d21-b0a1-4b12-96b9-aba1d7848a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5133e1-c409-4b25-b95e-a8bbddf7d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "67cf8d62-8f2a-4c18-a91b-44c411e23c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b47a370-ce87-44d2-b8e3-49fdddc0f9ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e931260-bccb-4a80-b70f-b263b3f78fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fe6e47-0940-43c4-9119-64a43823c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c219755-83c4-425f-9aa1-3d0857457676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbac485-f9c3-4215-a089-b7b225ce2a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7ae1a8-34f0-4075-bcd9-bc4f5eb94ed0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873033eb-f2df-4487-915b-91cdf72ffffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a01520-192f-442d-b6a4-b713adf74e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aea35d-c819-4933-ad5c-e53142db0a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20f613d-787f-4bff-83e7-c6e971ebcdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec31948-541d-4698-9e89-b9b2d56da321",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da2d76-0768-4c73-872b-d00cda2b0b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daf6c60-1f6b-4673-8c5e-1ccb701d3062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dec6a99-7c6a-4ae9-b172-46169b8dd433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffafd9ea-3ed9-4242-ba9c-ff16a58706be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac1a952-ec0c-450f-a2ef-68f086f5d5c4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4ea79f-b121-49af-81a0-c1e1509d974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa8455b-80d1-443c-97c9-7a3b202dc9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170fc701-c5dc-4d14-96fb-eb8456dea127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d508707e-52a6-4370-ad15-6e1a7ae893aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b9776-77aa-4464-af5d-00ae781418ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe7ff01-ce73-4be7-abf1-64c7390fd585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded49b95-33dd-429b-9c64-034238cc9ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60289e6-fd79-447c-b5c8-1ea3066f3165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24e5a08-91f3-43e6-9b66-e122f3b37e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad36dfff-7a45-4e27-8084-0b899bbe78c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0459e0c-e40e-4485-8dcc-726d39b0f4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d97a6b-04e3-4b6f-9914-beeca2e22e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42dade6-312c-4b68-bc8f-079caf30db5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "300d4f5a-2253-4bf1-9b98-44147ab7cd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0017bad-8dac-4a48-b84b-63c137911237",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa42e3-dfa9-41b8-a121-5ba8b5fa1b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f79460-0cf7-4f40-92df-64aaf66fb012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9911b65f-0bb2-4a35-b578-68fee4ef5a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a890f6aa-d747-43a5-9575-69fb79876f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e66ed35-6a99-43ca-af40-ceab24dfac6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776fe1a2-8e66-4ecd-86a8-bee75d0045fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f446dd65-79c2-49a6-81d9-61b9599d0c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8324249-dd3d-489c-a046-5c7a4464ece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3975e9d-cc18-4bda-a019-62cfff73cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd5fe87-7e29-4c38-a99d-830df9fa74bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c88dc98-dda4-4b19-ac1f-49b11dcb8866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d405a871-9de5-45e6-a9f2-eeb29ce5dd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c173b1ab-bb00-4f6f-91c8-2001f2c894cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5896dafa-3e17-48cb-9abe-83ef843cf4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e601ad1-5493-42f3-8ed1-93a88cc46de4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7e2761-8b6b-47f2-9fd3-b988289eb911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9705a405-8ef9-4c7a-bd29-5292287d5533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31320686-6041-4136-897a-857dfe047255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8ce96a-1180-4420-830b-848d0aaebb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489fcb89-583a-4c13-9ecc-d87be8a92020",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf00cd6-2fcf-4a40-911d-6b46ef56f797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81b3615-c5c2-4ffa-9715-e07d84e29124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78334c54-2e25-4df2-a843-92405ab0cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e74317-0532-4d25-85df-aa5196008da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acec543-f332-4699-a0db-7648f2da698d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e4f40-aa3d-4743-9b95-90a267603660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f9ef5c-a37a-4f7c-9135-55dc1df545a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2d9fe-abdb-4e00-b847-3a565b81ee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337555cd-adad-4e6d-9cff-6f4f4e746d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71146b5d-2bbc-4013-9773-5ee2457686ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7751116-41a2-4791-bf10-6f049cdd55a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b297a8d-8bb3-4448-bb9f-73e1c2da11ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4503b4d-c04e-4d97-80a1-3ea1dcbfbcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e896b58-aa91-4161-b2a4-990f574ed19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103d11a-b5bd-464a-88bb-984241cacfa0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092ede85-5a03-49aa-b3c1-c724692c1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adf361a-50de-44c2-a73e-54779de60cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dc9a43-7116-410b-9000-a506fe6d7662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c64896e-4347-4b49-96aa-caa9671ae0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9397090-c22f-4fa4-895f-27990ca2f05e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef78b40-0bcf-4263-8770-5ec4ee9859da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35c9bc3-d916-42bc-8456-2a1bc061b04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4ea835-fb23-4ddd-b830-c4d6ad07133c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aaded2c-314d-4a50-b5b2-13a362ccf726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7e514-94a4-4ecf-b04b-8a2a2a3f5446",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5e8898-7c61-440b-ae3c-6e884c2a4c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a04aa84-ee79-41d5-bcfe-6d356b524fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfa4440-48b3-4b13-92fd-fed44cef21fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94ee158-a77c-4139-9a10-44d6bb9a51bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895285b0-5d3a-4cea-b69f-0399c473f5d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a899fbd7-1e10-4ceb-b9e9-53a24c37e307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99f1387-4e01-4fe9-b3d7-738838682607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acad18e-6f76-4edf-afea-3f9cebf0748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6487c8e1-1630-4cb3-863f-1163b368a43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aedced7-04fc-44e8-80ac-09a9ff69aac8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96069df4-95cc-4dc7-b007-590b7c4d9b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d72bd1a-aae0-45f0-a72f-50a61b7bec82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe01c0e-10b8-4bc7-87dd-27bb28cfe098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc16c56-d174-4a1d-a9b9-ab78b0b58773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1f1b87-1d71-4a6f-88c6-2bf9a7d8ba7a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43c52e6-f44a-40e5-b99c-ff327b389da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb3e8a1-d464-44c0-a80c-5f83f47971d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f69d876-f1ab-40ad-bf91-ef92e09cb25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf5a263-6390-448f-9ac7-1d779b4aad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b097cbfb-4fcf-43e5-92ff-e4bea000e2b6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7a1e3-921b-4da5-960b-d98364068b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08118eaa-f109-4709-b9dc-6c06cdd7779b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21c5556-ea9d-46f9-93d9-229e50e13ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cea4dd-2f7e-4273-a2cd-81fc2e0577b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4868af-1f24-4e4c-852c-629e2242d158",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0039d948-03bf-48bd-bb7a-77670e1d358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34aba69b-68b7-4bd3-a841-4e34fd6a80e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa12ed6-baec-413a-9a29-008447805696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8126aab2-8b51-401d-8404-9dec31f22f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e99ddb-6192-48d7-b0a7-6bc36f0875b7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a08054-a083-4ea8-a151-e6ae81eba2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aa030a-cc36-45c2-8f55-fbd6e7d2a2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49f97a1-1d5d-41d0-adaf-2538b3815bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "724c4070-b410-4f69-910c-66846b3aa5f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c941edf6-bf73-49a0-8869-b56afc7bba7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "824186b6-5876-4457-ab7e-2776597ef76b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cf66a9-a118-4f9b-ab56-04ee09c587e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee00329-d431-45aa-b91e-1e82929af59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd141b-a8c3-4186-bb8c-8983e8dbef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06487a34-bd04-4b68-b58b-0b40946dbe11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44b42b4f-a947-4757-9837-d2fd5f98df4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e56b883-1c0c-4ef0-b7bc-f5cceee8bead"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3430b9ce-5453-4816-b14f-42739df8aa23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0de7548-2211-4ffa-bf08-6e2a63bf1b28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89a5f0e8-8932-4e96-9586-4a91aba73288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b69ccee-3630-425e-b48c-ca779e4d077f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f17f30ac-5cdd-4bf0-9521-5f66319446a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2cfd406-3a3f-4469-b478-cc23218adc7e"
            }
          }
        ]
      },
      {
        "id": "bc86d522-07e5-4df0-91dc-3478c0c4dc2a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0715d95d-3325-42ae-8305-597ebaa04ec6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6b9505f-b7dc-463a-9e80-9cf4eb56e0d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "897726c3-e830-4f8b-b757-75ecaa4fa4a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcde9657-3ef0-425a-97f8-15c5036aaacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e40005-d358-45d3-ab42-47ba5b4b62ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f358a86-28e4-46f2-9d55-b79699df1174",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a971da-eb3c-48c5-8b62-9d8a93af5e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae36bea-3f0d-4c89-b83d-d662d5ac22a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de530e2d-a4e9-4939-a5d0-b81bdcab8551",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c102f-072d-4ff0-ac2d-d9b406f2cf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e72a176-5076-4c9f-a181-f769eb08fb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6e0de1-2c14-4844-aa06-c0f3f1229da4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608dd618-b9b4-451a-9336-05e1afff4494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f51ef5-dbd9-44c2-bcea-1bfe0f054505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05b094-b223-4b9a-842d-3c656d210333",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248e292d-7085-489b-9b41-9bd6caa77105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b091a3a4-02ce-43c3-881e-0ba159b5cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cc1013-b6c0-4e7b-bce9-0c7643c9c7e1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e10108-ea12-46ee-a987-0566a7da458b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b0c0d5-8b54-4b72-87ae-ffba13d75552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db90f113-c672-4d2a-9651-125d153e0f24",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce8888f-3da9-47f3-9aa2-d864aa743fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c795a27-4b1f-4dc8-bc20-13bf8cb3ce46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a3c5f4-0792-4a90-89f7-287d1f8dc6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2019e31f-fece-4a3e-bc7c-fee904a83e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b2cb8d-ffbe-4b0a-8f3b-b327c416995b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf0988-9347-409b-9791-c150e9a3be8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1445da67-c18b-4099-8a26-9fb1e8a17d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdf8afa-ac62-4598-a82d-d8f8e80ca87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685ee902-5d03-4fc3-a3c1-6ed01f7f8c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bd7da9-ea2f-464a-992b-5e291e15dae1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba6238e-ee47-4e30-bc97-0d2add4959b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adfeee6-a14e-4e9f-8b6a-eee08d119165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90940027-2de5-47db-bcfc-534f24648043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3235d3b9-c2f7-43c9-854f-e6f74a947bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4accf667-1611-4bde-b1af-852d5169477c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef20d363-fef7-4f13-9f31-1edbe0ac4d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dffd848-9221-4e51-8ae1-77e08d34d375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df00271-a04c-48bd-84da-3bb758426e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a98a02d-821e-4ac5-896c-e3e7fc4be5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7452da69-ae3e-482e-977a-88193809a2ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3991fe-ba64-4b78-8d77-56fdb00b9b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b94739c-69c2-41a4-a085-1fed14036926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea6e72-1f9b-441a-883f-165f20e12968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582a8f42-b32a-42f7-a3f4-b004a39eeeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fcdca5-eabe-44e3-b4c0-128abb8fad42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616689bf-1006-44fd-94d4-2589388914be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585aa01c-31ef-4151-9972-d20e9e3bbc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb70888-1e8b-4bb8-a47f-3010d38517ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060307ba-73f7-4a05-ac3a-464b96ba9c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c95ab69-507b-4831-9a91-3852a996ec98",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2948576b-26ec-46d1-a7c7-ce492c492485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24890b6-f71f-44e4-8320-c11511f47bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8686c3-bc4d-457d-a70a-fd0ff1e3a5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be7a964-f9de-481b-8165-9fd4ed120ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fdae5a-cd61-4b3e-b5e3-3edf83a9e2dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf5fb51-7ff7-4ac4-9876-86d5fdeadc36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9b1d98-a2a1-4d57-a8e9-5cedc755f928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d91ba5-f7ba-4356-8925-a6d1f4cd2c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e97100-785e-40cc-86b2-6939d7899bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ccb36a-0bfb-42ef-9474-e8b69124fd27",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45351a6d-a9ec-48be-984f-16fa7934f17e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213b4523-91a0-4c87-8ff1-1067c80b68dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a034821-c8cb-4382-aa90-80a39264c8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b61c2f9-8289-40e6-8685-fdb1278b920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dc6d91-67c5-4eb9-9204-a9b2f3dc8649",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714cc7a9-b9d2-401a-b81f-79d6ee581dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04815f3a-ac0d-4825-9dc4-fd14cf5e2b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e2fbaa-0f72-4af0-894d-35cbcb84442a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb91aa9-48b2-4a26-9a20-7229db6c0824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a031c0-a7ee-4d24-9509-ab6afc579ea3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d746e-c9c2-4576-a63a-6bf1b7c2ba52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf5b5c5-b90a-4c4e-8ea1-5661cc260f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30104aed-97cd-4670-9c7f-d1fd51ff547a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a615673-6db9-4269-a99e-5f170733c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce9932d-dbfb-432a-941b-85b43e84277c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8988c9ec-93eb-476a-a6fa-f6898635e0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268e0f2-97fd-4e6c-9d4f-59127820a23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd80b6-d563-47e8-8087-5ca9db1acc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011d1a90-8ed6-40b9-80ee-d141f8436f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa457d91-8ea5-4fc2-a48b-60580fa2d7be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3183b718-9ccb-4630-b460-76359df1ee12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec15a54d-acfe-4ad9-bd98-8e78bdc69166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703e18d6-ed5e-4734-9ed7-367d267ffdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b2dca9-e163-4fc3-acba-7b9e7ec47353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e42c02-01ad-475c-a234-5fa32bb8dd98",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ae3c4d-876d-4726-bdd7-b1f14b0e0a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3902cc67-d118-403d-94d2-684377ecaded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05b4fc0-9e62-4888-b159-7a0a2522dfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226b81dc-ee5b-40dd-83dc-50bfaba0fdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c6fced-edd8-49c9-b325-f956d3476b8c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00832b1d-5345-4924-a443-5e71d45b284c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6917b87-e133-48a3-abfa-4b4340b5dd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02fdbd6-67f6-44d8-acdb-a1dd23b08945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7de914-29a1-4247-a8a6-edc5b5198f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e8f1d-dbc8-4327-a39e-7616fe22748b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0fbbe5-b695-4bcf-b121-9df66122ca85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0810d4e3-6502-49b2-a6cb-d08323a6f6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fbbf83-8413-4330-86db-0c2eb8d51e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7ab4be-e14b-42d8-a2c7-091d8a86bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7d98b6-3b7b-4a84-8085-dc6f71c0d36e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b7c23-b040-4246-98e7-4bf4f2d449f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86878168-57e9-44d9-b141-6ad8f80db315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04f9110-4144-4123-a9ed-d84497f838cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a9d180-a34c-46d2-869d-d9f168ecd46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb3991f-1aff-47ff-9b21-16ad9b3ce750",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db2482f-0fe1-46be-8bdc-f550218451e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbf07a3-27cc-4729-9285-70ef156973ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d33acb-b1e4-4007-8161-0be0aa87c8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78303f7e-a222-40dd-acf6-aaf8d9aaa254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce543f10-9995-4f5c-a805-473290b6ccf3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eb5bcf-ae21-4e45-93a5-073260d4e575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3d2bfb-80d8-4950-99b6-b49094c8f9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd17353d-2f06-4016-95c9-b38958622bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c320fb3d-05a1-4f23-b143-3dc00b628fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c32b4d-3db0-461d-8a0e-c9fa73f14e8e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a5ddea-9e80-4eaa-8e31-27a5be533a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ea94a8-0768-44a5-89d8-e039ceceedcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee673272-52eb-4a9b-b56d-056ec0706bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fd22d6-6c71-4aba-a502-bcbe8774d576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7bf936-e452-4ff6-9114-57eecbed95a0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3335a328-f63b-445f-b180-95ce55aa0aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e5702f-c413-42bf-8005-cfd48ccd2560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef81412-c0ce-4776-8c53-ca985d760feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c79deca-1c7d-419c-8836-bce417527e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f48ad6-2766-40b7-b381-b38e3cbdc842",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2174b5c-0f5c-46e6-a138-8be0ee384b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf1bc58-83c3-416b-9df5-c7d7b24f2688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d877420-4496-4ca8-afd6-95c4d7e9af0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a432380-2eab-4690-b0c8-7d9cb0be09b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64585e2f-d0c1-44a8-99b4-a7207e21e60e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f2cccf-22da-428e-94e2-9f052e22ed3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b570ad5-5c89-4fc5-b986-21b5b8248680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f329327f-bf6b-4c12-bb52-c1ca9dd39eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71283742-867e-4241-9199-a6964681eb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dc3bcc-8384-48de-99f4-14e7b448cfa5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488d4008-4b6b-4a4c-a3f6-20a67ea8e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b69ef3-3a58-4227-978a-441b3e41dd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb65b7-8ec9-43c7-8ca3-4f99916f0351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a08f74-1d30-4c8f-b7e2-e08ff747f1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6363c47-68d9-4376-bdcd-538531b9b9df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127af67-158c-4961-9f58-488e6a855b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5150dde-76d0-4d48-a1a9-4dce9cd425c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a7930-0f1f-4d23-a6cc-cd5b4c2e1e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54dbb11-1c26-435a-a2bf-eea665166fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568163ff-5f3f-4777-9795-f6a7027faf13",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f67a10-4293-46a7-8a4a-406c332fde7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e4741d-e39b-4e46-b913-b15e5164213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1106206-6166-4fa3-9970-b48616ae2c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d159b0-47be-43bd-8d1e-31f489fb1d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f01b5e4-d4d7-42c2-96b5-9b19876b74de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf6e802-9853-4ff0-8f8c-e7db5ec32ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6925ff9b-c0e3-4819-a2e2-84413914b571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fa1a02-8be5-4ba9-b124-f24d3077f6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42ad7ce-4787-4d23-9e12-263dd20019a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8650db24-8cad-40b4-afd4-32f752a3e505",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd94c816-099d-4258-b6fc-a8624246652e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9dffd91-bb9c-4213-b196-8b20f7f56c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86824399-7e21-4410-8ffa-5b8e05d8dd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5863f5-c1f2-4c39-bf7c-cc6839710304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd3f4a8-6940-4934-b505-bfe9327388ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ce87a-f8c5-4e1c-a7a6-a8d46dff44eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5753b3b8-5e83-4018-ae69-6f0e7095b9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a9c617-750f-4df5-aea2-39d0c4167305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e25474c-85c2-4d6f-8171-32ce2c348237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f384b-85c8-4063-81d6-1c08c57c2643",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095d2514-1a28-4f3f-9de6-3658b7aab841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2833d45-4189-40bf-b5b1-aae8abdc3039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90da9c18-04c8-4a95-88a5-38670b193f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943baee1-3238-4ec5-a9f6-09eaf25113b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3f01cb-38e1-41de-9c88-6be3f0f0fd22",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8c676f-719d-4156-9e2a-6ce0f1aa12f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5566338-28e3-4784-8c4c-c58217f82b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa09f629-cf77-4a46-8a64-b85ba7852959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13497358-6e3e-4c5c-9cdc-c932ec6ad82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6011a-912d-4e77-b3fa-ec2074825f8b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e52846-28cf-417a-8863-30926fdf85bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c91601f-951f-4680-8577-14493ff53d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0016040-f5a5-416c-8c01-f8b4e1ad52b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fd2597-3ca4-43e0-a643-d8b0810381c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ea8a74-0811-427b-98ad-2b2ccac1f758",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0baaa4c-f4ca-4af4-9983-a7cc2cf9effe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474d9d22-5573-4b0c-8874-d9637b526868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbc4378-229d-438b-8486-9308e559499d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28515480-b955-4924-9b3a-23a58c581986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aa2f7a-4ad9-499a-8aae-73075a89f5be",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592aa0f7-b120-4870-8c67-9180416a3cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aee266-e6fe-4b30-945f-542a2086f408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdba21ef-429c-4ba5-a23e-7fc0fa5541e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933c8ec6-47fc-4f13-aceb-cd6351526889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f9e577-77d2-45c9-b0d5-ed881779f69c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6452f882-5f87-499b-914a-0c231f22e9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cd79c4-427c-4113-8b92-c3b813bdedb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552476a2-b58b-4a4f-9f40-ac383b745b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76290f12-46f4-4d6c-be8f-2f3b327abf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c314ddd-0769-4fef-9d04-4215be6fe889",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddbeea2-fb1d-4c1f-878d-68a984c514a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaddc76-8fe0-4189-be28-3df3b602139b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f460b-8a25-4d5d-b3cb-faf33d9d247c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d93c8f-2495-4d41-97b4-713009baf92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af466a-582d-4454-ab64-cb7411e0957d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640514fe-e7e4-480d-a1d7-b74298ef6ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ac0e0c-2c82-4009-a6cd-f30886455fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d0c4fa-ac2d-4a64-b41f-d000b4b38cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234026f9-ed72-4bdc-8280-36bbc15fdaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31424e84-305f-45e4-9991-16d3a276fae2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a02860-2cae-4be9-af6d-6d28486d9c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4311449c-4128-4031-9d24-f49e2c730664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13edd0ff-1619-4605-9e0b-50303ca276f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e43f2e-923e-4bf7-abf8-22600dec11b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17d4e2c-8da6-461f-b4ae-b9a64f209457",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca395de-24b7-437b-8aa8-c38ac3b45fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1a96f2-0690-42f6-98d6-b2c978c853a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f06b23f-8b3f-4756-b257-d723ae96ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae500740-3104-437d-be04-bf71e5ea920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f9feb-d515-4e96-bd30-9307a1845d2b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078c056c-f3a4-4e6d-9053-f29c77dffacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdf21af-075f-46f1-b8bf-ddec1d3d027c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744e865e-f313-45ef-aa75-dbd833b95770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd42d4f-342e-4f30-8536-6b1c552c183f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd718e-9cdf-414f-8bbc-87676428c39c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9f9696-6802-40b1-b3fa-bd101a3436a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abfd099-2288-4220-afc0-2b326d043f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28298bb-3087-4df9-aab9-232cb3d43d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c8f81a-85c1-49e7-a830-0cd74d0ec947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74afbeb0-27cb-4b18-a715-f478a39498b4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60059f77-d2e4-4024-8d55-ca74a53c42f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7818db0f-049b-4f0e-bff4-8d8d55debe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff44a7-6bb8-4056-ab05-60f71142e859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b58bc00-d1e8-415a-aab0-7f0ede218f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252ea08b-edc5-4c5f-9e00-0afc23ee83db",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9865d1-9064-433e-b1af-c886475c67d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a462a7-01e7-41a9-b89c-4a7fc9ce8830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3780dc-be54-4ff7-8d75-0ade0d7349c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1261e721-786a-499e-9005-eafa8e03f0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a699b2-942d-49b1-8d3d-c712b4706031",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949b5583-9098-454d-bb1a-25f64edbd46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ca80e4-c729-4cc0-869a-dc76a2157ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6479a856-68ae-44e0-89ee-8000b0668ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2db972f-2de7-4bd8-a3bd-8a71c07152b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f782bd-7643-42ec-a832-7c5d93cdb274",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfc9324-77cb-46a8-bfbe-6cf9475fca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097d481a-7910-417d-97be-d58b06bed2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6869c0ee-5cdc-4bb9-a960-d92ec5b59f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e6ed56-678e-4287-bd33-97efe951a1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad5d953-07a7-4d4d-8776-eba5c9d46090",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db50a9-aaa0-492f-a512-12d05348b8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07b2c16-fd69-4b2c-b6b6-a747bb9051a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d72845-2c1a-4fb0-b5b4-eb84cfb35ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46909b18-1f84-45d9-97a9-f229966da517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1a901f-7ff3-4488-a56a-91105c6d29f7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292973a8-67c0-4b3f-afb5-bc61149151ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550906e0-7a8d-4adb-a688-4a7cf28e57d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649be085-8132-42d5-a352-217915bf08d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ea3dc3-f501-43c2-9d07-439ad15f86a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7a06e-027d-4bc7-975d-4af0e8a41642",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010164f6-efd3-4501-9981-466d60afd97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d91360-5584-46e1-8143-5ff8e22d92a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d0048c-b94a-4dfd-933f-e4c26e23082a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed878bd-c256-4758-b9d3-119e0f003575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aeb997-8aa7-44a0-bf93-d7eb98f37b45",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff980cf8-abef-48ec-8be5-0006b5035e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756f1fa7-61cb-4e9b-a4a2-4a15e17fc48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e2f368-6bf9-43fc-9395-574eee5adc38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b215886-9c19-4697-aecb-ffdef05e0727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9a545-49d4-4762-8259-5d960ec6ab07",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f4ae20-a117-4e6a-8f86-fa29e6f30013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8122721d-af11-4972-b84f-c693783a23fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916de67-766b-4858-8f39-ed39369bfcc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fadc2a9-f62c-47eb-9436-d4658cf0e79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785d233e-598c-4bbd-bd85-f5016714b7de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ccb7d7-c0ac-44fa-a666-54244cfa7ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0a658b-47c6-477f-b192-66b9653dddb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec631a8-ba5b-47d8-a265-f347707faa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6194c5-0e6b-43ac-812f-ad63a7d7e089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b60d8-c211-44ad-ab64-f7f7370e85cb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b6ed0b-f5ce-4f6b-ab60-0ebc12818c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c98a6c0-c8e6-4688-9a11-47615b4bd2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565d4754-54a6-4be0-a84b-eb6ae9c92bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f463469f-12c9-4dd6-8749-e75914ab6993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d29ce6f-68d3-4649-acf8-17bd52b11b91",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab48c91-81ca-4219-b5de-0cc42395b69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ebcf78-48b5-4636-bdda-97989161ff5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5647129-522f-4bda-9a09-7b5158146181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb253b99-519b-4d7c-beb2-690661246da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f5a1b-e577-4c3c-8b02-a3fbc22d9407",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9bcbda-3783-4afa-a546-7dc134c6cd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a215a6-7b37-4f95-a70a-cacd007902d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb07a11-2503-4126-a439-e98abb1927de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835682ff-f281-4403-83b4-c31872fcc6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5fbb8-40df-455e-831d-2fd7bf8482c0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50aa747-7582-4b7d-87f5-75b0e6a4b330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5836278-bd07-4125-8b1f-baa5b8629cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4d8d8f-219f-40bc-91e3-948d8f1e05d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e16231d-8f79-4dd2-9e09-8e1d1c8c13ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aeaa43-ede0-40bb-8e50-3a4f8f88cd70",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712335eb-70ff-4a39-8a85-c1568a4adf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c957d06-d141-4726-accf-e7d8776dd23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b64b8bd-0e54-4489-9fa5-798977988780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714b32ae-95f8-42ff-9344-5c972dd0a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe3499a-74c8-43c9-b9f4-48bbcd0751e0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeabbcda-1b80-47d4-8cfa-aef3ec1e7742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be532fcb-e2a2-4f8e-bcb4-5369bc98f77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ed302-5b3f-4f9a-b556-bc55f3590c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab950c6b-b56c-49bd-b4c7-a6c517c0e8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785da4a4-fbdd-4a11-8fca-3ca926d767da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3f1f4a-5d6d-41e7-aaad-bd1d76b78bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7e5777-c98e-4eb3-b098-ff0592331bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b16b22a-a0e1-4ef6-a252-0c32ae4af04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d35951-fca0-4203-8c65-21a22470faa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e0309f-d7a7-4cc0-8f0e-398a595bf3d3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17e76dc-7d82-4a4c-b218-ccd6a5af8550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8793de1-dbe9-4c5e-b917-0987544c2940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6029b61d-fe80-4c54-bd47-10477c52330e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355624af-572d-4c7c-8eb9-3cf9376bc410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a215275-43aa-400f-8dba-4ad997d5607e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f462052-1433-422e-b1bb-146ebeda52a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e98c24-1e40-4619-b702-403f5556a8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf8857-82d4-4a71-b856-46f4af755535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fa3635-7afb-45c1-a418-1fc53299baa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d74f48-5e08-406b-ac4f-9ff0582c985e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c882e-3819-4109-a08a-5d16b86922f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91566c5f-d3ff-4621-9247-4cba47a79ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817b28f2-3de9-44d4-9454-6d38d478c445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463afbc3-2e8a-42c2-975a-acbfb117fb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7767fe07-aac0-4b10-805f-ff2f5f1f2074",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b08c9d-28c5-4056-8955-737a55e6ed03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15550f61-78d1-4597-ace6-70945eb79ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52731d06-a14c-4c4e-97ac-cfb1c00f8a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c97fbc3-098a-43b3-97e3-f345009d18a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1180cc8-4675-4248-aa1d-aaea4c310966",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af4603b-e3ab-4015-ac85-20640da12d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a69cbe-ffbf-4588-be4b-92434fb103ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200dc232-2c99-4711-af66-94d23c2d2c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37a57be-3902-4fd1-9e9a-dcc481c767d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941b265-6ba6-420c-8d6d-7df8827078d3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b6cc59-e137-4e8b-9336-ea297ab96c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c25dd4df-b333-4319-9ce0-56420ccff6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4533801-2c0c-49ed-9c08-69c52b69ad2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535fbbb1-e5e8-4703-ab99-67e1130db898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a40ed-3ce4-4e07-8604-58717417015e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f285da7e-074d-43ae-a5b4-b3be5ee64e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ae88ea-44a0-4724-81b9-09598c2e842a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1436541-5cd7-47b7-ae02-27f4ede74756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f33a2-02a1-492f-829a-95fb289cbb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826053d0-baa1-4ac4-8669-98119854f2bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bd5f8d-c341-40cd-9278-62aa7937769e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310d98f4-f899-4c33-8912-e219d882e6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90affbc1-c66f-4862-9fbf-5abafbf7eabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38dffdb-bb58-45b0-a62d-fa6ecb228408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4578227-1bf4-43a8-a85f-b97ea71b915f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555092b9-04e2-4bce-95d3-34a2558b1d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c438c7-36d1-4102-8bdc-ae8146f7bb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417fbf2-5839-4a00-8b98-ce890eded379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869d1544-ff18-4b9e-8cb2-948c0b0d3b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c778198-4e24-44ba-95d8-4fa63d184831",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee4b304-df92-4487-89d0-03019d33db55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a34ad17-a016-4707-ad6d-1d312fa641a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1267d443-00b9-49d9-96ea-be8a040bf5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ce0c54-5abc-4110-9e2e-e4f15095c8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89fb518-0b00-4480-9c1d-babc53bd230c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9d4e15-8e4d-4120-a74a-c8174bc0f16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b056a36-89a3-40a7-9e63-34d2919b8716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c668a3-5752-4d40-af93-9f65c29d446f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09a65b5-0e92-473f-82c6-dc75e9716bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cea88fc-de97-45e6-8fae-630a3ba3b7ff",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba50b819-c796-4472-9c92-b0e4edc53ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5a67fd-e31a-41ef-9ee5-15e3740886fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f33a0-f477-4f02-83c7-1e25399df13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d5403c-b395-4950-83e2-9a79a4c85d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e16b1b-943a-4f7b-a3c9-2bcbdbe2da59",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f75dde-3897-4554-b474-39c74e90e546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5b0ded-07e1-48b6-ab39-9baa169cbc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b318e37f-d025-436e-bf96-ffc3a2f7797a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2068b41a-9e8a-423b-95e3-0683551a1433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cc6021-af4a-4f30-9615-482bb6b117bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6171f10c-59d2-408b-bbba-c08134a81cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f259089-b9ed-49e9-a865-6ca051b21fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d681fa29-8ce9-4b20-a773-47704f22ca23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c338cb-e221-4f6a-b72a-e7cb49200eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3a0797-8d35-481a-8015-f5a2a3c3fb3f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c04c73f-adb0-44f2-bcc3-1b58ac4bfddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6a3276-4102-4188-81e0-64fb4ee94ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58f6264-eb7d-4097-8d64-049ac9d45b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8675a5f-1c02-4b58-87d7-b1d40198d31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563cabd5-9250-4f04-b8f6-c7240075be7e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e0ad58-3fc6-41cc-8edf-c0ff125ab81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1f6a42-9a84-46d5-9657-4cd3e6166fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf80c9f-71b3-4609-acbc-9971512835bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5641950-bc7c-4175-ac79-1c0e8b862df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adec1738-5f7f-406e-90ea-d3016be3e307",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44eba85-05fa-4613-8ccb-55f763a14292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de61a515-e8d3-4ca7-a461-bc6a90aed0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57857dfe-c344-4b2a-ab33-c44b172bf974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c291a7-7386-41bf-99cd-60ac52f82e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72352be-5f65-4009-9842-136b4599568b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a657c82-7cbc-41b7-ba88-73d0896639d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffda683b-d658-4d67-ad73-04d3cade3111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3347fd-f0b2-4321-9f2c-00550da07edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e245835-d521-48a0-a2cc-00ec88519c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce9ed0b-07f8-4d9b-b5a7-608c719732b9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f240a8-55ee-490f-a532-d30ae983ded7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7249c722-932e-4d96-a69c-b4d2ff253ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c87274-e7ce-4a9e-afc0-fba249e45eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e2233f-b03a-4a60-8bad-899a2c532101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381c3667-3d29-45b5-8557-29fe5acebc17",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bc5cb0-b284-452b-a7aa-dda85761459d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a56075-0964-4331-a27c-2a9a31e0a7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50409613-915b-48aa-8775-dac279bbe446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08405573-fd41-4d89-a978-9b6604aac585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ad092-9e22-4d95-b088-913fccecfb1a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e892de68-00d4-445b-b869-d43a4000bada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2692fc7-261e-4b2b-ae63-81fcb04fb9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bbc866-991b-4117-a617-8dbf8a6c1658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce4469e-31dc-4e08-8fe1-b8aff48d31d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101b3e4d-dc8c-415c-bda9-53124ae7d4e8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db455898-aecf-405d-bda5-ceabc2e5fc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b603764b-8b50-49ba-8a52-fc7b11cc1b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6ecc9-5a46-46b7-8edd-703e4d32d81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e34f82-1783-4a63-add5-d6e8b5804b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5804d528-10aa-465a-ae54-cdac9c048ce2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d5c504-d4fb-4f14-8971-36fcb8eaf78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e360252-f424-4407-8f68-57322c3bbe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19887dc-cbf3-4bad-815c-d2d32bd19b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3edc049-c262-4271-8a72-4653e90a6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b089b2e2-235e-4d34-bee5-99b4265fa650",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732f0715-23f4-42ba-b21d-cac3b825f563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94148f9b-62de-4e7c-aa76-07750672d34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dac03bf-7a1d-4091-a770-567df63f3130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6462dc-dfe2-49db-9ae1-107d7ba2214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad164c23-556a-41fb-8e8a-e7d8b42b2cf9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8565bb58-b53a-4731-882b-0c205bdbdfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ecb9dad-7180-4e54-af82-7642170b76f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ed366-a9e8-4267-a668-5492537ed41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9770d60a-0fa3-4746-af4a-1f8f795f120f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871810d0-f789-46aa-8b6a-3976a61df3dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25fe869-779e-4fbc-84e0-0c8d83e2e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e26d6d-6ac2-46f4-9c40-97d849ef864f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c958389c-fab8-4447-b475-610325dcf20d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d00b09-5386-4fa8-90a2-0bfb39cf3232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00de25ef-92ae-4e1c-b1e4-ad65188760c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef77dd0-1db5-434d-9f5a-9189283e4a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05ea2fa-46a6-48a1-ab16-98070647e29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed3029e-d671-43a8-8d6d-30f3c5866408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd82023-1575-4fbe-b49f-1cbe36c77564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09a9860-c26b-4913-9b6b-0349bd470952",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0e08ab-a3fe-49fc-bb02-88dc54f9b9a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153c06d3-4c8d-4b1b-a6b8-d7d1d3b19df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be3989-05b2-4b79-ac12-fcfdc70fb9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2b386b-3b34-4005-bbaf-d428deb15d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef4cad6-26c5-41be-b6b6-dd08b88b4c60",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4700ec-19ae-4af8-8f69-dacde379b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b50a251-7900-4ec2-a92c-71bc633c680c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dc344d-6383-45ad-ac27-57af331d1a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6d06d6-4be6-4ba6-ae8d-c9427c02dfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4e00e9-f35d-45dd-80d9-58994a80c1d3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae864c-a49e-43ac-8caf-b551f6620114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed09656f-9a8a-4f04-8ca7-126b7e87b245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34badcc5-8ba2-4aa6-95f8-22c30e0ed526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc05087-ebad-40f2-9578-4fbf63139ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b85636-efca-4578-ae21-8ff6bec33279",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082ef215-07f3-405d-be38-8d0ef65c2bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf8dce2-902e-4a1c-87c9-a31bab8a33f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d340e5f-d97d-4ee0-8890-ffbb5da4d25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f191ee81-25f8-433b-b59b-2fd162e77892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6e035-445d-4875-aeda-5904768d77d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce47c533-6be7-4b17-ad81-d49784887c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72af20fa-c3f4-44e6-a154-16fac4c917a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc5a83b-3900-4b74-8fdf-c153d288cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8ad317-e025-411a-94fa-1e23d4f41499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f76fd83-9d8a-4b3d-89e6-5f584f879ed4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97faebce-f063-407d-b3bc-b15fae6b1424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cb19d8-8fa6-4c02-88e6-349e9c0e9036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc49edc-cd3f-4376-afc7-6b56265b4936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ee06ea-8908-4e39-8e8b-1902e68f3bb4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1e3b6b7-ef7b-4127-a4f5-de115120b252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f993e9-f044-4080-91cf-36a71d9b3070"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7999f13-e350-4cef-9864-4022474a0a52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d16f6bc2-edd4-454b-a710-afddc5b6a906"
                    }
                  }
                ]
              },
              {
                "id": "843f98a7-34a3-46c7-8bcc-b544e97a32af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aa8cd81-1e4c-4a5a-a1e0-6a05e11588ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17ff9e-eda8-44aa-8b43-47ff4bd575e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f3eed4f-16b1-4dce-baad-dab16f1691ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888b8064-52a3-4395-a6c2-4dd76a1e20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e590979b-3901-40a7-9047-dcfb2c7f1fc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629ea56d-73b6-473c-9e35-ec3b22e0ca7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f34fb569-29dc-4608-bae8-9ceb4fb1797e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "747c3291-67ed-422d-a24a-7f54fc59bd1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1706be28-3676-4365-bf9e-2182289330bd"
                    }
                  }
                ]
              },
              {
                "id": "69b34b84-5711-4725-affd-ba0ceb41211a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "145b4465-28a3-48af-9c7a-0ecf4dec9d28",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41606d7-5036-4ec5-9772-5f8806f64bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "545365f7-1a8a-44ea-a131-c6f745781a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd6850-e650-40e3-9a8d-6bcde0e73b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dadb4b0-212e-4c65-bec0-016ec0c4032a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9d4aa89-4394-4106-9ceb-e23e5d6ed4b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d43dd42-e370-4d95-bf3c-de15f86e3c9d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f1f6859-8640-4683-b5d8-a1d5f21645ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95c79ca4-ace2-4c04-b8e0-d90623f3a8e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ec23397-fedb-45bc-9831-15b3e3ecfbdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a57123f8-4048-4917-8e2e-596d0237dec5"
                    }
                  }
                ]
              },
              {
                "id": "9ad89f75-924d-4909-997f-22af673e813b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dae07bb-c522-4694-af95-f2f897947e15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b16edd4c-006d-49c3-b1f0-d15b26517e0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb3be7f5-4ebb-4919-89ed-2aea67bfae3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b89372fc-15d2-4c16-979d-1157bdc89c7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3a8f0cf-a72b-401b-885a-2d85e4afcd2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "17508442-5bc9-4ac6-b9ee-3eb12ede9041"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59f3613e-7525-4b5a-bde6-938ae0ccc1e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49d6742c-1fec-49b8-9571-6ec335d9212b"
            }
          }
        ]
      },
      {
        "id": "56f8309e-4828-4843-832d-f6678a821037",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7f2bd387-b111-4bb4-87bd-2f7a7c42f089",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8c6df2b-7380-490c-bca7-606e85241738",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d0a99e0-f0ef-4f07-b358-f3a83639a758",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ab582-22a1-44a7-aa8d-b698996fe91b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca5a4ded-8513-4a52-ab51-19489d592ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7813b02-f060-47ad-b875-ee2723d574e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1e7182a-4906-44f9-a0ed-18fe8553c153"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f17a6c7-2d81-4f84-89a9-a42977dbaee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c78e172-7d91-4dce-80ca-f6747eca6e9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07845d98-fcdc-4934-a8a2-d2ec0056370e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d90ebacf-5bd2-45d9-96be-2f281e66ee5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbb6c0d9-b3de-4db6-8099-00c5a73dca24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2fd503c8-9837-4a0d-89a6-6d31fecd2b10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a750062-98ae-42c0-8ea4-2121beba1152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95a66ea8-08c5-42ef-98c8-6f64e015061d"
            }
          }
        ]
      },
      {
        "id": "0963cab0-96e8-4ea8-b70b-ac4f1fe2ad90",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d554d8f-fab2-48ff-89b3-e3f6ba2269bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "779b6255-e8c6-46f7-8c53-3016795a630e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7b55315-bc52-41e2-b9f3-6333e5cd6026",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c46923-c8ef-4f13-a38e-140842404499",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c4f4354-c798-48f1-acb0-f2b9cd98b3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e223e98f-4fe1-4a6e-8691-2f97de053893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6955b0e-52d9-4cc4-b19c-989f1ce1c02d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cebc996d-c5be-4247-a74a-a8fbad85f1a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfe2619a-c2ec-4625-b135-ef1aee230f17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea524d02-0cfc-4280-917c-cd20dd949736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "271e4559-4572-4545-bec2-4ab716089098"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bee16fb-c351-471b-b43c-799d686a833b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e29fa60-2408-43d7-96ba-5e9d4ff322df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e0408d5-b96e-4821-89f2-80cf83e67d21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fad00ea3-0f94-49e2-9939-c2e390f8f713"
            }
          }
        ]
      },
      {
        "id": "f1032ff9-e7e5-41dd-a934-919acba1d966",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca587f09-aaaf-45a6-bf93-67a9d56f76d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2af60882-5224-465c-8131-0748271f6a76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99861cc8-5e05-4f6d-8eb2-c27d35baf7af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f830978-3e8b-4ccd-98e7-6373cb8234d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b6e3f64-5e57-4fa3-bc16-a49c4812c382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3d8f1-1e53-44a2-a114-49814e48a9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "047b197e-4ef6-4c1b-b308-c0e8ad8e318f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c8d3ab-dea9-4f6c-bce7-9ce2a4e204c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0bb80c6-9cd7-40cb-98e6-a9a84b558906"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd92f6b5-0f3b-4322-b0da-0f78888b8660",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f708200-8092-4527-b8c0-c73c23c32897"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "499a3d61-4427-4621-b050-090a7ecdddd5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b75738a9-76f2-49dc-a737-89821072b85c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b488338-ee32-4571-9710-5133cc14ee73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b58a9848-fe87-4b18-97f7-085cc28dab82"
            }
          }
        ]
      },
      {
        "id": "fda34daf-d66c-4d64-814f-466597926481",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65b85ae7-e214-4dc3-b647-0b8f994c0d4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32d5a47f-7c16-4022-8127-06b72eb315e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef7f410b-bfcf-46de-89ca-7e0edbb1f92e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c22ac187-4e98-4abe-b213-0b9507844d37",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df9782b5-2aa3-44a7-89c6-2c2a4dfd0802",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.603508771929831,
      "responseMin": 2,
      "responseMax": 271,
      "responseSd": 23.65335898339368,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708216591781,
      "completed": 1708216602936
    },
    "executions": [
      {
        "id": "91d04e15-d631-4a8c-ae44-f99f2fa6b96f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b187b7cd-5b22-4bb3-8235-3c0b4be1b895",
          "httpRequestId": "a86b8d72-b2e4-4c5c-b81a-61c58e8d81f2"
        },
        "item": {
          "id": "91d04e15-d631-4a8c-ae44-f99f2fa6b96f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a1c02a3-257b-4b82-bb6f-4b4b46e66aa1",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "c0398fb8-626f-4d16-963e-1a9f833c13bf",
        "cursor": {
          "ref": "7bafd821-e351-4029-9cd8-dcddb9d074d8",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "01db5ef3-fb45-41e4-b3ca-06c9bf843dd1"
        },
        "item": {
          "id": "c0398fb8-626f-4d16-963e-1a9f833c13bf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4e148da9-c086-40f7-bae9-0aea7d4ccf24",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "60fac391-cde8-4b97-9c50-e14161c4b6c3",
        "cursor": {
          "ref": "5ff160f2-31d0-4f40-a1b5-68deaf066f4a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "990f1fa3-00dc-46d4-ab1d-55f4e1cbc84f"
        },
        "item": {
          "id": "60fac391-cde8-4b97-9c50-e14161c4b6c3",
          "name": "did_json"
        },
        "response": {
          "id": "9a6d882b-50b7-46be-a39d-d3e3be3a6337",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a982da85-cf1f-4d4f-ad28-cfa6e860b282",
        "cursor": {
          "ref": "6ce41aa0-8137-44b8-afd8-85984e0d6a9b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "664046c3-2c6d-492a-8ecb-308dd4f6a0af"
        },
        "item": {
          "id": "a982da85-cf1f-4d4f-ad28-cfa6e860b282",
          "name": "did:invalid"
        },
        "response": {
          "id": "b24af3a6-50bc-4b8e-bcdf-3e4cb47cd65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a982da85-cf1f-4d4f-ad28-cfa6e860b282",
        "cursor": {
          "ref": "6ce41aa0-8137-44b8-afd8-85984e0d6a9b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "664046c3-2c6d-492a-8ecb-308dd4f6a0af"
        },
        "item": {
          "id": "a982da85-cf1f-4d4f-ad28-cfa6e860b282",
          "name": "did:invalid"
        },
        "response": {
          "id": "b24af3a6-50bc-4b8e-bcdf-3e4cb47cd65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f061b6ce-2f5e-46f5-a36e-a821070466bd",
        "cursor": {
          "ref": "3dd08a01-f09e-4eae-92c1-5fc8b997507a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0e789b3d-d341-423c-a148-a6d7e5fd7004"
        },
        "item": {
          "id": "f061b6ce-2f5e-46f5-a36e-a821070466bd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "336c7022-d54a-49b8-8d54-7e3e84733580",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d58d8a3-85b5-4303-8999-46f12f220615",
        "cursor": {
          "ref": "35e9f9dd-9ba6-4095-8f9f-3706e3259681",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7995697e-99b9-47ae-a176-020280d7ff88"
        },
        "item": {
          "id": "1d58d8a3-85b5-4303-8999-46f12f220615",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b669b358-8738-4e3c-99fe-3e4eb559cc64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c6a26b-ca24-4302-82a0-e4779aa6d749",
        "cursor": {
          "ref": "26130ea0-dac2-4cd4-8199-a89388e9cbb6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a55614f-0130-4a00-8b3d-a2e15e299ead"
        },
        "item": {
          "id": "10c6a26b-ca24-4302-82a0-e4779aa6d749",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eb47ae85-3b1a-4adf-8a9a-b2b8cfa12988",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da687e0-e432-456a-97a7-853332dea072",
        "cursor": {
          "ref": "b0be14e0-05a0-4742-94a6-9742fe1b26f6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7a8b43f4-f1dd-4a5d-9cb5-9e9087a7dda9"
        },
        "item": {
          "id": "1da687e0-e432-456a-97a7-853332dea072",
          "name": "identifiers"
        },
        "response": {
          "id": "e257ff24-5ef3-475b-9a8e-d3cbee2212c1",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16b1c5d-0d4b-4716-a5e3-bb5c19dda25f",
        "cursor": {
          "ref": "54007065-c570-45a6-8084-6b9bc8915aa1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e79d996e-3669-4145-81b4-fc7d3ba54375"
        },
        "item": {
          "id": "e16b1c5d-0d4b-4716-a5e3-bb5c19dda25f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4eb12075-27e2-44fc-bab3-f737c5700ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51159654-33d3-424c-80ed-c312a6ceaf3d",
        "cursor": {
          "ref": "2f22d87a-2601-4352-89f5-2fd5ef5440b1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e4778967-3f6b-4c85-907b-357181640449"
        },
        "item": {
          "id": "51159654-33d3-424c-80ed-c312a6ceaf3d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "77536229-77fc-468f-91b3-ea8fdac7ed23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af73dd85-8f9a-4640-89b4-2e9b156fa673",
        "cursor": {
          "ref": "ba85bb5d-cf88-4484-add5-498b9d318965",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4ee21350-f9bf-48af-8e24-d14d84769eac"
        },
        "item": {
          "id": "af73dd85-8f9a-4640-89b4-2e9b156fa673",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1a69e02-3666-47d8-b837-11376983617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f562a3c-115d-4027-8812-c9f38f51417d",
        "cursor": {
          "ref": "990975d1-04b3-45c7-98f6-d688a8ea8214",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a3cf1acc-b962-4df5-84bf-4d0a148a0399"
        },
        "item": {
          "id": "5f562a3c-115d-4027-8812-c9f38f51417d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "946760b1-e32c-4485-8c2d-13a6ffda2b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d6f48-dcd2-4e7b-b4ca-c777957a42f9",
        "cursor": {
          "ref": "dc8f5c8b-d2f4-4561-9ff4-c65ad1f38f54",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9867fddb-790f-47e7-b816-a17781dcdefb"
        },
        "item": {
          "id": "dd0d6f48-dcd2-4e7b-b4ca-c777957a42f9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "feb81224-bb92-4dac-9aa3-d07f4913f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7661d2-b96c-4809-a70c-528559ebf406",
        "cursor": {
          "ref": "cf79a342-c73c-4911-8f76-a84a0af2aac7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "282db17b-8db5-4b71-98a2-3bf73f83b60f"
        },
        "item": {
          "id": "ae7661d2-b96c-4809-a70c-528559ebf406",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f3885d39-b2a4-4fae-9975-26105168cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd09457-118a-46b7-9f84-a4b8f2451e80",
        "cursor": {
          "ref": "e9871975-cb30-4627-b3c3-c0626cba91d9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "11f136f7-43fc-406b-bd52-e8e59cf2596e"
        },
        "item": {
          "id": "ffd09457-118a-46b7-9f84-a4b8f2451e80",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b03f25b3-c2d7-40bc-8176-5145e8ba6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aac3e6-4a09-468b-841f-d3afa9d6a0fe",
        "cursor": {
          "ref": "0ecd708e-5fa2-4169-ac98-33b8849e940e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0892cda2-46d0-4ca7-bd1e-e2e178099fa0"
        },
        "item": {
          "id": "d3aac3e6-4a09-468b-841f-d3afa9d6a0fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6b708acf-84f1-4b47-988a-fa4d12862624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ce8d8-88ea-482b-87b2-054a4a390815",
        "cursor": {
          "ref": "508da9e3-f475-4765-bc73-48752731669c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b56f0566-cf75-45b5-89b3-5bf24c273a7b"
        },
        "item": {
          "id": "a82ce8d8-88ea-482b-87b2-054a4a390815",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e951a21a-cbf7-4370-87b5-ea68a7cda564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ea19d1-8061-4730-8e7a-4a3d5724b811",
        "cursor": {
          "ref": "73383211-2f11-414f-bd3f-f69774d678d3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "68387a4d-9c5b-419d-bc80-1c43d166fbe5"
        },
        "item": {
          "id": "10ea19d1-8061-4730-8e7a-4a3d5724b811",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a1e9770f-10f1-471e-be30-76651ef8f1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d808fb0-534f-49a8-82f2-4530b2f1954b",
        "cursor": {
          "ref": "671d8972-a4d4-4193-b5bf-64b2037871fe",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05bed533-1725-4385-8d36-2d0e47f60c50"
        },
        "item": {
          "id": "6d808fb0-534f-49a8-82f2-4530b2f1954b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5bcd4de8-ff36-46b8-9038-3d24bbab307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc87d4dc-489a-4d9e-b37a-9fe3f108e8ee",
        "cursor": {
          "ref": "0f5e6988-bb82-45a7-86c4-143ceb0747bf",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5efac29e-3d6b-482d-9b30-78ca06408609"
        },
        "item": {
          "id": "bc87d4dc-489a-4d9e-b37a-9fe3f108e8ee",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ad063de0-fefb-4fe4-9faf-9526b6e8068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31575c6-7849-42c7-82df-df07a51a88d5",
        "cursor": {
          "ref": "e6f371c9-bf00-4127-9cf9-75141e6cd0ab",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5bbebe41-c5eb-4d7a-b4d9-d9d86888cfe0"
        },
        "item": {
          "id": "e31575c6-7849-42c7-82df-df07a51a88d5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06d4e48a-7a69-4477-a2f8-498da06965f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba9b38d-0fca-4192-8d6a-99e36933dca7",
        "cursor": {
          "ref": "6d13e1a9-20dc-474f-bc74-c2226ebf0ee7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a0d5904e-40c3-4d6c-887d-e27247b385bf"
        },
        "item": {
          "id": "5ba9b38d-0fca-4192-8d6a-99e36933dca7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ee01c6f4-f711-4973-b714-3997ecb2d58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715a41bb-f7da-48ed-b6da-3142f20546e9",
        "cursor": {
          "ref": "8f2c2036-2a43-4a4d-8dad-e21f3d14f9a1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dabc96a4-3dba-4fba-a53c-fd954a05f21f"
        },
        "item": {
          "id": "715a41bb-f7da-48ed-b6da-3142f20546e9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "04df15d0-dabe-498a-824e-b96372bd2b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835c1b3a-8cfd-4f94-a6ea-722b1c2f6d54",
        "cursor": {
          "ref": "a3e45365-1011-4006-868f-d7081a72b5d9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4bc8863d-5a7b-403d-99df-d917b5db1c55"
        },
        "item": {
          "id": "835c1b3a-8cfd-4f94-a6ea-722b1c2f6d54",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c07343e3-de48-409c-b162-087bf135c62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab511726-ef97-4213-9128-e4174abf29cb",
        "cursor": {
          "ref": "ddd9edf1-c9d7-4fcd-bca2-c1e874af5d65",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bffb285d-8679-4a6d-83c6-0ad3f779460d"
        },
        "item": {
          "id": "ab511726-ef97-4213-9128-e4174abf29cb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "05576777-c79e-40a5-9426-bc76adcab02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2a987-4e75-4b59-b8cb-dc969637febc",
        "cursor": {
          "ref": "961ec3e7-3a64-4213-88ad-e22ebaf293a5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "afdf043e-84a8-409e-a0e4-c5c6b89ef500"
        },
        "item": {
          "id": "98a2a987-4e75-4b59-b8cb-dc969637febc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c2b6b613-94cb-4492-8367-deb62c42fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f644bf25-c242-4be6-ae59-39d781577096",
        "cursor": {
          "ref": "17b0b32b-8eb5-4ff5-8710-a183ebb18722",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e2cb10dd-d903-47cc-ae90-8ccc8ed130f6"
        },
        "item": {
          "id": "f644bf25-c242-4be6-ae59-39d781577096",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dcd3b826-cc53-4919-bda3-c36e76ea6320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4413c7-e956-46b1-9e27-215c80d49ea8",
        "cursor": {
          "ref": "38b6d7c3-8dc3-4044-a62f-297d4a8cbf4c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e5b6ce60-38f9-46d7-9faa-fd1c1aa3dd0a"
        },
        "item": {
          "id": "ea4413c7-e956-46b1-9e27-215c80d49ea8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "36ec2e60-a554-4c64-b235-3aead19202ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bbff5b-afe4-4b6d-bc07-ce815dee2b35",
        "cursor": {
          "ref": "6c091be9-523b-41eb-ae48-e8fc6a081d23",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "603f2818-2182-46c5-92da-ed825146954b"
        },
        "item": {
          "id": "72bbff5b-afe4-4b6d-bc07-ce815dee2b35",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f7fad8a-4bf5-4e5c-82da-1b63ad036f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f070d5-be54-4d4c-9e2c-d3b58412496c",
        "cursor": {
          "ref": "ba20a334-46ea-4aea-97cf-5a121c7a9028",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e8713280-2137-4c00-b483-6bbe253efcff"
        },
        "item": {
          "id": "08f070d5-be54-4d4c-9e2c-d3b58412496c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33d3a0ec-9f7a-4ca1-825b-250226e6f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d830b-c9ce-4a96-80ca-fc8ecd3f20cc",
        "cursor": {
          "ref": "2c15a1d0-6cda-4090-8337-b5b38b81a632",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a9a31a0-86c7-4dfe-b085-479096ea5620"
        },
        "item": {
          "id": "fa6d830b-c9ce-4a96-80ca-fc8ecd3f20cc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c85105c4-2c3d-4c81-b2f1-8188116c372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb8f850-2a5b-45ae-9313-6ba08c26a37d",
        "cursor": {
          "ref": "c5c94d44-a95f-4b95-9aae-189139c3d0c6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c6f4b1f6-86d2-4d1f-8cf3-563bc4b43176"
        },
        "item": {
          "id": "cfb8f850-2a5b-45ae-9313-6ba08c26a37d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1b2aef45-ad2d-45c2-8378-b81ad4c5d24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338a57a2-af92-4099-bdca-aed7e351ed6e",
        "cursor": {
          "ref": "a92f80ed-d591-4c6a-95b5-ca314e9bbeaf",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "34bb48ec-d7f1-469d-a55f-f844b07b6114"
        },
        "item": {
          "id": "338a57a2-af92-4099-bdca-aed7e351ed6e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "205913d1-6888-41d6-85dd-9371d3871a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04600262-9f13-4d64-a650-122914ca0a8d",
        "cursor": {
          "ref": "92427d50-8657-4610-8c37-007f1c4a2598",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8520b13d-c4aa-4bba-8c8d-6488174d6ba7"
        },
        "item": {
          "id": "04600262-9f13-4d64-a650-122914ca0a8d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "154d56bc-5c75-4b8b-b340-d939952ba356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5174ed-b5ac-41a3-806c-7e144de7cf85",
        "cursor": {
          "ref": "64a53d8b-4082-4e13-b6cf-7978ce6c7b73",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb2f9f1c-9830-4031-b263-52c9346b9a42"
        },
        "item": {
          "id": "ad5174ed-b5ac-41a3-806c-7e144de7cf85",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38002496-c6f1-4ce7-af1a-f399a9e2ab49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73e3c2-1f08-46cb-bc0f-c03e38a3cfc1",
        "cursor": {
          "ref": "e2e5dc3f-12f2-4bdf-91c9-5fdb4f34d3f7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5f001f91-65f6-43b8-b51e-90c7516ce8fe"
        },
        "item": {
          "id": "ca73e3c2-1f08-46cb-bc0f-c03e38a3cfc1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "35f2be73-dc60-456f-9615-d9417be5ed06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013ff12-3c98-4cfe-9a19-db8abc7f090c",
        "cursor": {
          "ref": "81299080-9132-4d60-ad56-9606c2e90214",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2a95f63-a25b-436f-acfa-5b4b7026c01b"
        },
        "item": {
          "id": "3013ff12-3c98-4cfe-9a19-db8abc7f090c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c608e90-1260-4ef9-a455-66f61d79b471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fa773f-ecd3-424a-ab2d-027f59c27a1c",
        "cursor": {
          "ref": "135f868c-c16f-4936-8ad3-885f0257201a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2eeee3f3-8b1d-425e-8c77-d37ba21293b5"
        },
        "item": {
          "id": "c0fa773f-ecd3-424a-ab2d-027f59c27a1c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5979e33e-03a8-4768-8efe-e0e85a166b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3e9ce0-3d65-482a-b223-34472d80b8d2",
        "cursor": {
          "ref": "23c8661b-a7ec-4e2d-9a50-7524a0eb0448",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f627fc47-6149-45db-9577-e35a285c7266"
        },
        "item": {
          "id": "be3e9ce0-3d65-482a-b223-34472d80b8d2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "82ba1ed6-97d0-4a53-bcaf-b598486286fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b23bcd-b589-45e3-82c8-3ae5eb0ac5f7",
        "cursor": {
          "ref": "1cf99d7f-62ad-4296-867f-4ffbd7deadf7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f36d6caa-53c8-4652-97a5-a3b7642ffda6"
        },
        "item": {
          "id": "e1b23bcd-b589-45e3-82c8-3ae5eb0ac5f7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d0ced59c-2b1f-4510-b0bf-6f8e93ffa49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26331dce-d7ae-4ba4-9c4b-d7dbf8110c01",
        "cursor": {
          "ref": "1d05108a-d42a-416d-a5da-8a203cdfd5ca",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "37ca7fd0-9714-4c7d-9d69-1fc047cfaa3a"
        },
        "item": {
          "id": "26331dce-d7ae-4ba4-9c4b-d7dbf8110c01",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "16e0004e-12ff-4ddb-a457-87a6b09e33d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0a114c-b123-41d9-aa3c-075369d295dc",
        "cursor": {
          "ref": "c25f4fe8-9d01-49ac-ae6b-17baf78faebc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b851b16e-bd76-471d-abdf-8850759ab60d"
        },
        "item": {
          "id": "eb0a114c-b123-41d9-aa3c-075369d295dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8eb3b72c-1b4b-4a73-a14d-877c84f47be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0267cc20-920c-43c1-97cc-7428d7b618c5",
        "cursor": {
          "ref": "4f43a28a-7490-491a-9a23-942ff1d55907",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "528f7ec9-4d45-4ee8-b261-a36e731f324f"
        },
        "item": {
          "id": "0267cc20-920c-43c1-97cc-7428d7b618c5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "90661461-c8fd-4037-b129-036e4f07a44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8842a5c2-0d32-4f03-80be-a7c75b4e85dc",
        "cursor": {
          "ref": "e42dfeed-3d77-493d-82a8-2b0039eb60e7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "748115f0-4cc9-41da-ae8f-33f39b781f28"
        },
        "item": {
          "id": "8842a5c2-0d32-4f03-80be-a7c75b4e85dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8440f86a-2ca5-47be-a51d-ce7a298bc273",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95259d8d-dc60-42bb-95ff-ba4ab28a2a33",
        "cursor": {
          "ref": "8595d53d-60cd-4e33-949c-1d21befd4e19",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eac43e7e-469d-4d11-9a76-184e7ba65bb4"
        },
        "item": {
          "id": "95259d8d-dc60-42bb-95ff-ba4ab28a2a33",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d9b0b145-9c24-421b-83a5-bc7d3750848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ce3396-6f54-4116-9ee9-9051522e25f4",
        "cursor": {
          "ref": "fbd00103-2734-4248-966a-ae84c87438f8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d0513273-eb94-4c9a-bc72-fabfeace0776"
        },
        "item": {
          "id": "04ce3396-6f54-4116-9ee9-9051522e25f4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45be62d3-7d96-4811-99c5-ffdac3bfb152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ead6b1-ce40-46b6-abb3-e9744b06b792",
        "cursor": {
          "ref": "bada9020-0e6e-4d6d-8a47-62eba6529d17",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "54dd9a3d-6000-433c-a633-ac35c9c7cb8e"
        },
        "item": {
          "id": "26ead6b1-ce40-46b6-abb3-e9744b06b792",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a189e103-51da-4e70-8b6a-ce90763a46da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80df5890-f86a-46b7-8098-8ddfa0d74e9e",
        "cursor": {
          "ref": "445ba6de-8cdf-43f6-8623-6884ab39c211",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd684827-2968-45d3-baf6-5b3e02f53d83"
        },
        "item": {
          "id": "80df5890-f86a-46b7-8098-8ddfa0d74e9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d7a4c316-fd5d-4cab-9434-623767f09c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb99d5-1b16-495d-b633-374f597a1bbf",
        "cursor": {
          "ref": "6b6b1a70-0dd5-488d-805d-2217ecaa050c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e783cf92-6b03-41f0-bbd2-8d9379fe7d94"
        },
        "item": {
          "id": "1edb99d5-1b16-495d-b633-374f597a1bbf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9450401a-2fd6-4614-923a-55105ffae89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d575fd6-8265-4b96-9b58-92aa518b5f80",
        "cursor": {
          "ref": "1044c4b2-45b7-4e62-a8b5-707e3827bd6b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "da8b9f5d-2951-4c90-8809-4fc72fcec56c"
        },
        "item": {
          "id": "9d575fd6-8265-4b96-9b58-92aa518b5f80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "22f7e18f-2839-4cd0-922b-1f6c93c6fc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca92b70-78fc-4b20-b49a-ed22dab99412",
        "cursor": {
          "ref": "d90d923b-af0d-4162-b808-11fe8679980a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "39f226ca-8fb5-42ed-b569-290886222366"
        },
        "item": {
          "id": "0ca92b70-78fc-4b20-b49a-ed22dab99412",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63203313-9a68-48d0-a64b-022346987903",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8381e7-c5d0-463b-8a85-517c60c3a0e6",
        "cursor": {
          "ref": "fbfea319-9f4f-40f6-8d53-88289733d4d0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0475febf-b2d6-493f-adc1-3c95d97af6df"
        },
        "item": {
          "id": "1d8381e7-c5d0-463b-8a85-517c60c3a0e6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7c426f87-37e2-46bf-a17d-287b6730f872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65bab40-e226-4888-a337-2d6ca23a6690",
        "cursor": {
          "ref": "7f9b9aaa-2990-45e0-a399-3ca176765d75",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e67e858a-5271-4848-943e-ed6a735aa721"
        },
        "item": {
          "id": "e65bab40-e226-4888-a337-2d6ca23a6690",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7869195d-d402-42a2-89e0-aa5f5c155fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d74ef19-565e-4070-91fa-50a4201df30d",
        "cursor": {
          "ref": "be306b08-1352-40a9-82c5-9fa77321aac8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e9eda3b1-ab6a-410d-b362-b1c43eafe324"
        },
        "item": {
          "id": "1d74ef19-565e-4070-91fa-50a4201df30d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "66c564f2-37f8-4bb1-99b8-82b7c4b6d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224307c8-8bad-43c5-851f-f8b2ad32884a",
        "cursor": {
          "ref": "b24e89f1-7332-4eed-bc83-22bb617c1e39",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "02db5526-fbf8-40d8-bf11-28c822dd1707"
        },
        "item": {
          "id": "224307c8-8bad-43c5-851f-f8b2ad32884a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7715320f-db06-42a6-93e6-3aa55fd37d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecc4557-7daf-4553-b0a9-c26826fb7c40",
        "cursor": {
          "ref": "66a43a9a-2931-4892-ae2a-3bed9e4da1f5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc0e307a-a8b1-40ae-9d19-5f0d8914db39"
        },
        "item": {
          "id": "7ecc4557-7daf-4553-b0a9-c26826fb7c40",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b9a05703-38f6-4b63-a655-09f5d58e3d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b360af4-3e53-4706-a6fb-0b4fbbbc39ce",
        "cursor": {
          "ref": "79a54020-56de-4cef-94ce-bffd9557ef4f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a3bb5afc-9df5-4528-8224-07b01b6b6a96"
        },
        "item": {
          "id": "7b360af4-3e53-4706-a6fb-0b4fbbbc39ce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3fe04d14-62c2-45c3-80bb-488442d7d2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b13de8-a1ed-4244-af94-c2ffe353aa33",
        "cursor": {
          "ref": "3116cc8d-9f8e-4da5-8d2d-047181a7e431",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1fe08f65-17b4-41b9-8b54-38a404a889e4"
        },
        "item": {
          "id": "a0b13de8-a1ed-4244-af94-c2ffe353aa33",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bfb8082c-2921-404d-9ed5-1644e83119d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93516c11-b61b-47a6-b231-99584ea56185",
        "cursor": {
          "ref": "3255e327-dada-463b-9df7-d8031fcfea7d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bcd444fd-ae8c-459d-abf8-746dbf4a8839"
        },
        "item": {
          "id": "93516c11-b61b-47a6-b231-99584ea56185",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "39d764dc-4605-44d7-bb89-929b86b01989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81c2c3c-0d20-43fc-9aa0-8b796dc0e67b",
        "cursor": {
          "ref": "1a397c47-5719-4859-8ac4-a94c503648eb",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c8dc4dd0-da41-4b09-b257-4370abfa38b3"
        },
        "item": {
          "id": "c81c2c3c-0d20-43fc-9aa0-8b796dc0e67b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fe0ba28e-6c31-4e50-9c13-0ef6f43d2946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93289649-2915-4c89-b6fb-4895c7031b1c",
        "cursor": {
          "ref": "627d5e3a-1d77-469f-a7ba-7674671f02c0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "523172e6-69ee-4d60-ad5b-a2d26b0a3a6e"
        },
        "item": {
          "id": "93289649-2915-4c89-b6fb-4895c7031b1c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "351d6612-8f2c-4194-86bf-c9a90fdcef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e353c2cd-87bc-4360-8b55-682189149693",
        "cursor": {
          "ref": "42742ac7-8693-4e1a-b115-5b90703fc441",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ef44615-d40c-4c82-b029-e8416c68920b"
        },
        "item": {
          "id": "e353c2cd-87bc-4360-8b55-682189149693",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "39404d20-358a-4433-9fd0-73cee145bb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d3da3f-c156-40c9-8679-83cb9d4dfa73",
        "cursor": {
          "ref": "1c75d947-0429-443a-bac1-a3339cfd9cf8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "05333eda-a884-43e1-a4a8-407649db7854"
        },
        "item": {
          "id": "74d3da3f-c156-40c9-8679-83cb9d4dfa73",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d13934d1-3431-4bb5-aaf6-bfeaf8061dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c64e70-48c4-4fa6-b928-550a2221e744",
        "cursor": {
          "ref": "c6629891-e3ea-45db-898d-68fc279bbc2b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "94a92357-2eff-4424-a9c1-8cb477433aad"
        },
        "item": {
          "id": "68c64e70-48c4-4fa6-b928-550a2221e744",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "957469bb-30d9-4027-8ae8-94d17a81f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfb848b-c139-417f-88b8-c3ac300e7d07",
        "cursor": {
          "ref": "89738619-bac3-4912-9612-a2563a078b57",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "424baac1-bef8-48b5-aca3-dad06519174a"
        },
        "item": {
          "id": "1cfb848b-c139-417f-88b8-c3ac300e7d07",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4faf14d6-c093-4ac4-a300-f4cc4dd18e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6cf0af-450c-4e87-b601-2c8132a84b4a",
        "cursor": {
          "ref": "615f7167-0bf0-4c95-a3b8-35da87a95006",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f06e3b65-5749-4081-b41f-6eb629959886"
        },
        "item": {
          "id": "af6cf0af-450c-4e87-b601-2c8132a84b4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c9c837d-f055-418a-b8e8-e0cdf2e90903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3837535-a1e4-4a5c-b9ae-f701bb05998b",
        "cursor": {
          "ref": "2afc49ba-185d-424a-8fa8-855ac58b06ec",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eaa3f4ea-9087-4957-9721-d4221d6c07eb"
        },
        "item": {
          "id": "b3837535-a1e4-4a5c-b9ae-f701bb05998b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b31eda7d-175b-44cb-b687-2f0ea9c2252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72947001-9785-490e-b53a-acd07dd994ef",
        "cursor": {
          "ref": "b18f1bc8-1b6d-402e-aba0-30732fb2076d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "65c0b4e3-68ef-4b22-be0d-b24edaa54756"
        },
        "item": {
          "id": "72947001-9785-490e-b53a-acd07dd994ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "76ed24a5-2af8-45d4-877b-a3bff8d40b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe5134-2868-4eb3-bbf6-bb119a4fde1b",
        "cursor": {
          "ref": "456c7a67-a582-4559-97cf-b50f4416d815",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2a7168d-68a6-430f-86d7-7e0980bbe9a8"
        },
        "item": {
          "id": "25fe5134-2868-4eb3-bbf6-bb119a4fde1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "38563580-d30a-4430-81b7-0b28a8876a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd68284e-5dd9-4e7e-9849-787a18cd2aab",
        "cursor": {
          "ref": "b5c7adb3-6c3f-4086-81b2-05f5ad64b3f0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d2790294-12e5-4e86-ba77-578001c3be20"
        },
        "item": {
          "id": "fd68284e-5dd9-4e7e-9849-787a18cd2aab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "716332d7-6f9b-4beb-91b6-f6c607a237a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f97d09-3a37-4c73-9329-ce4c0a4d7f52",
        "cursor": {
          "ref": "1129e88d-ce11-4d8e-abc1-2b24c9287e2d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b6bafa5c-d4f5-49d0-a159-54b5e21b87a7"
        },
        "item": {
          "id": "07f97d09-3a37-4c73-9329-ce4c0a4d7f52",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "70f1c298-8d98-493f-a319-cd4a48d2fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e23ce6-aa03-4d62-943b-704cae0ffe49",
        "cursor": {
          "ref": "b7b57f91-dcbf-4624-b163-4ba16d1d4d5e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fec0b149-68ad-4352-ad33-2ad2ab57b189"
        },
        "item": {
          "id": "c1e23ce6-aa03-4d62-943b-704cae0ffe49",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d8ebf43f-f3ff-4023-ad4c-ec7755d3e139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b076c4-98cc-436f-8d96-64cde999e240",
        "cursor": {
          "ref": "d40a504d-49e4-411e-8d3c-f94c6fa37a81",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "51c1d241-8df8-4870-b544-f39d521fb88c"
        },
        "item": {
          "id": "a2b076c4-98cc-436f-8d96-64cde999e240",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "67461f42-16fa-47a4-82d2-ac276e560128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd96a36-c3d4-4f84-b484-0e7156b27ba7",
        "cursor": {
          "ref": "3ddcd683-04d5-4682-991f-48df37eb1069",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "81c4e881-64b9-4579-8748-7261ebfe70de"
        },
        "item": {
          "id": "bdd96a36-c3d4-4f84-b484-0e7156b27ba7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "037fe6d4-3cf6-4000-8fb2-6cf81f0c4b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612239e2-3263-4883-8586-005e56d84560",
        "cursor": {
          "ref": "f8d9c582-6933-4ec5-a97d-71a75e12ee00",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "26c189d3-8263-4941-ba4c-76f0e18fe759"
        },
        "item": {
          "id": "612239e2-3263-4883-8586-005e56d84560",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ed323395-ebf0-4d8b-a6aa-15fa4a996b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee18e10-15d1-4306-9161-122b12794c62",
        "cursor": {
          "ref": "7715d390-43c2-477c-9446-d8f0b572f952",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f2747501-5f59-4813-b896-8748996e19a4"
        },
        "item": {
          "id": "5ee18e10-15d1-4306-9161-122b12794c62",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f3269f10-22d9-40aa-b776-11411205e669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62c1fa0-ccfa-4edf-a534-96ac3a8080a7",
        "cursor": {
          "ref": "e578b452-be0c-49bd-96fa-be9a7c29c2b1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "52f0faad-f57a-4efa-9898-4b7fc3d0186c"
        },
        "item": {
          "id": "a62c1fa0-ccfa-4edf-a534-96ac3a8080a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "edb4bcfc-6b9c-420a-83b4-2ea173dd489b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5898e7-02d6-44a0-b203-9b1b61cd863e",
        "cursor": {
          "ref": "751aa133-176e-4501-8d6b-2c362d3aac39",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bd3e1797-c76c-4b59-a9d4-58626c92ae52"
        },
        "item": {
          "id": "0e5898e7-02d6-44a0-b203-9b1b61cd863e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5360cd6a-2b99-47b5-9e6c-7dfb88a2748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c1128f-8256-4c2f-8d99-7edec73c4fee",
        "cursor": {
          "ref": "95992735-63ad-4038-8106-dcc1eb70ec13",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "45e696d6-fdf7-4a5a-9f0f-e919e397ecb1"
        },
        "item": {
          "id": "43c1128f-8256-4c2f-8d99-7edec73c4fee",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "61b59c92-85bb-4033-85d5-aa25f27ac964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693b49b8-1f21-4a9b-80c3-ed895e68a2fd",
        "cursor": {
          "ref": "55aec1a1-68a1-4079-9d4f-810ca065bc45",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fad3295a-1bbe-4c41-95c0-3f3526977c44"
        },
        "item": {
          "id": "693b49b8-1f21-4a9b-80c3-ed895e68a2fd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "87f99d11-3c1c-48ed-9648-610201d5288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2277a52d-2ef5-45a4-986f-35b3393b1ed6",
        "cursor": {
          "ref": "73cf87ba-b522-471e-8371-fd72934395f6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad3d3b7c-650b-4224-b433-89668823bf3b"
        },
        "item": {
          "id": "2277a52d-2ef5-45a4-986f-35b3393b1ed6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cdf323cf-bac0-45ec-832e-fe95aa9a2a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e93363-679f-43c5-9188-63f0a7d29fd1",
        "cursor": {
          "ref": "45df98df-9454-4736-ac0c-72bc3dec5637",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "34edd25e-0750-4b62-af30-706a56d862c3"
        },
        "item": {
          "id": "77e93363-679f-43c5-9188-63f0a7d29fd1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "649ba34c-5585-4b40-ad37-7722dff7f7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3966868-8c1a-4220-8c7a-a77ca082e192",
        "cursor": {
          "ref": "810ecb9b-b5c6-488a-bd70-b1aedda7c29d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e01de745-4028-4b6b-aec7-6d80eb21d0fe"
        },
        "item": {
          "id": "e3966868-8c1a-4220-8c7a-a77ca082e192",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b3b893f0-2a79-4be5-b33f-a35cd603b627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10416e0d-0059-4d93-9368-329f8820f99a",
        "cursor": {
          "ref": "01986733-6d9f-487a-a56e-7295e39c6256",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2a08d5fb-bf98-48e8-8b59-ad53839d248f"
        },
        "item": {
          "id": "10416e0d-0059-4d93-9368-329f8820f99a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9de57726-b2bf-4f26-81b7-28cee71dd4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4929db-9010-4d73-9236-281601a994fe",
        "cursor": {
          "ref": "1aeb23ad-24e5-44d1-ba3f-927fa9361b92",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "318f56b7-c958-4c41-96e1-8baff2bf6a1d"
        },
        "item": {
          "id": "0a4929db-9010-4d73-9236-281601a994fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "da6fd423-d3f6-4516-8bc9-637ec4452591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edcd5a9-d865-4cc8-9908-af01f3484f20",
        "cursor": {
          "ref": "907c801e-8cc5-4e43-95d4-f2b802b0e939",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1b654eb5-8ffc-4fa4-935e-57f6e4cc9b64"
        },
        "item": {
          "id": "9edcd5a9-d865-4cc8-9908-af01f3484f20",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ca3dc47e-d9ac-4edf-b4b5-e219cf2766bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019a3825-dc57-4ba4-8802-c98ec1c642ae",
        "cursor": {
          "ref": "44623502-d2b4-4e7c-9200-1a652ad8ff24",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cb3e9a1-3acf-40db-9791-e9186c6c5bc7"
        },
        "item": {
          "id": "019a3825-dc57-4ba4-8802-c98ec1c642ae",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e3ee2268-555e-4dd3-8f2a-9197adf4a775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f9dd6a-f989-46c5-bb0f-9a4a807c3dd8",
        "cursor": {
          "ref": "bfdd063a-c76f-4a82-8314-2c18dcff9f58",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e2a8f848-475f-4cf1-bf7e-89f0d94a8dbe"
        },
        "item": {
          "id": "f4f9dd6a-f989-46c5-bb0f-9a4a807c3dd8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "63582c67-d357-4309-b39b-5b5226380f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c10d59a-b30d-4938-9c2b-1e4170cdcb99",
        "cursor": {
          "ref": "c0f8d802-bab7-4c09-a984-9594338f32c5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e367fc28-2fa3-4ba4-99f1-0d3e87f6b57f"
        },
        "item": {
          "id": "7c10d59a-b30d-4938-9c2b-1e4170cdcb99",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc1e5399-54b2-4498-9e00-6d42f3fd9cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abf9a0b-fd94-4af2-b371-535da71af25c",
        "cursor": {
          "ref": "510cb1d3-ca11-4548-82df-4c0a34008774",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "234ce150-4da8-4bdc-bccc-c99fa2948ec7"
        },
        "item": {
          "id": "3abf9a0b-fd94-4af2-b371-535da71af25c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5622a8c8-4616-4cb1-a805-0ef1570934fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd73d30-26c7-4b43-b36a-6999bb8cc995",
        "cursor": {
          "ref": "aabfe099-0f6c-4d74-a292-80423cb95f48",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1dc53d67-66cb-4862-a294-6d34d6636bcf"
        },
        "item": {
          "id": "8bd73d30-26c7-4b43-b36a-6999bb8cc995",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7fbd28d9-8920-497d-9899-3d00a86ece4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f24a5e2-eaa3-4373-892c-97a5d1932ddd",
        "cursor": {
          "ref": "0891e411-fe0b-46e3-971a-83b9f9ead49a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "404f2bab-69f4-4982-83ab-46f3b31dfaec"
        },
        "item": {
          "id": "3f24a5e2-eaa3-4373-892c-97a5d1932ddd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "614ddf63-47e2-478e-84e3-6bf625372949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f9ab2c-628c-46a7-bb4a-a7c87c9817bc",
        "cursor": {
          "ref": "a931caeb-963b-473b-8a81-3a99c2812aa1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1047eaf2-8b69-4188-abc7-7ab3c29d75d8"
        },
        "item": {
          "id": "f1f9ab2c-628c-46a7-bb4a-a7c87c9817bc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "03696817-5d49-4bb5-ba34-efab26080fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f46d3-e975-4a19-a37d-676d70a5e3de",
        "cursor": {
          "ref": "a7ecbd7e-bb2e-42d5-9c9c-b78d9e7e2749",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ae2b33bc-9e2d-48b5-981e-5f380d677b98"
        },
        "item": {
          "id": "be6f46d3-e975-4a19-a37d-676d70a5e3de",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "08fb778d-d799-451e-8253-52ecce231dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d94dc1-60fe-4683-a320-136cad5a91ab",
        "cursor": {
          "ref": "081779ea-a64c-4fa3-bcc9-656d710c07e7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fd49d89a-6eb7-49c9-98e6-6699e7764af9"
        },
        "item": {
          "id": "e5d94dc1-60fe-4683-a320-136cad5a91ab",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "198124ca-fe3b-4941-9b9a-c6da4a2b0884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42b3fe0-9cda-4e0a-a913-896902e2d25a",
        "cursor": {
          "ref": "7dad7766-250b-4c01-8032-9b7c89971fa7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1c0a83ab-7ccc-4e22-8aa7-93a8a30e85c0"
        },
        "item": {
          "id": "b42b3fe0-9cda-4e0a-a913-896902e2d25a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f5e08823-7e9d-4ef7-be7f-f99f98125fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909d61c6-9c5c-4513-929a-34fba8fe54d0",
        "cursor": {
          "ref": "c766bf20-6e40-4102-8070-b83e22cae62f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6f79b987-5b2e-4dfd-9f5a-5118509167b5"
        },
        "item": {
          "id": "909d61c6-9c5c-4513-929a-34fba8fe54d0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "40f237ac-25a0-4d63-8555-a1c6e58cf6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540e3d9-a178-4963-bb62-dd9c60748853",
        "cursor": {
          "ref": "d4170e0b-8635-44f7-ab1b-354619ce8afb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7c2b7aa5-54ec-403e-a8ab-cc1d56761b86"
        },
        "item": {
          "id": "f540e3d9-a178-4963-bb62-dd9c60748853",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84902682-2061-4f46-86c5-6953e68dd25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93246302-81b3-44ef-a464-68357b84478a",
        "cursor": {
          "ref": "c3f8a408-8bfb-455d-9efd-73827fb339b0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "31030cf7-cef5-4439-9591-6fc3171c01b9"
        },
        "item": {
          "id": "93246302-81b3-44ef-a464-68357b84478a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5684d2ff-baa6-4718-9d32-ffbdc0d82abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a431b8-0fdd-4e0b-b5d7-bbf7248cd845",
        "cursor": {
          "ref": "e6a37316-5213-49d5-9eb0-2620eccc869b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "90b03941-34d7-46ec-832d-282ed0becefc"
        },
        "item": {
          "id": "21a431b8-0fdd-4e0b-b5d7-bbf7248cd845",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "252fb93f-b0bf-4093-831f-7c1b8237280a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa77ce-705a-45ea-b133-9016f38d0308",
        "cursor": {
          "ref": "650d6d57-fb5f-4ca7-8055-690b7fe55ad9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c67274b0-f5e7-4e09-b048-e6c9bcc25671"
        },
        "item": {
          "id": "43aa77ce-705a-45ea-b133-9016f38d0308",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "455f34a8-b8c1-4264-a12d-edc3617d1143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ced9e20-4e5f-4df1-b0a4-de1bd906e79b",
        "cursor": {
          "ref": "e9a94a11-25e0-4dee-af7f-057a84367891",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2a2e48a1-834b-49c0-b068-0db71f6cf860"
        },
        "item": {
          "id": "9ced9e20-4e5f-4df1-b0a4-de1bd906e79b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2208e8e9-4e8c-48f2-84da-16785f1d9c51",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c32df7e-d094-42e2-945f-8f2f30209eb4",
        "cursor": {
          "ref": "a1968845-6efc-40fd-90e8-75e584e9f2e7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "755d41b4-9534-4248-8ff7-f66928d0babc"
        },
        "item": {
          "id": "1c32df7e-d094-42e2-945f-8f2f30209eb4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4274667f-edc5-408f-87e1-86bd04340435",
          "status": "Created",
          "code": 201,
          "responseTime": 256,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d817cf8f-7c72-4b17-bee4-5afd132250ba",
        "cursor": {
          "ref": "0a0e32fe-aef0-4a7e-84e7-13c7b7c00dbf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "47343e1a-536d-4794-987a-eb3fca04c8d4"
        },
        "item": {
          "id": "d817cf8f-7c72-4b17-bee4-5afd132250ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "50b47f4e-f9b2-4298-ba10-66f6d93b48a0",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba20064-5a48-4d03-b1b4-55d2a2585855",
        "cursor": {
          "ref": "4f203c0c-0b66-4657-9d30-0b5a9d831510",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1b26f3d2-2d8b-4801-abc9-2444df1e41ce"
        },
        "item": {
          "id": "1ba20064-5a48-4d03-b1b4-55d2a2585855",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4158c14d-1f8d-4992-89c0-c206ac05262d",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d83c64d-4a0b-4971-bdd4-d8a2040dcb71",
        "cursor": {
          "ref": "974ebf4e-4205-439d-98f8-ab2515a02cf4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f95f168a-30e3-43ec-beff-fff1c9f53855"
        },
        "item": {
          "id": "3d83c64d-4a0b-4971-bdd4-d8a2040dcb71",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "51db6422-4a7d-407a-8741-2f2873c4d98a",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9b2216-cdaf-4443-8092-5dab7d073306",
        "cursor": {
          "ref": "8ca2a808-8eb3-42d1-bdff-5bd4105b0f51",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ecc06817-bc18-4607-8cf2-262168820edb"
        },
        "item": {
          "id": "9b9b2216-cdaf-4443-8092-5dab7d073306",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "87bf5779-3f93-4abf-9f9c-54543f8039e0",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "936cf0ac-c9ac-4118-87ad-7b6f1f828b4c",
        "cursor": {
          "ref": "f21b1a8f-8780-4b7b-962a-b903398011f2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "03dba85d-b6e2-488a-b61b-f667790b1a80"
        },
        "item": {
          "id": "936cf0ac-c9ac-4118-87ad-7b6f1f828b4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3c726e7a-8822-449d-9f75-3fc50734061a",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7238193c-621d-4efa-a8b4-480d130d5b28",
        "cursor": {
          "ref": "dd60d574-2ba8-46bd-b90b-ac7a6483364d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "11eeafaa-64d7-45d0-937e-331b21d01796"
        },
        "item": {
          "id": "7238193c-621d-4efa-a8b4-480d130d5b28",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1848470d-1415-4bb9-986a-73b50b7804f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ed0271-322a-4cc6-bef1-07c39f5a8d2f",
        "cursor": {
          "ref": "26c06e67-f67d-4583-9bb8-e7e082b684fc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a030b87-e5ad-400b-a280-6bf1aa2bbf3f"
        },
        "item": {
          "id": "c7ed0271-322a-4cc6-bef1-07c39f5a8d2f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66cc51e6-00b2-439f-a54f-8675f1242f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764cc6b3-3755-44df-9449-d14c56df162f",
        "cursor": {
          "ref": "450a079e-0c49-480c-94e9-c99c821a3705",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "782bb84c-1287-4191-8214-019ae982b1e6"
        },
        "item": {
          "id": "764cc6b3-3755-44df-9449-d14c56df162f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "95f04310-8bd8-49e7-8cf1-475d745438c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0049e867-cb79-4168-9870-4691cdadf574",
        "cursor": {
          "ref": "37d04fdf-b610-4fc3-b7b2-dd62040fb1f5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "024bd93e-1211-4f41-b5e1-35bac90c08ab"
        },
        "item": {
          "id": "0049e867-cb79-4168-9870-4691cdadf574",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ec5f1b6-34bc-493c-845b-771b7286f6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbbdb21-5988-46e6-806e-c62dd31052cf",
        "cursor": {
          "ref": "e7861c76-7d4c-4a61-ac3d-ea3364fc6eb5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0f700cf6-d92b-4a56-babe-aaecebff6df2"
        },
        "item": {
          "id": "8bbbdb21-5988-46e6-806e-c62dd31052cf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "449dfa66-c9c8-4eb2-8c4d-419c60205507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01d1b3c-d1a9-46d4-8bae-cb3baeb301c2",
        "cursor": {
          "ref": "32e07023-65c7-4376-9b76-043d2bcc1172",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f0962f0-0811-481f-9e08-f3daee38230d"
        },
        "item": {
          "id": "f01d1b3c-d1a9-46d4-8bae-cb3baeb301c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f5ec3c00-0166-4413-afaa-614aef419877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ca52cb-197d-4a22-aa3f-1342b32448ca",
        "cursor": {
          "ref": "a6905205-fff7-40cf-8cb1-bdcf0cd62c6d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "131a4146-ad3f-4ede-a4ea-c6b7f7070c57"
        },
        "item": {
          "id": "d1ca52cb-197d-4a22-aa3f-1342b32448ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2623776-c0a5-4bd2-8627-c9bf8725c32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183ff88-3fcd-4119-b1be-c2bea5c9131f",
        "cursor": {
          "ref": "45d25c98-a7e1-4cb6-9082-3ad40b22eff1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "599d1acb-7129-43d5-b13c-30d0b8170d80"
        },
        "item": {
          "id": "6183ff88-3fcd-4119-b1be-c2bea5c9131f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e817858b-91b8-45e2-85a0-64e17266e64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1d0526-112e-4103-af33-7edcf480c6f7",
        "cursor": {
          "ref": "ed0aa8df-6041-4650-82c8-5837565bd608",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5dd30aef-e235-437e-84e0-5f6b79b0ab5d"
        },
        "item": {
          "id": "7a1d0526-112e-4103-af33-7edcf480c6f7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eff9ab22-469b-4bf8-8e70-3bee3866f760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a454c70c-d0c5-4599-acaf-f81930ba18c9",
        "cursor": {
          "ref": "008c3ad0-5940-45d8-a394-abca9b6ca602",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "57e8fd26-3b55-4817-a849-96697d76b0bc"
        },
        "item": {
          "id": "a454c70c-d0c5-4599-acaf-f81930ba18c9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ab366e5b-74ad-4666-9bfa-5fd9fd31724b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae96b537-584b-4ceb-800c-011701924e4e",
        "cursor": {
          "ref": "1acfec89-bcbc-42a8-b874-31a09f9fee0c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d7c88dd7-b460-4f6e-b093-dd7f4e87282e"
        },
        "item": {
          "id": "ae96b537-584b-4ceb-800c-011701924e4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2bfdb7f0-3f01-402a-aa46-dcea4e16d133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bab329b-7a2a-4244-a552-c0526f9da3e8",
        "cursor": {
          "ref": "446b86e6-d600-473e-93cc-76938f16c35c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "50f098eb-e2c4-423e-80fd-f957f2bf3c70"
        },
        "item": {
          "id": "3bab329b-7a2a-4244-a552-c0526f9da3e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d946ded5-8897-4ded-83d5-b1905d459bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8a54d9-bd00-4596-b53e-cf4937e31180",
        "cursor": {
          "ref": "9c375fca-0db7-41fb-9e62-56284ef425fd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e29ea367-db0b-4624-b7c2-c77227778ebd"
        },
        "item": {
          "id": "de8a54d9-bd00-4596-b53e-cf4937e31180",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1721968b-6041-4a32-88bf-c6f7cd13c11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b74babd-e4ce-4a03-a947-4f49ecc3abaf",
        "cursor": {
          "ref": "6180d842-45e3-4fdb-92e1-a47e470b3e6e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8033ca57-bb54-4efa-9b82-8ce2456fa965"
        },
        "item": {
          "id": "3b74babd-e4ce-4a03-a947-4f49ecc3abaf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6314a7a-687b-4678-b3c5-92a8894dc63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adde2d2-6f25-4d90-b754-d56cf95b5b5f",
        "cursor": {
          "ref": "fb3e3fa8-1f46-49b5-8ff5-033c5c508382",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "645e49b8-b03d-40e2-94d6-08ac224941d8"
        },
        "item": {
          "id": "5adde2d2-6f25-4d90-b754-d56cf95b5b5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ff82c13a-cf8b-413f-98f9-37e44ef480a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d159af4e-f2c1-4380-9e20-c3ffa917818f",
        "cursor": {
          "ref": "7e81d9d0-e1a1-46ba-8f44-bf99e45c6955",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "92178ccd-d89b-4bcb-b847-96a09b43bec9"
        },
        "item": {
          "id": "d159af4e-f2c1-4380-9e20-c3ffa917818f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7bea5cff-fdff-4812-a9cd-6abc54f7894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb29d855-1b6d-4cfb-bf72-a48b657d5826",
        "cursor": {
          "ref": "82d2f0b3-bf2e-4773-9ec8-fcf3a581d3a9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f47365f0-4d35-4486-9870-282a0fb2959b"
        },
        "item": {
          "id": "fb29d855-1b6d-4cfb-bf72-a48b657d5826",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6c1221ee-5a3b-4f71-833a-895d5cbb4581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72b5c0-de5d-4496-bd19-de201f75ccaa",
        "cursor": {
          "ref": "eaf423be-ad9b-44b1-9fcb-c3fec1b563d6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3cf21b63-49af-4850-9125-59dcb137fdb8"
        },
        "item": {
          "id": "9e72b5c0-de5d-4496-bd19-de201f75ccaa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb70daf5-53d5-4cd7-9c91-299058ba56ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa7ba4e-281d-4f69-ac23-43e5434aff34",
        "cursor": {
          "ref": "f4d84222-84ae-422d-b85f-63b2a29835a6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2ff1553b-f1b9-48de-b426-bd2e9876bbd8"
        },
        "item": {
          "id": "6fa7ba4e-281d-4f69-ac23-43e5434aff34",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7cd9c1fa-fbbd-48fe-8aac-67712beafc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f37d0a-7c91-4303-bffe-bdcb7864cc94",
        "cursor": {
          "ref": "8b97f252-041c-49e1-b0f7-b1934eba2d1a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "80afd339-0e14-493b-a0bf-8fed22a31035"
        },
        "item": {
          "id": "a3f37d0a-7c91-4303-bffe-bdcb7864cc94",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a904e03-2a69-483d-9249-99c785bf61e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d50033-72d9-4a36-ba6d-f9f8945f9101",
        "cursor": {
          "ref": "8a4ea356-bd8e-4b5b-9b56-9df44ace2bb3",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "423d507b-d6dd-4e89-b42f-6eafeae908cd"
        },
        "item": {
          "id": "28d50033-72d9-4a36-ba6d-f9f8945f9101",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c09b555d-145b-4616-b7fe-f68ecdd86dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4876be3-73bc-4325-a8e5-5cc2362e52d4",
        "cursor": {
          "ref": "476cab95-fc3b-4aba-b2eb-42a1a72d0da6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b1672a20-0e4b-49c2-8540-302daa06ee0c"
        },
        "item": {
          "id": "d4876be3-73bc-4325-a8e5-5cc2362e52d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5ee378e-1c92-4a83-bb39-67491ff7512e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e613161-b945-4c6f-88da-87c56064c821",
        "cursor": {
          "ref": "e0d40f01-3bd4-447a-9572-a82b7205f345",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0d247c77-c9c5-40f8-bd99-aee8079ce3a5"
        },
        "item": {
          "id": "3e613161-b945-4c6f-88da-87c56064c821",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd506022-638c-4181-aacc-2be01609d791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3042152c-abdd-41f1-bcdf-d486161e1d1a",
        "cursor": {
          "ref": "81f19f72-ae28-4d97-b385-bd4b57c7454c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e737b6b5-aaa5-4f7b-a674-072df4197e77"
        },
        "item": {
          "id": "3042152c-abdd-41f1-bcdf-d486161e1d1a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff33f862-d71a-4d92-ac3f-40ea4adf34e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b75b5a-9fb1-42b9-b597-a784a7592253",
        "cursor": {
          "ref": "1d9f9da8-b6dc-43a0-a99a-71df8fd2c589",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dc47da34-c4b3-4d04-b003-f4375f026689"
        },
        "item": {
          "id": "67b75b5a-9fb1-42b9-b597-a784a7592253",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "04cb6045-9f09-46d4-b02c-cc8d8a3ddc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f24e68a-0826-4c6b-85fb-c71edf47150c",
        "cursor": {
          "ref": "22c30554-858c-4802-ae30-f6e067c016fa",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "775ea6d0-662d-4365-98fe-a335f95b4d7e"
        },
        "item": {
          "id": "0f24e68a-0826-4c6b-85fb-c71edf47150c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "467486b4-c303-48e8-96be-f8035c2d7fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05b4b30-46ac-4e51-bb02-709966c70de2",
        "cursor": {
          "ref": "66a9c9dc-7b3f-4ebf-82ea-7490d1787ca1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "654b8706-9e53-4984-8fd6-df30cd4f1698"
        },
        "item": {
          "id": "e05b4b30-46ac-4e51-bb02-709966c70de2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed405996-5ba4-40bd-8417-895fe1545003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edb0849-b004-4081-95fb-c6c444cc9b99",
        "cursor": {
          "ref": "7b54bb23-fe16-4fc0-8035-3a8529faf1c4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "551e9dfa-59fb-4a22-b660-ab1074db466d"
        },
        "item": {
          "id": "0edb0849-b004-4081-95fb-c6c444cc9b99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca6429ef-24fc-432c-a1ab-7384986a4247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344d8744-2735-4772-bca3-807165108df2",
        "cursor": {
          "ref": "8341ca65-ad38-42b9-ba28-241e6cf3b2ba",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e400b691-e425-4b53-bfc7-f28053da3204"
        },
        "item": {
          "id": "344d8744-2735-4772-bca3-807165108df2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1ef851cb-a8fb-4fe4-aa7f-eb1d92dd2f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab38f8fd-0192-45bf-8cff-94b63ebb2430",
        "cursor": {
          "ref": "e0baefda-2862-4e18-b4ec-57fe8adb8d9b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7c61034d-d1b9-42c4-838b-f63087aeb260"
        },
        "item": {
          "id": "ab38f8fd-0192-45bf-8cff-94b63ebb2430",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c043b02-d190-4c70-88ce-576b9c6debba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57caa72-d9f1-4107-a174-d087051503b9",
        "cursor": {
          "ref": "9391fc8a-1745-4b0d-9d1c-7c4ff75a56b1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be239241-7627-41d4-a4e0-39d9fb74c8bd"
        },
        "item": {
          "id": "e57caa72-d9f1-4107-a174-d087051503b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bb4d102-e951-4416-bd1d-e4ce46c7417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaf3339-5bad-4865-a037-8f1b40d318a5",
        "cursor": {
          "ref": "276a9a71-d647-4741-aad1-2c361c052360",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f5128155-570f-4e84-850e-69f722675a06"
        },
        "item": {
          "id": "aeaf3339-5bad-4865-a037-8f1b40d318a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "48814764-6263-4c8e-bd57-dd01b123a6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8745fd42-0460-4f53-87d8-31b029bbef7a",
        "cursor": {
          "ref": "99a7b3c8-bbaa-4b6d-89c5-0bcca449ba85",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46c0f3ec-c585-45a3-a2f8-2c3adb8cafb4"
        },
        "item": {
          "id": "8745fd42-0460-4f53-87d8-31b029bbef7a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c31e5e5a-cac4-4d70-9fbd-64f524ad65f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92def440-90dc-4b46-b8ff-cedd72b270de",
        "cursor": {
          "ref": "5c007d1d-fbd8-4775-a5d4-82af6581b3ef",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "322a8058-9849-46ff-944e-6f48a1115842"
        },
        "item": {
          "id": "92def440-90dc-4b46-b8ff-cedd72b270de",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f7e4de2-94c2-46c6-8257-e40588cc2c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98013384-7a8c-44e3-a2e6-81d60c90d69e",
        "cursor": {
          "ref": "2b632c15-ba07-41cc-a699-6ecabca9a8ce",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ee7cda57-f52e-4f9d-857d-2984fb5aa8d1"
        },
        "item": {
          "id": "98013384-7a8c-44e3-a2e6-81d60c90d69e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33fb25bc-9a6a-4512-a0bd-ffc489ce769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625cb6d7-60ed-4729-92b4-4549122281f7",
        "cursor": {
          "ref": "9a1230f5-1876-4605-9a62-613852d5ad98",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e5be995e-20f1-4b1b-80d0-7cb28be9ea3a"
        },
        "item": {
          "id": "625cb6d7-60ed-4729-92b4-4549122281f7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1af34617-409d-4c4c-988c-3155fd2d3257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53fbc4-5173-421e-b5ac-3eb5045d2cbb",
        "cursor": {
          "ref": "6a3ab35a-fde6-4643-880a-199b30dca80c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "80c3b0f6-a92c-4f59-b1e6-a7cb2d4b7da8"
        },
        "item": {
          "id": "4f53fbc4-5173-421e-b5ac-3eb5045d2cbb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8dba0a0c-14b1-4b42-9831-117f416b96d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527e9218-e702-441e-83c9-46332a7dffdc",
        "cursor": {
          "ref": "0e45aa4e-62f7-448c-925a-696f31f3b03f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "24ca3862-c14d-4a4c-9a13-3ff4b2b49d59"
        },
        "item": {
          "id": "527e9218-e702-441e-83c9-46332a7dffdc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad3ac0aa-4c29-4e43-9ca4-c6947e233f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41513cf-2409-4172-975e-0c0a685ff551",
        "cursor": {
          "ref": "a83483a1-696a-4f3f-82e1-a49fbe4ccd6f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a420ed89-b686-4074-8fbe-5b03ceed9782"
        },
        "item": {
          "id": "d41513cf-2409-4172-975e-0c0a685ff551",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d7ce1e1-e5c8-4673-9dd8-fefc6677a9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f92e33-f540-41e0-afb0-b105200fe70f",
        "cursor": {
          "ref": "97a10173-1e27-46a1-b87c-4d44c1911324",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ad377b5c-7c90-428c-b361-6432b8b1cca0"
        },
        "item": {
          "id": "c5f92e33-f540-41e0-afb0-b105200fe70f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14629734-35c4-4f67-ab9f-116985b99d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05d29b4-b874-49bd-a2b5-ee3d4064a275",
        "cursor": {
          "ref": "0c674039-ccd0-49c8-b49f-b15a151476ff",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b3f0266a-28de-457a-a842-0da026cebc9c"
        },
        "item": {
          "id": "d05d29b4-b874-49bd-a2b5-ee3d4064a275",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "076b8760-c61e-41e7-bb2e-9a63878c77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab36380-ef4a-42b4-8bfa-3a0d6a523c0f",
        "cursor": {
          "ref": "b6d85b23-51f7-46f0-8c1c-b9fb28fcf86e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1a9513cb-89d0-4b60-8757-4cf0c47d12f1"
        },
        "item": {
          "id": "0ab36380-ef4a-42b4-8bfa-3a0d6a523c0f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "665bafaf-6f2e-4025-b307-f10960af30c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d49ba-3f2b-4c02-8e91-8e7de29b6f33",
        "cursor": {
          "ref": "58b4644c-88d9-4cbd-b45a-89e9f3f19098",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e8a28958-4f4a-4e41-8956-33c75650cbb1"
        },
        "item": {
          "id": "e27d49ba-3f2b-4c02-8e91-8e7de29b6f33",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "222b2b3a-3e38-458e-afcc-e6cca1b6d069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eecffd-7ee7-4012-800a-339c2f3c53dd",
        "cursor": {
          "ref": "1dc75b5d-dc2c-430e-97ce-48a470b95fcd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2ab368df-bcfb-4999-9a4f-777fe12d0947"
        },
        "item": {
          "id": "a5eecffd-7ee7-4012-800a-339c2f3c53dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4fc63847-abc7-48eb-b942-ac80425ddffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f401a7-7f01-4c35-9084-a0157ee95ca0",
        "cursor": {
          "ref": "72a507cc-7e73-4902-be55-b299ed3f5ea4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "07314755-10c8-4044-885c-4f660be208ba"
        },
        "item": {
          "id": "45f401a7-7f01-4c35-9084-a0157ee95ca0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1030b421-0551-4610-bf8d-4afeef73211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798f225f-a3fc-46ed-9b85-a814f7bbf47c",
        "cursor": {
          "ref": "d53f6c67-1086-4795-956a-d1e06f7d466a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0d24b9aa-662e-4a3a-a7f3-73877a92d669"
        },
        "item": {
          "id": "798f225f-a3fc-46ed-9b85-a814f7bbf47c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9db60c93-5a95-4904-a246-93963c43bb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b5ffc-a717-4c6e-bb83-741f5397919a",
        "cursor": {
          "ref": "5936a3c0-f42d-4855-b9a3-ffab55856ce8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7e0e2408-7a59-4e46-bdd8-35dbb41e5f9b"
        },
        "item": {
          "id": "d92b5ffc-a717-4c6e-bb83-741f5397919a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "49d48b92-46fa-475d-9e6c-e86db9018175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d14971d-b7a6-4f0e-b6fe-bea3707b5429",
        "cursor": {
          "ref": "9e3e5103-a910-4d4e-b041-51a4171cf527",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "850ace07-0e8f-4eb0-8651-7f1825511c5a"
        },
        "item": {
          "id": "6d14971d-b7a6-4f0e-b6fe-bea3707b5429",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8f812677-6590-46a5-ba7e-e908c945394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b47a370-ce87-44d2-b8e3-49fdddc0f9ba",
        "cursor": {
          "ref": "b07bc025-0e14-46b0-9383-3a070c391d19",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b9ed0c8f-4b51-4811-b724-e2bc5dc24f00"
        },
        "item": {
          "id": "9b47a370-ce87-44d2-b8e3-49fdddc0f9ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e018794-7f91-40e0-97bf-785453fdae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7ae1a8-34f0-4075-bcd9-bc4f5eb94ed0",
        "cursor": {
          "ref": "33a21343-8d29-444b-970e-95d084ac560f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6dc96a5d-bf70-48cf-8611-e9ae183eb6c9"
        },
        "item": {
          "id": "5c7ae1a8-34f0-4075-bcd9-bc4f5eb94ed0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f4ef5c74-38df-4c2c-afd5-3c71221205cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec31948-541d-4698-9e89-b9b2d56da321",
        "cursor": {
          "ref": "94642a12-a8f0-41e7-a9a0-075b8016d42e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "575d9ae2-b8d9-45fd-9ca1-5ca4bc597cc4"
        },
        "item": {
          "id": "6ec31948-541d-4698-9e89-b9b2d56da321",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c471b045-10cd-4f42-b31f-cbb01e0ce141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac1a952-ec0c-450f-a2ef-68f086f5d5c4",
        "cursor": {
          "ref": "011c33fb-21cd-44f7-afa3-722c6427e107",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "09d9825a-be97-4ac8-a3b1-402815c38608"
        },
        "item": {
          "id": "2ac1a952-ec0c-450f-a2ef-68f086f5d5c4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e5004dd-d833-429d-8560-f58e321d09ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b9776-77aa-4464-af5d-00ae781418ec",
        "cursor": {
          "ref": "6a93d330-8365-4456-9bdf-d48e399e8e7d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a3221c2e-9561-4c8a-9b16-8d560f12850a"
        },
        "item": {
          "id": "2e8b9776-77aa-4464-af5d-00ae781418ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dfb6af13-53c1-4464-b1b5-86876dbc2d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad36dfff-7a45-4e27-8084-0b899bbe78c3",
        "cursor": {
          "ref": "39cf1ea4-29fd-425b-b850-744690383a2d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "63c2a158-75c4-4977-a97a-96c2a9cd7058"
        },
        "item": {
          "id": "ad36dfff-7a45-4e27-8084-0b899bbe78c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df0d67de-08f3-4d87-9216-7c6bdac6c4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0017bad-8dac-4a48-b84b-63c137911237",
        "cursor": {
          "ref": "6d50b1e9-da33-48f5-80f3-0b2fe47a420a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c71e7cd6-e268-4c18-b9cf-28583a897ea9"
        },
        "item": {
          "id": "b0017bad-8dac-4a48-b84b-63c137911237",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d70f7b92-9491-4929-be73-faff3e31176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e66ed35-6a99-43ca-af40-ceab24dfac6a",
        "cursor": {
          "ref": "a969c24f-2d5d-4732-9db3-66a31be60b40",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "213a6e38-ac93-4a4e-a69e-ff2478f9693c"
        },
        "item": {
          "id": "2e66ed35-6a99-43ca-af40-ceab24dfac6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8cb22cf3-9514-49a5-a485-09a73595623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd5fe87-7e29-4c38-a99d-830df9fa74bf",
        "cursor": {
          "ref": "5ed948bc-067c-4abd-b2f4-89ed783aa51c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "539d11d9-b58a-4c12-9d83-29c71b94c20b"
        },
        "item": {
          "id": "9cd5fe87-7e29-4c38-a99d-830df9fa74bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c2112aa9-417f-44ad-a35b-be680d3fe4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e601ad1-5493-42f3-8ed1-93a88cc46de4",
        "cursor": {
          "ref": "a7dbb238-105c-4845-9d5b-b2754dc267e4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "07f040a5-82a4-4d6e-ba7c-25c602989e94"
        },
        "item": {
          "id": "2e601ad1-5493-42f3-8ed1-93a88cc46de4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1ddae31e-a81b-41c5-bfd8-a64ee0556994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489fcb89-583a-4c13-9ecc-d87be8a92020",
        "cursor": {
          "ref": "f45c1d60-1385-42d7-a959-b5276bf9b027",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c5c0d068-3a35-4b6d-afbf-13bf843e2398"
        },
        "item": {
          "id": "489fcb89-583a-4c13-9ecc-d87be8a92020",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91651242-a58c-4454-9671-ad0ca2290002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acec543-f332-4699-a0db-7648f2da698d",
        "cursor": {
          "ref": "62c6d8f0-55dc-441a-89ea-558bfdee5625",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4b987843-cab1-447b-b96b-3ca518b31155"
        },
        "item": {
          "id": "4acec543-f332-4699-a0db-7648f2da698d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "247acf23-81f6-41c8-9d84-112405950870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71146b5d-2bbc-4013-9773-5ee2457686ed",
        "cursor": {
          "ref": "80b23f5c-8f8c-40b2-b977-f72c2ea600ac",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aeeb1d1f-d320-40c8-a3a9-0603c92f76a3"
        },
        "item": {
          "id": "71146b5d-2bbc-4013-9773-5ee2457686ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce7b443e-04d5-4c78-b7ae-0630258d5659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103d11a-b5bd-464a-88bb-984241cacfa0",
        "cursor": {
          "ref": "c8f3627f-d4a3-467f-a2b4-a19d211639ca",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "accb59f9-21a2-4c39-a921-d13b738f80b4"
        },
        "item": {
          "id": "d103d11a-b5bd-464a-88bb-984241cacfa0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ffe9395-122e-45f7-a8c7-58bdf5113b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9397090-c22f-4fa4-895f-27990ca2f05e",
        "cursor": {
          "ref": "b768dda8-539d-4739-a2a4-f5af225562c1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4507eb17-2d33-4b91-8e9f-8dbf4a59b1fb"
        },
        "item": {
          "id": "c9397090-c22f-4fa4-895f-27990ca2f05e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d03d742f-5895-48ef-a505-d70d2da5f0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7e514-94a4-4ecf-b04b-8a2a2a3f5446",
        "cursor": {
          "ref": "d432dcae-80cc-4c41-8949-018e986ece52",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "828406b2-1d4d-46ce-ae9b-cfa11aa9a846"
        },
        "item": {
          "id": "d6f7e514-94a4-4ecf-b04b-8a2a2a3f5446",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91e5f591-65ff-4aea-9c78-7c76a4d200a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895285b0-5d3a-4cea-b69f-0399c473f5d5",
        "cursor": {
          "ref": "4951c741-c485-409e-99d4-dd36457fe0d2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bb8cf521-21a3-46a6-b9c8-722cef7f07ca"
        },
        "item": {
          "id": "895285b0-5d3a-4cea-b69f-0399c473f5d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4e114268-af19-4d83-9004-d0dae0aa1ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aedced7-04fc-44e8-80ac-09a9ff69aac8",
        "cursor": {
          "ref": "7e272cd4-069d-4fa8-b8ea-5de74100221a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4faf8b9d-dfad-4fdc-a957-35e91420e3cf"
        },
        "item": {
          "id": "8aedced7-04fc-44e8-80ac-09a9ff69aac8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1956b12c-052a-4b59-aa65-b9876f9f5d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1f1b87-1d71-4a6f-88c6-2bf9a7d8ba7a",
        "cursor": {
          "ref": "a76dedd3-80e3-4bf8-a58b-88ac58f1dcb2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f135f10c-cba7-4750-8b08-0890fdbf2f3a"
        },
        "item": {
          "id": "1f1f1b87-1d71-4a6f-88c6-2bf9a7d8ba7a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "63d5f5a0-f6a3-4159-ba08-6f8cb4ec2328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b097cbfb-4fcf-43e5-92ff-e4bea000e2b6",
        "cursor": {
          "ref": "83157f52-3ddd-478d-bbe5-abcf8e992c15",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "947f6885-8bd3-4054-b798-b6ecb574d59c"
        },
        "item": {
          "id": "b097cbfb-4fcf-43e5-92ff-e4bea000e2b6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "346a35ca-7b9b-4ebf-9775-35b98a348f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4868af-1f24-4e4c-852c-629e2242d158",
        "cursor": {
          "ref": "df92e4b5-fa76-4b90-b15d-73f9aebe5c32",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "43109539-ff52-44b4-8cd6-a077b7cb2f21"
        },
        "item": {
          "id": "db4868af-1f24-4e4c-852c-629e2242d158",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d3e1994-657a-4094-b271-050d31025c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e99ddb-6192-48d7-b0a7-6bc36f0875b7",
        "cursor": {
          "ref": "e5586e7e-4307-44fe-9166-87c07ea68656",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c71d0e50-356a-4155-8eb2-d12902dc6436"
        },
        "item": {
          "id": "73e99ddb-6192-48d7-b0a7-6bc36f0875b7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8e727134-0670-47a6-8694-dd7c6f50e1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824186b6-5876-4457-ab7e-2776597ef76b",
        "cursor": {
          "ref": "d9c9eca8-8493-477e-871f-08da4f30c7cc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "df6394f3-e3f4-4634-a546-30523fda7f5a"
        },
        "item": {
          "id": "824186b6-5876-4457-ab7e-2776597ef76b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac341eff-2f3c-4b81-a48d-7af3f4591c68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897726c3-e830-4f8b-b757-75ecaa4fa4a8",
        "cursor": {
          "ref": "d2d8ccfd-2cae-46c2-9f31-43c5e9fab1f2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "54c283c6-56e0-4b65-a217-d7b2bad0a620"
        },
        "item": {
          "id": "897726c3-e830-4f8b-b757-75ecaa4fa4a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fefd272b-96bb-4e5b-98cd-73d2aefe1e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f358a86-28e4-46f2-9d55-b79699df1174",
        "cursor": {
          "ref": "eab6b6da-354f-42bf-8405-b14b18f5bebd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "025619ca-29a6-474e-a69f-cc14d89a7295"
        },
        "item": {
          "id": "2f358a86-28e4-46f2-9d55-b79699df1174",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4b34a6d9-d259-421c-860a-65f4c34e8944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de530e2d-a4e9-4939-a5d0-b81bdcab8551",
        "cursor": {
          "ref": "d7f54134-4153-4e40-9d50-867babed3134",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "099a7945-4a4f-43c9-bd95-bcef67142f65"
        },
        "item": {
          "id": "de530e2d-a4e9-4939-a5d0-b81bdcab8551",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c6a57074-0b37-4461-9a76-d60e0943d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6e0de1-2c14-4844-aa06-c0f3f1229da4",
        "cursor": {
          "ref": "0a37299e-4799-4e7d-881e-1acd2550da18",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "14b29745-506f-4ab2-a915-710864eece5b"
        },
        "item": {
          "id": "2e6e0de1-2c14-4844-aa06-c0f3f1229da4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "184adfd8-bd90-4d31-8648-a27f9d3ceb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05b094-b223-4b9a-842d-3c656d210333",
        "cursor": {
          "ref": "130a3f08-b62d-4d6a-86b6-068bc8e681a3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ff963648-cd05-4d24-9546-b8a2f29a7322"
        },
        "item": {
          "id": "bc05b094-b223-4b9a-842d-3c656d210333",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "efa76088-424b-4aaf-aa0c-9fc008507151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cc1013-b6c0-4e7b-bce9-0c7643c9c7e1",
        "cursor": {
          "ref": "033c1554-b7d2-445b-b354-229729311c08",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "26e5c6c3-f494-465d-ac58-34e839702c3e"
        },
        "item": {
          "id": "99cc1013-b6c0-4e7b-bce9-0c7643c9c7e1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "61f37a4f-51b4-40b7-813d-79a3c8fbdf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db90f113-c672-4d2a-9651-125d153e0f24",
        "cursor": {
          "ref": "078d734b-d287-4097-ba44-226848f62096",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2d60b18a-18ef-485b-b772-9a2b2fd33a2f"
        },
        "item": {
          "id": "db90f113-c672-4d2a-9651-125d153e0f24",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "15052bac-ad94-4cc1-934c-4bf747f95986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b2cb8d-ffbe-4b0a-8f3b-b327c416995b",
        "cursor": {
          "ref": "ccc57569-9049-409e-81b2-6ba858be2370",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b173f6c-abe4-4040-9dfe-931111ad7cf8"
        },
        "item": {
          "id": "b5b2cb8d-ffbe-4b0a-8f3b-b327c416995b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "256d71d8-d33d-483d-a9c0-c16fc0486258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bd7da9-ea2f-464a-992b-5e291e15dae1",
        "cursor": {
          "ref": "cce02924-d7d6-436b-8ed0-fb3b8c29e8b7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0b60a55e-6249-4ba0-9364-677e237f8b0a"
        },
        "item": {
          "id": "37bd7da9-ea2f-464a-992b-5e291e15dae1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b6830bd1-0dba-4911-8e09-5227a5044f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4accf667-1611-4bde-b1af-852d5169477c",
        "cursor": {
          "ref": "adeba918-3b6d-4047-a520-c5b91a8a62fb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef13f8e8-7c04-4158-9d5b-782bb5f4bbc0"
        },
        "item": {
          "id": "4accf667-1611-4bde-b1af-852d5169477c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aee38b00-66d8-41d5-bf8d-d2adc50ad3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452da69-ae3e-482e-977a-88193809a2ad",
        "cursor": {
          "ref": "64cfad80-64c9-4e3c-b4f4-067a3a222e9b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a4d8f3f-54ae-4bd6-8cd7-315dfa07be58"
        },
        "item": {
          "id": "7452da69-ae3e-482e-977a-88193809a2ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "153bd32d-f743-43e0-ac78-39b3be200e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fcdca5-eabe-44e3-b4c0-128abb8fad42",
        "cursor": {
          "ref": "1966174e-918a-493c-8d93-c49ae3088f24",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7321a4d-cbf9-489b-8afa-ee159d909122"
        },
        "item": {
          "id": "f5fcdca5-eabe-44e3-b4c0-128abb8fad42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "10a3d100-a225-4d90-8641-9f37839b5361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c95ab69-507b-4831-9a91-3852a996ec98",
        "cursor": {
          "ref": "cff6be1d-dc9e-461c-bb7c-5577539120f7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "685b3f9e-db3b-4a99-bf64-56a60f21107b"
        },
        "item": {
          "id": "6c95ab69-507b-4831-9a91-3852a996ec98",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9104a529-352e-41ba-99b6-535ba85b06b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fdae5a-cd61-4b3e-b5e3-3edf83a9e2dc",
        "cursor": {
          "ref": "ab18634d-17c8-4029-938d-9cec900d12cf",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f9ea5fe7-3a05-4e7d-9a62-40c2a069a3c5"
        },
        "item": {
          "id": "c6fdae5a-cd61-4b3e-b5e3-3edf83a9e2dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "37201345-0d75-4794-a241-ae265c79d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ccb36a-0bfb-42ef-9474-e8b69124fd27",
        "cursor": {
          "ref": "daddfb7b-f509-4628-b094-5da31b5663ce",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8cca6c00-fbdb-40c5-9c3f-6048075e7641"
        },
        "item": {
          "id": "95ccb36a-0bfb-42ef-9474-e8b69124fd27",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "15d2511e-1c4a-4512-a629-b923929152f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dc6d91-67c5-4eb9-9204-a9b2f3dc8649",
        "cursor": {
          "ref": "76712abf-8eef-4154-b902-f913a0a8f487",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f488d7cb-8cea-4b38-9d8f-c109e46bab5e"
        },
        "item": {
          "id": "e7dc6d91-67c5-4eb9-9204-a9b2f3dc8649",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4592a320-752c-4f8a-880e-353c1659362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a031c0-a7ee-4d24-9509-ab6afc579ea3",
        "cursor": {
          "ref": "6cd35e81-49b3-49f5-b877-1f5895510691",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d76fb9c-81bc-441b-90fa-34d4d3ca8fd6"
        },
        "item": {
          "id": "c3a031c0-a7ee-4d24-9509-ab6afc579ea3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "087ef71e-7079-46ce-9208-465c530670ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce9932d-dbfb-432a-941b-85b43e84277c",
        "cursor": {
          "ref": "1850caf5-1d56-42c1-9439-089a0b517728",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "54a791e3-4116-4f1d-a3d5-63cdfc4cfa0c"
        },
        "item": {
          "id": "bce9932d-dbfb-432a-941b-85b43e84277c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "83200e12-c179-43c2-8d9a-39482814186e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa457d91-8ea5-4fc2-a48b-60580fa2d7be",
        "cursor": {
          "ref": "c8ec64dd-af9b-441d-943e-5e5965a31046",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ef1fd06-abd6-4e6e-9417-068284f83127"
        },
        "item": {
          "id": "aa457d91-8ea5-4fc2-a48b-60580fa2d7be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d98fd0a4-bd9e-48ba-8b51-70a323c7159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e42c02-01ad-475c-a234-5fa32bb8dd98",
        "cursor": {
          "ref": "f34dd25b-2ec8-44fe-b61e-91362bb369ef",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a05e69af-590c-497a-8fa9-4c7a535d9778"
        },
        "item": {
          "id": "72e42c02-01ad-475c-a234-5fa32bb8dd98",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4a2c8fa9-3627-416a-b94e-d5c0896089a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c6fced-edd8-49c9-b325-f956d3476b8c",
        "cursor": {
          "ref": "967ced4f-9282-44a7-8484-41c1104c2838",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6779ca4c-21c8-43b7-83a5-022e191eacff"
        },
        "item": {
          "id": "b2c6fced-edd8-49c9-b325-f956d3476b8c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4f8826c3-c8fe-4a14-a5d4-e74fd37fda40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e8f1d-dbc8-4327-a39e-7616fe22748b",
        "cursor": {
          "ref": "64592029-ab68-47b5-900e-6685312fa384",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c7889d7-9c7e-4bcf-9567-d0e2e985e3fa"
        },
        "item": {
          "id": "b84e8f1d-dbc8-4327-a39e-7616fe22748b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f70af854-86a6-4b4b-aedb-5f0d8da78758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7d98b6-3b7b-4a84-8085-dc6f71c0d36e",
        "cursor": {
          "ref": "f7c3bcd6-e2d1-4755-abf1-b928611b42a7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "190e35f7-55ef-4aa2-85d2-c7085241d456"
        },
        "item": {
          "id": "1e7d98b6-3b7b-4a84-8085-dc6f71c0d36e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e1686195-f670-4900-ac05-c9e3907831a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb3991f-1aff-47ff-9b21-16ad9b3ce750",
        "cursor": {
          "ref": "046eacde-3d8c-4ffb-a4d4-384a591795ca",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d185fa82-42de-4458-b701-f97ee5754e3e"
        },
        "item": {
          "id": "2bb3991f-1aff-47ff-9b21-16ad9b3ce750",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cee409e0-ab32-4068-baec-6b6ad8c8a450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce543f10-9995-4f5c-a805-473290b6ccf3",
        "cursor": {
          "ref": "3ac1cb38-2faa-4996-a510-708e94b6722d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "103fed8f-1716-47f8-9146-b2cab86f799f"
        },
        "item": {
          "id": "ce543f10-9995-4f5c-a805-473290b6ccf3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "35e01a41-55c0-489c-a037-5eef1644053e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c32b4d-3db0-461d-8a0e-c9fa73f14e8e",
        "cursor": {
          "ref": "ab52308f-76db-4f2d-9718-e531716bb0f5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dfdfd169-a1db-4f5a-8a19-a4792ef92a19"
        },
        "item": {
          "id": "a6c32b4d-3db0-461d-8a0e-c9fa73f14e8e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "74f001a2-b6b1-47f3-a449-f46999285da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7bf936-e452-4ff6-9114-57eecbed95a0",
        "cursor": {
          "ref": "b38eefb9-af47-4813-9c60-311023ec44f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "17550505-ac26-416d-860e-fcee07be6c43"
        },
        "item": {
          "id": "5f7bf936-e452-4ff6-9114-57eecbed95a0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1429d21f-1a9b-44cb-84df-e04424a0a9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f48ad6-2766-40b7-b381-b38e3cbdc842",
        "cursor": {
          "ref": "13456e38-1e63-41d0-9b35-27f1824f338d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "10954db5-b438-4439-b560-3fcbcae65974"
        },
        "item": {
          "id": "44f48ad6-2766-40b7-b381-b38e3cbdc842",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ee338f1-9762-469e-a1f1-67c965ce3689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64585e2f-d0c1-44a8-99b4-a7207e21e60e",
        "cursor": {
          "ref": "1a039460-036d-4d78-9c20-49b7de17ffde",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "94439e44-6a19-4b62-ab43-4d92508d7d5f"
        },
        "item": {
          "id": "64585e2f-d0c1-44a8-99b4-a7207e21e60e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc0a9a10-fb99-4c6e-950d-a938fe0a5331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dc3bcc-8384-48de-99f4-14e7b448cfa5",
        "cursor": {
          "ref": "ee64ac0c-87cf-41b0-ac69-0ea5053fb254",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a57dbffc-e9ec-4097-8cf9-924970f9c5b2"
        },
        "item": {
          "id": "11dc3bcc-8384-48de-99f4-14e7b448cfa5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1f76eaaa-1e01-4278-8c8f-3a518a3f121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6363c47-68d9-4376-bdcd-538531b9b9df",
        "cursor": {
          "ref": "1dbcd00a-f3d6-40f0-abcf-ea58e2b8b02c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5105f8a5-fe00-4559-a948-ffb6940c5edc"
        },
        "item": {
          "id": "f6363c47-68d9-4376-bdcd-538531b9b9df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f7d44cce-e57a-4a85-825e-5b89ba56701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568163ff-5f3f-4777-9795-f6a7027faf13",
        "cursor": {
          "ref": "fff9bd3c-db39-4878-a019-669e2c4d39ee",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0410249c-c357-4cfc-9a66-8675990f054d"
        },
        "item": {
          "id": "568163ff-5f3f-4777-9795-f6a7027faf13",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "993edfe9-0860-4335-8fca-dc1434669a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f01b5e4-d4d7-42c2-96b5-9b19876b74de",
        "cursor": {
          "ref": "50de5e16-c89a-4f76-98be-46aaf6c96dea",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a88a87e2-4797-4737-ba90-cbbc45a80ea9"
        },
        "item": {
          "id": "6f01b5e4-d4d7-42c2-96b5-9b19876b74de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42d785d0-295d-461e-b059-992a35dcaa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8650db24-8cad-40b4-afd4-32f752a3e505",
        "cursor": {
          "ref": "f9549be6-c7d7-4d0f-9208-8f4d08346695",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "effdaeb2-3445-48ba-976c-9483a462d752"
        },
        "item": {
          "id": "8650db24-8cad-40b4-afd4-32f752a3e505",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2a145c5f-17e6-49fe-9c8a-f22d00211dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd3f4a8-6940-4934-b505-bfe9327388ed",
        "cursor": {
          "ref": "4eb12578-cb1c-48cd-acaa-21296996af63",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50670730-e38b-4e87-b9fa-75a2e9f20cfa"
        },
        "item": {
          "id": "bbd3f4a8-6940-4934-b505-bfe9327388ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f5c78650-82f3-4e55-819c-dd3dbb86a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f384b-85c8-4063-81d6-1c08c57c2643",
        "cursor": {
          "ref": "551d41a0-5294-4149-81bf-da6bc3b4795b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "db8e4609-6ea9-45ff-b714-64772412866e"
        },
        "item": {
          "id": "951f384b-85c8-4063-81d6-1c08c57c2643",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "06211ce7-c8a2-47c1-a0b1-71907f9eb01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3f01cb-38e1-41de-9c88-6be3f0f0fd22",
        "cursor": {
          "ref": "651cf0a1-b514-4af3-b175-12d77a532b26",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ba6ce72-d4af-44bb-b6ca-36c546c80968"
        },
        "item": {
          "id": "0d3f01cb-38e1-41de-9c88-6be3f0f0fd22",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c996777d-9d6d-44d4-a0cd-6a15a7118585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6011a-912d-4e77-b3fa-ec2074825f8b",
        "cursor": {
          "ref": "51096e8b-0795-486c-a8bb-171bbf4a77f8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "39812567-658e-41d9-8a0a-c68540df0ac2"
        },
        "item": {
          "id": "53b6011a-912d-4e77-b3fa-ec2074825f8b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa4f53e8-168f-48fd-a10c-a701607dbdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ea8a74-0811-427b-98ad-2b2ccac1f758",
        "cursor": {
          "ref": "0e59ef45-a1ca-4931-b8dd-58abba1bc6ce",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0d2beee9-d028-4531-8951-23e79a7cf1d7"
        },
        "item": {
          "id": "a8ea8a74-0811-427b-98ad-2b2ccac1f758",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90d269e9-c737-4fef-90a3-f2a57458a761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aa2f7a-4ad9-499a-8aae-73075a89f5be",
        "cursor": {
          "ref": "732bb6d9-8fe0-4481-b008-a4e75018a908",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc8bac98-c681-4aeb-8fb9-066c605e0465"
        },
        "item": {
          "id": "55aa2f7a-4ad9-499a-8aae-73075a89f5be",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ebc569b8-8d43-40ba-bc8f-09533cdd2263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f9e577-77d2-45c9-b0d5-ed881779f69c",
        "cursor": {
          "ref": "c769e013-1937-4832-9b7c-32eb9e316c05",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "73924d89-dea4-4d4f-8198-a6bcbd3a3e44"
        },
        "item": {
          "id": "26f9e577-77d2-45c9-b0d5-ed881779f69c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "99a6ab47-21f6-41ba-8d7e-219d7c2ec837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c314ddd-0769-4fef-9d04-4215be6fe889",
        "cursor": {
          "ref": "fc611945-6088-4b8d-b779-4d30ad5034a2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6c8e2283-4d34-4ef7-a434-2feb75b06959"
        },
        "item": {
          "id": "1c314ddd-0769-4fef-9d04-4215be6fe889",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ce72fc45-9485-4710-9912-e70c85a65428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af466a-582d-4454-ab64-cb7411e0957d",
        "cursor": {
          "ref": "899b46a4-ace9-4a8e-998d-24e40be8b51e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ca52edf6-857b-47f0-93df-07a0bb698398"
        },
        "item": {
          "id": "50af466a-582d-4454-ab64-cb7411e0957d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "27e6e38b-2d0a-451d-b69f-d8198beaf50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31424e84-305f-45e4-9991-16d3a276fae2",
        "cursor": {
          "ref": "febb2c68-4f90-417a-a25c-4bc92094059f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b3fb0b2-694b-4b8a-a9ac-bb31fbdf25fe"
        },
        "item": {
          "id": "31424e84-305f-45e4-9991-16d3a276fae2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7c25931c-075b-4c2d-8b24-470a1e3eee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17d4e2c-8da6-461f-b4ae-b9a64f209457",
        "cursor": {
          "ref": "395a7b16-003e-4ba7-acc1-c3c10c368232",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30482066-019e-402b-b457-8697c5fa5d2d"
        },
        "item": {
          "id": "a17d4e2c-8da6-461f-b4ae-b9a64f209457",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d872e489-8aec-4d67-9284-a352704bde0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f9feb-d515-4e96-bd30-9307a1845d2b",
        "cursor": {
          "ref": "516c3de5-d22f-4f0c-9e13-26b236d54816",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04a5207a-7145-42c2-a3c8-1e1f2f0ef8c1"
        },
        "item": {
          "id": "534f9feb-d515-4e96-bd30-9307a1845d2b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cfe091ea-9716-4625-91f4-24a9e8bdcc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd718e-9cdf-414f-8bbc-87676428c39c",
        "cursor": {
          "ref": "99c67c83-e1ad-4fa5-a9da-b785f1131192",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "96d5f39f-8ac9-4209-b68f-07a20e14e014"
        },
        "item": {
          "id": "15dd718e-9cdf-414f-8bbc-87676428c39c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5eadf63-de37-4412-9ffa-4e89e429ec5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74afbeb0-27cb-4b18-a715-f478a39498b4",
        "cursor": {
          "ref": "84603d46-2566-46ea-be64-96e5534e965a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a6b29dae-2ea2-4ee0-9ff3-e7aab6733cd5"
        },
        "item": {
          "id": "74afbeb0-27cb-4b18-a715-f478a39498b4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f12fb804-ed62-421a-8cd8-e80199a76a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252ea08b-edc5-4c5f-9e00-0afc23ee83db",
        "cursor": {
          "ref": "6ff947ac-31fc-48b9-a613-f0b51d8c0ab9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1c18f74a-1f9c-4f7b-915e-ea643b888481"
        },
        "item": {
          "id": "252ea08b-edc5-4c5f-9e00-0afc23ee83db",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05131403-9a81-4bd8-b468-e51c52973b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a699b2-942d-49b1-8d3d-c712b4706031",
        "cursor": {
          "ref": "17b4ae15-8f36-4131-9768-07c87f3f1bfa",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b64d92b3-a8e7-4b05-9b88-6f0995e27254"
        },
        "item": {
          "id": "80a699b2-942d-49b1-8d3d-c712b4706031",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "83930410-0fe0-4283-a37a-ab74755dc0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f782bd-7643-42ec-a832-7c5d93cdb274",
        "cursor": {
          "ref": "b0ad13d6-2b77-4c36-b944-4a947ec4448c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6696e5c0-eb47-49fc-89f7-7a93471c573b"
        },
        "item": {
          "id": "a7f782bd-7643-42ec-a832-7c5d93cdb274",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6472cd2b-1d8a-4a92-b460-94cba9994daa",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "0ad5d953-07a7-4d4d-8776-eba5c9d46090",
        "cursor": {
          "ref": "08b15775-1aa7-4fc8-a3ce-647c924962a5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e3c33ede-62cd-4272-8b92-240916849267"
        },
        "item": {
          "id": "0ad5d953-07a7-4d4d-8776-eba5c9d46090",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b3e9e0fb-78c7-4205-86c5-e5104afa93ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1a901f-7ff3-4488-a56a-91105c6d29f7",
        "cursor": {
          "ref": "0c6686db-b6f4-4f6b-bed6-530e504f481e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e2929657-f1d1-489d-915b-c7445c9eb088"
        },
        "item": {
          "id": "1c1a901f-7ff3-4488-a56a-91105c6d29f7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d85f31f8-5fc7-4a05-ad80-f51e22cac8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7a06e-027d-4bc7-975d-4af0e8a41642",
        "cursor": {
          "ref": "bea0e88d-5cd0-46cc-bb07-1feba580f3a1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "44d171cd-3efd-4cc9-a622-df539a800516"
        },
        "item": {
          "id": "62f7a06e-027d-4bc7-975d-4af0e8a41642",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f12dd4e1-022e-4b2e-adfa-56b5a8027a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aeb997-8aa7-44a0-bf93-d7eb98f37b45",
        "cursor": {
          "ref": "6825c50a-5fe9-442d-9a91-af3e38c33f34",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fe671e6a-944e-4f14-913f-40f206a2f579"
        },
        "item": {
          "id": "29aeb997-8aa7-44a0-bf93-d7eb98f37b45",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e1360bf-a7af-4d08-859b-3f26b13aab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9a545-49d4-4762-8259-5d960ec6ab07",
        "cursor": {
          "ref": "0d77ee23-5d41-4ec4-a76a-b28971f429ba",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0ac0c5d7-4fb6-4fe4-abbc-ee6a8240dbf9"
        },
        "item": {
          "id": "7af9a545-49d4-4762-8259-5d960ec6ab07",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a1bb0493-ecf1-44de-ae68-22360feaa4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785d233e-598c-4bbd-bd85-f5016714b7de",
        "cursor": {
          "ref": "6a25b960-d2f4-44ec-b2b2-11174ca73b2e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b68e9a7-9697-40b5-b3a7-4880d5ef77e3"
        },
        "item": {
          "id": "785d233e-598c-4bbd-bd85-f5016714b7de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8bb6364-a67b-4492-bb70-73ef2caf1bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b60d8-c211-44ad-ab64-f7f7370e85cb",
        "cursor": {
          "ref": "5d6ccbc8-3645-4f44-aa54-b45dc5619a7d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b81ad9af-0c20-4e6a-8929-158c265fe467"
        },
        "item": {
          "id": "263b60d8-c211-44ad-ab64-f7f7370e85cb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a94511cb-d2d7-4a44-a45e-eab888d404d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d29ce6f-68d3-4649-acf8-17bd52b11b91",
        "cursor": {
          "ref": "bbf68adf-e681-435b-8c26-bced35917281",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "072cfbb3-66e3-4efd-a6fb-8d859417be20"
        },
        "item": {
          "id": "0d29ce6f-68d3-4649-acf8-17bd52b11b91",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bbb02bff-a292-447c-a0d4-b8e8e81a4eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f5a1b-e577-4c3c-8b02-a3fbc22d9407",
        "cursor": {
          "ref": "69eef04d-5b9f-48ce-a376-d4756d3780ea",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5477ca10-8757-4e45-b78a-e74dbe2a384c"
        },
        "item": {
          "id": "1e0f5a1b-e577-4c3c-8b02-a3fbc22d9407",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8d980a84-8cfb-467e-be25-7bd385ed76e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5fbb8-40df-455e-831d-2fd7bf8482c0",
        "cursor": {
          "ref": "376bfb12-fe0f-474f-bbaa-415fd8ff90e3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "320a501c-154e-42c1-9c47-2bbaf481f3d8"
        },
        "item": {
          "id": "18b5fbb8-40df-455e-831d-2fd7bf8482c0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "545bf150-e732-43d7-ad93-a60171ef7e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aeaa43-ede0-40bb-8e50-3a4f8f88cd70",
        "cursor": {
          "ref": "7646c42f-ed61-44f9-91e5-bd6ac845c912",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3404c9a4-7976-4594-9f05-9062673bf7fc"
        },
        "item": {
          "id": "91aeaa43-ede0-40bb-8e50-3a4f8f88cd70",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "118300ee-5028-4804-a22e-a6744ce913dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe3499a-74c8-43c9-b9f4-48bbcd0751e0",
        "cursor": {
          "ref": "94e215b7-92a9-4d44-b302-48199cb5684e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bedbe439-db57-4676-ad52-1131c868f5ca"
        },
        "item": {
          "id": "3fe3499a-74c8-43c9-b9f4-48bbcd0751e0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3c1a38e7-7e3a-4d0e-8c19-670cd5f093e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785da4a4-fbdd-4a11-8fca-3ca926d767da",
        "cursor": {
          "ref": "a267fda0-2808-4012-8b1b-7df0cb32b291",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6bc6fcda-a63e-49ca-8123-8eebea494e49"
        },
        "item": {
          "id": "785da4a4-fbdd-4a11-8fca-3ca926d767da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5bf0cadd-fef1-4c02-a6e1-0cb1f239b451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e0309f-d7a7-4cc0-8f0e-398a595bf3d3",
        "cursor": {
          "ref": "787bde61-840c-4a48-a404-cd319a79a39c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "523f6ba1-2be6-474c-b491-5abfc3d72f1e"
        },
        "item": {
          "id": "83e0309f-d7a7-4cc0-8f0e-398a595bf3d3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "400ee710-7b76-4564-aae3-361697a39f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a215275-43aa-400f-8dba-4ad997d5607e",
        "cursor": {
          "ref": "a83dedff-d7ba-4f8e-9996-a43275cc8669",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8617cbae-7f7b-4427-a046-d0ca3fc01fdf"
        },
        "item": {
          "id": "6a215275-43aa-400f-8dba-4ad997d5607e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6b7cf9e7-9b47-4dc0-930e-0e89ec8e6571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d74f48-5e08-406b-ac4f-9ff0582c985e",
        "cursor": {
          "ref": "fd38a9f0-7729-41f5-b434-39dda400b547",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a579a275-ff1a-479d-b55c-fa76741f0645"
        },
        "item": {
          "id": "15d74f48-5e08-406b-ac4f-9ff0582c985e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83082d7b-2042-43ce-833e-cac2b8661b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7767fe07-aac0-4b10-805f-ff2f5f1f2074",
        "cursor": {
          "ref": "3bdd2ea8-7309-4bf1-8efb-88d166523417",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0be595d1-bbae-4191-9ff9-aa2d279d44e6"
        },
        "item": {
          "id": "7767fe07-aac0-4b10-805f-ff2f5f1f2074",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cfe91fd1-d6eb-4772-b389-786112cc502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1180cc8-4675-4248-aa1d-aaea4c310966",
        "cursor": {
          "ref": "cae0b7d3-b4bc-4432-a4c3-6461359f1a3a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cdf4681b-14c4-43da-9114-c74ca93e0594"
        },
        "item": {
          "id": "c1180cc8-4675-4248-aa1d-aaea4c310966",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d1185821-830b-48e6-bf1a-781ddf959da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941b265-6ba6-420c-8d6d-7df8827078d3",
        "cursor": {
          "ref": "1410281a-055b-4b20-9717-bdf12a9e5d3d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a35c56b8-929b-4f4e-838c-9803a7d688f8"
        },
        "item": {
          "id": "e941b265-6ba6-420c-8d6d-7df8827078d3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bcc99e32-a2fb-4dcf-bb10-1ba693093431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a40ed-3ce4-4e07-8604-58717417015e",
        "cursor": {
          "ref": "b09d810c-1d32-4cda-8937-1ffa2ba04d11",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "79870140-ed89-4246-ad2a-bef99293546f"
        },
        "item": {
          "id": "d30a40ed-3ce4-4e07-8604-58717417015e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c6623dbd-9828-46a1-ac6d-77fac90d2709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826053d0-baa1-4ac4-8669-98119854f2bd",
        "cursor": {
          "ref": "03aaa4e5-5c68-47d5-8358-c4316cd80d69",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7169d050-b31a-493e-9b8b-cb2ce5d4f1e3"
        },
        "item": {
          "id": "826053d0-baa1-4ac4-8669-98119854f2bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c4d994b7-ba2f-47cd-82a7-b8aae1cdfa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4578227-1bf4-43a8-a85f-b97ea71b915f",
        "cursor": {
          "ref": "7ea87059-c67a-459a-9622-f9ce956237b2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "73b8f64a-0f34-4a4a-be59-a855a39c747a"
        },
        "item": {
          "id": "e4578227-1bf4-43a8-a85f-b97ea71b915f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c7664fa-e2e2-4105-8801-8e3cb0293210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c778198-4e24-44ba-95d8-4fa63d184831",
        "cursor": {
          "ref": "4b75fe34-e897-4228-82af-51d889f3b049",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "90f0e0a0-b75a-4f60-82f9-7b4e3094aece"
        },
        "item": {
          "id": "4c778198-4e24-44ba-95d8-4fa63d184831",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d3996a1d-ec50-49ea-8cac-33adcebeab1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89fb518-0b00-4480-9c1d-babc53bd230c",
        "cursor": {
          "ref": "230ca8f5-5625-48db-8a36-ec323cee4018",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "346a5427-7637-4397-b789-ba65a54c15f9"
        },
        "item": {
          "id": "d89fb518-0b00-4480-9c1d-babc53bd230c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47151596-f9bf-4f3d-ae3b-5b89b4c199b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cea88fc-de97-45e6-8fae-630a3ba3b7ff",
        "cursor": {
          "ref": "5786d6d7-9aaa-4bc1-aa62-1cce00822d66",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "14080975-5dde-4353-b59c-36601394acb2"
        },
        "item": {
          "id": "1cea88fc-de97-45e6-8fae-630a3ba3b7ff",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6572bc72-f783-4be4-9f29-b38eced4d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e16b1b-943a-4f7b-a3c9-2bcbdbe2da59",
        "cursor": {
          "ref": "534258a3-fee8-420d-b2e8-4e1102381d49",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fe8bc74e-a043-4a46-a12d-c4487b9b3748"
        },
        "item": {
          "id": "84e16b1b-943a-4f7b-a3c9-2bcbdbe2da59",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d2b1e919-5c2d-481c-80a1-534e5551670e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cc6021-af4a-4f30-9615-482bb6b117bb",
        "cursor": {
          "ref": "3843c679-56cc-475c-9fa7-bd28b0e0cbaa",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a7244c16-74b3-422b-9c70-adb631cb38ab"
        },
        "item": {
          "id": "e0cc6021-af4a-4f30-9615-482bb6b117bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d492e809-7854-4945-8860-8b1866dfedb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3a0797-8d35-481a-8015-f5a2a3c3fb3f",
        "cursor": {
          "ref": "13b451ea-2200-4f19-8fd6-2c1375eaf126",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ac06a870-3f0f-45c2-add6-dfd912409220"
        },
        "item": {
          "id": "bd3a0797-8d35-481a-8015-f5a2a3c3fb3f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8f517fa4-876e-40b6-b366-669c4049afbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cabd5-9250-4f04-b8f6-c7240075be7e",
        "cursor": {
          "ref": "32987cdb-e317-4a7d-8a1e-fbd02c1a119b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "46862ec2-8bda-46d3-8079-dd868fb6da07"
        },
        "item": {
          "id": "563cabd5-9250-4f04-b8f6-c7240075be7e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "30c3578c-a14a-4c00-a702-76886a28424c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adec1738-5f7f-406e-90ea-d3016be3e307",
        "cursor": {
          "ref": "290cc9e3-0779-43a4-bab1-971e2de666d3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dee3a28b-6f5e-4492-8001-3ad66a9fb7c3"
        },
        "item": {
          "id": "adec1738-5f7f-406e-90ea-d3016be3e307",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6b6e4403-343f-4c29-9250-cee7d592f451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72352be-5f65-4009-9842-136b4599568b",
        "cursor": {
          "ref": "ad290348-40d2-410d-b34a-d16b708abcbd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "96dbf450-91a4-4805-850d-26fc94bcf3db"
        },
        "item": {
          "id": "d72352be-5f65-4009-9842-136b4599568b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "42f84f41-64da-48e2-a3df-61442bfaf21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce9ed0b-07f8-4d9b-b5a7-608c719732b9",
        "cursor": {
          "ref": "9b85be1a-1625-4693-a624-4909bc4d6a8f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e44e397-ded6-4841-b0f3-bdbe18383ee0"
        },
        "item": {
          "id": "7ce9ed0b-07f8-4d9b-b5a7-608c719732b9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a50ab7c-dbee-4588-9c50-929ece238a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381c3667-3d29-45b5-8557-29fe5acebc17",
        "cursor": {
          "ref": "0f1fac66-0d96-4d2d-8df5-66219627295b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "517cbbeb-754f-4107-9c9a-d093bd87378d"
        },
        "item": {
          "id": "381c3667-3d29-45b5-8557-29fe5acebc17",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3dac2584-a28a-4fc7-b930-c849a3dee6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ad092-9e22-4d95-b088-913fccecfb1a",
        "cursor": {
          "ref": "59a3e1f1-1bbd-4d55-b60b-3e6df688d949",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "77e3208e-abc6-49a9-aa00-ab042fe95fbb"
        },
        "item": {
          "id": "f87ad092-9e22-4d95-b088-913fccecfb1a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ee3b81c3-9a64-4cf0-bf14-3565e2bb14f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101b3e4d-dc8c-415c-bda9-53124ae7d4e8",
        "cursor": {
          "ref": "d67a4fef-acae-4361-8bc9-2dc3152e664e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b776b66c-5ec6-4e0f-8355-20b53dfcaf43"
        },
        "item": {
          "id": "101b3e4d-dc8c-415c-bda9-53124ae7d4e8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c888e235-99e8-4033-aec9-e1d452dfa430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5804d528-10aa-465a-ae54-cdac9c048ce2",
        "cursor": {
          "ref": "61756bd8-521f-419f-8125-28fae2580747",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4fde1ab0-108f-4f25-ad06-5f4b31040762"
        },
        "item": {
          "id": "5804d528-10aa-465a-ae54-cdac9c048ce2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ee55d432-bbf2-4b57-bc64-5510353cf25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b089b2e2-235e-4d34-bee5-99b4265fa650",
        "cursor": {
          "ref": "20362975-fa23-4622-a88f-75fd73d3507e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4aaedf6b-75e9-461e-8abc-4a646cdfba93"
        },
        "item": {
          "id": "b089b2e2-235e-4d34-bee5-99b4265fa650",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b55d97f0-3351-4315-b5f7-148329ef297f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad164c23-556a-41fb-8e8a-e7d8b42b2cf9",
        "cursor": {
          "ref": "2c9820d6-53a7-4d40-a87b-10ce50436cf1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fa210cab-7c47-4f75-96b4-fabb18a4f06e"
        },
        "item": {
          "id": "ad164c23-556a-41fb-8e8a-e7d8b42b2cf9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "500aaaa2-ee39-48f2-92f1-5eefce3d3224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871810d0-f789-46aa-8b6a-3976a61df3dc",
        "cursor": {
          "ref": "8ecc4822-6b0d-4b70-aa17-67780284e5d7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7b5eb19c-9996-4a42-b7c2-58ebdac38c14"
        },
        "item": {
          "id": "871810d0-f789-46aa-8b6a-3976a61df3dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f6427f3a-7758-4aa2-9ce9-a57e9b714b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00de25ef-92ae-4e1c-b1e4-ad65188760c7",
        "cursor": {
          "ref": "c132ee7a-6790-4666-8cea-e1de9684eb3c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d2af0ca-e73e-4c71-8dc6-e9c5d06d240b"
        },
        "item": {
          "id": "00de25ef-92ae-4e1c-b1e4-ad65188760c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c41da925-931d-430e-9428-369c7c1708ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09a9860-c26b-4913-9b6b-0349bd470952",
        "cursor": {
          "ref": "29a76606-60ac-4880-9b0d-5ab11064cbf4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "72325471-f423-4f30-8445-e234cf9508ca"
        },
        "item": {
          "id": "e09a9860-c26b-4913-9b6b-0349bd470952",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5de916bc-10b7-45d4-9c3f-e2b7a05c4521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef4cad6-26c5-41be-b6b6-dd08b88b4c60",
        "cursor": {
          "ref": "eca58a9d-865b-4511-9c9e-e9a6a9ff67ca",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2fe6dfea-9f47-47c5-ba28-b4940dcc0788"
        },
        "item": {
          "id": "bef4cad6-26c5-41be-b6b6-dd08b88b4c60",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "60d9c0a9-9bb2-47d8-a1b7-7509c3e87408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4e00e9-f35d-45dd-80d9-58994a80c1d3",
        "cursor": {
          "ref": "84e309b1-d217-4d52-84c1-dcb9a1f156f7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "06321925-bf21-4264-b664-9bf9d9ed65f1"
        },
        "item": {
          "id": "3c4e00e9-f35d-45dd-80d9-58994a80c1d3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b2df6256-2d84-4d39-87a3-7b9347e266e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b85636-efca-4578-ae21-8ff6bec33279",
        "cursor": {
          "ref": "857dd070-4085-49c9-8f8c-bde1a56a4415",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7da46eca-ce5a-4292-beb5-e971fda5daf6"
        },
        "item": {
          "id": "27b85636-efca-4578-ae21-8ff6bec33279",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "39722b79-f57d-4366-a198-8a738f556122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6e035-445d-4875-aeda-5904768d77d4",
        "cursor": {
          "ref": "d5b379a2-9413-4c7e-ad91-a5a95a80360d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "50e69881-9731-4cb8-ab90-eae66f23edba"
        },
        "item": {
          "id": "cdc6e035-445d-4875-aeda-5904768d77d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4d9588f1-a37e-46fe-8d61-f218618d4b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f76fd83-9d8a-4b3d-89e6-5f584f879ed4",
        "cursor": {
          "ref": "fda9af45-ae68-4db0-af4e-ada986708862",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "13f9b142-9749-4369-9434-0961edb142b0"
        },
        "item": {
          "id": "5f76fd83-9d8a-4b3d-89e6-5f584f879ed4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fbf21c76-1b5c-488e-9ade-e362537292b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa8cd81-1e4c-4a5a-a1e0-6a05e11588ca",
        "cursor": {
          "ref": "8a692915-5890-4ace-b6dd-523fbe70fcf2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "33ca7876-986b-4bd6-a385-21426c2ffb9b"
        },
        "item": {
          "id": "0aa8cd81-1e4c-4a5a-a1e0-6a05e11588ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "38e3b771-eaa1-4d09-bb5d-83f0d89510ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b4465-28a3-48af-9c7a-0ecf4dec9d28",
        "cursor": {
          "ref": "b432859e-6d36-4058-9775-e7fbad5bd015",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0dc28519-edf3-4214-bb98-6db94cf8da7a"
        },
        "item": {
          "id": "145b4465-28a3-48af-9c7a-0ecf4dec9d28",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f97c17d8-f319-492c-b825-c1b5acea364a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d43dd42-e370-4d95-bf3c-de15f86e3c9d",
        "cursor": {
          "ref": "6877f7e3-44a7-4223-8850-6062ca610e00",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64f6729a-13b8-4a13-933a-bd9597343990"
        },
        "item": {
          "id": "6d43dd42-e370-4d95-bf3c-de15f86e3c9d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a6d2b118-00fd-4cd1-9406-bef2649bde60",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad89f75-924d-4909-997f-22af673e813b",
        "cursor": {
          "ref": "3967def5-86eb-46b6-9abc-32d647927d5b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8f8ac009-4ec8-4146-8098-3a81cdd3672b"
        },
        "item": {
          "id": "9ad89f75-924d-4909-997f-22af673e813b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "54a88852-6869-43f9-8db1-d80985d527ff",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0a99e0-f0ef-4f07-b358-f3a83639a758",
        "cursor": {
          "ref": "02d0cf1b-910b-4c85-81c2-7cd68e2205af",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "69db0098-8327-4b3d-a322-3536412836bc"
        },
        "item": {
          "id": "9d0a99e0-f0ef-4f07-b358-f3a83639a758",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "545d0de4-91b3-49a3-b2b9-a03beffc7b34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0a99e0-f0ef-4f07-b358-f3a83639a758",
        "cursor": {
          "ref": "02d0cf1b-910b-4c85-81c2-7cd68e2205af",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "69db0098-8327-4b3d-a322-3536412836bc"
        },
        "item": {
          "id": "9d0a99e0-f0ef-4f07-b358-f3a83639a758",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "545d0de4-91b3-49a3-b2b9-a03beffc7b34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b55315-bc52-41e2-b9f3-6333e5cd6026",
        "cursor": {
          "ref": "22d40c24-5fe4-4b57-89f9-4caf821bcc0f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1c30825f-255c-43bf-8e72-aab88a6102cb"
        },
        "item": {
          "id": "f7b55315-bc52-41e2-b9f3-6333e5cd6026",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1043882-0871-4589-b768-835e998c4cc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99861cc8-5e05-4f6d-8eb2-c27d35baf7af",
        "cursor": {
          "ref": "4b71f1f5-94ed-4eab-9998-62c4e4b797b8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f6bd9e27-83aa-4735-b959-637534ae7121"
        },
        "item": {
          "id": "99861cc8-5e05-4f6d-8eb2-c27d35baf7af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e010a443-a8ca-49ea-80ab-94cb7dc52073",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}