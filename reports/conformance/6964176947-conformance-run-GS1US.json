{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e0b51e14-c0ee-4955-a3ce-bf236aee12b8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ca99589f-df8b-48b8-a836-3fb8a9b1de82",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "558d4ac6-0c80-45bd-925a-4381bbe3c19e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26a1f272-a9bb-4e88-9b13-fe845763be2a"
                }
              }
            ]
          },
          {
            "id": "b3a80f64-d147-4574-a798-81ce4f6cf559",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "491bae2e-6f90-4022-b690-50c74ae7d2dd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ffa7f68d-dd16-43e1-9147-8f63d92f768b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed91146e-8380-418f-b126-72d981b9c863",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8cc681bc-4789-4e05-bff3-128b86624bea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b384355d-cc19-4a1e-bf3b-13723ce12237",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83a730fd-819d-4d1e-8574-ca660fd3f36a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db8698ac-ee0e-40ef-b708-9c55acd5d32b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba68f1fc-9f1c-49b7-b135-ed98d082cda9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84e5ceda-9117-49af-8c54-875c1338b585"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0927135a-d05a-4fbc-b34e-58b21e2efa66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0060afbf-e983-4cba-a969-f7bd32590a09"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d072297-334f-4c64-9dee-a48d85d5d16e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2337c3de-ffd0-4d1d-9b61-7d377705c70b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9489b492-1aea-4209-a9e8-4906184932ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "227ff69c-bbe1-45ad-818e-b788226d315c"
            }
          }
        ]
      },
      {
        "id": "e2724f53-3b7a-4591-9285-2db2e61a2bf5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb932c89-cfa9-43bb-86cc-ff4de9f17036",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c0db54e-c2c8-49ea-b980-0c8392c34cb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd709139-b438-4c3d-ac27-39080fd956d0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dda19b-2ad1-421a-938e-baf4ea6ed841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65a94806-0dc5-47fe-afb4-0498eab694ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1965460-1cb6-4a3c-b0eb-b9c93fea14df",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7233d261-0fbc-4080-ad9b-d08cec7215df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1634c549-4db2-4e15-a3dd-11b9932f1643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3317c501-e5db-4c65-aff2-c3f9f669c498",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e0aeaa-5a55-4823-bb1c-ceefb636cfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b32d472b-4d83-4aa1-ac12-48b89f9442f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c4c6a04-88e8-4dd8-9ce6-ecafd4747cff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a58dcf4-5ad7-4a75-82f4-08d05e7a9251",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fef1ad-5728-4240-9bb2-ea6105eb153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55adcb21-f50a-4bfe-a20a-fcc44ee3d9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a93b07d-0120-45c9-bb1c-90d20df21276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7776cb9-5d3e-4686-9f31-bd98ae4aff1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2555afd5-8151-4f8f-97c0-99401cbe68b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab93228d-0f39-4703-a9e6-e71dd84e0be5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a669185-2195-46c9-84e9-0a55588b9f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6fbfa6c1-7465-4841-b91c-0a98a41a7190"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7960514f-8813-488d-b0db-db8058d950bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "360a68d1-5a5b-4162-a810-aff256481c27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0b0b422-b1da-4a45-b2b4-f297ac824947",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6b06e64-2bc1-4bab-8eff-0bfe0459e311"
            }
          }
        ]
      },
      {
        "id": "6b730cc3-8fe7-40cd-98b8-34224fe4df3e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7af39277-b85f-43a7-be6b-df77b501f469",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7b8529f-ccb3-494a-8423-efa176caf334",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a884488d-0fb6-4b2e-8dc2-1911e0d45281",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253a5a30-7212-4035-932c-df0d00e00c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fcbf7a-7d10-4f5b-b532-c5597a8e28bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de973681-910a-4ad0-9b48-83ab75a68b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ccdc84-6078-401e-807b-95e4c49ac6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae5b56-94ac-4470-928e-fbd3b4d048de",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb7f2f4-2308-486a-9e83-45e05cb673da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce5930c-5fc6-490e-a8c2-e59d219672b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccba842c-370a-433c-9059-e7a4bcd66bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c005c2c9-b126-4bea-a5cb-3db7ff841e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c758bcf-3beb-413e-bc22-95ce1b5a670c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9868b4-fae1-43a3-ab08-daf12febe136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f94878-6421-49be-a4bf-80f6c68d2c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3dad0d-4ef0-4afb-9ee8-01332f2b6bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45ef4ef1-a2cc-4f85-adf3-6a0ef0deb956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573f3da6-deb5-4669-b64f-563745c8c5a5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78d17b-72b6-4e2c-998f-7820bdbc973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cf2f32-d8ce-4842-a6f2-66de21cde73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c13c8f5-3e18-4895-a014-95e558edfda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e86bdaf3-7160-4fc4-9c91-45bfee309f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc644e-74db-4403-8a68-4e1b2c5d59e9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f72a90-0d3a-44cb-9ceb-9668aa73d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d61feb-5777-49d5-a809-a22d4b7d7281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c6175e-398b-4d24-b2ab-6be2210fca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c624a119-947a-4b6e-8f0f-e6e8f03f9a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cc32b0-67ff-4dc5-99d3-f7d80e2d1bbe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db153366-b1c3-426b-b2dc-c1b3a65e4a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21300c27-612a-4373-8bc3-a0c3707c5cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1394d0-40c5-4940-b561-59a33876f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea695e6b-6e4f-4417-a0b9-93ac0e72d801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f610e-4e18-4d83-9995-2b935c27b1ab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86fe610-01c0-4ee5-a97c-04cd485a5e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c49a57-80c8-4c93-96a5-fbf94ef9c4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473d1bf8-0bfa-46bd-a2b2-75495130ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b609717c-e06a-4feb-afc5-89d2b687c53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132443a2-2346-4bf1-8a2f-1acbde20241f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f99990-3464-4c9d-a2bd-b6f927ce1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6751dd8b-78a1-4c94-8159-70741e3b1a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adf9f7f-9a3a-4682-afaf-c548a64d5028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b885553a-6c6e-4c33-bbc2-db58a8b7aa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6783d7-d931-4bba-addb-887dd615ce2e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04f5b4c-fc2d-44b9-9022-e1eb7dfb903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949dd229-993a-4271-a334-1d825ed8eba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf49d217-afae-491e-98c3-1636129f8978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1303285c-54a6-4578-82ab-d7ef3e361a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e52e7f1-8116-4537-9b68-fb675b3860c0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae78960f-f248-4b24-8666-b48053f7d48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71f0004-bd32-4e14-b3bc-7f2fd683f7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4860cc5a-74f7-4153-870f-91937be5724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a10c54-40f9-463f-ae01-68bc098905b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761daa5e-d84f-4bca-85fd-b4eabfafd481",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e5d2b3-1795-41b5-9793-b5c9503965f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580c2963-c716-4453-a263-fb39047c80ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f521cc7-6aae-4071-9890-84f3adebb91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4838dfac-87cf-4121-a314-d4c337492ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb96386-6db6-49e8-92b6-f2c495cd6d2c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1174960-c0dc-41cd-aa00-29a319be71d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0bca9e-8a90-4ec2-a6c7-b99143a5eeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee888e4-646d-442f-a367-b97d39870e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e14d879e-f643-4fca-983b-8a9fa0e528aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d760a2-e720-4abf-80c0-6b1575661231",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f91b50-cc99-4f82-946f-db2316637f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71ab6c6-258a-4b39-b5bb-ea0f624d49cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c9b54f-cbde-4e7b-b70a-bf394fe75816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cda7f3e9-5597-4976-97da-b7b5330f165e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27043450-eb39-41e4-93c4-b92d0f0c8b70",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6461be0-e9ff-4588-8b7f-324209841231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9513c2-7244-4f20-acef-6405ef869aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f96833-cc1f-456f-881a-45f68abc40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9122c456-ba4d-4fdc-8357-77ad0e63c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efccc190-1e05-4bed-8a37-d57f648aa137",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8050663-32b1-4437-b3ae-bd8f5d98cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4e68cc-fd09-45f5-af78-89da9ed73292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f294fc3-4bd3-4016-97aa-e0f95fa96d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52faef67-da05-4807-8838-df760cb61d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c024ab1-1c42-4e83-a779-52b3c1c33317",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd9ef2e-cbc7-42e1-8079-fa2783d3f0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c99ed73-2b1f-4b92-b94a-ec0159579790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295c3744-c4b0-428e-a872-e0a597357252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d300f72f-14e1-4c9f-bea0-d932cd980a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f47767-3214-4863-b3b2-3a4f8ddae276",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdba18e-5ed6-4366-be11-838f223d27e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e31e8c-90a9-4e42-8960-d0f6e327d012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3d7d1-9846-4dbb-ad1b-441bb8e4e0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b9ac72-6b68-406b-86ae-eeaccfb992c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf240e9-8ffd-468e-8437-42034efe8c80",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef70aa82-5fb1-49b4-9d4a-fc08ac028125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e339f3-dff5-4b90-a961-bf8518eede3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478b83af-076d-478a-aa20-488e8b7ff1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6c4560-6396-48d1-a565-ab7e2f1c1084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74b72e5-4bca-4b41-86d0-018404702ce4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22efed9-a804-4020-8f82-7f77d74af4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ad2432-5629-41a4-aabb-15419901e66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc3805c-3a4e-4c25-aae6-cbc950f6bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ed929d-f397-4a9c-99ed-5952894ab59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e1f2d5-5c44-4c22-8281-de296102f6f4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1de42c-6fbe-4d08-a0e6-09a595db670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b266483-9345-4ade-8b6c-1cb9b21ca1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ada0b-3d35-434c-9c14-7de938585b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9313a86e-e9b7-4d99-bb37-2a037255d6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f836b78-06e0-456e-a6da-a6e15b15fb46",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7f7083-14fc-4801-aff9-a4be7c351751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ac6d79-98c3-4bcc-be4e-5b18e1c7ba81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1994b375-18cb-4a80-b9a0-cf2d429814a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2eedc94-0739-41ba-be15-cf90e6210dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea0cae3-a2e8-4e16-97cf-9d4241e12a9a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e29d3-b150-492c-9b9f-5cebb362bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19837196-0827-4049-9773-fc2099ad4cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190a5ece-e31a-4e93-ba9d-18c1be673093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4d1195-6357-4f81-9799-0affdfb889e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406d8117-b480-44bc-bbd2-eef862180b6d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8ca8de-58c0-4f13-af85-48b406427eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f432436-a673-4839-b083-b296347eef4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2389a856-12b7-4358-ada7-3b103c272d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6284866d-d093-48e2-9115-fe065c6ffcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ee321-0d4a-44c8-9c2e-34326f2199ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068d0d7d-c81e-4313-9cde-8853474c14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc87111-1e2c-47b9-b80a-5fde0b725dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e606b4b-9aeb-41e8-ba35-6d5cb3ba69ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ece24a8-15b9-4f34-96a2-5d4e05e0e146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0caaeea-425b-4eb3-b3d3-f550e79ff523",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b34de0-1cad-4243-80ba-f12facb18a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b36810d-864c-496c-ad40-e8ed8095b681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9f291b-157b-4c87-8003-982e36ea7c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ffac44-29e3-41af-9fb2-fd3758e6bef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d426986b-bb8c-47de-9d7d-6610ab720b31",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd413647-dbf1-4505-80bb-0eb7fe34b0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6c214a-9a86-4cd8-96e5-ed87bb451594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49bb68a-c58b-4786-b010-c0372165d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c710e3a1-2b61-4a09-aeb3-63d69350a4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1e74cc-284a-451a-80c8-c0c6988c448c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15efad90-3e49-4eec-8e30-ede99dc3b33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded2658c-659e-4b1a-b462-85d531c58fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c134426d-a0d4-4e8d-9faf-65fad32121ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62663e45-6528-48e3-a610-47f15ee5133e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaa5327-7432-42c3-9f3f-021446669930",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11234bdd-ab4d-4f1e-87b5-58c2a6e9607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf7ec4c-406f-42d3-b6d0-10049d44308a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a5f6d-2564-450a-9cfa-cc646b6c9eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "711a3c9d-a32e-46f3-b3be-1eb8c54f036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abc3dc8-1635-4bd5-af31-928b71f97074",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0e197b-f4d8-4bb6-a63f-708282ef1b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095b5966-274b-4553-b1ca-36460e4e168d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d9ac6-2d6a-4710-9f9a-43b73702af4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c535e2a0-32c4-42b1-96f8-878aec0290c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54a68f7-7bbe-43d3-ba54-da9287d92694",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10989c1-d3ce-458f-b505-66310d8680de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ed58af-b3da-4b7f-a621-dce188e62af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa7a05-fc67-45bb-bc33-15ae36633c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a92184-ca45-4b4b-b8be-0629bc11c154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65159f4-c85e-4eff-8046-bcda4c566675",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50faa706-f7f6-4367-b2be-1520bc32fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44230678-3635-4f3b-9ea8-541c11f8e34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78167bf7-4850-4a89-bdcb-9ca7283b9eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58be58d-20d7-4a58-80a2-1d81b2a5f124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2bcd51-c6ea-4dd0-b2a7-fdb46a132e43",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd3c790-6df1-4fc4-9ecd-cc530059b853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f222f0-dacd-4774-b330-54085ea63f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16495d08-9b72-4e64-b916-19bcd3695f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efbf15d7-f667-4c3a-a261-747d7c97f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac39dcb-ebe2-4f49-9651-302281928aec",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e82a32-405a-4ea1-bf32-c39e0ff2aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9279d4d0-649a-4932-ad77-a8173e8f9a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb3c252-c4da-4af1-bf15-8f84a3b54038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "902cba36-eec5-4d97-8a9c-b10edd41fd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d65fe-5265-48dd-977b-8f21546daa7b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c7587-bae9-4c85-b52e-7ae0173f518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48447b85-65be-4bf6-8aa6-b94ebae9f882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de550b7b-4eee-47e7-9a3c-855c0bf4634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e902a6-7bcf-432f-9b7f-05c586cbd5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818002c7-cac3-41a5-947e-7e6f0182dff1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f9dc31-3ccd-4a26-bbc0-5b7fa223e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901fcfab-2449-42e5-90c0-48a5b4656b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d12946-85dc-4e67-bd76-616a8fc09d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc8bc54-0411-4b2e-ac9c-0dff1e12d512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3fc1c0-99dc-4c47-8874-59b71fcf3473",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcd0101-f6f5-4fc4-b0a3-88f5b96340e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79692586-912f-4019-88f6-3b4b0457704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a8a892-33a4-47e1-b546-217a4738cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d91ca059-d7f8-43b2-ab64-e0cfe38a2c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e3fa4-f9d3-4453-ba3b-92bd5710099a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff469d70-db32-4cc4-a199-95d0dc5e3b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ea9e94-42dd-4b3a-8b89-5eac121e7ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbe4826-58fa-47a3-b749-a32ef61f84d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab844f4a-9f88-403f-9277-3592c04072ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4da1ae3-6824-438b-b8ff-88a1d6c11905",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f57111e-7a2b-49ab-bb80-9d1270a6631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16286a41-3d81-4aad-b41e-c863c5bed84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5f1ef5-236f-4280-9907-9fc2daaead2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f1649f-cb8f-4cca-b255-3afc51dba857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b79dc8-f474-4f19-b85a-8a4544590143",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c845f4b-0921-428a-8e56-b9cb752ba264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7e78b5-2d7c-45ab-900d-d929f02c3232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af663a51-3f8d-4dd9-8aa6-2141c0bdd518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11fa3d61-d722-48bd-a17b-0e1efa60e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d03a818-08ad-4eb4-b534-770b0dbb19e6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a0d39d-de2c-40fc-ad3c-3863aa720682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fbb2f9-1ea3-41ad-9510-b978703cd02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c8720a-c14c-4bed-912b-435849191abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b0d82a-f5c8-4b6b-b52c-d10d9ab33d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4ae3b4-e010-4997-96a9-3b40b7f6b520",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda19de-dd30-4db4-aed4-1ebd6b706a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39507f17-12e4-42f2-9197-6e7021e6e1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8951ff88-1f53-49ad-8d78-eb93ff03c273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05c3015-fa81-47ab-839f-7af9b1df49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49b8e8b-b1ff-4830-a5fc-c072f38837c3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ad6931-4ede-471f-8b5a-6298c4a916c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b80b12b-3d23-4e74-b269-7bebdbd5bd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7b051c-371f-495a-b466-ed499485b75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cdc34d-def6-4ce1-92a4-150ac1caaefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e7802a-77ba-453f-b0ff-3febcac81375",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9687d63a-3dbc-4da1-b3f1-d7b418162cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bd9b3a-b763-4057-8860-0d3eebb37442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d758ed-fb6a-40ee-84a3-6770fe6548d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce0e404-7b6e-4aa1-a7f6-7358a591e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8537acba-bb96-483a-a167-2fdeb0b1a936",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b750c84a-e526-4e3c-b564-f7cd2798acbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc2c7b8-c4cb-4810-9623-259a75214186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99833fd8-a1ea-45be-b6d0-9063e2c220d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "70941107-5ecd-45bb-8929-668bbf1ce889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14e6f4-8592-4ca7-b2d2-5636642f82d8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f445720d-9ab7-4d90-8087-f0290874def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023c5dfb-a2e1-420e-95ea-7e4e48b6d672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f898e7-8bc2-435c-9534-78f8026ebbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "501976c4-ae9d-432a-89db-f57e49453d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e82a4b-4456-49de-981b-22e1bdc58466",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f504aabd-fe4b-4a6e-92aa-6ba18baab0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b5e8f-e4fa-499a-934f-10e25e794ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e46840-5793-4a61-ba50-002e56e14b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3daa9b3e-636f-4f8d-80ce-867a4e2c1588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a336e005-d2a9-4fbf-b1da-7b5e2eec03ad",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b11caf-08ce-44b5-a860-49faba6f15c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5c7219-544e-4b66-8652-778c87bf5a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fdee47-4df7-4d2f-bf69-99ed148acb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28c2194-fad2-43a5-beed-e72abd0f3f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c2b01-4a4b-44fc-989e-5cb691f2b382",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59eab99-703e-41fb-ae79-deddfbd1783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f81d9c-15b9-4975-97e2-d6c99db5105d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ae685d-9b64-4eed-ae05-2d821e6ebc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc280508-371d-4bfe-8306-3f4758ca4725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22f2173-ff7b-43bc-9ae7-868aeeac20ba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f72c8e-57b5-4326-9da4-b4ea404fd6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2450796f-66c1-4445-9a9b-0b672e2d9de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51afd17a-efad-442c-8598-f0788b5f6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5374f0-3900-40a4-adac-44b0c51de09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b6435-774a-4a6e-9248-7aa0c482e985",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeb3da7-3c6b-473a-8569-401d13a7f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c936d07-6396-4669-84ba-c3bcc8ecbfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f510cdd-192a-4f36-9048-20bcea9c71d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "277bf52d-a8ea-4c26-aa0d-10e1718ee2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d15024-2c8e-43e7-9856-12c24b81873b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba296d6c-d0cb-4986-a8c3-1e97c7d67ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58403d6b-e996-41f7-ba67-c552ac0077e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50992ef8-b66c-4151-b78f-0cfe2e2afc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "27dd0530-9894-4f7a-a217-a207269e95f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b7d4c2-0af2-446b-92ca-2cbb20c0bf19",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f688c87-7282-411d-80f3-2affd04bdd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1534860-62d1-4f98-b1cf-0735adc7d92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0738c3aa-5f48-432f-9616-96efbdcce5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b445c41-613d-493f-87ab-58849f26b41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ffc3d8-2ede-4292-932b-6c17d36dd0c2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3896e2-8e78-40c9-8b49-45e8ec296cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f322dd2-384b-45ae-b72d-ce8f2ec0630c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab006770-3dc4-4707-8ad4-17f5ba7d3dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "111bc092-3305-4f05-a64b-f98b9ee7fdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d3f92e-f515-4c68-a7df-339c2159471a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1764e033-18b5-49d3-87fd-83f5b8ac2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142aa323-9be0-4597-8b93-6fca428e7683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa48c087-af1c-40f6-9391-945ba56e6beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee11e20-5db5-4d11-8780-f4c44827232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81590225-4d7f-48b8-9c9b-f73b0ef6e7d8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ef62a4-4c56-48e5-aa1c-47eaa64b706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c06a2c-d440-48b9-ba2c-3a429825b32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f142c042-e14a-4b74-8cd4-86f6997cd340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb183f0-2ad6-4bd2-b26b-58e3b568807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4496cbbc-d929-4a19-bc9b-5c963a28055c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fc4b3f-7047-42ad-b2e1-665a928d7cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78e29fd-f1ed-4cc5-b1f4-1ea09d5a82b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d63a0-2043-49bd-bf94-56115ff9404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc2b2f1-138c-4b77-8358-626ebc6b3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcf9b16-389e-47b8-8107-9262080fdd7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d7460-e9cb-4b97-b192-0e534c05f373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c74013-51ea-4c5b-9de7-7617d49eb744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c79259-830c-4338-986d-74439659ee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6527f5-f25b-4b58-90d9-ffc5bd825521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a49980e-a646-46b0-bade-add4b2c17960",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7995b0e-81f3-48eb-90a5-07096f667480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999d30b8-c9e4-4df7-a463-3e2fdc5553e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1a642b-f6d9-4505-b893-bcd37954d0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47779f70-db7a-4b47-8284-146563e27d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f417313b-bf9f-4445-935c-7be324a46aa5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311a2e00-b9a9-4b75-aba0-9709616e86e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6d3db1-0dbd-4ea4-90af-f35ada39100b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a0520c-071d-4c57-9ea9-c1e2847ec54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0235332a-fcf8-498c-a91f-aafb7460de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025f15d7-f1e9-4330-b69d-48d8a5d46285",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84edc8fa-dd20-4fa3-af9b-1cdcfcab2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90e95c0-6686-4e8f-8c2d-89c9fea29b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416efab2-609b-442b-84b1-59740779f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8063be14-a35e-4dcf-8921-179fe829b013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d4e643-9498-4b54-bf2e-5fad0a2f801f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e8f8c1-38c5-491e-898c-a13c9d30c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aed253-8a21-46d2-b7fd-c94c0cfb116b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bbe1d6-8d4c-49db-a657-9e22bffc1e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "104a6536-d2c3-43d8-986e-e74976ff31d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a2aee0-f006-4a7c-8b78-1dccda067c18",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7310ec33-11ec-4bed-a6e3-341fc61d292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01487f1f-eb63-40b0-bbdc-7c900bcbc891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f692a8-fd9e-4647-9281-9da2bf4f90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de91b76-cf50-4fdb-b4d6-a5e4829f6e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9b6def-7ce7-442f-b990-0e4b591f9b1b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a344ad0-c458-4621-8ac1-5afef201c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a0fa5c-3f22-463c-9fab-e69829dc372a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc0376b-d260-41e8-9cf1-3525537ec38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c940ece8-06f5-4f5a-925c-0ee97e38a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e3528-f599-402d-a736-064358e6a3b4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dad945-9f21-43a5-a163-6cb400172e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4e5659-0769-492e-858e-1b33fa909140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450ec8c-5823-4bd5-a16c-e573bc004c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28f9590-c2b3-49e9-98b3-49a29e7d6a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1221c76e-d550-4869-89e5-481d2a102a5b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0a9b5-cbe1-45b1-acb6-c4aef76d6506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b922c5-0bfe-4caa-9cb9-2bce9ba0ec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63260896-5695-4288-a35e-bae22e846f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edd35d8f-7706-4df8-9289-818bacd217b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c263d6f-99f8-4c2a-8c2d-d8064ff9145d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d71109-6a82-4a49-aef5-c7e10e735c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05ac60c-8f61-40a0-98e4-87b78ff88669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c848c6ca-0cff-4ab9-8cab-e1c1285cc8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa71706-9f93-4b1c-9d4c-3b34414f4da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592db44-fd52-443e-b823-7d6ad04ff5e7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fecc70-1a9d-4d57-83f4-5980937bf013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc4e8f3-f9e6-4e8e-994d-ab8366bcd62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce59922-1f6f-4b54-817b-0a4e6011a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5587a82-993f-4ff5-b605-a27d8046d200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935d697a-9a19-497a-b309-151cb8dabf0a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283f3f6e-8add-42de-9c7f-31f2c679a767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ff087d-7fc3-4d3d-a6a7-562cc295cc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed48c4a6-8b45-4397-b091-d1278c8de6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3866daf7-c29f-4a11-a289-5284b87b02b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4ad808-318f-451c-9658-ee19d102103d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8b383c-0d35-4ba4-9e02-f3cfac1b24bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ec1e71-781c-489f-975e-eca7ee983eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b86d5-057c-411e-8f55-27f407054b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80a9453-326e-48a2-ac51-5881e61ba683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ff1e2d-ab22-41c3-ae71-74a868dee808",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99aec810-8ac8-4534-b87e-57a02de1b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e23e25-5d0d-4467-86d3-a660549ff02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac5510f-b175-46cf-a760-a9824672d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d337d80-0a67-4dcb-9d60-571e40800a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2663d1-f3b8-4dfe-bb2d-326059220694",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105983d5-d770-47ed-8839-c88f9b8a8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1171d296-316d-4790-b4e7-fa031ae98658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b072ed-01cb-4c6a-8c8e-60f2d8458a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec63fd2-7863-4180-8c7c-d79bae708670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85791606-f673-43c5-8776-30552e6d247a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a355bbb9-4316-4968-abed-6f2f9e629297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f32d194-c280-4ab4-a265-256fdb3a165f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bad4ee-e143-470f-9fe8-b7360a39e2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8a2615-ef7d-4a16-a2bc-01b62d46b6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a0a156-c6ca-460f-9599-eab165e954ae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625e2e66-e90f-4be5-81a9-ce6bca83cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3595dc-d39f-4234-8a95-ee7d39f9c419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33910ed4-d280-485d-9337-4b32f26fbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b9e4bd-c29d-42b5-b9d2-420ba5e76001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cf79a3-1a38-453d-8875-8175202cbd87",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b66162-1d2b-4eef-aedd-f0d816f058a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc05da8-d551-48ab-9b79-19a0a84fc3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe14029-ee61-4ad1-b184-b2c3cd6b0c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe09fbe-63a7-4c41-bbad-183cb3947561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fcc48f-4d97-4ad3-b519-efba47930677",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1743a3ee-995c-4203-8695-09e4425a2e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2998f399-45b6-43ad-b8d1-4b4b7032931e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab7deb0-5433-43b9-a14a-d7f0c3c582a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d0726c-cf3e-4bb6-8184-91956f3134d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd9a102-879f-4402-94d9-dc9efe6098dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf637d9-d60c-4875-8303-c4e05c9b3179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487cd05c-0241-49d4-97ee-7eeb06c39669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2d701-7383-4080-b208-385b80af3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd759979-d152-4238-981b-f6c9e39a050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17efa4b9-60a6-4aee-a893-e14c77c32b0a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aa8581-eac6-4c2a-8ac3-c6cad2c1553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679b6830-2a75-46af-958f-8e3a00e7508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc899981-8b5b-484e-a39b-2f48b981b707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0001badb-f951-4e16-b709-3984db50c024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b217a3cf-0d8a-449d-9ce0-6e745e4e6370",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae90a9b-9ecb-4477-aafd-d22b8453153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d058f884-ab92-466f-8a60-e3dac2676484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b6b32-6169-4586-8bdd-f1598052410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93f722f-7b4d-4a89-9c43-ccf8d1c54ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e8c2e5-a9bf-4d05-b4c9-0ffd31952a88",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a8ca1f-b9ee-472a-8026-20cd690edbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b2659b-f572-4b6d-9739-ad3ebd58730e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f11de09-bb5e-47a0-a6d8-e33bb87638a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f9312e-4df3-4420-ba16-2485d2711a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24705be0-351c-47d4-a025-2622d654fd50",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fcae28-fe6d-464c-a021-523ad4407ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2ce686-952c-472c-8c8b-99f40d64a2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d4cc40-54da-4d01-9340-55609a9e046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5d8d40-99d0-46f4-ba3e-a5ed92e770e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81073b8c-7e28-4c53-b754-009d421a16c1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76782bca-dca5-46c4-9e09-a20fd9d208b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdd03fa-8cd6-4f30-9f57-47e0aafba56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a7694e-10fa-4dd5-9ebb-65004b83af33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db481f92-79d4-4041-b235-aaf4a840fc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ec3d7a-c818-4e03-bbcb-f8ff33071361",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef6a53-d68d-49d2-9cdc-b9d564354205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad60b2c-e204-47d1-8805-64de3df3ea06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdc9ce1-da75-49d3-90bf-50d9122e70a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eecb3b4b-a759-4465-a643-7c27ac9ca7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b934b82-40e5-4a77-a091-3edcf5907099",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61033a3-483e-4b4d-a38e-ce6b5ea818d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba4584e-99e4-4854-87a1-1acebb04e632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c272f-bc0b-4d01-bdd1-3d5d091db12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30290aa5-1f5a-4288-8208-28767dd62cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c1b5a-c396-451b-adb8-ec625c6b452f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8261d933-44a1-4265-a39d-bc6f8f285804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11416c52-a341-479e-9564-2372794d8e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3278a-5e1c-4b51-bbf7-850f401e2355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b9e2ed-cdd9-4ec8-aaea-6607ad4bbb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ba6d8e-1f62-4583-aad2-2ac7012b1ac5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8929cf7e-3eaf-4177-9524-bd03dd67b28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d19994c-d6fb-40ce-a9be-ad41f67cdb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a345681-4b34-4636-9d89-fa4ff7073ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "178eb6b3-bf95-452c-84bb-41a6091290f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58b1ffe-5744-4a54-96b0-feb6b737b669",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421b2309-01b1-4e97-a874-9ca2f08cf7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76c2a0b-67ac-4155-a8d2-29871d52a2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04268d2-b503-422a-af37-07571d71390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ebde73-ba2a-4225-b261-7bf8f217c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf243de3-76b1-4a0b-916a-c0927a11bd55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9fc08e-c42c-4097-9882-a8d74a36f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c891fe-0d10-4009-a096-d344420d4f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ac0c1f-8e71-44ab-b112-3dd5a46c3b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "876fba32-71ae-42b7-9641-69d87f6385cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c249cd5-9afd-4cd8-aebf-58e735939ca0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7b5628-2c77-45bc-a0c6-55ab05228ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ec556-a40c-4fef-9321-ed9ef17f9c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952be930-6b7b-42d2-b1e8-b809c0a061de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5092b7-7b45-4061-9a2d-36067b40ed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e15402-575a-4342-8797-0e6a00c75f6f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61d0eb9-570b-497c-8bc1-b74f7baeec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2aea79-df68-4933-8610-5e26dad53609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8790f-9035-4a01-aeb2-b5829bd1938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77fb5460-fbc2-4a8f-a991-11f4dfdcc266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb88ec-6e20-456a-9de9-3099b6898d90",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14a571-024a-4488-ade4-6f021ef37038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44603973-0a87-4d2a-9b81-26954ba3ce27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fad237-5985-4931-99f0-1e6686c7a665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca9deda-f0de-486e-9d26-64892ee02d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af47e5bf-eb8e-493c-9cac-b092fe1a2f53",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7cc559-a1e3-43ea-a06f-48d7055a912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe5f9ba-c16f-4270-87bf-413e3c58a4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894cc972-8f76-4224-9ada-362f039d8a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c687573f-43f2-43e2-914b-a52dc1da5504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87133ff-0bd9-4d6b-9283-27e24692e280",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c7fd3-4964-4475-aa3b-ebe283883f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fbb253fa-06b9-44e4-b6f3-4047b137b48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eac4f26-e183-4c58-9764-032eaf5c86b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6ed5b5-ad57-4ace-95af-2ba58a0e79e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41742f86-19cb-4d5e-99a5-9f3037361008",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4362da3f-e4e8-46e8-bd68-a8a1a8e57860",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076fef31-70b2-4932-bd37-79ce7d1ab35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dc82cf2-5852-4550-87bf-2cb241499902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13a42b6-261b-4508-a943-333f6353982d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c1a507-558a-4c0e-99be-098ff316a117"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "083c64b5-3e34-4e06-a3ab-89892ea59e51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7982898-6fee-4f68-aa84-8782c86ce525"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7614733-6bd7-49bf-8481-7d25444e4cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a76258-e3a3-4f51-8707-cdb508250b9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0692414c-d2e8-49b6-a8e4-0e3f14f174bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a845a04-eed1-44cc-8f95-f91fa4add676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0def9a5c-e2d3-40eb-9b54-31ad3fdee790",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68752e7e-5723-4b5f-8820-7506eb9063bf"
                }
              }
            ]
          },
          {
            "id": "4fec32b8-645f-44cf-95c6-9c47bdb036ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34080df8-126f-4bbd-a6c0-a1ac0a04fb3c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "631132ef-763a-4233-a620-35ff821a9bd7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab18e7d-c471-4674-b079-dc9da4b73ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e41b8f5-703b-45c1-bf98-e5096ee68dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd85702-8d7d-4090-9338-e6ce636193ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c338cc-605d-4307-8535-61b55cc67840"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f719ef4-9abd-4f63-a049-96dad5f7fddc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cefecca-c47d-40a4-bfeb-a3271e4d818b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa40210b-f24b-4104-bd91-8a8e6d685a2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d37f8a0-930b-471d-90b1-ed2eee1a88b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63f92fa4-2bbc-48c4-a088-b2d60a3255ff"
                    }
                  }
                ]
              },
              {
                "id": "e71f835f-3110-4270-ba56-08b925789af0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "745edb06-ed39-40a6-bfe4-af8919ca4847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8015ad96-d579-4e1e-9d1f-3c834a2441a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd80d99c-0e4d-454a-8f1b-4aab4abeddcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "393f352a-5324-4721-8c2f-5d51732d75bd"
                    }
                  }
                ]
              },
              {
                "id": "ea852a51-005a-4034-bb51-775bdea812bc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e675a82-2e4d-4a7a-9c8d-fe10bf07e284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd8674ee-9b59-45f6-87e2-7ac0246e957a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeccdef7-a6b4-44fb-a137-5ffbc62c9571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9b13d09-e80a-4352-8a04-8ac317897ee1"
                    }
                  }
                ]
              },
              {
                "id": "18699203-3982-4362-ad62-b5720a423e26",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84e43108-6eee-4d48-921b-3ea8bf209175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d573a3f7-5bc7-4cb0-b605-0d3dc7f767aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d2c8db-0a2d-4d72-ae27-b35ceb50a04d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f81daa4a-7f7c-4bce-9102-9a46e510c9a8"
                    }
                  }
                ]
              },
              {
                "id": "d51f3477-4397-47ae-9d7e-752768e45a2c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "867fc635-a023-4a19-ac3c-03d029deb21a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b00e55cc-0bf3-40ca-8a8e-4f27374c6bc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5341fc82-c889-4dd3-b91e-a0aa46d3360a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ed87158f-39f7-49fd-a56a-78869df41f42"
                    }
                  }
                ]
              },
              {
                "id": "f05425fe-e79c-421f-b5e7-693ef7f3350f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4516e65c-85b3-4eb1-85f5-b5ffc14e2bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c24084a-c96a-4440-925d-c16e9f5a2f7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fa44c32-5e1f-4ddc-b68b-3b1cfd97852f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "073035a5-2b77-4fc3-b8e2-0ed3d1e35338"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f26da897-ae14-4658-a9f9-bcd7bcd2af51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac53e9b5-1abb-4492-8644-e992356b3916"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92d8156a-3e69-498d-b88d-524bd0a9ca28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c2a0ff1-b20a-4d90-8f4e-c70bf3af9b6e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d752522a-1d7f-467c-b6a6-41e8ab5b97d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80e7b48d-5ced-4904-8f4d-f0a184ac0fd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c16c2a1e-d419-4436-93d7-4b37a43ee8fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c7ca873-83d0-4684-8803-3df53f89f87c"
            }
          }
        ]
      },
      {
        "id": "39951110-0495-49f5-b0fa-1a7b9f18b8b7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4728aae7-f49e-492b-aecd-fec55b110cfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdb9739f-6ac5-40c8-8df5-27e36c65d2c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93e432ff-68f4-4abe-ab2e-a75d339faffd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8348a076-452b-40f6-a85c-4318af72a243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609cf665-7332-4189-86c4-b00cfdf180ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408b6dc9-c9ef-449f-b5dd-66a571262a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e50ba1-835f-46c0-aecd-7823f56f4a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f1fe7a-4722-45c0-a0c2-36404ad0f8c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85617e-4d6c-486d-a465-9bf268b4b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51436aa3-0a3b-4922-8ede-50daf644125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42123225-7dc2-43cd-b3f9-df1a8598e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad3afed-d018-4ce0-bdc8-9218fef34cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfa3829-43a7-425b-9fc9-d011def1422d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24429f2a-52bd-47c6-8953-c3aead1a22ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac14f33c-b2e7-4f50-a66f-635cab656a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d8f75-d2c1-4529-bbb7-a1511c475c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74450ded-74e6-4156-a759-aaecbc153e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b67c87c-2fa6-4041-b4cc-926f4ed4d186",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d8792f-f276-41ec-8542-929b5a013bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da034a-4c1f-4259-abf5-ee90084f976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90a525e-beb5-4e33-a6c3-5f051bbf375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "691816c7-74d9-43dd-a4f6-cf3dbf882b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1418c-29f1-4d3e-a455-14fefd15eda1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0506b280-8062-4368-a558-f7bb8a4513c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f4e8ba-250c-4cff-889e-f5161c7b0cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2909ce-306d-45d7-a0dc-2a0f3f5db9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "673431d8-3f09-4dca-b9fe-b0d194a12daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b845b7-9ffd-4d88-ac97-c6c7d03db427",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939b4d53-74c6-4cf1-902b-a9e0bf85696b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912a9868-791a-4aa0-93fd-c19db544b412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09eff8c-9244-4f3e-b5e4-9ce99a70a95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9efdf24a-f896-44df-beb9-5009fd531f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3000b4a6-16b3-4f65-8658-8b9a34b53c83",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd3f2bf-15c2-4fb6-8059-798cb35cdb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509093a9-2b06-4d9a-bba9-23fff69c6e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7144d4e3-81e0-49c6-bc76-0af9bac3eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf84fc5-8283-4a5d-a1b8-20b500d30faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809c480e-8f62-495e-8668-3079fe76a687",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ca6c09-31dd-49f4-a7d7-86d8b35fe2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71b1101-afe5-461c-812f-64e9433c1a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812a088e-6ede-4db2-b3bd-bd822ff08fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df1aa8b-0474-48b7-928c-428a2bc41438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1004d5-32b2-4c74-9d34-de3ac4f3c862",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09effcc8-1a58-4e41-ad16-f5f2f4deeaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a29357-7a9a-47ab-ab1e-81f99ebd8835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fc9258-51e6-458a-a158-cbd046d57dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "595c8923-e97a-452e-abb5-90c38bb02f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6acd58a-711d-4cbd-86c0-c5d512bbf814",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c1bdc8-011e-4b07-bfc2-e48cd5f88503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7039dfb2-ad69-49f1-92fb-80a3d0563c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac35cb82-034c-46e7-9d02-19455fc725a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08615189-71cc-4b5b-891b-e427d5c600c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed4128-3ba1-4e55-b002-47de9f33a16b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6a43bd-dea0-4fe7-acb4-b79d82142dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37242a-e93f-41d9-952d-1240aaea25a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0561a-a2f4-4e24-825f-d83c678e89bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "679da32b-4a1a-4f43-ac3d-464bf54a1a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2167ffe8-c71f-4e65-a581-9a0f70aeacc0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1022cc18-7504-434b-aa23-00c53c1f7a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1492f21-5091-4bec-bb34-c407235010ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab01dad6-5c29-4df7-9ab3-baa8e8647029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "400a66ec-545f-4f8d-ba99-187bce16cbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8619c7c8-d13a-4fcd-985e-bdbaa341e4e0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d094bb3-eecb-4944-b6bc-6b4cf0935485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f2ec17-b8cf-4377-932b-c7597098eb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a480cfdb-d055-429c-8a96-65b96100057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a92fbe5-68ec-424b-96f3-23df21715e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acb4f9b-e127-436d-83e3-6404ece98207",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c9d7c-2532-42de-8b7a-537ae756a625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0004498b-e5e1-41c8-9926-d9728618f0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf880d42-4986-4d43-b48e-f9cb8f8f87f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c7398f-0248-47c4-aa5f-ef3616401069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2dbb75-c90f-46b5-a66c-c5d337efe756",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5539c8-c6b9-45fc-9889-531b2addf8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f99bf5-3219-4452-9bb1-46724bf04740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83754967-ba14-40dc-a96f-75d313c50436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac38ab4-e13f-4209-9872-45e9278c6d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc51100-59d1-46db-b358-f283088509ae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a6dce4-b1ee-4880-9b05-ad4824adf565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c898991c-1ea3-4dce-af2b-ffb1b34d6c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e367d-fe55-4c36-883a-c1004b6c2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5e1ac0-a7c7-4a9d-85eb-6298b09ad416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9d62bc-16cd-461d-8849-fa6729c781d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26d2001-514e-4cba-b09a-d08aae14249b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad9674d-793b-46f0-bc36-035bbb5ac27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde92e9-e08b-4e75-9466-34d171155104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e196258-0c75-44b7-bc84-d398626ce6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250b4c80-5530-4e90-8d6b-1c9d1c341af5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d011d8-a7dc-4017-9896-48365878fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b391259-b59b-4383-9fe9-766112edcd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e035f6e-69d5-4e7b-98b3-b642f19b3c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12492e0-e971-4646-a728-1e4f809a0479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb80c8a7-0fa3-4ece-805f-aa4152fd71e9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350cbcc-6898-44ae-ae19-293adc601db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda55da7-7301-4a07-94b0-46473c56e739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac892f8-5b2b-4fad-9142-4f85c7f8417f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ff4d53-6fad-42bf-8ce1-72acfc55e7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6afc131-da95-4eba-87a8-1234c7ce4645",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad1ab85-0f1a-43c7-a7c5-001700693aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6def6b-b2d6-4476-a3ae-2db6524683ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb818d4-54b3-4b05-bab4-143af135c324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc95f91d-ef24-44c3-ae3b-fc74b5fbf7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b77020-c382-4e8b-ba9c-3bef0fbd95d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f59bae-8105-4bf5-b47b-0f1971b567fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9df3fb0-095a-4a0c-a4fa-30a5043b6c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3ac138-9570-47d6-a091-16a0ee20ff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a144d5e4-73b8-4bb1-9620-e809486d5106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a7b6b1-b1c5-442c-bae1-10eb06bcef87",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ada7f3-e9d9-47ef-89f2-4145b5ed9852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff530f9-f5de-4734-829b-f7b5c943865e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aaf7a8-8a62-4354-839d-4a77a6e4d383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20488829-50fb-487b-9688-ce77df802945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2189ec6-266d-42e6-b54b-4ed9372a8a55",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824ceadf-3e5a-4f7b-826c-66f2d5a37bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db833c0-e0ef-48b9-a7e0-4a20b680d956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81891c5-1973-4b21-b89d-6027de84be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c555c0b-7b17-4769-8575-8b22fc38a39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6cd8a8-00d8-4ab1-ae2a-14e097400f17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90bf51d-e63c-4a02-9aa7-2fee180a7615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a481ab-b03f-4c7d-a537-5e28087085bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15947bc2-1138-4c8a-85fd-950fc1fd5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae5d5b1-af21-4d91-8587-6a6b9ab93d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c997ba5e-a6a7-4ee7-826a-8231613e7754",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11b8e37-c2d6-494b-9804-7045d5b69183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738500fd-b013-4323-b5c1-0a049bfa11e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a347411-e0f4-4d77-8c88-db41822873a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6378e94-f2c1-476f-9c24-a85e8781c9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29f662-518c-480c-aa75-f83aab5284bb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23697103-be24-45bb-9e28-7588c4abfb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7377e1e2-28a8-40e0-8703-58a2044d5698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e58fe-fd7f-480f-8c3a-3f68dfaef294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c395cb-3213-468f-bfa8-d0f16a1b60ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d660b89-f915-48ec-be80-92bf47792308",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5ce9df-d52d-4b0d-9aec-de46b7c9af09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd46ce3a-8bb6-49fd-a2ae-be0e91633484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22abe43c-1b3a-4c4b-98ce-d0abaabebe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d852f9-f4d9-4edb-a589-9b9a89424d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203ff6ca-b90d-4d4a-80d5-0e398d657fad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7350f0c3-055b-4d6f-8eff-84bceb59faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb68eccd-2206-40aa-a5dc-bc2a316e5ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3bf782-8398-4a52-97a8-31c4eccf9745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4b6082-3244-4c30-9a65-c87b48608873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c055e1-2ade-4260-9e43-aa21e5ce62af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc3703-67d0-474c-b675-ed9806734732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6622a9e9-10ce-492f-9e72-b6948775fb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf247967-d00c-4bb6-b8b8-f5d7620046a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bba0cba-b04e-46a9-abb5-f34bd563dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790c56a7-493d-4a30-9844-0e440cea823d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a0ba62-dd7d-4750-b8dc-95186c253852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d210ee-1420-4dbd-94cf-82bc15c8f02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada21b49-13af-410a-836e-9fa08df2135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2505154-18c4-45ec-bc92-f5f07397531d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15811e27-4924-4735-b82e-031a4ecb4fe3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368902f8-0477-4585-aa28-be1aaaf6786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9839d6d-df0b-4b87-8d61-43a8d2a8738c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d3c489-53e7-42af-99af-f0afdbba7fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e450718-c825-41f2-805f-e30323a051e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f00b2a2-8397-4a47-b09d-f5b40f89819a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4990d863-44ff-491e-b7df-088eea5ff432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea614d7e-d051-40fc-a78a-db07ccb15bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3488c8d0-ef83-4bf4-b83e-846973f49c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee3d25e-f934-445f-ad18-8f3e11c93155"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05130dbe-9cb4-4a36-b861-8f17a062b86e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ed6c7ae-b340-4d66-a6f3-6d3850516e50",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9a8a1a-a855-4a01-818d-c074c134f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5c138a-5683-40b2-acba-3a0c94c2d9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54632a0-9793-47f9-8d99-149b002e5964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f60b357-86ec-471f-9767-4413b63bb92d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49fd882e-480f-448b-95c2-90a8f72a9404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dde04de4-a303-481f-a4d9-45b03c0e3028"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d2b7313-5f8c-4994-96d0-16635f91a7df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddb664f4-3838-48a3-ae43-71d0555a9551"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed4f9d79-289c-4443-8d0d-e5a09a0f0e6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "174b86cd-14d7-43e6-ba48-7c35d0ce8887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9831d650-08e4-4130-8372-1314168d6061",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fefe223-6ae8-4bbc-bf50-60467842f1a9"
            }
          }
        ]
      },
      {
        "id": "e78d2112-2584-439e-a0a6-b05b060cd381",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "670e9514-d522-487a-9e43-13418a99b93f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99725cea-8a54-4e5e-a097-dda95ed3561b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4969774e-2975-4684-811f-e8171dbf405c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb868be-269c-46ba-9390-0ab9c3ea741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4c450f-a225-4802-99e1-711581798410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1514fb91-4064-4311-9887-5afd15f7733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0cfe00-7ad1-4e3d-8412-a98eace60bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a9a056-83b7-4366-bf11-e2d3c48be079",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fdcfd8-c019-4328-8d69-375f43046fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0213046-0218-4b7f-951a-06e7b6262dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17738517-4eb7-4f0e-b747-a8919c8e2ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc9d1f9-0a78-46ab-9b36-01403459482e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7d91d3-2655-4d05-9562-121c6c27f0c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ae92bc-5717-41a0-ba01-13fb3b23a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee807fe-87e7-49da-bb29-cf874f8d555c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dde2842-c557-40a5-85fe-908b89506d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7f8f80-49fa-431f-af88-556a9c1f7059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489036ea-84e7-43f7-8cbe-d65de53e3db7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11b5e47-95df-462d-8dc6-a39b571aa7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f45b12-d044-449a-9c37-bb80cef64f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba4eba0-afc3-4284-b2c0-9420765a64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9254c6-bb84-4624-bf7d-7741ce707b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03b72cc-c369-45fe-ab35-1713927a96c6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a1f28a-7992-490a-9ccf-d6746f9d72cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a5aa6b-0589-4834-ac15-12ccf3b38104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05048a6a-feb6-40f3-a114-05e9c4e9e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6560d6cb-1448-4048-ba77-75b01bdca386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7703c1ac-d5c3-4f92-bdb7-e8e4002ac54a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b99016-1064-494e-965d-90b6aa60439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aa3202-71a7-4130-ac92-2aee5ba58cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190dbe31-55d0-4757-8f2e-33804e9cfdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f40782a-bbfb-43b6-9c29-976771486853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8436a2-3b5c-4b80-a903-17bbfaf43cd2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215e2ded-1f09-42a9-8fdc-6c1144ef87e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda9d810-8337-48d8-aca6-b9a1b0b298d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca2067b-96be-4f8c-a050-bbda8ac52f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4e0947-2a6b-4951-878e-064e3bcf8f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b00cec0-6e28-4a92-990e-cb2fbea6ea1c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840c3f3a-fa8b-4bf2-8200-cc1b28b3c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae15e742-3028-4f5c-a277-0c2320c22c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef077a5-e945-4085-90c2-99ddfa41aaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e50f5121-afcb-4236-8352-1927f4d1747f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba864e4a-2aee-42f6-ab0b-caa9d40ebe40",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96e102e-3d75-4452-abab-c5f737a1df25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c1a00-e3df-40be-9cdb-b64cb5e6390b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04e9d0c-b1c8-4de1-94e0-02a0f825cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b60ecae-58e9-40d7-9822-b7382670ce4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a43b60-6ba4-40bb-a263-3c1241065714",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeefd4f-6273-4564-a1d5-23b134637c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403bf26b-eb78-4efb-9048-3717f14aeceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027f542b-c446-4ed7-9ea5-496908a99bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5811d081-9b9b-4662-939c-cc1f70d4aabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee34ed8-c818-419f-8995-f6efb64bdbf1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f0ea6e-0447-49d5-8b72-979432366a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35f6167-0544-4536-b108-2ef581d4630f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2245eaf9-97ea-489e-b1d0-4424dfb19c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a12283dd-1a18-4754-b4d0-cf0498428f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bff2bbd-66d6-47db-bf88-787efc929fb0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6ff51e-78af-434f-9634-7cc0dc37294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68857203-1c0e-41fa-8129-ee0507211e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660efca4-8f38-4350-ab25-cae2c45d43f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05a9475d-de63-4489-9dc7-a71fd456ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c47360b-67c8-4143-9763-090e9c31a1f0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08864bb5-0ae4-417d-a485-ff94166365e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27346c6-6d87-4bf2-84d0-10cdff57d356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de9f991-bcdb-4a22-94f2-09c66e750235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd709cef-4519-4e5a-b58e-8f3671db7a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8837c3e-890f-4856-96d5-44d5bfc8f4eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d8d0d5-08b0-4cf3-ad7f-e3587c00ac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43329b57-1502-4625-a250-aaf4aeb6e9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39846a17-f04f-41a2-bcf9-ab7afd690b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0d253c-19bb-4942-965d-416f1606d6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7719712-a61e-4a4a-8e21-fff493f633d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6f1204-4009-42be-b664-f696eb02364d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3139bf3d-d175-42c9-911c-44b2c40831ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fabf33d-28b1-491a-bb8c-2ab7fb3ea54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbb8198-2264-4062-ba8e-c6d7004fba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3482926-ed86-4aad-b6c2-9ac9dae179f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb5e3b-3f16-4fd2-b585-db7bd8f9416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3477e316-b0f0-4e03-af48-0c28c67c4a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a51dd00-af73-46d8-8a84-8029ee91774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9186780e-3657-4d33-8595-4c43faef2932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6d4b1c-f476-42bc-bd1f-0d161a7c3324",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3fc552-3a90-4d4c-be01-2c4d6b3b6018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0221d5f-6ca7-47d1-a2f3-ff1f56f3fe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d041d36-9e2c-4418-92b3-787154ce8eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a01378-ce8c-4503-9baa-f9aa4bd66abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abedfbaf-6be2-4136-a7b4-d01fd3e60b41",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd2e846-ec25-4c74-a0d9-55518bf368cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710dcb02-c2e7-4382-a7a1-f2dd9ba60e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53ad010-6c75-4d9d-91b3-8088719e09dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcc29bd-90d2-4124-b0d1-ab35488ce164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc7032e-4291-4ccd-85f0-5a650e5c2296",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b4d489-1b94-4dbb-8eed-7a591f019f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04e08d6-47d1-4271-996a-138c7771de78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94212d74-4c5c-4fbe-9a61-e6d2dd304b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "406969cc-9a21-4fc7-afa3-c50db563a10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d7d957-8c91-4768-a67d-3ee65cee815d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf546d45-1b7a-468f-a04e-3f5539f6017a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6369df-d6ec-4d3d-8a64-40bc2dd7ea54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32598ab2-9eea-416c-8968-b77eba49384d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b88ed56-252c-4152-a856-e33482ac4482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1949b6d5-48ec-4e6c-a267-e0bb613d135e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef1d282-b18f-4bba-8c77-d4dc65ab1e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455e9c35-a422-433a-bd27-72688f995d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2783275-8749-4091-97bb-b48e5a617e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a53b91-f9f5-418b-ab09-afef7b1b3f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0513ee-da3c-45ba-b2b1-45ac8370befb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7425a626-9127-4da8-941e-c8ebe2ec008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bba82ea-390f-489d-acf2-4fbcfce012d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ab3ce8-fda2-4824-a2c3-75dd14677ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e79bf95-3fff-4a54-aea6-eabebf980110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d65fef-8770-4eff-9578-84058b19a10e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a8ea3-7be9-4392-b3f7-a85225adebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca725594-8c86-412d-94b0-f4d3b8dfc503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89500d63-c1a8-4ce7-885a-743c972b30d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb2b9d5-e452-4426-81f8-2acdd3b0c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dff21ba-d4ec-4918-a3ea-1b3e7b2d7f5a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80ed6ac-d24b-4c15-aeff-c3725b7f4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a32236-5375-4be0-b658-1dc51ea8650c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fbcf5f-21fa-45b1-8af1-b4cc4b3f2bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "514c4b09-386a-40ce-af96-39194455d158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14544ff0-f0a3-45f8-a08f-15ea2e5b1166",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a71a1a-faac-496d-b412-1c5ed07b8673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16e98be-fe62-446e-9639-6e91d7c7fe15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30528233-5c55-4c50-81c5-a200dda2f0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "627ee0fb-3bf7-4066-97bc-a982a1244cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e6d019-b702-42ab-bd2e-b6f045549e30",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784b247d-4b19-4a52-8966-c49515fde231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03701e61-8c1f-447a-819c-62d2d83541ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1720ff4-e329-42e3-b266-86fa60dba328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b3a428-34f0-42c2-9701-82c3f53e7010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7f5868-de06-4dcf-b35a-d0c2e6e8dd4b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8de700-b6ed-4e54-9780-1852e7f0fc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf9f292-4be6-405c-a6f1-621d41f2a715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9c5982-4a8f-447b-bc1e-cfd767cd5428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bba671-4cc1-4cb5-a500-e4374fc3690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2295f9f-6ea3-4849-9f0a-efb0c53e7531",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0521a26c-ea2f-4099-9340-dde5b017975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897ab56d-be60-4f98-9c6b-040c8e2f0bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73570936-1a72-440d-a38f-4dac3afa3d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c69c10-50e3-45de-90c9-85af70ce31b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56772098-1475-4b78-88e6-811093a2a7ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfb40f8-f0a2-4b39-a0af-60d6219640fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5150cf-9476-4cf7-9573-8bd3f1fa18a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f237c-7b2b-4792-ae6d-669284f0508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6682ab-11cf-4783-b9d0-b5447733d044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d26b2a6-3e9c-4027-8d49-50aab60820a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17176de-68f9-47c3-8d19-33efeba720b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff52291-0897-4e56-afa8-fc8930584d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbf51cd-9d7e-4b78-9d21-0acea0e819f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e464bfb0-13ae-4bee-ba5b-61127a8702f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9c85ff-8bb5-480a-beab-accf2de96ed4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7e235a-68e3-4121-b281-badfb99b6ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578959d3-f5a9-41e5-82f2-61b96c6e6f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a321fd-0c4f-485d-a6d8-03a662663c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3157a87c-448e-4cf3-8bb7-17b03851a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52005ea0-bee0-4911-83a7-16817d871ace",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c696815f-5206-426a-9991-e535c0b80d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30976233-0b9c-4326-a8f9-c0c34a43fc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49716ae7-9324-434f-8176-f6020cce8dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "170b424d-8c3f-4331-8cf1-8ba474083778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef4fd6-fbab-4251-a599-cfb622e30340",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74153c4-f41a-4d4d-9979-6acb1570a6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb7079a-f327-4391-bc47-ed4a5b8da455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73f19ee-28df-4a80-a37f-a935bcf82e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68537f0-93f6-4048-8f34-e0e977f44c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c109bc-9101-45af-8318-59856e61b6f5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a66d9-72c8-4597-86df-307b3ad1f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fc7abd-4148-4c20-b735-d76275f44f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2b3482-81d7-467b-8d70-434d2da5bcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "646d4773-64e4-4391-bfa4-989cf3f9c721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037c14ca-2724-4dbb-817b-a77216a3c3dc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a353dbe-995e-47a1-9b6d-50cc221de78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d6e15d-571d-4a74-87d5-5d3845bebdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a1876a-718e-48b1-8801-30f6a52fb16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21343fca-7069-41fd-9267-ee361c8f786e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb008afd-b0d5-4d86-9691-f7cab505c52f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041dd849-c007-438f-b22d-c5036cc664ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fc80d5-2ddd-4be5-bcdd-41b09d0a1f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8941ee40-d910-44af-b465-b4bbc00451a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "553d7add-60bc-4cd1-8f1c-0a4f2c3ed5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2b6bbe-9047-43da-904a-99486eecb668",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d36975d-06be-4e4b-b052-84be5e9c16b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d14679-7440-499c-acf2-b95cfc67a1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de51325-4bae-43a8-9a2a-08f130ffd326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10162c64-4379-40aa-bc70-308700b01bee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2591690-59c3-4a47-b99d-589bd5ac5c47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7832c287-830f-4424-8f93-b9f5898ddb85",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c625d0-c92c-4c23-81f2-688197a4ab65",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06c067a7-ba45-4ce7-8282-03aa4dfdb4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c00a0-1a83-4434-9fbf-f42257a494b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04f0801f-4a59-483c-83cb-6b7f5afce28d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7724332a-92ac-4e89-b2a9-bcf183532529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94f62ef0-0b09-4ca5-81bf-10dde7e1ffac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ef67e3f-d0e4-4782-ad94-8e1bc236f120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4489f8a2-44f9-4ecd-b377-a52cb72ddff4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89c55f83-3cb6-4a4b-888a-9ce5522a77a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9518b0c8-c62c-4b75-a65c-df24e0bfebcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a00064e0-91ba-465a-9580-56ab4b0e3364",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4634e82b-d4c8-4c7f-93cb-8ca093beb469"
            }
          }
        ]
      },
      {
        "id": "b14b04a5-6d9c-4add-aff3-9933f4a402cc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1b6ae6ab-fc21-4128-97ca-f9dacbdfe942",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68d4f2d8-f589-43c7-a782-3a6e640eee3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49b0def1-dfe5-42aa-9622-c6af7b3a75e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8e4da1-27a6-4faf-90bb-b0061ba919d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b011069-5039-40cc-b376-2aa3c4904165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6aa034b-f46b-475c-a08b-b39ab3a8cddf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c239f23c-1257-4c89-b92f-522310dcc199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca7a1d7-fc42-474c-82ed-c3f5a37d95fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9a289e-5f67-4ffd-8cd7-b0a7623c60eb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99906700-6c1c-4b44-b7ee-62672e9dd5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22dffa9-b6cc-45eb-8f4f-5e70583c7f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d11ec-9edb-4ed4-a985-980a36664cb4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c5b3f4-e1b5-4c87-946f-1061ca0d3b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f25dc97-7a43-4914-a6ec-98da062d0d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a93539f-a77b-464c-84b3-cd746765663a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be02329a-394c-41f5-8748-cb67a47d8148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74739f1-3d0f-4aae-86b4-961c5dc1963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42fb2c-46f7-40cc-af82-dc1ca518af37",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203dda8-837a-4030-8108-43579b592dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a246d04-8668-4e97-84ec-554e402c37b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5326e1-4be9-4a24-a95a-ab2466a67433",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b449515-f522-48b3-a8cb-29e5d0d9cd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7003858d-e182-4ac2-9d90-035c7687863c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225c6eff-f7a1-4f7d-a995-1960b29ef1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a542a713-db7e-4cae-bd92-552e3446d028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131433ba-1182-44c1-a6d6-ba1a99b9f8c7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c62f6-2811-4024-b862-c705544e56ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f24825e-026a-4eb3-9f36-e894d9cea5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829ae664-80dd-495e-b37f-b356199fee2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76dccbc-0314-4159-b9ad-59b1d168c998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6ff00f-a14e-4fbf-9486-9478243330af",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae78bfd-aac7-4209-b440-6b6d7e977b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10e8caa-fd86-44be-afbd-6c6ddcdeb8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c6d3ea-a532-41cf-a1bd-e2be80ba0eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502b4da0-f3af-49a9-ac40-cc11784685ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82745cc8-7b13-4972-a3ba-b40d9ba557ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea8584-ec0d-47c9-b5a1-4949e00b6bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ac2ede-a617-4901-9dd0-4ba98e7107b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4fc94-fb42-42b0-97cc-b20c7b91437a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79740a6e-655a-472b-94d0-21b03c9eb9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7f13ec-9bd3-43be-9c68-e84a8927f71c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98c03d2-988e-42ea-98a5-30f2f2a92de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67189606-90fe-4989-9540-6ab97265daa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1f695-12fe-48b9-9b81-b8fe29650a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3684e9-cf09-4476-8a5c-75bb28d08915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc89691-0bef-4747-b792-ff87fd4290d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1865adee-602d-4605-b574-6f04dd55b361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfacd01-6dc0-4b7d-b0d2-9a1a39b70aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e2be5-a969-494f-864f-2b8995472d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeca1caf-0f01-4f25-ab9d-18805d237c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f24ecec-5cbe-4752-9a22-a109370d528a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a7d806-6b1e-4452-8fbd-6eac29975fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ad5643-7310-4c19-966e-440a39c0fa56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd9b5f3-fe06-4208-9d4d-a817102a71dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaffddd5-5438-482e-bf35-6581daf32fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfb7dc4-0c64-4443-81c5-73e22bbeef8d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a9d6d0-b466-4af3-a800-d378c4d3a059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef32f1b-5349-4bc2-a799-99eddd81801c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57d6a23-5318-4b99-8bc0-cb0fa2b45909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0837c752-1899-4506-84a6-f37fa2006b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5a039-1590-4a5e-9c4d-5a7945c5f46c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2edd50-73d5-49dd-a6b8-4fc9e2ad0f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a37ba890-c877-4299-8db2-8d862eebc0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e30b46-8935-47f7-8bb0-1429247d953b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f53bef7-89fa-43df-8ece-48887b580b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09635728-9b7d-496a-832a-313bb9214d95",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02e27e2-12ac-4467-a220-82dc96c3759e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9345aab0-6905-484c-83cc-a06199c96494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e386f3d-1584-4fec-aff1-22553ae3a889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a15d7d7-085e-4e66-b600-08985540f3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c33e78-7c5f-4805-a13f-a401759a8fa1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65578998-39c1-4566-99c7-cb512556f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28608fbd-8b9c-4e28-b261-5bfab1fc9a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937b6077-b651-4472-b5a1-30f575dfc9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8675fd-78ab-47fe-80d5-8881eb55c728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5285e6-6f23-4bc8-8275-68533bd32f9b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59848df8-2a20-4515-a276-3e10d8b6fe88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c576ee04-20e6-4fa1-b426-e104bfc70f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791d8d3-6795-4320-981f-e5c1667ed222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38035b10-d4ba-403f-aeed-ac37934f9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872a7be2-f59e-4a6a-8dba-642dbdd4e144",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e554151f-bf51-4899-9b3e-357dfdec3f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe9aae8-45f1-4683-a1db-dde4350d9c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83738d02-ba36-4f76-abdf-7d4b7af6a87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464f5c9a-291f-4d6e-9007-d8e07ceac6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5cb256-e785-414a-a39e-053c67455f32",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4990c4e-9a1f-4dc8-baa0-586f18868487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d27c4a-acf8-4db5-ae6c-c666ac036675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe33202-b822-465a-9619-4a77700872b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edae413-ce81-489e-aa21-91ff28a3e559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb9347f-3b91-4619-8bde-26c66eeb0696",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce80ac0-2c42-4d7b-9deb-5517768ae8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a1295a-2224-42f4-9cf0-4962a698e826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2dc360-2657-4e43-9c3d-09f34ab37062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d1cf9e-5bc5-4434-8afe-ef28c86e8d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8affac4-e933-4c29-a9bb-c3c80b185215",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90a1e27-63f2-449a-9ed8-cf35c63dc6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f730a33-0418-48b2-9007-293cc4c3d5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f1d7ed-8624-4f83-9f0d-d359f2b6e1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a83a2e1-04b7-4974-84c8-7e792e15214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8798b654-7949-406e-bfc2-656c3d4d7df8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1308ca0d-1b7b-490d-bc70-3922ebf951c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da57ea2-b5b7-4a0e-97e4-8cbd300a9bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468ee88a-bb37-426d-8e25-c87568db0407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae27bcf-4041-4b2b-aa41-40db87f7a383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb0d941-392e-4872-8fb2-ee9e2c8c6f2b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae3518b-cd51-4f3f-8ad2-835aaf00a854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acb903d-a460-4164-8c30-3482f8fb159a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534ca607-400e-4085-b6ab-4541d17ef734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1522e1-bc35-458c-92ab-098e2846ec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c35803-71a2-4451-bb27-62824aa95de1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a5473-8ec2-4b7e-811b-09b613f26c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3552eb-3fd0-496d-a988-43af0984ef19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7207f504-c622-44bd-9ede-d08354b82e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55416ffa-1b6b-4c22-98ae-6bb59b154018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da7938a-2c42-4925-8884-0cc812053b19",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63b9f1a-c72e-427d-aa31-0f7e5e561363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36072a2a-a654-41c2-a40e-320b7c622ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49db79-838b-482a-b837-87741c1c75f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66be52a8-5cb4-4b48-8ba3-5e16be6e51f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8655b8-e02e-4a73-8555-e559181ba38c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faf8fd4-20d4-4a11-82c4-09d27d36fc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2c53b8-4f85-4269-8891-2a2c71cdb763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884c0e46-26bd-469c-9f96-fd210f28c2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae191d4c-ba96-4283-92c1-feba8a742599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f33bc9-e00b-4a76-8f78-f20bef04cb0c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8909cc58-2987-4f49-a2dd-57d7de027258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee67f84-723b-46aa-9c35-15914a282d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7c944e-0cfa-438b-b339-7d33c6d2ae4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86aa5e37-66b2-429d-9e04-0715c5bd22e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860748a3-c91e-4f18-a10d-6ba931d7a45e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6a3e5-9904-45d8-a84c-45ae13f0dd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632c4bb9-907b-4432-a7a6-d0e637af94e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701cc492-a868-40d7-a1e4-ac7b9341995f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cb46b0-82cc-4c66-a9f5-bc2d422235a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c75538d-c336-4b56-9483-5ede63231ae6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c9e70b-f7e4-40a3-a2e1-211afaff1730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "894acbed-5f7d-4884-95b9-c8cb3050b8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc71f55-9dbe-4371-91d3-087425479903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18acbd1b-439d-49c3-82e8-0300226abe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458d163-6a3b-4327-a0dd-b0937444fdb1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe034c34-8467-4812-9a60-83d4583d35eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6859558d-9eee-4b04-b3dc-6aac1141c755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489a79a9-2c47-44f3-b3db-3f20a80b313e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386de607-2361-4629-9f15-fd9c96aa14e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724574dd-9740-4bd1-a57d-a424398d03bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5a0cfa-967c-4234-bed0-fa0b842d6850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881acc60-cd2c-418d-bf70-c89d6a2a72cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e6edc-2752-4d8f-a120-5191dba91523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519e597c-8800-4096-8e64-f4837826e3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2989ce-dd5e-4d72-b91f-6f027b70f7fe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c14a36-e39b-4697-a390-71b4878dc3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e0a811-8296-48be-b001-bd8ce7d22978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b517d86-a792-44aa-b72c-7faff1bb5907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e3ca6-ab8b-4fb1-90f9-c087d5129de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f903bf06-cf01-45be-87b4-d16ce195a39d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efafb938-5e8d-4637-b2de-91906225357c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1e911a-315b-47cb-9509-c992a19aa5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba187c1-a632-490a-a31b-5835875237c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb8ba62-6635-4bd9-b163-da5e6e12b0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a4fa6f-7112-42b4-b13a-8e46e465a11b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14abd1ba-7e24-427f-b59a-5817109a92a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c86854-d1bb-4857-bb39-8a0911d5bd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4051bb-ea51-46c6-a291-e65fbc1d0e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8796d1f6-2164-4f86-b74f-996b1109f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1fb11a-d310-416c-aa23-6c5b495008e3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faef7240-366d-455a-b40e-51385d3832f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98960207-5a3a-4a41-9129-98975707d4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba533fb-7cdb-49f8-9753-1967f66dcc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4c315f-3005-4e87-bd8b-1782907e92bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053f307b-c647-4e58-b10a-8fb040fa4a79",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2501bf26-a82e-45a2-ac9b-a2db040531ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256c2b74-de3a-45ad-bc04-0916ef773484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b90b9d2-d4c8-44b6-b46d-739584a6b7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654e9e62-b1c5-4485-bf06-9f0883f7bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6674ff96-fd4a-4e3c-9c8f-f5c9b5d510b3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0847c13f-3f08-4c88-82ce-b4c670e4748c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99560aaa-25e3-4e21-b92d-72b954804359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec338b-d73c-4530-bd48-f4195ee6481f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26477bd4-cbb4-47b8-9f84-71f20e8b1ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b112059a-b5f0-4fbf-b343-70a3da088752",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e95dfb6-3b7f-49d7-aa64-d02c18baf747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67199d53-ce2b-4c31-bd0b-65ba9f4666bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c7bfe-5512-4a36-8e4a-9988164e35d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ddaeab-206a-44d7-9eb0-b8d0b61eaedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b485cb80-6154-41a5-bc4e-a50a3d20a1f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142dbaba-d62d-4716-ab2e-0456f861adb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520f8de7-e748-4de9-bfb5-b49133219f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f4012-da1c-4e67-97da-4b162571d2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa4a6c0-c168-45d6-b841-ac9bde2f62eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8d76a7-f534-4ccf-9974-83f5ea142962",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb044bd1-ab27-4045-9774-88c999b7b0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff293cd-0174-42a5-9a23-faf21f0d32d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f31f35-b99c-48cf-90f1-d54ee0e93110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d0038c-a0d5-4945-99c0-7ad8c96a493c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb8ba89-f978-4fa7-acfa-115bc058bcfc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d94915-7dd6-4ce9-89b4-9bd7d2786859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23595f3c-f2ea-43e1-a816-12b88b02b9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f751d701-bf6f-4c09-82f9-d1040a664864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb9d32f-4135-4736-9136-59681ce55c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6869d072-8510-4489-81cc-961a2a01d862",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06634d77-33e0-498d-bebe-88b7c1f79a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698430bf-5414-4074-8c4e-baecf2c089fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf5182f-fb77-4290-9c86-3ff82f316c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36744fa0-6958-4166-8847-b055d16b7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594c60f-7dd4-4b11-84f1-1abfce40bf53",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98496a97-9edb-4775-95e7-5f1b2aa8c0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58e4027-977f-4b5c-8aae-92262f411da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019709cf-29f3-44fd-8a23-1d06236e95f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b88681-c346-44bc-923b-6de445fe95bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f25a377-fef6-4e1d-a4ba-4d7b1a1e909b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a66fe5f-08e7-4b18-9e73-4e052199566d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5435518e-709b-4947-a55d-52cc1ce7f67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447143f9-c0b3-4fc3-aecb-ab47ef065d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a2a53a-7740-4981-8c27-de951043e051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002482a2-9134-4a37-9d90-5888205ca5ad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff5a941-24cc-4d16-b72a-5a2a0eca6517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b428083f-a40a-44e7-8e25-b364cd997514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef22a3cd-3ed8-4f8d-a9ad-806ce1ccadc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72bcb9a-0213-4649-b9df-5867a47046af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7431aed5-398f-4643-99c1-655562da5e54",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f7fcd-9237-4659-9e64-c3867aec905f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2848e190-e662-452e-9603-49a9d297e177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9884a6e5-d198-4e10-bab6-06de9b49300f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cd3138-8413-4959-8085-b5f6b1da2b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba53721-0b7d-4f21-bb3f-fe2422cec879",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd90ed-47af-4fcb-a3a3-80a5af77c0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7727a9fd-5806-44d0-8866-cf9e7719b8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d68ee7b-d63a-4081-b508-543cae3256da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f5279-6c9f-4e07-b56d-2215761340bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2169b9-12f4-41f8-bb31-cfe2d2ff69de",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98338c2c-4d2f-432a-931c-98f0c16a4001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359681e7-fb52-46dc-ba4a-9c20e2ac8741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c10671-214f-4c0d-a18c-fc4102e37030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b4bbea-616f-47fb-8003-b9ad45ebf06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672d1b42-ea52-4b78-8b0f-331d27463731",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11db7d4-1643-4c58-b27e-412880169c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faf6965-6157-49d7-8e87-3499591ad668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb6134d-cbec-4672-af9b-04286c3802b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f19fba-bed0-4c27-902b-16493852f843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3195f76-d9b3-48cd-96a8-b52e96f9d883",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebdd4ae-cf33-4da2-947a-ad29f21fef9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f9ae4c-047a-49a9-b2c5-b128973dd933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e75c712-e7ca-4c0d-98e5-7d8ab0733ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ecfd21-870d-43c7-a562-67fbbc85b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f82caa4-9fe7-44bf-9514-ae2ba320586e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e135901c-15c0-4a3c-a5de-7e8a58a82469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0c7bda-508e-476c-873f-27d6acdab4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf35fc-2d91-40a6-9ac1-e41d3a94728e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab32745d-d328-42ca-95b5-d147223b519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ebe53f-8049-4e38-9cd5-c9edced32947",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ab956c-5827-4587-b255-09201d8c66bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad85624-1534-4918-9c7e-319c5acbe991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9d33e1-8b24-46e0-b00d-0b0ccc74fa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4ff6f6-9664-408c-be2b-d641d54d4611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce88390-aae5-49ba-8c16-9bb335d61106",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba0bf6-382b-4706-a510-ac340d4f37b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0400633-2837-4d6b-b81a-ffe160111a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a961f5-2d70-45c9-aa1c-a9e94b820fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf59685-5e21-458a-bf16-72929bef7f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba2a7f-772a-412a-8564-89201a36d66d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a24769-880d-4c8a-8613-9d7eb9778b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ffcd79-99c5-4b62-997d-4f89df500d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4539a6-ee16-4b25-91b2-3c2e06397323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7770f7d-57a9-4b89-8c83-62d99242869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292837ef-7e64-43ef-91a1-716b2ba77697",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7d6bd8-7e02-44b5-88b4-3ee2f5b78059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2303ff-623e-421b-9b09-acee31a8d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7221225f-f847-455d-bb11-873d402034a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003bffeb-5128-4df0-a82b-e098ca802069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90e44f2-a5df-4999-b3fe-cd7fdacde424",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff24f54-2282-46b8-9d74-52327c45a77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6755a655-cdc7-4c73-801f-ab3a230124e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee470d0-01db-4636-a381-c1e708825e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b68583-55ee-44ca-8533-fdfe64203fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d809a07f-63d6-43eb-b747-482ada4bbfca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d67103f-065d-44d6-a8ef-05610b473348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c9f31a-adb8-448a-bd0e-ea7b1a606855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507ce3b6-d851-4e22-8c2a-fd7f8426b5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8602d0cb-c3de-4944-8012-14f06f3c1db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b416eec-d624-4da4-a5f3-9a0b6c7d3b8d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b1649-abb5-4331-a7c6-04d23d2f5edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63dacca-51b7-43a4-ad4d-313f1efa914b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf634148-11b1-442b-9197-f819f46d0a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832372de-3848-4e57-9888-8e68b4eecdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ed8194-f5c3-4516-96f6-76a09cdc35c3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c51ffe-73f6-417e-b5ba-5059c96f2bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e7c789-1499-495b-a54f-7a2ba1280ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6822ca93-ce00-4f56-a0b7-c3a30d0a497f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e14bfc-e94d-4282-8cc3-a182648cd63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76943e43-27fc-4439-98c8-4a84ea7a468a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5a938e-6a72-4ccb-8fc6-2f77b434f27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc959430-f9c7-42b7-a9b9-c686f7dbb94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb12e0f-b085-460d-9c8e-974c52b495e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279a5c4a-8ada-4fe6-b1d8-f6393775db92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2f4af3-9e4b-46e0-848c-d72194e82a81",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e688fd-93b0-427c-bd3c-98cfd32ebe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd25ab05-5bad-48e4-b552-19f03ac820a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0afdfcb-3fc6-4874-b783-adda77eaadd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82ea351-2130-4dd8-89ae-61d9adb3e29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad3687d-0afc-4925-8fd6-34fc1a63351c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610539b7-c94c-4cf5-9f03-7ccfb794dc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313d470d-2e74-4aee-8ba3-0bf303e9eb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf145e9-f17d-4879-980d-87ab1fb7f486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b236a2-275c-45b4-98e8-794526df5823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a681a571-343b-41f8-aa8c-bd8b4ed3aa98",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70704297-4edf-4191-9920-fd779364f548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ace9e88-ae1a-471e-bd86-5c4d6fecc804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a326f46c-6571-476a-a44f-92c8b552a1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601c23b0-8a6b-460b-9a1e-0862cb97327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369be2bb-9847-48c9-aa91-d665e93e4e1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b291fe-85e0-40dd-8872-ef429415245c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d75bb3-bba3-4e69-b19b-cf5b27dc35b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e60bb4-5ac6-467d-9f1a-582f4c331c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa19cf9b-8e83-48c1-a145-b3b8826bd754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7df6e3-3eff-424d-89de-818418596ec0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73133e74-dd6a-4c8e-b82a-a5c2e95da28e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a711b8dd-e868-441e-87fe-2405ff116fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927770c7-9794-4b14-a382-debfc426e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3784f34-00d4-471f-9ba5-d88e97cfb952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56197294-d85d-4cf6-8360-299afb9f5cc8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd48c072-c5cf-4a59-bcee-36ebaeaa588f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715b8b79-208e-4446-89ef-22ba5e044b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645bdc4-d935-40d9-9981-8a10b08980af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb2673a-3c1e-42d8-b8e9-86c0d762e314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2dac48-21ef-48e0-a613-573bd11e7670",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb130c1-96b8-413a-8941-fcb30b122de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269dd9c1-6c6c-44c8-b3b4-5840bba81a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95c57c7-6e76-4430-abeb-c22b1df6b877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554eaf04-566d-422f-9b9f-0e125b073531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec95924-77bf-43b7-b8d2-065c1ac588e9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267b945b-0ae2-441e-918c-08abd520dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26689c7c-310a-4a96-84ef-3de2e2d5cd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9130807d-b8f7-4eb4-bdfc-ee664a6cbe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ecdb8c-1e76-4a02-8173-206e2831b055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1877cbe7-4074-4b7c-9581-139766e966ca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a277ae8-2b90-412f-b207-b19ae416da75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55343383-541a-4a7f-8e89-4437bf34cb27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921f68cf-f4d3-4d4a-9faa-c13b80b9f561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190a71a-b5c8-4615-a668-5ae641a13285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b9a36c-0979-44c1-8070-b415e2a8a8be",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554644eb-0e94-42e5-a8fb-11ca5cccbe8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f80152b-b96c-4809-8957-f752268f0d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb024cb8-4511-4157-ab24-abce22c07c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463646a8-29f0-4125-91c1-81f3905e5450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52502d77-531f-4e19-bd3f-dd64cc4b708d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac24076-1389-4c81-8d12-e1db2f3de51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f235390a-f0b8-49c5-ac3c-ce1ce01151d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b0a9c-80e9-44f7-a946-5f2b9d816acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2562391a-0c28-4cc8-85be-9e224db08298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244ec97-20d2-4d1b-955a-1dc31f5c5e88",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5e8fb4-bebb-41d0-a258-35cb529c2558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5757edf8-4ad6-4359-81d6-5b9b847d2f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4717e950-b14b-49ca-925d-5fc02054c0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40136b3e-ee15-4cd4-aa6b-35b14a10163c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a315a-f056-406b-89c4-550bbcc70373",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba14f73-4516-4a9d-886a-98d2382d7e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83e07c7-fe44-4ca5-8234-51b3b9bde0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfd13a-6132-4936-88cc-289c7f51aa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095a3ea5-b96d-4d28-a79b-6967c311e385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b99fc9-42f2-47c9-9dd7-74d512b82782",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67096a5-0665-4fc7-8d19-b04ba2892c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca35502-e9f2-4a5c-93d3-c7f437d5e1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3932156-3ab1-4a09-8b48-0f7352265e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06689375-54cd-4bb0-aa32-fba1bfd9ddf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f601cbf2-6ae6-4266-8dc7-1b7d1c4062a7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68fa74f-0e2f-4b10-be7b-4a1da7c28507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc905c6-e2cd-41f8-89bc-f2d25152accc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f23a4a-7b87-4987-ae08-32630ce15944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add261ad-d18c-44e1-a858-74ecfe80b0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42267b7a-ad84-4dff-b8d2-cd278dce8e5e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d66533-4a05-4de1-85b4-2e65f6c372d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352ca42d-62dc-4d98-a6db-d565be43fc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e232268b-5ca5-42af-9620-058b11fcb09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9748188b-6e4f-4b0f-b5a6-05f764bc8d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9541979-4c96-445b-af62-79593548f8b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42696f6-8f8a-47ee-95ea-0b795e45cefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80b10b3-9ad7-4698-b71d-11f1cae07023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eaed9a-da48-4558-b069-b868c1d308f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69efc533-d740-4667-ab3c-a1b757fcc4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce868b28-f08f-447c-85b6-ee49acdd0826",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e92a1bf-c869-4e0d-9548-408ceeadec42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dda46c0-5747-4b08-9421-17812c5dc486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db889b86-af67-4f91-ab53-2c3022414c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a3c9b9-4828-49c6-a60e-1b4ef817f58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f8a547-2be1-499d-bef7-c2efc0593c75",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04546848-233c-4af8-a5df-8e82c72322b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba565aa-9987-4bfb-b35a-f2c45d32e4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f8f776-8891-45e6-921b-a0afc62d7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a55be8b-2d17-4207-ac79-08a7c725cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917764ea-7684-4a4c-9f2c-d537d509210c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dac337-a48f-49b0-b458-f4c76a472c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c206747-cd41-4508-8d04-edaaea85b442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2cfb5c-ff50-4faf-872f-63e9392242ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821ad55c-a79c-466b-ae6b-05164ee7b3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555db23-a1bc-464d-a21a-1fcb6d218332",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34733e7-207b-4450-8ad1-6f82bd1e685b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246c7753-3ff2-48dc-a73d-808cb7f03293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c448d4a-0ae5-4471-a9d3-1344ebf829a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ee0ba4-e1b5-42ca-b723-81c8bf2f0274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bb6c96-835a-4556-b3ff-aef46b96ac99",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4e3296-2d42-4474-8313-b7a0913effb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5221fb67-b7f1-4480-abf0-2edcc570619b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ddb50e-8a9c-47b9-8bfa-f1b29eb6779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c6c6bf-99c6-4f6b-8b5a-a86fb027107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aa485f-3123-49d0-a3f4-9c5b3162a475",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d62fa75-31bf-4dad-af1a-ffd3dcfc941b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6c94f5-377e-4b15-a3b7-2ef160918994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448d66fb-18d8-47c3-8453-6818fc1aac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb0a9c8-a5bd-4de0-9699-f8d9798d4e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5db187-1f00-45ed-b95f-2c51dd1a5bef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477be263-3612-4aca-be51-2a0f818181d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ea216a-40a3-4c6c-b74a-6c7f74939d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dbf356-66b2-46bc-b818-1e8447061a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa988b0b-85c1-43ac-8266-07628750ae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795c1025-d221-4bd5-9a11-b02db7d98f48",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4488aa48-daa7-4af0-900b-a4d4c98d8370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e273a6-226d-4319-a8a1-e56306458c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed67801-48fd-4028-8f04-ab661aa86e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e82cbea-2c65-42d8-b480-1404d33e87f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac477b9c-698e-4f0b-9bad-9afb5db2577c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6a3db-7a06-436a-9340-91ae4baa5f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9d9550-e17c-4c8f-b0bf-408980fa0910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51635a7-3985-421b-a428-d31a474758a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3399ad-415b-4a7e-a9e2-ceef45e93de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0946dd-ee88-47f9-9c98-52c9daa8546a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e98cd4-9bf2-4ec0-a365-ca242d4d281b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3566f525-700f-4170-a89c-32c8c9296e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb4c48e-698f-409a-a56c-512f11fa71f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344cca18-fcce-4b60-8044-ba810d804367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f400a8-d8eb-4c2c-a770-0aae9de7bc26",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8290d59b-4095-43dc-9d82-e02b8465b711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5861140b-12d6-4a93-a16a-5c8f4278ae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3ef5cb-c9ee-4697-9de1-aa680387037d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfeb1729-c380-4d77-a97f-b0ff84f03452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf38007-c679-4e2c-8503-469b174a64fd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f769205-bb1f-418f-b811-effff5cf3c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84b789c-6a3f-4ebf-b1e9-229598cd4d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6816114a-6d22-4ad2-abac-536b572f6148",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd79e0f-6ae0-470d-b367-1a14a5342e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632877f0-f05a-4b9b-a4be-5ceb25eedfdf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010ef54-2416-4bec-8166-6c3527c7c7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6e2d2e-0ca9-489d-8ce9-b04a36935690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14251a52-7ad5-4b27-ab11-75f57c84dc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d248999-20d8-4d82-86ff-c8ddadce5940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c6794-2e43-4765-b9a4-4f64d1547e2b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b2424-6947-428a-a1e5-0a70429ca3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18113201-2512-4f48-910e-2feb3c12f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e5950a-437f-4644-81de-82207367ae0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf1a7cc-ca6c-4ca8-b44c-262494ef3aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3179dad-b0c9-4da0-8961-4d00551bb4d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357ce6b7-c2d9-4b36-9ef9-0121cbceefbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1dc4d4-871d-4b38-87c2-f09affce2c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862527b4-ef11-4418-b6ce-4919600071c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b1b63d-dfdf-43bb-bf4c-dc79ca0b6b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03651b6c-eb52-43dd-a754-37b96d5e6d7c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1aea77-df6a-4851-99bc-8dfb3dbfa128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a332d4-288f-4cb7-953a-bbd8680067f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c4ea5-1f9e-4dc4-b820-34152d7cbc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64afa63c-863c-424a-aa85-952b6a6aebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5a3739-a3a9-441d-8d25-7a7ed4cc21b0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b65beb-17ea-40b9-a4ab-60caef45cb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a63bd55-0e03-4f4e-b79b-4a72ad9f649a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e6ee80-791b-4074-bccf-671d30fa133e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c80254-a059-45e9-b801-f63c9b95df98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e4a8f8-a8f3-44d8-870c-cc4f48001144",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a0f42-9298-4fb1-b3a8-98940cf98449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7b10e5-73ba-4df6-b07a-f7f2b3330853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589c36e7-504e-4a83-a68f-ecfabf1ee5ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab65c45-bec4-4c9b-a897-9f9c3af5c067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef69a2b6-e521-4abc-868f-f39fe25a999d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33affa0e-c213-4c37-9fb6-cda0c30858c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558ab035-ed10-4b35-a7b5-af3e7d33751e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4be495a-20b1-4fe4-ba60-0f8c4e9f5e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744b9972-8798-441b-8082-ff3477e980d2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f65181a-683c-4e08-947f-10dd65c4eed2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a9fcdc4-49fd-4ae6-8dfe-596089ac6d2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4d3e094-d746-44ba-a37a-99571ab4d7d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19593a36-ea35-4583-9685-3331658a1684"
                    }
                  }
                ]
              },
              {
                "id": "e0646f67-33a2-49e4-80c7-9432ecd8656b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffa71260-c676-4a2e-87fc-810cb2f76b55",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ddded4-75ce-49d0-b87f-8860bfc38a95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d119903-8cad-44b7-a298-921b9d0dbd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3728b1-c4b9-443d-b444-fb7f1f2ebc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab202d87-9c59-4a64-88e5-dd8749bacb21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30544178-cbc3-4009-bb50-2234b65c6b5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9611aa1f-fbf4-45ab-93a4-b31ecaef7fe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77033e87-5a4e-464a-bb1d-5486475e0200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96a984ff-f9a9-4971-b86d-3829e418ea6b"
                    }
                  }
                ]
              },
              {
                "id": "43284535-f1ba-4691-acec-2dc5f74f7c20",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e2164d26-1215-46e8-bd06-d3113a069cf2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667a98e0-c020-4fe0-afdb-56fcd4805d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e4ff4cba-1270-416c-843b-d92b0d6710b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0ca4c-8c08-4241-82f1-7179b9bb1c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7df8de9-c3f8-48bf-97da-ae86eebff509"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3176048-7f4b-452d-9b7a-7a9d2c146d52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "102b5778-ad16-44eb-b0a3-4a4d4d3ff250",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a59fe8e-045c-4c75-8444-8771a86c2642",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a36a680-328a-42d0-83f4-d162d7120cee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2c30643-1ff6-4876-9300-daa22a13b8a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86532915-9010-4ee6-9539-b918d6284e8a"
                    }
                  }
                ]
              },
              {
                "id": "67304d63-c0d3-4cbf-82da-7eb4e35baff2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f53dacbb-63bb-4c85-bd9f-3d61f226c0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9049d8d-8248-4cb5-bb0f-384e5dda6b81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae164db-d945-4d6b-bc14-5f638fbc6e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c282aaa-a329-4dc6-97e6-479132bbd478"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d234a578-545f-43de-9fe2-751f7d79fca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c3f15a68-2a3a-416d-b1cf-7ef1ef977c05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ade9cd4-fc12-4576-a97b-96b701a117b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2240a7b0-4907-41ab-8e90-3411d83bdff2"
            }
          }
        ]
      },
      {
        "id": "b1e13919-402a-4452-bb6c-acb3f21702af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "addc9052-e5ff-4202-b5c7-33e516008c6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca3e3f2c-5aec-404d-ba7a-35ae3e65c6cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37dfeea5-7b03-40e9-8f11-efbc89f89582",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf0b5ef-57b6-4307-b2b1-efab0d6b6027",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "213c4f0d-8a68-49ad-86cd-4f1d6055ddcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b45f9-6f2d-4c8b-8043-636d6cbb06e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abfb918e-efbc-4565-b790-4a160f4622f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3722fbc5-b2cb-4377-b99c-fe795e99d97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bea36607-b361-4bf4-986e-ed4d45c81e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aaee800-b485-4506-b9ad-98ebe6d112c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d96a387-8581-4991-9a64-28d17f65dfa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d06d312-19e3-4584-b0b9-dd48045d144b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f95e7de4-b7d5-4824-9523-72b29a06dae3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2cc748d-f07e-42a4-aed0-1f23b08dd9af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9d49439-7201-4985-814b-ea078da605fb"
            }
          }
        ]
      },
      {
        "id": "297063e6-ef0c-4e90-a342-5e1968dc7af2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6db62b6d-88bd-45e2-998a-91ae08857a65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac6b7850-fbff-4e3a-864a-f52a1a2c2d62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e86ea1d9-5d43-4170-8bd8-756bd4c597ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965442b-9218-49d1-8710-d4648e00d16e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85840824-cd65-41f9-9cad-90e1427f73df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46de0266-455d-4dfb-98ff-9b2dce542c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bca2cb87-f9b9-44a3-9731-464130b758eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f9b0251-1030-4552-aeca-0689debeb9e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79bdc542-f71b-4c39-9215-3b4398b7c993"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c04eed9c-250a-4585-af7d-f48e2c30b276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4e90ced-479b-4222-92f9-566f6b402c47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ea86e44-7735-457f-b0f5-15512d2d3194",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92abe187-c3db-4ee5-831f-d6522ee6d470"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12145e01-fb93-4071-9fe4-96e399ea820f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdb8941e-37cd-448d-b658-5a3968c1e6bd"
            }
          }
        ]
      },
      {
        "id": "47cda832-5b0c-485a-9843-7e3fe11b1ce9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c29b6e5e-3a59-44f8-a741-f72c222312e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cdf2582-2891-4004-944d-96ea8b720c43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ce129ca-9de5-4185-9d3f-123b0b837bbf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a6f1e6-6ed6-4c14-a8a8-10ee4202446b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aaa1a5d-1531-469a-9dc1-e9c22d6fbe66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad52f05a-4461-4ab3-a31b-33b2b04f59ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8ef4ae5-1f74-4bea-8774-1d898b413fab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f1fc0a2-b33a-4928-b1a4-2a8bceb08ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc02555f-b6bf-4152-a2ae-aa401e092d56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc310c7f-3501-4f62-be0c-39340790c6d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71761f00-c553-4bb0-8bb8-da633a6b9134"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae425784-817c-4b64-bee5-3b1e842bc395",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "247550cf-6b0f-47ca-994c-07ac7e75c0b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67d87bba-1071-4e4f-9014-c6e6ad90923a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71d0e426-4bf0-4265-8bca-442f8bde6416"
            }
          }
        ]
      },
      {
        "id": "619e166e-fa30-45ef-9e5c-32ace53b01b1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6949bdd-f792-4717-9806-598872e3ecb8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24d4f02d-4b73-499c-b056-b4ef18269950",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "82aeafcb-0ff3-4ecb-8653-1913be0cf52b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41d5914b-a4d5-4ad2-a12b-2a351b55244b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdab4fb5-1d5e-4873-9ec4-b3b7473f7514",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.1017543859649,
      "responseMin": 20,
      "responseMax": 7753,
      "responseSd": 545.9122866667901,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700699736390,
      "completed": 1700699782320
    },
    "executions": [
      {
        "id": "ca99589f-df8b-48b8-a836-3fb8a9b1de82",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ce1ebc7d-7456-4653-8258-3ea299aced6d",
          "httpRequestId": "4356bafe-d09c-4f7b-b470-cbbdf831558a"
        },
        "item": {
          "id": "ca99589f-df8b-48b8-a836-3fb8a9b1de82",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8d2788a8-ece6-472c-80f0-e6a059978103",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "b3a80f64-d147-4574-a798-81ce4f6cf559",
        "cursor": {
          "ref": "4045c953-47c3-48d2-bd7d-c5d3de85f681",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1835640f-11fb-41f8-b3f1-a3b17826f694"
        },
        "item": {
          "id": "b3a80f64-d147-4574-a798-81ce4f6cf559",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4ae7f0df-d5ba-45cf-81e5-a1b56029105f",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "b384355d-cc19-4a1e-bf3b-13723ce12237",
        "cursor": {
          "ref": "02ebbb4d-166c-4a03-9081-320cddf325c5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b33d284c-a281-4753-9da8-98c9ed856e46"
        },
        "item": {
          "id": "b384355d-cc19-4a1e-bf3b-13723ce12237",
          "name": "did_json"
        },
        "response": {
          "id": "21402ac6-0bba-4240-9575-9934e2ee64b3",
          "status": "OK",
          "code": 200,
          "responseTime": 442,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd709139-b438-4c3d-ac27-39080fd956d0",
        "cursor": {
          "ref": "2cf0ed0e-9973-44a0-8fd4-5bea32b8ac6b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2334e03d-72cd-4bae-a1ec-33a625fa7b29"
        },
        "item": {
          "id": "dd709139-b438-4c3d-ac27-39080fd956d0",
          "name": "did:invalid"
        },
        "response": {
          "id": "159683d1-0747-4ac6-9204-4e12f77228b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 641,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd709139-b438-4c3d-ac27-39080fd956d0",
        "cursor": {
          "ref": "2cf0ed0e-9973-44a0-8fd4-5bea32b8ac6b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2334e03d-72cd-4bae-a1ec-33a625fa7b29"
        },
        "item": {
          "id": "dd709139-b438-4c3d-ac27-39080fd956d0",
          "name": "did:invalid"
        },
        "response": {
          "id": "159683d1-0747-4ac6-9204-4e12f77228b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 641,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1965460-1cb6-4a3c-b0eb-b9c93fea14df",
        "cursor": {
          "ref": "39ffb5fb-c83f-4c28-97c8-afd8a6620660",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "87e210e0-78c1-4da0-b70f-858ce2745c21"
        },
        "item": {
          "id": "e1965460-1cb6-4a3c-b0eb-b9c93fea14df",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f0606c20-b101-4452-8d94-e0c12562c51e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3317c501-e5db-4c65-aff2-c3f9f669c498",
        "cursor": {
          "ref": "077ba2fe-cabf-4918-aaf2-44eb6374e78a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f3fb243-e475-4a0b-93e8-8d5a2f8b6f21"
        },
        "item": {
          "id": "3317c501-e5db-4c65-aff2-c3f9f669c498",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b031727b-bb16-4294-8462-5c73f08b46dd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a58dcf4-5ad7-4a75-82f4-08d05e7a9251",
        "cursor": {
          "ref": "8f93b12c-6d07-4e95-8643-d42b2087dca9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3d601eea-2406-4006-94ce-39da0b5bed82"
        },
        "item": {
          "id": "2a58dcf4-5ad7-4a75-82f4-08d05e7a9251",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "827c8f5c-9dbb-40ff-b846-64f1b77e7458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab93228d-0f39-4703-a9e6-e71dd84e0be5",
        "cursor": {
          "ref": "b79e340a-eaa2-4b01-8971-60874a955063",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "61a83f7a-a6e5-4c7c-bb41-becf45615065"
        },
        "item": {
          "id": "ab93228d-0f39-4703-a9e6-e71dd84e0be5",
          "name": "identifiers"
        },
        "response": {
          "id": "482f25c9-71bb-4ae4-819d-bf8946502890",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a884488d-0fb6-4b2e-8dc2-1911e0d45281",
        "cursor": {
          "ref": "a5659cc4-e119-49f1-b079-0942cfed897d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e7ba24fb-711e-430c-9729-519ed234c194"
        },
        "item": {
          "id": "a884488d-0fb6-4b2e-8dc2-1911e0d45281",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0b10b5a6-c2d5-4569-949d-36b115b4658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae5b56-94ac-4470-928e-fbd3b4d048de",
        "cursor": {
          "ref": "029aefb9-0e08-41be-bb3a-b4a070478c6e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e1caeaa5-9a0f-42af-b2e5-9ce997e52342"
        },
        "item": {
          "id": "dcae5b56-94ac-4470-928e-fbd3b4d048de",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "758a7586-7957-4f82-99f8-e6d099588c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c758bcf-3beb-413e-bc22-95ce1b5a670c",
        "cursor": {
          "ref": "5458cd15-ca59-4a61-a44c-c0a64f842e75",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fee23de-e718-44f7-ac45-0ece2c4dc102"
        },
        "item": {
          "id": "2c758bcf-3beb-413e-bc22-95ce1b5a670c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b9b6350e-644c-4ac8-8d7d-9743d1dc5dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573f3da6-deb5-4669-b64f-563745c8c5a5",
        "cursor": {
          "ref": "9c34100d-0b5e-4d89-b75d-e46837655354",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd424995-f948-46f1-9e41-7eb663f6dddb"
        },
        "item": {
          "id": "573f3da6-deb5-4669-b64f-563745c8c5a5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b70915f2-27aa-481c-8fe5-e94517b5c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc644e-74db-4403-8a68-4e1b2c5d59e9",
        "cursor": {
          "ref": "384e1d23-3b2e-4b97-8ecf-d53f6e79b803",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b0b0f3b3-491e-4947-8270-16df6c886270"
        },
        "item": {
          "id": "e8cc644e-74db-4403-8a68-4e1b2c5d59e9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b526c6c-636b-4a1b-8fc3-25e3d275b745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc32b0-67ff-4dc5-99d3-f7d80e2d1bbe",
        "cursor": {
          "ref": "abc5bbf7-f1d9-4f31-9bdc-dd52e38f5266",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f23b8aa1-d53c-46e9-aafc-5f07c9a71209"
        },
        "item": {
          "id": "97cc32b0-67ff-4dc5-99d3-f7d80e2d1bbe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8fef75ec-4d88-41f4-b354-893df878ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f610e-4e18-4d83-9995-2b935c27b1ab",
        "cursor": {
          "ref": "9b4b0d2f-0229-44b8-9f15-252fa46c068b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6440c5cd-17f4-43ef-8034-4b2595d45cf1"
        },
        "item": {
          "id": "e78f610e-4e18-4d83-9995-2b935c27b1ab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "840f3fe1-005a-4589-97ea-42cdbc10ff55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132443a2-2346-4bf1-8a2f-1acbde20241f",
        "cursor": {
          "ref": "dbea5076-437f-485e-a807-d35d5834c4bb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d8162fbf-7ff3-40a9-a2c9-8a6054423c09"
        },
        "item": {
          "id": "132443a2-2346-4bf1-8a2f-1acbde20241f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "843e0c43-7e31-4965-a90f-4df598b71cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6783d7-d931-4bba-addb-887dd615ce2e",
        "cursor": {
          "ref": "53b80d00-0721-47b9-aea4-bbab02fe26a2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2dab3d41-84cc-4740-b566-c8bc15dc7b75"
        },
        "item": {
          "id": "bb6783d7-d931-4bba-addb-887dd615ce2e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a965cbb3-ee75-4f21-9305-63c036130ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52e7f1-8116-4537-9b68-fb675b3860c0",
        "cursor": {
          "ref": "6f0a8de1-54b4-4769-bb7f-dcb3d4b0abd2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03cc687b-ea8f-4ef7-b52d-43cd9e1cea79"
        },
        "item": {
          "id": "0e52e7f1-8116-4537-9b68-fb675b3860c0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c73dead3-a292-40e3-b02e-e97be53e5d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761daa5e-d84f-4bca-85fd-b4eabfafd481",
        "cursor": {
          "ref": "f7e1d5ea-c000-4c47-b549-fbc3a311f6f9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "111e1c1e-3f7a-408d-a592-22294d4dcef3"
        },
        "item": {
          "id": "761daa5e-d84f-4bca-85fd-b4eabfafd481",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "46afe327-6082-451c-a064-45662b832b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb96386-6db6-49e8-92b6-f2c495cd6d2c",
        "cursor": {
          "ref": "dbf62f2d-5fac-46ef-8d24-5e7b930c0de5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9865b93-8562-4176-b4f3-47863c825893"
        },
        "item": {
          "id": "8cb96386-6db6-49e8-92b6-f2c495cd6d2c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "527841b6-bf9f-44e1-b146-d6193442f6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d760a2-e720-4abf-80c0-6b1575661231",
        "cursor": {
          "ref": "a23bffd1-17d1-4d9e-b94a-b0a0b800f05d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4a40bb8a-6894-49fe-8df6-0ddb3387e809"
        },
        "item": {
          "id": "a0d760a2-e720-4abf-80c0-6b1575661231",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "23306118-2903-4e27-9da7-97dfff6ae974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27043450-eb39-41e4-93c4-b92d0f0c8b70",
        "cursor": {
          "ref": "cddbec0d-917f-48ec-a13c-39ace839884f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "714e26ed-a6d0-4c5f-bf3c-7fef67a73c43"
        },
        "item": {
          "id": "27043450-eb39-41e4-93c4-b92d0f0c8b70",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0226ae87-fcf2-44a9-be67-06a65faee365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efccc190-1e05-4bed-8a37-d57f648aa137",
        "cursor": {
          "ref": "16b3c21e-3b50-4967-92ac-31cafa8533a0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f8a5724a-2eee-4791-a9d1-0cad15e3e777"
        },
        "item": {
          "id": "efccc190-1e05-4bed-8a37-d57f648aa137",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5dbe58b7-f389-4e6e-b5dd-6180a87b0d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c024ab1-1c42-4e83-a779-52b3c1c33317",
        "cursor": {
          "ref": "425c7472-b8dc-4b8c-8df7-7a6f30a4daed",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "481462b5-0881-47cc-8ac1-0da68a53c768"
        },
        "item": {
          "id": "5c024ab1-1c42-4e83-a779-52b3c1c33317",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "be304240-c7ad-4085-a6e0-06eaab60e1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f47767-3214-4863-b3b2-3a4f8ddae276",
        "cursor": {
          "ref": "ee952f04-b78e-4aae-a22a-374e02f5e6a7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b25cd325-0134-4cda-bf18-da914b093bee"
        },
        "item": {
          "id": "f8f47767-3214-4863-b3b2-3a4f8ddae276",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5cad8bb0-b020-4a1b-8a92-b3637012e21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf240e9-8ffd-468e-8437-42034efe8c80",
        "cursor": {
          "ref": "c2cc40ce-a7fe-4c6b-b737-275269edb7e4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9e541df2-2f90-47de-8728-62ff30aad213"
        },
        "item": {
          "id": "5bf240e9-8ffd-468e-8437-42034efe8c80",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "33583ed7-c5d1-477a-aace-0211c1253b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74b72e5-4bca-4b41-86d0-018404702ce4",
        "cursor": {
          "ref": "9357a4bd-8aa6-4326-b9f4-ecfe2b430a79",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55b42f61-03d4-4c1e-8b7d-d5452c485096"
        },
        "item": {
          "id": "e74b72e5-4bca-4b41-86d0-018404702ce4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e25971e8-ce6f-4169-ab9f-735c115015f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e1f2d5-5c44-4c22-8281-de296102f6f4",
        "cursor": {
          "ref": "53a29588-9aec-46b8-808a-de78b9688312",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "81017de3-c0b8-4730-b8b7-62b921355372"
        },
        "item": {
          "id": "93e1f2d5-5c44-4c22-8281-de296102f6f4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0d4e5fe6-4153-48bc-a790-52b3053c1205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f836b78-06e0-456e-a6da-a6e15b15fb46",
        "cursor": {
          "ref": "806fd4d3-cd80-4965-967f-7e003f142867",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "75f0350a-a10a-4343-aa28-cca5badcde02"
        },
        "item": {
          "id": "4f836b78-06e0-456e-a6da-a6e15b15fb46",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "30d40a6f-e3b0-4dfc-a12e-fcd6b8d52518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea0cae3-a2e8-4e16-97cf-9d4241e12a9a",
        "cursor": {
          "ref": "c4862141-c56b-4403-8d1d-0dff1601e09c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4138883e-7fa3-4f47-9ffc-2fdb2932f958"
        },
        "item": {
          "id": "3ea0cae3-a2e8-4e16-97cf-9d4241e12a9a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6d58d94-4ef6-4b1c-a2ef-49d7156d2b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406d8117-b480-44bc-bbd2-eef862180b6d",
        "cursor": {
          "ref": "2a2d4ca9-bf29-4a51-b7f5-8367f00b4929",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a539358b-631c-4b27-966f-4b7d52d28323"
        },
        "item": {
          "id": "406d8117-b480-44bc-bbd2-eef862180b6d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ceb0dd0b-f47e-4be1-9492-c08aa8edddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ee321-0d4a-44c8-9c2e-34326f2199ca",
        "cursor": {
          "ref": "ce5a7946-3e8b-4e60-b96f-e42f3450b56a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "eead9186-8fbb-42b0-be20-9161c1fb09bb"
        },
        "item": {
          "id": "2e2ee321-0d4a-44c8-9c2e-34326f2199ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4a729c3e-5e5e-461f-ab28-abbc9feba36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0caaeea-425b-4eb3-b3d3-f550e79ff523",
        "cursor": {
          "ref": "60c469cc-6cc5-4c91-b599-ed8596ae974b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b9df02de-203b-4aa9-9099-2cb1561ea194"
        },
        "item": {
          "id": "e0caaeea-425b-4eb3-b3d3-f550e79ff523",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4cafcf54-75db-4867-9306-2684d7a35b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d426986b-bb8c-47de-9d7d-6610ab720b31",
        "cursor": {
          "ref": "383bebbb-1586-492f-9021-b78dd01a0dd1",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5d6bcb66-6166-48fd-9de6-856b8a4663b4"
        },
        "item": {
          "id": "d426986b-bb8c-47de-9d7d-6610ab720b31",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d0ee924-b627-47e6-9763-8d8f0b925f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1e74cc-284a-451a-80c8-c0c6988c448c",
        "cursor": {
          "ref": "ab101e3a-2ba0-4a6b-9618-00d97da8297a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "17190e16-88b4-4b63-9d8c-5bd5720c9d7e"
        },
        "item": {
          "id": "0c1e74cc-284a-451a-80c8-c0c6988c448c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4203c1f4-bad6-4bb2-9663-f391c97f6790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaa5327-7432-42c3-9f3f-021446669930",
        "cursor": {
          "ref": "0edc2350-7512-4430-9478-8f695a62b4b3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aec3ccf9-7256-468e-a5e9-b71b48ad4f5c"
        },
        "item": {
          "id": "ddaa5327-7432-42c3-9f3f-021446669930",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "340bb558-93e5-4fa0-9471-b257265b436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abc3dc8-1635-4bd5-af31-928b71f97074",
        "cursor": {
          "ref": "b07cf462-ca85-43b0-9466-a16b7f34f315",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ae3e65f9-5664-4f6e-bce5-5598dccabbf4"
        },
        "item": {
          "id": "5abc3dc8-1635-4bd5-af31-928b71f97074",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5aef7f8a-524e-4b49-99d0-6ba5b4a846d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54a68f7-7bbe-43d3-ba54-da9287d92694",
        "cursor": {
          "ref": "7720dfce-dd57-4f5c-9166-8b783fba5340",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e4e3c90f-2808-45cd-badc-02fc17f4afe2"
        },
        "item": {
          "id": "a54a68f7-7bbe-43d3-ba54-da9287d92694",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "83caeea4-dd4a-415d-a8b4-89ff4768d5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65159f4-c85e-4eff-8046-bcda4c566675",
        "cursor": {
          "ref": "3b30f19c-ac22-4c56-9ade-e51d9df88b48",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "647e72fa-5d60-418e-adf3-0cc4bee49d6f"
        },
        "item": {
          "id": "a65159f4-c85e-4eff-8046-bcda4c566675",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "41300740-166d-45f2-971a-7441f9b7aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2bcd51-c6ea-4dd0-b2a7-fdb46a132e43",
        "cursor": {
          "ref": "c0faefab-3643-4564-bdcc-b777aa2e5c46",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "464d7446-5a84-4e6b-aa4f-e10d195151b6"
        },
        "item": {
          "id": "ca2bcd51-c6ea-4dd0-b2a7-fdb46a132e43",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ac66a7f8-9c70-494c-b84b-bcf76d049739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac39dcb-ebe2-4f49-9651-302281928aec",
        "cursor": {
          "ref": "bfdba73e-3044-43b4-983d-faaea7bd43e7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a38465c-efc2-4549-b467-43c92aa40811"
        },
        "item": {
          "id": "eac39dcb-ebe2-4f49-9651-302281928aec",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "58f1761b-f469-463a-b5ae-dac478248c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d65fe-5265-48dd-977b-8f21546daa7b",
        "cursor": {
          "ref": "6e7c5313-7c05-46e9-8db9-d3cfd55a560c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c056fad4-e6d3-4834-bfc2-c9214d950498"
        },
        "item": {
          "id": "e21d65fe-5265-48dd-977b-8f21546daa7b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ae6c015-9f42-4947-b19b-b097f6920f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818002c7-cac3-41a5-947e-7e6f0182dff1",
        "cursor": {
          "ref": "ffcb35ba-d5f9-459d-a9a5-ed83f054cbcf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7abf0699-59b2-4f32-bfeb-8bf6f38d83cc"
        },
        "item": {
          "id": "818002c7-cac3-41a5-947e-7e6f0182dff1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b00eff4f-b220-4329-8418-048c9952b069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3fc1c0-99dc-4c47-8874-59b71fcf3473",
        "cursor": {
          "ref": "c4f7fdee-40c7-426c-94bf-455ec3740083",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3e40b066-4823-4524-8e52-762c36646d12"
        },
        "item": {
          "id": "de3fc1c0-99dc-4c47-8874-59b71fcf3473",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bf9654a0-9b28-49cb-9fff-9adc5ad108c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e3fa4-f9d3-4453-ba3b-92bd5710099a",
        "cursor": {
          "ref": "93a8b295-8c8e-4e8d-8171-3bc7c10ef364",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "438d3dfd-590f-4bee-bdca-0f2211e4f020"
        },
        "item": {
          "id": "0e5e3fa4-f9d3-4453-ba3b-92bd5710099a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d38ea576-b5e8-49d9-b3e7-d1cda7576565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4da1ae3-6824-438b-b8ff-88a1d6c11905",
        "cursor": {
          "ref": "4c117795-ff65-40b0-bd5a-9f1f1e2e7716",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2dd41c59-b000-4f58-8333-cd13057fe8d6"
        },
        "item": {
          "id": "f4da1ae3-6824-438b-b8ff-88a1d6c11905",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8a86ad1-1b72-4803-86d8-7401668bcc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b79dc8-f474-4f19-b85a-8a4544590143",
        "cursor": {
          "ref": "4554da16-d17d-4eb6-acae-6a3c7b44ebb1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e9682868-970e-4cfe-ac45-723123e626b5"
        },
        "item": {
          "id": "36b79dc8-f474-4f19-b85a-8a4544590143",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "31083aa1-321b-4f51-8b41-5e19263ef62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d03a818-08ad-4eb4-b534-770b0dbb19e6",
        "cursor": {
          "ref": "89f33b04-8959-4df8-9f91-c336bf8edea9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "faeaeca1-a672-433b-b65f-f1b44255e0bc"
        },
        "item": {
          "id": "8d03a818-08ad-4eb4-b534-770b0dbb19e6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4add695c-09cb-49be-b9d2-356d7cc47685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4ae3b4-e010-4997-96a9-3b40b7f6b520",
        "cursor": {
          "ref": "e5b18f06-a367-48ce-9eb5-e5334cc254f5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "65b85ed9-c0b3-48cf-876c-77a5956945ce"
        },
        "item": {
          "id": "4f4ae3b4-e010-4997-96a9-3b40b7f6b520",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "492c3b01-5d58-44a8-a7ec-3958d1455429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49b8e8b-b1ff-4830-a5fc-c072f38837c3",
        "cursor": {
          "ref": "066d8f1e-3aa8-4622-b883-9f5da86bec6d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c349fc41-5aa1-4d25-9a97-f9b763df9d1f"
        },
        "item": {
          "id": "e49b8e8b-b1ff-4830-a5fc-c072f38837c3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "14bd90df-3dc3-452f-b792-aafdcb9ef856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7802a-77ba-453f-b0ff-3febcac81375",
        "cursor": {
          "ref": "bdfc7467-d542-49d9-9414-38fa25c5ebf3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2f8b310d-1f0a-4798-82f4-508b5abd3d83"
        },
        "item": {
          "id": "48e7802a-77ba-453f-b0ff-3febcac81375",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e392096e-b9c7-43c8-a0c0-40381325e052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8537acba-bb96-483a-a167-2fdeb0b1a936",
        "cursor": {
          "ref": "fac1396e-a2ff-43ad-8088-95cadd30fff4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3715e80f-7535-4431-8084-0591bb15e06b"
        },
        "item": {
          "id": "8537acba-bb96-483a-a167-2fdeb0b1a936",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4a67f0a0-c758-49ce-9a4e-10270f34b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14e6f4-8592-4ca7-b2d2-5636642f82d8",
        "cursor": {
          "ref": "7620aba6-90ad-49dc-8731-a6d87fb50f02",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9b12c929-a309-49a7-b475-44c5791e96a1"
        },
        "item": {
          "id": "ee14e6f4-8592-4ca7-b2d2-5636642f82d8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5903967a-749b-4366-a770-c9facf95a014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e82a4b-4456-49de-981b-22e1bdc58466",
        "cursor": {
          "ref": "6e95f0a7-833e-4a34-8aa4-c514c5a74021",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3fa1ad68-c25f-4020-95ab-f1626a47b858"
        },
        "item": {
          "id": "26e82a4b-4456-49de-981b-22e1bdc58466",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "14dffb0c-5849-441d-b7b4-c215c9e676b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a336e005-d2a9-4fbf-b1da-7b5e2eec03ad",
        "cursor": {
          "ref": "e289498a-5b68-45f3-8fb9-4a816efb40be",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c4539a90-2539-4af6-b4a9-70ae05314a76"
        },
        "item": {
          "id": "a336e005-d2a9-4fbf-b1da-7b5e2eec03ad",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "44c962b6-18a7-46ad-903c-a6c6004da140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c2b01-4a4b-44fc-989e-5cb691f2b382",
        "cursor": {
          "ref": "d1bbbba4-ff72-48be-8215-f439faa789ed",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b9cccf72-4226-4e3d-924b-bcfb420a7ce0"
        },
        "item": {
          "id": "f15c2b01-4a4b-44fc-989e-5cb691f2b382",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "47b4f9df-4db0-456c-91a8-58cf6ec3a5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22f2173-ff7b-43bc-9ae7-868aeeac20ba",
        "cursor": {
          "ref": "250df4ad-5035-400a-b906-2c69d91dd04a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cdb1f2dc-924a-4bb7-bb19-99c5fe199308"
        },
        "item": {
          "id": "a22f2173-ff7b-43bc-9ae7-868aeeac20ba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b051586b-761a-422c-b918-2eb88bf14c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b6435-774a-4a6e-9248-7aa0c482e985",
        "cursor": {
          "ref": "ded400ae-b566-44c7-81b1-818be5fac97e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "75c7398a-731d-49a9-800d-32699a0ff3f0"
        },
        "item": {
          "id": "808b6435-774a-4a6e-9248-7aa0c482e985",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d93fa3bb-bfcf-4e44-b5e7-2ea778f60261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d15024-2c8e-43e7-9856-12c24b81873b",
        "cursor": {
          "ref": "3cece179-7dcf-4e18-a0d9-0189235a4dca",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "72fda1e8-469f-467a-8866-65f85ed90ddb"
        },
        "item": {
          "id": "e7d15024-2c8e-43e7-9856-12c24b81873b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "05f788f0-3c6b-403b-b301-28947b67ac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b7d4c2-0af2-446b-92ca-2cbb20c0bf19",
        "cursor": {
          "ref": "33b4954b-b294-4f84-b95c-8df47eb90ecf",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1a52f06-1ecd-4198-8724-e383eb85b5c4"
        },
        "item": {
          "id": "99b7d4c2-0af2-446b-92ca-2cbb20c0bf19",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "23e60524-dc84-44f6-b2bf-e0470d97dad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ffc3d8-2ede-4292-932b-6c17d36dd0c2",
        "cursor": {
          "ref": "bb326c75-fd05-4ad5-90fc-44c44dc5aa22",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e22111e4-9bab-44fb-9163-2e2b402d6c51"
        },
        "item": {
          "id": "02ffc3d8-2ede-4292-932b-6c17d36dd0c2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76fc43f5-f67a-4e0a-8922-7bbd0d1b73ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d3f92e-f515-4c68-a7df-339c2159471a",
        "cursor": {
          "ref": "bf884a51-19d5-4dd1-94aa-d8ca7fa4606b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b17b1d51-2b7b-46cf-b851-f19385d2b5ea"
        },
        "item": {
          "id": "32d3f92e-f515-4c68-a7df-339c2159471a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f7c5102-3dd0-46b8-bdbb-121608cc509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81590225-4d7f-48b8-9c9b-f73b0ef6e7d8",
        "cursor": {
          "ref": "d4fb6467-3c38-418d-9449-e3ca7d6f1d3b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5078a0ea-f846-4b17-bace-453c607e0873"
        },
        "item": {
          "id": "81590225-4d7f-48b8-9c9b-f73b0ef6e7d8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2ad1c248-6478-4f87-8fda-6a8320278d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4496cbbc-d929-4a19-bc9b-5c963a28055c",
        "cursor": {
          "ref": "c33fcd52-103f-4af6-bf96-338974cb8b21",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a11798fa-40e4-41b3-ae22-2c6ccdf24d46"
        },
        "item": {
          "id": "4496cbbc-d929-4a19-bc9b-5c963a28055c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d15318c8-8397-4017-a0d9-4a4e96bb0372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcf9b16-389e-47b8-8107-9262080fdd7c",
        "cursor": {
          "ref": "8f96c0cb-d9a6-47e0-8424-fe85ca94c2aa",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e9556c55-a723-43fe-b347-27206dc70e14"
        },
        "item": {
          "id": "9bcf9b16-389e-47b8-8107-9262080fdd7c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8971abac-f01c-4bfe-9d32-8b54e5e3d750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a49980e-a646-46b0-bade-add4b2c17960",
        "cursor": {
          "ref": "f49702ec-7053-4821-8b6c-c56d110a1d7b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1f824ac-3e76-4e47-a5ab-dc28146a2fe6"
        },
        "item": {
          "id": "3a49980e-a646-46b0-bade-add4b2c17960",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "342f8c11-ec01-42b5-9bdc-99d4697348af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f417313b-bf9f-4445-935c-7be324a46aa5",
        "cursor": {
          "ref": "d262f763-5ad1-4b98-96f4-d5f96cc31092",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "72de5a96-4909-4ca9-a47d-a16f03dbe1ec"
        },
        "item": {
          "id": "f417313b-bf9f-4445-935c-7be324a46aa5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1306a55-32aa-45d5-bcfc-85588b39712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025f15d7-f1e9-4330-b69d-48d8a5d46285",
        "cursor": {
          "ref": "aab03784-6a0e-4d0b-a81a-532ff6e749fc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "199900ed-48c4-48fe-b4b2-6ca6f9eda7e0"
        },
        "item": {
          "id": "025f15d7-f1e9-4330-b69d-48d8a5d46285",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b119a9d-ff2d-4268-a97f-ea9dbac1d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d4e643-9498-4b54-bf2e-5fad0a2f801f",
        "cursor": {
          "ref": "9407f60b-e970-4be0-b220-d2a0f0bc837b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5a251c80-1f43-412e-ad4f-de3aeba222b6"
        },
        "item": {
          "id": "b8d4e643-9498-4b54-bf2e-5fad0a2f801f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad2ca83e-a3df-415c-b776-d1f3ed845132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a2aee0-f006-4a7c-8b78-1dccda067c18",
        "cursor": {
          "ref": "9be14011-63a5-4143-a73c-18269ba79e6c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9a31b4f6-5503-4986-91c1-990b46a6ca91"
        },
        "item": {
          "id": "31a2aee0-f006-4a7c-8b78-1dccda067c18",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9645c1f5-9b08-4ed2-9934-6ed89cfe4fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9b6def-7ce7-442f-b990-0e4b591f9b1b",
        "cursor": {
          "ref": "f35a7341-fbc3-4360-aa56-8f45f5c3f2c7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2b308e16-333a-4b4d-a398-9dcaadf3f809"
        },
        "item": {
          "id": "ae9b6def-7ce7-442f-b990-0e4b591f9b1b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be86015e-8857-472b-a448-47bb28a4df17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e3528-f599-402d-a736-064358e6a3b4",
        "cursor": {
          "ref": "b34ef6e2-ae81-40ec-8681-b3f954fdbd64",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ef0e464-5544-48b0-ab82-cfdcb9a5b455"
        },
        "item": {
          "id": "af8e3528-f599-402d-a736-064358e6a3b4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bba29c71-acc5-49d3-954c-518e1fc12cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1221c76e-d550-4869-89e5-481d2a102a5b",
        "cursor": {
          "ref": "78c9e354-8b87-466c-888d-ee1c005edf31",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ee0cfd27-3fa1-4b3b-bf5c-9e55ac59c00c"
        },
        "item": {
          "id": "1221c76e-d550-4869-89e5-481d2a102a5b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "92e5aa33-4daa-43ce-a7a1-93fe8515bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c263d6f-99f8-4c2a-8c2d-d8064ff9145d",
        "cursor": {
          "ref": "e24892b0-9c07-4369-b41b-c51b0aada02c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3df0d84b-79af-4eaa-a6c2-49b36f7e0715"
        },
        "item": {
          "id": "1c263d6f-99f8-4c2a-8c2d-d8064ff9145d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aaf8d7a9-fc3c-451d-b783-b4b937d2a051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592db44-fd52-443e-b823-7d6ad04ff5e7",
        "cursor": {
          "ref": "56fd2440-4fb0-46db-a521-d535f46aa4c4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f1a47ba4-53de-4f12-8b17-da502680dd26"
        },
        "item": {
          "id": "b592db44-fd52-443e-b823-7d6ad04ff5e7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66a293f0-b4cb-490f-af45-7a053757d5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935d697a-9a19-497a-b309-151cb8dabf0a",
        "cursor": {
          "ref": "1caa2ab4-0c23-477a-b8a3-59124da755cc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb15cc72-b197-479c-8239-483f04eb83b0"
        },
        "item": {
          "id": "935d697a-9a19-497a-b309-151cb8dabf0a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "345c3859-6831-42c2-a2d1-3cc4c34bc09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4ad808-318f-451c-9658-ee19d102103d",
        "cursor": {
          "ref": "4dafd979-c651-4c99-b3aa-dd1e74df4081",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a2939672-6485-49d7-b3a1-5b04b55abb1d"
        },
        "item": {
          "id": "ed4ad808-318f-451c-9658-ee19d102103d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c583fb14-4244-4c2f-a606-9267cd92ac19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ff1e2d-ab22-41c3-ae71-74a868dee808",
        "cursor": {
          "ref": "b68e7468-6e29-4445-a34d-ae68079719f0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "353d9097-d208-499e-a453-67973f5c053a"
        },
        "item": {
          "id": "76ff1e2d-ab22-41c3-ae71-74a868dee808",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "18211e9b-7312-45c2-a092-17b675f5b798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2663d1-f3b8-4dfe-bb2d-326059220694",
        "cursor": {
          "ref": "78337d53-3646-4a61-a531-efc89ce39c5f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cd760d7e-8a4f-4178-b0d6-4a3fc6b9eb86"
        },
        "item": {
          "id": "ef2663d1-f3b8-4dfe-bb2d-326059220694",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08f9093f-a0ee-414f-85b0-31c076e72031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85791606-f673-43c5-8776-30552e6d247a",
        "cursor": {
          "ref": "ff45dc16-9137-4b3d-89d5-63e5d8f57032",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "22ae5aa2-6687-4dac-a78a-550f435e610a"
        },
        "item": {
          "id": "85791606-f673-43c5-8776-30552e6d247a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88007699-a142-4dfa-a1fc-f6a01bb6735c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a0a156-c6ca-460f-9599-eab165e954ae",
        "cursor": {
          "ref": "6d88b720-b44b-4d3a-aec1-d7f05f2a1e83",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "03e7258b-9c19-4d6d-a85b-444f6c7e21cf"
        },
        "item": {
          "id": "d7a0a156-c6ca-460f-9599-eab165e954ae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "815e172d-641f-44bf-9876-14d15507acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cf79a3-1a38-453d-8875-8175202cbd87",
        "cursor": {
          "ref": "3094d819-deb0-4ec9-9561-16b0ac0f9361",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "caa39e30-e605-4ed6-8fa2-6cdbc8aaa3bd"
        },
        "item": {
          "id": "49cf79a3-1a38-453d-8875-8175202cbd87",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "76117013-9b12-44d0-b3a0-da3ec4cc8893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fcc48f-4d97-4ad3-b519-efba47930677",
        "cursor": {
          "ref": "7ef23b42-81b0-43c0-9003-492701ec748d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c7034925-e9d0-4d9c-b786-43d19ccc0c55"
        },
        "item": {
          "id": "50fcc48f-4d97-4ad3-b519-efba47930677",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "97f945ee-0205-4b83-aa27-1b3d578aea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd9a102-879f-4402-94d9-dc9efe6098dc",
        "cursor": {
          "ref": "947ca240-a9d4-4d41-81b4-6bb0d9776788",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b821af57-7394-4d10-b54f-e90e9622dbd9"
        },
        "item": {
          "id": "8fd9a102-879f-4402-94d9-dc9efe6098dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fd701d61-421f-410a-b837-a928c3ce45bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17efa4b9-60a6-4aee-a893-e14c77c32b0a",
        "cursor": {
          "ref": "b5375346-fd90-42ee-8237-5b5186a5ee10",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cdd694ed-0551-4910-8022-e88e574abb54"
        },
        "item": {
          "id": "17efa4b9-60a6-4aee-a893-e14c77c32b0a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d1ff66b9-9b2b-4cc3-a3a0-a50ffd172fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b217a3cf-0d8a-449d-9ce0-6e745e4e6370",
        "cursor": {
          "ref": "a604eac5-2625-45b1-a5c1-965d6dcc36ae",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a0ee8e33-32c4-4bd3-b724-da8fd81b9e84"
        },
        "item": {
          "id": "b217a3cf-0d8a-449d-9ce0-6e745e4e6370",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0b34d9e9-99cd-4a83-aff3-611ca05c9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e8c2e5-a9bf-4d05-b4c9-0ffd31952a88",
        "cursor": {
          "ref": "6dfa5f00-0ef1-464f-8a13-e57c1907715d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f6e7059b-f9a7-465f-bf73-8f02ac40382a"
        },
        "item": {
          "id": "98e8c2e5-a9bf-4d05-b4c9-0ffd31952a88",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d408a380-dd26-4c19-a869-1355aa14cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24705be0-351c-47d4-a025-2622d654fd50",
        "cursor": {
          "ref": "79fb6f19-63f1-4de1-919e-ffa7aeb2952d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0e30ab23-0d61-4830-9dec-c0cddcf3899d"
        },
        "item": {
          "id": "24705be0-351c-47d4-a025-2622d654fd50",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5ed700f3-e4c5-4ff9-aee4-e494fedb7ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81073b8c-7e28-4c53-b754-009d421a16c1",
        "cursor": {
          "ref": "a00d23e3-0e0f-48f5-9c1b-92b4cf57b9c0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e955a562-b13b-4e06-b7eb-6aed7ece52ce"
        },
        "item": {
          "id": "81073b8c-7e28-4c53-b754-009d421a16c1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9a94a93e-426e-42f6-9649-113f53643998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ec3d7a-c818-4e03-bbcb-f8ff33071361",
        "cursor": {
          "ref": "451a83ad-c60b-4ea9-b9f7-c59cc4dc1a95",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "024a3dfb-90d9-483e-a2bf-cda4e19f79bb"
        },
        "item": {
          "id": "57ec3d7a-c818-4e03-bbcb-f8ff33071361",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5ce1b0a2-3d94-439b-9f8b-94530ed095b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b934b82-40e5-4a77-a091-3edcf5907099",
        "cursor": {
          "ref": "e78a6287-f3e3-476a-8eff-e4cbae984099",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2439c7c3-fb32-4be1-a11f-2a024a4599e6"
        },
        "item": {
          "id": "2b934b82-40e5-4a77-a091-3edcf5907099",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4088e8d1-b668-4281-b3d6-100a0639dbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c1b5a-c396-451b-adb8-ec625c6b452f",
        "cursor": {
          "ref": "d3dc93aa-5745-4577-84fb-4b838bb5830b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cc384355-7b30-400c-9fcd-eb1787f1bcdf"
        },
        "item": {
          "id": "839c1b5a-c396-451b-adb8-ec625c6b452f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "137ee933-842d-4190-bdd5-1409001180f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ba6d8e-1f62-4583-aad2-2ac7012b1ac5",
        "cursor": {
          "ref": "5102f83c-9e43-4ce1-a119-3e35e6621df0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc313164-dfcd-4904-b785-5c115775e203"
        },
        "item": {
          "id": "f5ba6d8e-1f62-4583-aad2-2ac7012b1ac5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "225a2943-bb14-441d-bde1-215d19386ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58b1ffe-5744-4a54-96b0-feb6b737b669",
        "cursor": {
          "ref": "0bc6f52e-cc51-4184-9ae0-c893102f664b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d8051bc3-65c6-4af3-8a6d-3de2817e2f85"
        },
        "item": {
          "id": "d58b1ffe-5744-4a54-96b0-feb6b737b669",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0654c09f-6b80-45b3-a69d-c5e6f230f70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf243de3-76b1-4a0b-916a-c0927a11bd55",
        "cursor": {
          "ref": "3545f911-642a-43f6-b653-e0ab8ef77f77",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8036608-80e2-4083-af71-74325d74ae2a"
        },
        "item": {
          "id": "cf243de3-76b1-4a0b-916a-c0927a11bd55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ca07a997-e66b-4d36-b7ee-84950fefd26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c249cd5-9afd-4cd8-aebf-58e735939ca0",
        "cursor": {
          "ref": "f3b3d535-fc4a-41c4-bc04-06661f7598f4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "aecbd6f5-8131-4127-a619-d98eeafd8449"
        },
        "item": {
          "id": "2c249cd5-9afd-4cd8-aebf-58e735939ca0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6beb3a45-e4c2-4027-853a-63ba1c5f3592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e15402-575a-4342-8797-0e6a00c75f6f",
        "cursor": {
          "ref": "c7ac6d5e-63ee-41ea-b9ec-500d558c4150",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "56b77cff-c0ec-4e8f-9ebc-2f9fc99cb749"
        },
        "item": {
          "id": "b5e15402-575a-4342-8797-0e6a00c75f6f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea15aca1-fe97-438d-85b3-fdb1d1d78df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb88ec-6e20-456a-9de9-3099b6898d90",
        "cursor": {
          "ref": "c2e896d3-1b82-4574-815e-47d5684a2023",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b1c3acd2-bca4-4b25-9329-9840c0adaf5e"
        },
        "item": {
          "id": "8bcb88ec-6e20-456a-9de9-3099b6898d90",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5dc9b693-bb12-4282-ae01-ed8e106a6705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af47e5bf-eb8e-493c-9cac-b092fe1a2f53",
        "cursor": {
          "ref": "a8dca5df-cfa9-445f-bfa0-a0e8c558d6df",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "064faaf3-b755-4aa5-be49-12bb7a52f90f"
        },
        "item": {
          "id": "af47e5bf-eb8e-493c-9cac-b092fe1a2f53",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "87b973be-f21e-4ea1-b3a6-c5a06100eeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87133ff-0bd9-4d6b-9283-27e24692e280",
        "cursor": {
          "ref": "d8ea3f99-06b8-42ee-94ea-d16d5a4ed7f3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3e798cc5-d568-4d81-ab36-e2d1ddc642e7"
        },
        "item": {
          "id": "f87133ff-0bd9-4d6b-9283-27e24692e280",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2fcb0078-ab31-4134-8348-823a87993667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4362da3f-e4e8-46e8-bd68-a8a1a8e57860",
        "cursor": {
          "ref": "39541477-2b20-4680-ba0d-7062fbc29799",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dcaeb057-bae3-4852-9695-0a0b3388e03b"
        },
        "item": {
          "id": "4362da3f-e4e8-46e8-bd68-a8a1a8e57860",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d4bb1651-a70f-4d2c-a7bb-b29897baa379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631132ef-763a-4233-a620-35ff821a9bd7",
        "cursor": {
          "ref": "e107689a-7ac1-4532-8a4c-eb46847c76bf",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fdb4356f-2a3a-411d-aedb-6e43aad0e028"
        },
        "item": {
          "id": "631132ef-763a-4233-a620-35ff821a9bd7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c333fcc1-c546-41dd-b0a1-eda7a98bd850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3f719ef4-9abd-4f63-a049-96dad5f7fddc",
        "cursor": {
          "ref": "f51fcc30-a6ed-490a-844d-7f14e8656e93",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "653263d6-45c4-44a3-bd09-452a4dd6d3d9"
        },
        "item": {
          "id": "3f719ef4-9abd-4f63-a049-96dad5f7fddc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9e64ac16-c0dd-4e52-9016-9480f62fb7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e71f835f-3110-4270-ba56-08b925789af0",
        "cursor": {
          "ref": "6a63dfb9-f2bc-481c-b6c7-90757b323267",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5f1ca4b6-58f0-42e8-a25c-f70dc517dd47"
        },
        "item": {
          "id": "e71f835f-3110-4270-ba56-08b925789af0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f336f797-7f4b-479c-93f2-62b7a671d09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ea852a51-005a-4034-bb51-775bdea812bc",
        "cursor": {
          "ref": "9c80b793-a281-4f46-b257-c46b0d03ec4e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7bb7b382-f3f2-4115-a65b-eeff1b17863c"
        },
        "item": {
          "id": "ea852a51-005a-4034-bb51-775bdea812bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "10e6ea8d-04b6-4006-937d-4887ea692b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "18699203-3982-4362-ad62-b5720a423e26",
        "cursor": {
          "ref": "18419907-59ae-458f-b5f4-19a7c74eb529",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8a2a322c-3e7a-4d94-9aff-ee724e09ea02"
        },
        "item": {
          "id": "18699203-3982-4362-ad62-b5720a423e26",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6ab9dd1b-7b10-4a5a-ac26-8708cf8f4d0c",
          "status": "Created",
          "code": 201,
          "responseTime": 7753,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51f3477-4397-47ae-9d7e-752768e45a2c",
        "cursor": {
          "ref": "4d0cc8ee-b81d-4262-9740-e25393c49119",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f78ab3f2-3018-4bac-952c-89356e3ea765"
        },
        "item": {
          "id": "d51f3477-4397-47ae-9d7e-752768e45a2c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4e7b116a-473c-4b97-9262-0e2e757f6a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f05425fe-e79c-421f-b5e7-693ef7f3350f",
        "cursor": {
          "ref": "038ca11a-f54e-4bbd-8521-0eabdc01169e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7fcb5d26-67b1-4545-8b4a-fdb4a34133bf"
        },
        "item": {
          "id": "f05425fe-e79c-421f-b5e7-693ef7f3350f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1f70d7f1-c846-4f35-8a69-60cb0dd824a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "93e432ff-68f4-4abe-ab2e-a75d339faffd",
        "cursor": {
          "ref": "cd3d8f31-8f80-4742-997b-4e3d2aaeff67",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "12b831fc-a9e0-422d-a38f-82f36ab53792"
        },
        "item": {
          "id": "93e432ff-68f4-4abe-ab2e-a75d339faffd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95496731-a42a-48d1-b21b-559e7acad099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f1fe7a-4722-45c0-a0c2-36404ad0f8c0",
        "cursor": {
          "ref": "873f1c30-64d2-42e2-b825-d55e2ea4a129",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f3c471be-de84-4a4c-97fe-d2e3cb1b5a20"
        },
        "item": {
          "id": "30f1fe7a-4722-45c0-a0c2-36404ad0f8c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b2789f9c-6294-431b-96a9-c4746ff27903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfa3829-43a7-425b-9fc9-d011def1422d",
        "cursor": {
          "ref": "445e1eaa-f240-4bab-b977-66a086e4a6a2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8e3dbd3-2a0c-4687-ac6d-44599ba601d9"
        },
        "item": {
          "id": "7bfa3829-43a7-425b-9fc9-d011def1422d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a84061f8-0880-4439-9c39-be86a94fbb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b67c87c-2fa6-4041-b4cc-926f4ed4d186",
        "cursor": {
          "ref": "80353bbd-1a2d-49fd-b5b5-32896489058d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a8401ae8-679c-4136-8e13-7ec9e5a76603"
        },
        "item": {
          "id": "7b67c87c-2fa6-4041-b4cc-926f4ed4d186",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e8cc7c3d-cdc6-4a14-8600-702e72d0fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1418c-29f1-4d3e-a455-14fefd15eda1",
        "cursor": {
          "ref": "286b6dcc-cd2f-4b53-b9d0-c6b4c336cff4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4b184836-1640-47eb-8eda-68dd5039d338"
        },
        "item": {
          "id": "b5c1418c-29f1-4d3e-a455-14fefd15eda1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d38b5a6-645e-4f92-87cf-abb19ee1ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b845b7-9ffd-4d88-ac97-c6c7d03db427",
        "cursor": {
          "ref": "82a3468f-aba9-4590-b0b7-efe2ec6001d7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "af1d78b3-601f-4973-8692-7b767519d9ed"
        },
        "item": {
          "id": "28b845b7-9ffd-4d88-ac97-c6c7d03db427",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66fcdde8-e230-44b8-837f-08159b32e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3000b4a6-16b3-4f65-8658-8b9a34b53c83",
        "cursor": {
          "ref": "272dd977-0067-4c7b-9624-f1b51caafef1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b543962-67a3-44c2-90e1-cfa79a1e5971"
        },
        "item": {
          "id": "3000b4a6-16b3-4f65-8658-8b9a34b53c83",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d046077a-8016-483b-8314-a48c6333b9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809c480e-8f62-495e-8668-3079fe76a687",
        "cursor": {
          "ref": "18025d00-4979-4419-ae21-e45c98f2152a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7bac570f-dc8a-4981-b8b9-25a0281be553"
        },
        "item": {
          "id": "809c480e-8f62-495e-8668-3079fe76a687",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cfd24291-92b8-475b-ab9d-f4a10f0a5962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1004d5-32b2-4c74-9d34-de3ac4f3c862",
        "cursor": {
          "ref": "d0b1b955-141c-4ebb-bd87-5529ed47ddc0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2d43f5cd-6f9f-49cf-b1a7-1799f8428589"
        },
        "item": {
          "id": "8a1004d5-32b2-4c74-9d34-de3ac4f3c862",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ebfbfea1-ed23-4176-a561-ea5d7cc6f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6acd58a-711d-4cbd-86c0-c5d512bbf814",
        "cursor": {
          "ref": "44128dc1-a30b-4af1-8ed5-f9660a003767",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9ce96fa0-c439-419b-8621-c4533c20cb88"
        },
        "item": {
          "id": "b6acd58a-711d-4cbd-86c0-c5d512bbf814",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "267d3b11-263e-4a30-b33e-7f136536120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed4128-3ba1-4e55-b002-47de9f33a16b",
        "cursor": {
          "ref": "7c15cc88-984b-4296-9715-d7a9ed881db7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be5f0a1c-6315-4172-967c-d07f26833fa2"
        },
        "item": {
          "id": "08ed4128-3ba1-4e55-b002-47de9f33a16b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0521c07-28ba-4c57-992b-94f76eaafa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2167ffe8-c71f-4e65-a581-9a0f70aeacc0",
        "cursor": {
          "ref": "0286ad82-e39e-4200-9de0-639599e625fe",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2e51381-6d92-4739-a1f1-d7bff4daa52e"
        },
        "item": {
          "id": "2167ffe8-c71f-4e65-a581-9a0f70aeacc0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dbd4682b-ad78-4b0d-a57b-abd6e90b2c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8619c7c8-d13a-4fcd-985e-bdbaa341e4e0",
        "cursor": {
          "ref": "824769e2-bef6-41ad-a501-17aee44be474",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e1cefcd-3895-4bef-acaa-38d590cbdcf5"
        },
        "item": {
          "id": "8619c7c8-d13a-4fcd-985e-bdbaa341e4e0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d8b66069-6323-4e34-bc3e-ce73585a368c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acb4f9b-e127-436d-83e3-6404ece98207",
        "cursor": {
          "ref": "bf009835-b4ad-49bf-bb71-209a19fdd53b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6c393dfe-9ff9-4ce7-bcad-7bbb2599c8f1"
        },
        "item": {
          "id": "5acb4f9b-e127-436d-83e3-6404ece98207",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca35461d-c638-4c4e-a0fc-3fd99b062b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2dbb75-c90f-46b5-a66c-c5d337efe756",
        "cursor": {
          "ref": "f93cbf0b-dfca-4052-8d7f-fd58156aa5ac",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1d0b0a21-4346-4746-92ca-585078e185ef"
        },
        "item": {
          "id": "6e2dbb75-c90f-46b5-a66c-c5d337efe756",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a47c7d69-5410-41fa-bea0-fc84170b9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc51100-59d1-46db-b358-f283088509ae",
        "cursor": {
          "ref": "0637ce67-3324-4b30-9489-d6a0491ce756",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d94d2b2-af62-42aa-98de-60bde3da7c84"
        },
        "item": {
          "id": "edc51100-59d1-46db-b358-f283088509ae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "370a81a1-fcec-4646-aad1-6cbe9c840b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9d62bc-16cd-461d-8849-fa6729c781d8",
        "cursor": {
          "ref": "a7080617-d6f8-4062-8305-22aa7369af2b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "20a82e09-0862-42ab-853d-f8ee819ae0f3"
        },
        "item": {
          "id": "6b9d62bc-16cd-461d-8849-fa6729c781d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c73a004-eff3-4d69-8543-7d0f8cf29dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b4c80-5530-4e90-8d6b-1c9d1c341af5",
        "cursor": {
          "ref": "fe33a0ef-10b3-4380-bc0e-5ce238f302e6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99c89de5-60ee-4504-bea6-6e257a6a7f54"
        },
        "item": {
          "id": "250b4c80-5530-4e90-8d6b-1c9d1c341af5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "18914193-1b07-4712-a0ed-30bc360466d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb80c8a7-0fa3-4ece-805f-aa4152fd71e9",
        "cursor": {
          "ref": "d8dd34cf-4b85-48dd-b7e8-b36933602ff8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "701da24f-f442-465e-a592-2ed7f21e2c30"
        },
        "item": {
          "id": "fb80c8a7-0fa3-4ece-805f-aa4152fd71e9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adf06b7f-bdad-4061-bd25-ebe6e87fafaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6afc131-da95-4eba-87a8-1234c7ce4645",
        "cursor": {
          "ref": "75e20df4-8363-4132-8216-27465ceb92f3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7e1d5701-e138-4d63-9258-1ac6efdea5d4"
        },
        "item": {
          "id": "d6afc131-da95-4eba-87a8-1234c7ce4645",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c35cae8-80f2-4a00-8587-d67ad872f38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b77020-c382-4e8b-ba9c-3bef0fbd95d0",
        "cursor": {
          "ref": "98ca7db4-7b5e-420d-8027-f319911f567e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2aab9bb6-6cdb-4985-8dc1-b3445f60e869"
        },
        "item": {
          "id": "b1b77020-c382-4e8b-ba9c-3bef0fbd95d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e8b16ef-b09c-4e2e-b42b-93e392fd338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a7b6b1-b1c5-442c-bae1-10eb06bcef87",
        "cursor": {
          "ref": "27968bb7-8bda-426c-9582-aa1b1abc11fc",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d0bb0c10-46e7-4903-8225-8e7b7ffb7cc6"
        },
        "item": {
          "id": "a9a7b6b1-b1c5-442c-bae1-10eb06bcef87",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0b96640-8245-4fba-bd41-b6a6f83f0713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2189ec6-266d-42e6-b54b-4ed9372a8a55",
        "cursor": {
          "ref": "837c0158-b9c4-46bb-b048-d6adbfa6d66c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "05a160d7-ff5b-4497-b937-e08e34dbd99f"
        },
        "item": {
          "id": "d2189ec6-266d-42e6-b54b-4ed9372a8a55",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac592286-c66e-40da-a2ec-bb9d815d3caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6cd8a8-00d8-4ab1-ae2a-14e097400f17",
        "cursor": {
          "ref": "d2c65866-bbb1-40ad-aaeb-3ece871924df",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7482a46-cfc0-4a06-9393-b613856995ea"
        },
        "item": {
          "id": "6b6cd8a8-00d8-4ab1-ae2a-14e097400f17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9cd078a5-4b71-4d67-8d8b-e6fca1c4f006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c997ba5e-a6a7-4ee7-826a-8231613e7754",
        "cursor": {
          "ref": "912b34d9-463f-46e4-8b33-5ee9e059e7d9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "492fc114-cfbb-4b4d-a80c-efdad1e63814"
        },
        "item": {
          "id": "c997ba5e-a6a7-4ee7-826a-8231613e7754",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb802e56-f8a2-4d09-af8d-62fe42ccbf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29f662-518c-480c-aa75-f83aab5284bb",
        "cursor": {
          "ref": "4883d6fa-0c3a-4af8-ad3b-c3af7850ea3d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b93a309-d222-47da-a783-a509f019b882"
        },
        "item": {
          "id": "9d29f662-518c-480c-aa75-f83aab5284bb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4daf61ea-3baa-4ae3-8cc6-0e1cc2b6a1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d660b89-f915-48ec-be80-92bf47792308",
        "cursor": {
          "ref": "6ded4fe5-73a3-4458-af13-fb97c00d75f3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "166b9064-3e93-42bc-9fc9-3c48d04160a7"
        },
        "item": {
          "id": "3d660b89-f915-48ec-be80-92bf47792308",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd6bd43f-499e-4c75-8419-f04db9e7c000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203ff6ca-b90d-4d4a-80d5-0e398d657fad",
        "cursor": {
          "ref": "03ae87bf-e9ed-4386-8760-0083e81aabcd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3f3ebb07-9d94-4877-8484-801f5d35916f"
        },
        "item": {
          "id": "203ff6ca-b90d-4d4a-80d5-0e398d657fad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "acfbd6d9-e37e-4b65-b15d-1e29079c9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c055e1-2ade-4260-9e43-aa21e5ce62af",
        "cursor": {
          "ref": "310f65ad-0437-4b51-9829-23ae130a817e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f6823cb-6585-4506-b287-01aec502ad27"
        },
        "item": {
          "id": "94c055e1-2ade-4260-9e43-aa21e5ce62af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c27c2fe-da1e-4e31-ae13-0308216f23a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790c56a7-493d-4a30-9844-0e440cea823d",
        "cursor": {
          "ref": "89309dce-55da-40c7-b9af-55148391e7dd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "559bdc5f-d051-4baf-be5b-0b4f3936fb26"
        },
        "item": {
          "id": "790c56a7-493d-4a30-9844-0e440cea823d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "adaf0139-67f6-4793-8a82-120a2676d22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15811e27-4924-4735-b82e-031a4ecb4fe3",
        "cursor": {
          "ref": "911dc199-5f4f-441e-9439-86f5e28de040",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b087f836-f683-49aa-a417-415d654fec84"
        },
        "item": {
          "id": "15811e27-4924-4735-b82e-031a4ecb4fe3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f65f6e7-6380-48fe-9065-faf21670cf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f00b2a2-8397-4a47-b09d-f5b40f89819a",
        "cursor": {
          "ref": "73f08d84-dc4d-46bf-a80b-25a5bccc9858",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "192203b7-ea79-4ef1-a757-40055f2e713e"
        },
        "item": {
          "id": "9f00b2a2-8397-4a47-b09d-f5b40f89819a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cbc677cf-00a0-40e0-8d11-a7883a6bae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed6c7ae-b340-4d66-a6f3-6d3850516e50",
        "cursor": {
          "ref": "b4b36587-6653-4c03-bc90-47a5c0e58fb5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3df9425-6341-4f71-85a6-d6608ea52a9c"
        },
        "item": {
          "id": "1ed6c7ae-b340-4d66-a6f3-6d3850516e50",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aab08738-0643-44d7-82c8-482e54c5ca23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 110,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4969774e-2975-4684-811f-e8171dbf405c",
        "cursor": {
          "ref": "5a40930f-57d3-4297-a5e8-1c3cdbb74bfe",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3724c919-44a0-43f0-96ae-5a90d991153b"
        },
        "item": {
          "id": "4969774e-2975-4684-811f-e8171dbf405c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ef40312b-59c7-4641-bacc-cd934342d0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a9a056-83b7-4366-bf11-e2d3c48be079",
        "cursor": {
          "ref": "0aa20c8e-6527-4677-bb74-f00eccdc944e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "13cbc152-10d7-4833-888c-6f893156c14b"
        },
        "item": {
          "id": "89a9a056-83b7-4366-bf11-e2d3c48be079",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb8343a7-3f5e-44b0-84f6-6fce724a3e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7d91d3-2655-4d05-9562-121c6c27f0c5",
        "cursor": {
          "ref": "e4fa9047-4f24-477a-9238-f4279367e1a3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a524a0b4-fe9c-4d81-960c-245abee68740"
        },
        "item": {
          "id": "0a7d91d3-2655-4d05-9562-121c6c27f0c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d2efe53-6a0c-4c8b-bce2-2a32a440332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489036ea-84e7-43f7-8cbe-d65de53e3db7",
        "cursor": {
          "ref": "861bd975-9880-48f5-99d8-1baabbb50c9a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "16ef0ae5-7247-47e3-9423-536e518b3771"
        },
        "item": {
          "id": "489036ea-84e7-43f7-8cbe-d65de53e3db7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4493f41e-bde2-46af-a218-17b1e8fae91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03b72cc-c369-45fe-ab35-1713927a96c6",
        "cursor": {
          "ref": "d588a674-f40b-49f2-b7fc-02c073f89c1c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d2928df8-5f50-487c-bc00-7d95631fa6aa"
        },
        "item": {
          "id": "e03b72cc-c369-45fe-ab35-1713927a96c6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9a52c75c-b605-4309-a045-ddfba3b92623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7703c1ac-d5c3-4f92-bdb7-e8e4002ac54a",
        "cursor": {
          "ref": "93081c37-8670-439b-8685-ea47756ee26d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8241c137-15ee-426c-b905-232270f9afc3"
        },
        "item": {
          "id": "7703c1ac-d5c3-4f92-bdb7-e8e4002ac54a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0715f8ce-0a82-4f56-aadb-7471415c43c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8436a2-3b5c-4b80-a903-17bbfaf43cd2",
        "cursor": {
          "ref": "300c459f-a925-400f-a06f-ea600e4d132a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1979c384-ce21-4b86-b9a3-7f09aa141ac4"
        },
        "item": {
          "id": "3d8436a2-3b5c-4b80-a903-17bbfaf43cd2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1291f111-89e5-4807-b3f5-0bc4aa1dfc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b00cec0-6e28-4a92-990e-cb2fbea6ea1c",
        "cursor": {
          "ref": "5b0f548b-9460-4ec6-ad02-47dc6c718793",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e91ba9dc-6a4a-4dd3-a7df-7f85352421b3"
        },
        "item": {
          "id": "1b00cec0-6e28-4a92-990e-cb2fbea6ea1c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3f57278-bcd6-46b0-aa7b-f4188ba9f210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba864e4a-2aee-42f6-ab0b-caa9d40ebe40",
        "cursor": {
          "ref": "79424ef6-cbda-4759-8d17-4e743823c739",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "51ed9e02-e0c9-4041-ab65-7bd4b089ff25"
        },
        "item": {
          "id": "ba864e4a-2aee-42f6-ab0b-caa9d40ebe40",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54981484-dafd-4fc5-8dc4-e310beb7f9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a43b60-6ba4-40bb-a263-3c1241065714",
        "cursor": {
          "ref": "80748d8f-1f3e-46a7-b31c-ab8f0c1033de",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc63e5d1-e020-43b8-81a0-6d83befac97b"
        },
        "item": {
          "id": "46a43b60-6ba4-40bb-a263-3c1241065714",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "684d3703-9a72-4f02-95a5-ddc8bd7ae323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee34ed8-c818-419f-8995-f6efb64bdbf1",
        "cursor": {
          "ref": "7957e546-b18e-4eb2-9430-5afb719df252",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "454b69b2-d132-4466-8d0b-6975035c6dcd"
        },
        "item": {
          "id": "aee34ed8-c818-419f-8995-f6efb64bdbf1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "523aaaca-e64b-4504-b922-98933d38d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bff2bbd-66d6-47db-bf88-787efc929fb0",
        "cursor": {
          "ref": "dc532ee2-a991-4080-a7bc-f727aca4f35c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "09f9fe44-d8e7-4940-b043-63226f53c166"
        },
        "item": {
          "id": "8bff2bbd-66d6-47db-bf88-787efc929fb0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2d3828dd-1a96-44ce-808e-176347ef80dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c47360b-67c8-4143-9763-090e9c31a1f0",
        "cursor": {
          "ref": "d9e76ce0-cba4-41b0-bc03-88e0174ed9f1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "80f3f25a-90a4-422c-8340-33be49ee2d0d"
        },
        "item": {
          "id": "7c47360b-67c8-4143-9763-090e9c31a1f0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7202613-ad95-477d-8a2d-d9d6eaff96c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8837c3e-890f-4856-96d5-44d5bfc8f4eb",
        "cursor": {
          "ref": "065c056c-72c2-4040-97ab-1d7924981096",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82945f4b-fb93-4e26-9ec8-0c7566defe45"
        },
        "item": {
          "id": "e8837c3e-890f-4856-96d5-44d5bfc8f4eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e88a3da-62bc-4467-b8ab-a0dcdfd21c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7719712-a61e-4a4a-8e21-fff493f633d0",
        "cursor": {
          "ref": "90be1814-8cf5-4c1e-bb7f-440d89ced8fe",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0f964e3b-dd35-498d-a19b-5e74cbb764a1"
        },
        "item": {
          "id": "b7719712-a61e-4a4a-8e21-fff493f633d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "41ff6735-59bb-4531-86df-45df0726bda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3482926-ed86-4aad-b6c2-9ac9dae179f8",
        "cursor": {
          "ref": "0a4760ea-7c57-45c6-b906-89fa8495b502",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f021a118-3468-4fff-962e-7c55588732c8"
        },
        "item": {
          "id": "d3482926-ed86-4aad-b6c2-9ac9dae179f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7888fe53-35fd-474b-ac24-7980ca025749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6d4b1c-f476-42bc-bd1f-0d161a7c3324",
        "cursor": {
          "ref": "eddff968-0d11-45a8-bb29-480455eaaf2c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "22132a9c-5b1b-4ab4-9c65-20a7f5ff36c2"
        },
        "item": {
          "id": "af6d4b1c-f476-42bc-bd1f-0d161a7c3324",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "25b95fee-c7c3-4e3b-9a1b-99dfe3d24721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abedfbaf-6be2-4136-a7b4-d01fd3e60b41",
        "cursor": {
          "ref": "3b076f57-25f1-4439-a30f-992cfdad1d5f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ecfcc91b-766b-497d-9008-daaee7fdedb0"
        },
        "item": {
          "id": "abedfbaf-6be2-4136-a7b4-d01fd3e60b41",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3228b1fa-c234-4c62-ac90-d7a7cc338318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc7032e-4291-4ccd-85f0-5a650e5c2296",
        "cursor": {
          "ref": "72ee23bf-68dc-426f-9167-8bfcc9b45f94",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "16848cad-bcc2-49f6-a011-2f4d19c9777f"
        },
        "item": {
          "id": "5dc7032e-4291-4ccd-85f0-5a650e5c2296",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f6d8055-14f2-4fc3-b0fe-13553d418612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d7d957-8c91-4768-a67d-3ee65cee815d",
        "cursor": {
          "ref": "e2cd91ba-21d4-481b-9246-b613e5325e34",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "34eb0bb8-0a61-4758-b1f4-e608664e42dd"
        },
        "item": {
          "id": "d0d7d957-8c91-4768-a67d-3ee65cee815d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93e9cce1-9147-4467-a4a8-2a64bb7775f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1949b6d5-48ec-4e6c-a267-e0bb613d135e",
        "cursor": {
          "ref": "9ba84235-8016-4414-a3bb-ddbc4827f01b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4bf8457e-4b3e-4435-b917-520a373167dd"
        },
        "item": {
          "id": "1949b6d5-48ec-4e6c-a267-e0bb613d135e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f38d2888-7b77-4aa5-a1c3-c62c22ce99e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0513ee-da3c-45ba-b2b1-45ac8370befb",
        "cursor": {
          "ref": "928e8f85-05cc-45d0-8510-ec00d0160163",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "691436ee-7c26-4287-8668-2697e122148c"
        },
        "item": {
          "id": "4c0513ee-da3c-45ba-b2b1-45ac8370befb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fc41849e-45cf-4f1f-b8a8-064f2364f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d65fef-8770-4eff-9578-84058b19a10e",
        "cursor": {
          "ref": "aab8b618-53c1-4a8d-97b4-feb398912750",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4885ff1f-8f7f-4449-a9f7-227d71bdfd81"
        },
        "item": {
          "id": "93d65fef-8770-4eff-9578-84058b19a10e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8b902b67-4ade-4885-93c7-b1fe473bdb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dff21ba-d4ec-4918-a3ea-1b3e7b2d7f5a",
        "cursor": {
          "ref": "3f910c7b-745a-4155-81f8-9e374915d7ea",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f036faf2-20aa-4e92-9b9e-72098e85e7a2"
        },
        "item": {
          "id": "1dff21ba-d4ec-4918-a3ea-1b3e7b2d7f5a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f655cb6-dfdb-47eb-9f24-436ceca7d773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14544ff0-f0a3-45f8-a08f-15ea2e5b1166",
        "cursor": {
          "ref": "96e7ccc8-eb83-48ee-91dc-88a4860dca75",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e29d022-fdae-4adb-9f4f-d221be0be4c9"
        },
        "item": {
          "id": "14544ff0-f0a3-45f8-a08f-15ea2e5b1166",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa18689f-a500-4be8-908d-9aff5e9a1acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e6d019-b702-42ab-bd2e-b6f045549e30",
        "cursor": {
          "ref": "52a475d7-0779-43b0-863a-402e2090c925",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f607c3d8-2bbc-4942-9fee-4df2de1b270f"
        },
        "item": {
          "id": "40e6d019-b702-42ab-bd2e-b6f045549e30",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d320f772-b28e-4083-9647-5b85cf0d86c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7f5868-de06-4dcf-b35a-d0c2e6e8dd4b",
        "cursor": {
          "ref": "075109a8-1a8b-450e-9992-dda4366dcb74",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "df38ee60-ea75-4460-bda4-42bb034c0013"
        },
        "item": {
          "id": "8d7f5868-de06-4dcf-b35a-d0c2e6e8dd4b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9d25ca71-eda0-4df7-8afa-4887bb876465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2295f9f-6ea3-4849-9f0a-efb0c53e7531",
        "cursor": {
          "ref": "d09e4920-879b-447a-82c3-ee6b69a6d099",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a774f9b6-6f13-4733-9746-fff421b222e1"
        },
        "item": {
          "id": "b2295f9f-6ea3-4849-9f0a-efb0c53e7531",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f4fae40-a81a-48f7-91fa-1732f6c1a7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56772098-1475-4b78-88e6-811093a2a7ac",
        "cursor": {
          "ref": "8558c630-f43d-4f4b-b1f8-0ca9188c95ea",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "767995c4-e7b9-48a1-a73e-aa84d7807da6"
        },
        "item": {
          "id": "56772098-1475-4b78-88e6-811093a2a7ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "680c0187-e670-42e2-9026-a611b3fc0731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d26b2a6-3e9c-4027-8d49-50aab60820a2",
        "cursor": {
          "ref": "63e69677-e914-4189-b265-eba363bf1129",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7d1bab1b-5e65-4879-96f1-883a65c2d81a"
        },
        "item": {
          "id": "8d26b2a6-3e9c-4027-8d49-50aab60820a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c24fb5dc-e1d6-4aab-8698-2da7c493825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9c85ff-8bb5-480a-beab-accf2de96ed4",
        "cursor": {
          "ref": "83bf43ff-dea2-44b9-af1b-7f06ac235bb7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f416183-1f53-454e-9687-51ef4b5f21b2"
        },
        "item": {
          "id": "1b9c85ff-8bb5-480a-beab-accf2de96ed4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ff05069-0977-4ab1-9615-f7081334ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52005ea0-bee0-4911-83a7-16817d871ace",
        "cursor": {
          "ref": "3db3a3cb-4b7f-447e-9b9f-603be20ec870",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "551b1701-30ac-4042-9bee-3d8bbcd3e8ca"
        },
        "item": {
          "id": "52005ea0-bee0-4911-83a7-16817d871ace",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "566b3cb3-7228-44c9-a1b1-8f79a61f41ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef4fd6-fbab-4251-a599-cfb622e30340",
        "cursor": {
          "ref": "450dccd1-c5a4-48ea-bc94-74eca7f239fc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f6f05646-08de-4580-a313-76cd63b0e42e"
        },
        "item": {
          "id": "75ef4fd6-fbab-4251-a599-cfb622e30340",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "768bf82c-3d46-4715-a4ec-186a7a2b00f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c109bc-9101-45af-8318-59856e61b6f5",
        "cursor": {
          "ref": "52ad7b82-1a32-4f6a-9dcf-859917f9047b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "83093123-19d0-45e6-8523-fdb9491e0524"
        },
        "item": {
          "id": "20c109bc-9101-45af-8318-59856e61b6f5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3cbd1843-d146-49dd-8865-f89e403a2174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037c14ca-2724-4dbb-817b-a77216a3c3dc",
        "cursor": {
          "ref": "67934824-650f-4485-904c-c5b27e6080da",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "14d7932e-d82b-4f2b-a648-76922983c7a0"
        },
        "item": {
          "id": "037c14ca-2724-4dbb-817b-a77216a3c3dc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "61c12b2a-ad0a-4d7f-91ad-3b597ac122af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb008afd-b0d5-4d86-9691-f7cab505c52f",
        "cursor": {
          "ref": "45d00003-40ce-4639-9d40-c0c6a9cd3c6c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ce6c0356-86c8-4d20-94f2-6cdd28e263a0"
        },
        "item": {
          "id": "eb008afd-b0d5-4d86-9691-f7cab505c52f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1565b79a-8806-4ac1-a7ca-fe862beaac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2b6bbe-9047-43da-904a-99486eecb668",
        "cursor": {
          "ref": "5774eb8f-e2ff-4b28-b38a-59d5a6c523ab",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e4236a3-40ff-484f-b8ba-d0186ef992e5"
        },
        "item": {
          "id": "5a2b6bbe-9047-43da-904a-99486eecb668",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0a43eefc-7f4a-4cf1-90bb-b04c539d020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7832c287-830f-4424-8f93-b9f5898ddb85",
        "cursor": {
          "ref": "f9411c6f-a5f2-4952-a993-646f238af0ea",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "885b7361-fa66-4e30-ac53-7219eebdc091"
        },
        "item": {
          "id": "7832c287-830f-4424-8f93-b9f5898ddb85",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f7a8a05-9c54-4fad-b1bb-7bd2442cf487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b0def1-dfe5-42aa-9622-c6af7b3a75e0",
        "cursor": {
          "ref": "aa759e10-14b5-4dd7-b949-f5559f6865c5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "666cc9ea-5ce5-434a-a4db-5dc98b704695"
        },
        "item": {
          "id": "49b0def1-dfe5-42aa-9622-c6af7b3a75e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f9c77811-95c9-4c84-a754-d9d340ab4170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6aa034b-f46b-475c-a08b-b39ab3a8cddf",
        "cursor": {
          "ref": "1bbff758-1029-425d-9868-59c266d79cc6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4a9bd14c-71b7-4720-8a00-33b36e7f658c"
        },
        "item": {
          "id": "a6aa034b-f46b-475c-a08b-b39ab3a8cddf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9eb242bd-7609-477c-99c8-4bdda6bd0223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9a289e-5f67-4ffd-8cd7-b0a7623c60eb",
        "cursor": {
          "ref": "6c77df74-ec0c-42a7-a248-a9eaed4462d2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dc0e006a-834f-4c74-b612-51ef9b81b0b2"
        },
        "item": {
          "id": "7c9a289e-5f67-4ffd-8cd7-b0a7623c60eb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "81f0138f-1560-441f-9713-ee6b712d647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d11ec-9edb-4ed4-a985-980a36664cb4",
        "cursor": {
          "ref": "f238f2ee-9f9e-46a9-946c-a029ef5d5407",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "28f3a2a1-b7c6-411a-bd8c-fcb649768b06"
        },
        "item": {
          "id": "f93d11ec-9edb-4ed4-a985-980a36664cb4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "65079b7b-3516-4b56-837a-85a89ceb08c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a93539f-a77b-464c-84b3-cd746765663a",
        "cursor": {
          "ref": "422b395b-dccb-4fb2-85bd-f61540bb806d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "921d2924-3f90-4196-b327-311148542e11"
        },
        "item": {
          "id": "0a93539f-a77b-464c-84b3-cd746765663a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "da73d2da-30f1-4015-a7eb-dec2ea820594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42fb2c-46f7-40cc-af82-dc1ca518af37",
        "cursor": {
          "ref": "6eb1ec2f-8867-4fda-9c06-7226bfe6b5da",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7727bdda-1b22-4341-9289-6a2c3c879821"
        },
        "item": {
          "id": "2f42fb2c-46f7-40cc-af82-dc1ca518af37",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a2b2085d-6daa-42a8-8dba-a76f420156b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5326e1-4be9-4a24-a95a-ab2466a67433",
        "cursor": {
          "ref": "35c17021-9638-421d-87b1-72130f340956",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "341d07bc-18fe-4b4b-a791-83ad56c73c6c"
        },
        "item": {
          "id": "fa5326e1-4be9-4a24-a95a-ab2466a67433",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b31da009-b1da-48cc-895e-ba0e93015976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131433ba-1182-44c1-a6d6-ba1a99b9f8c7",
        "cursor": {
          "ref": "6162cd85-c129-422b-b3b7-c848b9924d1b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d4b8b544-c36d-4f63-9c42-d53effc46996"
        },
        "item": {
          "id": "131433ba-1182-44c1-a6d6-ba1a99b9f8c7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3ab7f43-3d4a-4c87-8576-7618a7378536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6ff00f-a14e-4fbf-9486-9478243330af",
        "cursor": {
          "ref": "008e57e7-d7eb-4765-8fe8-d4c31992ed73",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fa795f98-9be1-4d02-93fb-c1676a9beaf7"
        },
        "item": {
          "id": "4c6ff00f-a14e-4fbf-9486-9478243330af",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "119412d6-5d40-48ae-9fc6-0c30763647a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82745cc8-7b13-4972-a3ba-b40d9ba557ad",
        "cursor": {
          "ref": "a007ab59-909d-4dcb-8355-16d85301bdcd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d11b18a2-c3fd-40b1-9dfb-b3ebb566fd1c"
        },
        "item": {
          "id": "82745cc8-7b13-4972-a3ba-b40d9ba557ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "083117e1-b537-4102-93d5-0b0f83d7c023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7f13ec-9bd3-43be-9c68-e84a8927f71c",
        "cursor": {
          "ref": "bf9bdaa0-be53-45f8-8b63-dc51bd92e071",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d8cd5325-7cce-41b6-a507-1dd16bb9c5c1"
        },
        "item": {
          "id": "df7f13ec-9bd3-43be-9c68-e84a8927f71c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "761492c5-ccfe-4e57-9afd-d3d8236fdb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc89691-0bef-4747-b792-ff87fd4290d2",
        "cursor": {
          "ref": "c5ebf998-aefb-4c5d-883d-88dbb03a261a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e04ffe9c-05ab-44f6-8b0b-202db107f504"
        },
        "item": {
          "id": "adc89691-0bef-4747-b792-ff87fd4290d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e6f1123-d702-43ce-87a6-4f98d3c143c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f24ecec-5cbe-4752-9a22-a109370d528a",
        "cursor": {
          "ref": "d20f1de0-fa67-4a7b-adb0-5f020772d1cb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7893ed18-de2f-40f5-9ccb-1b34f3e8024b"
        },
        "item": {
          "id": "6f24ecec-5cbe-4752-9a22-a109370d528a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "23e27ea8-a532-40f9-9361-c36828640be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfb7dc4-0c64-4443-81c5-73e22bbeef8d",
        "cursor": {
          "ref": "73ab35f0-7170-41da-a536-f8986be4dd50",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "78539c31-1625-4b58-a7ef-0791daa06447"
        },
        "item": {
          "id": "ccfb7dc4-0c64-4443-81c5-73e22bbeef8d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b32e192d-18ae-4fb1-9dd2-8ada6c5968b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5a039-1590-4a5e-9c4d-5a7945c5f46c",
        "cursor": {
          "ref": "e4f9f9f7-b76a-4286-bcf3-4d97c17977f8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6c5f2e1c-3263-449a-a88d-5056370cb567"
        },
        "item": {
          "id": "bac5a039-1590-4a5e-9c4d-5a7945c5f46c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f00eb34-e36c-4571-9086-f5ae71905f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09635728-9b7d-496a-832a-313bb9214d95",
        "cursor": {
          "ref": "7770c7ca-708c-4ecc-b7f0-ae865e37a6ac",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d37e3a90-15aa-437c-8cb8-8b4c38a2cac1"
        },
        "item": {
          "id": "09635728-9b7d-496a-832a-313bb9214d95",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a7eeb6c1-cdb5-4891-8c39-93497b6d177d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c33e78-7c5f-4805-a13f-a401759a8fa1",
        "cursor": {
          "ref": "5d819831-67e9-44b2-9ebd-56cae0097acf",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2b110d3-9bc8-44f5-ac39-ef0610fcd942"
        },
        "item": {
          "id": "78c33e78-7c5f-4805-a13f-a401759a8fa1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2f85c474-2495-4ef2-86ad-a825f86d62b6",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "af5285e6-6f23-4bc8-8275-68533bd32f9b",
        "cursor": {
          "ref": "82f56af9-3d91-4dc9-ac26-a87cd3068363",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9da0b851-3be9-40d0-bec3-2f6f459279e8"
        },
        "item": {
          "id": "af5285e6-6f23-4bc8-8275-68533bd32f9b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e2bedcd7-a37d-4cac-ac9e-f8c5e6554445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872a7be2-f59e-4a6a-8dba-642dbdd4e144",
        "cursor": {
          "ref": "7ff99b1f-97eb-472a-8202-6abb03221186",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d51ef494-b9f3-40e5-90a0-f061a5741db1"
        },
        "item": {
          "id": "872a7be2-f59e-4a6a-8dba-642dbdd4e144",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c6ecef1b-415b-483c-8b07-b8c4033347b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5cb256-e785-414a-a39e-053c67455f32",
        "cursor": {
          "ref": "d5e0ece1-02d5-4993-ab7a-0ac6b4d3de53",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fca75542-8d35-473b-a817-44051f35fe87"
        },
        "item": {
          "id": "3b5cb256-e785-414a-a39e-053c67455f32",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a20ab326-208d-40a6-b6e7-90c58cd8e1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb9347f-3b91-4619-8bde-26c66eeb0696",
        "cursor": {
          "ref": "b9d270f4-efd2-4218-b652-0c0f3c03b0ce",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fe036efd-73c1-4c2d-8461-44b1ba4b94d7"
        },
        "item": {
          "id": "bfb9347f-3b91-4619-8bde-26c66eeb0696",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "afa1d0fa-7dc5-4e07-b8e2-a6b0153b5f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8affac4-e933-4c29-a9bb-c3c80b185215",
        "cursor": {
          "ref": "277da741-e430-43e8-a5bf-f513a98976a7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d8577474-f734-48e2-85ed-85170d4a66e4"
        },
        "item": {
          "id": "a8affac4-e933-4c29-a9bb-c3c80b185215",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aed4b243-2293-4e05-bbf8-701858d2e281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8798b654-7949-406e-bfc2-656c3d4d7df8",
        "cursor": {
          "ref": "f3964451-d40c-43f0-90fd-75e59f5cfa80",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "641e6d84-f8df-4702-8014-27a5d10e2a7c"
        },
        "item": {
          "id": "8798b654-7949-406e-bfc2-656c3d4d7df8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc4433ca-24ef-4f9b-b1df-ad246ce61771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb0d941-392e-4872-8fb2-ee9e2c8c6f2b",
        "cursor": {
          "ref": "5bbac003-350d-4cd6-9a1b-a8e92ef64fca",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "15c975ea-6aec-490e-a830-486c56ba3a0a"
        },
        "item": {
          "id": "deb0d941-392e-4872-8fb2-ee9e2c8c6f2b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "155a7438-7c2a-4df1-a76e-df63a85c2132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c35803-71a2-4451-bb27-62824aa95de1",
        "cursor": {
          "ref": "20173c10-3c3a-41c5-9ff2-9aef6b972ab4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ff80bab6-9f2a-45fc-baeb-05a4200c560f"
        },
        "item": {
          "id": "e4c35803-71a2-4451-bb27-62824aa95de1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26017efc-456f-42f3-b4be-a447b03844c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da7938a-2c42-4925-8884-0cc812053b19",
        "cursor": {
          "ref": "e3ce69bf-8650-4904-ae24-670769155e06",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "190f571b-8703-4581-8fcb-ed47e402689b"
        },
        "item": {
          "id": "8da7938a-2c42-4925-8884-0cc812053b19",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5596923c-ac65-43d3-8f98-0721baf41fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8655b8-e02e-4a73-8555-e559181ba38c",
        "cursor": {
          "ref": "f794474f-9079-4c20-8944-28f97dc4d2f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "db917ae1-8b82-4588-888d-bf78cd43bb60"
        },
        "item": {
          "id": "3e8655b8-e02e-4a73-8555-e559181ba38c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0e146ff5-92ac-49fb-a208-191a3b5c1cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f33bc9-e00b-4a76-8f78-f20bef04cb0c",
        "cursor": {
          "ref": "b779ed07-a62f-4ede-9b2f-f112e16ca05a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1ed25f09-5984-4042-a375-dd14fe474e50"
        },
        "item": {
          "id": "29f33bc9-e00b-4a76-8f78-f20bef04cb0c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8ddac3c0-e9c1-401a-bb2d-d5c655ce88ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860748a3-c91e-4f18-a10d-6ba931d7a45e",
        "cursor": {
          "ref": "1a015ad3-ec49-4133-a697-c62a7b4f791e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f29413e5-3978-4373-a25a-4f457817e5a5"
        },
        "item": {
          "id": "860748a3-c91e-4f18-a10d-6ba931d7a45e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b3b2d666-ab41-4d05-b0a4-9351ef2e658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c75538d-c336-4b56-9483-5ede63231ae6",
        "cursor": {
          "ref": "261654ed-ef1c-47f6-882d-822c97f3d491",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3340ddd0-fc56-48fc-b519-1e26cb6e7f43"
        },
        "item": {
          "id": "9c75538d-c336-4b56-9483-5ede63231ae6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "91fab234-cffc-4113-9dbc-7bcfc850492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458d163-6a3b-4327-a0dd-b0937444fdb1",
        "cursor": {
          "ref": "00a0159a-c18a-4ac2-b514-97ce73c27ea8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "352e10b5-1811-42ab-874f-c4bda9d5abc8"
        },
        "item": {
          "id": "c458d163-6a3b-4327-a0dd-b0937444fdb1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "870f55e3-973e-4e34-95aa-f876deb592e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724574dd-9740-4bd1-a57d-a424398d03bd",
        "cursor": {
          "ref": "b2fbf4a4-63b9-44d9-84ed-9f193cc50014",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1553de17-43d5-4c45-8adb-0b6b750e1d96"
        },
        "item": {
          "id": "724574dd-9740-4bd1-a57d-a424398d03bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b9bd0d0e-80fa-4004-aed2-d5f2e193d3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2989ce-dd5e-4d72-b91f-6f027b70f7fe",
        "cursor": {
          "ref": "2670a82c-68af-4ed8-9a08-5186509a2c4a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fa9f7fb0-a0b3-4f98-83ca-bbdd81ee3f8a"
        },
        "item": {
          "id": "ee2989ce-dd5e-4d72-b91f-6f027b70f7fe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b32d9c51-3def-43b4-9f8e-361576e3fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903bf06-cf01-45be-87b4-d16ce195a39d",
        "cursor": {
          "ref": "d844e102-00ee-4e3e-ac63-246484e46035",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2d9ecde4-ab6a-4523-b32f-07a0d9d45760"
        },
        "item": {
          "id": "f903bf06-cf01-45be-87b4-d16ce195a39d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b5f66fcd-ce09-40d1-b017-024952869ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a4fa6f-7112-42b4-b13a-8e46e465a11b",
        "cursor": {
          "ref": "7a29b39f-5b00-4758-bb3b-26e30cbdc3ba",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0221bb64-5313-4a47-a636-291d05722a0d"
        },
        "item": {
          "id": "87a4fa6f-7112-42b4-b13a-8e46e465a11b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5f8c0197-2913-4547-bb54-15f4be992d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1fb11a-d310-416c-aa23-6c5b495008e3",
        "cursor": {
          "ref": "d84dc6dd-03d4-4412-8623-4d01f67641ea",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "94e5cac1-b086-44f6-afda-353969235851"
        },
        "item": {
          "id": "8f1fb11a-d310-416c-aa23-6c5b495008e3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b51708ef-5ea9-479a-9bdf-f038c0d9d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053f307b-c647-4e58-b10a-8fb040fa4a79",
        "cursor": {
          "ref": "2ed8e8ef-af16-45e3-acf4-bba6322ccf82",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8c612ed6-0cee-499c-961f-d82e42877608"
        },
        "item": {
          "id": "053f307b-c647-4e58-b10a-8fb040fa4a79",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "09eb8e4a-6cf6-4a94-9473-ee74baea43d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6674ff96-fd4a-4e3c-9c8f-f5c9b5d510b3",
        "cursor": {
          "ref": "6e224115-1dcc-48a6-ba88-0395ef8f0889",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d2c274f0-f51d-42b9-a79f-f8eb0c6ba6de"
        },
        "item": {
          "id": "6674ff96-fd4a-4e3c-9c8f-f5c9b5d510b3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1c16f050-90a3-41ed-b8ca-2af5ea66cd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b112059a-b5f0-4fbf-b343-70a3da088752",
        "cursor": {
          "ref": "570e0308-c192-419d-a5ba-97202c9976ea",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b6fdeb55-2897-4600-ba60-a8a4700ef27a"
        },
        "item": {
          "id": "b112059a-b5f0-4fbf-b343-70a3da088752",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2ed4c5c6-cadc-4f9e-bde5-5a4f79fa0b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b485cb80-6154-41a5-bc4e-a50a3d20a1f7",
        "cursor": {
          "ref": "03ce1f5b-abcf-47f9-961f-2f2f1fe51cc7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "049df19f-fff4-4072-97a9-865f317b068a"
        },
        "item": {
          "id": "b485cb80-6154-41a5-bc4e-a50a3d20a1f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c61ce632-527c-4b4e-8694-58859c71e853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d76a7-f534-4ccf-9974-83f5ea142962",
        "cursor": {
          "ref": "111f14f6-bf7a-4603-9943-5759024fd58f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0ed9611-b683-4952-8571-3192c79b738c"
        },
        "item": {
          "id": "8f8d76a7-f534-4ccf-9974-83f5ea142962",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b273631-9bbd-4e86-b1c4-12b09efd5c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb8ba89-f978-4fa7-acfa-115bc058bcfc",
        "cursor": {
          "ref": "c9bf68dd-f06a-400e-96d3-2a7e5fa3d112",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2ad3901d-9f05-4724-9997-d2c1bbd1968a"
        },
        "item": {
          "id": "beb8ba89-f978-4fa7-acfa-115bc058bcfc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "50c99684-ab6e-4cde-b3b4-9c95e633b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6869d072-8510-4489-81cc-961a2a01d862",
        "cursor": {
          "ref": "69f22ff2-aacc-4fc1-8715-ba20b536d6f2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aa4b2d06-9fc6-4851-8ed2-20783add82dc"
        },
        "item": {
          "id": "6869d072-8510-4489-81cc-961a2a01d862",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "433704f4-0da5-4d58-ac02-9c34fa283c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594c60f-7dd4-4b11-84f1-1abfce40bf53",
        "cursor": {
          "ref": "45fe6e4f-83d0-4f30-b3f6-0e4fa81d2f68",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8ee79b0d-88ce-47d0-9f1e-6fb1bff6de75"
        },
        "item": {
          "id": "1594c60f-7dd4-4b11-84f1-1abfce40bf53",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0ace234f-41ce-4d97-81b0-1df9b0c8cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f25a377-fef6-4e1d-a4ba-4d7b1a1e909b",
        "cursor": {
          "ref": "869cb643-f0d2-4b91-8959-3f73ecb7c531",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3fa65b36-723a-4255-8c2a-6171752e6bc5"
        },
        "item": {
          "id": "6f25a377-fef6-4e1d-a4ba-4d7b1a1e909b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "70cfbd84-db09-4f71-9f66-a0bf1badc4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002482a2-9134-4a37-9d90-5888205ca5ad",
        "cursor": {
          "ref": "126d9d95-0896-4f39-adf0-1d12b60f83e0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d5f49f69-794f-4202-8ce3-4ca112656dc3"
        },
        "item": {
          "id": "002482a2-9134-4a37-9d90-5888205ca5ad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c1a4fa3c-8086-4256-9af9-bf0a178a26e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7431aed5-398f-4643-99c1-655562da5e54",
        "cursor": {
          "ref": "c25c8f62-bc61-4008-9c04-ad1093879414",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ff6385c0-ac6d-4ae7-a90c-5ce043db620f"
        },
        "item": {
          "id": "7431aed5-398f-4643-99c1-655562da5e54",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de54009b-542c-43f5-9b5b-5ae0b17d3ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba53721-0b7d-4f21-bb3f-fe2422cec879",
        "cursor": {
          "ref": "f66024b2-95ba-40c9-b69b-5b55d81c27d4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a019f96f-0b0f-4f4f-8802-f1d53ce439da"
        },
        "item": {
          "id": "7ba53721-0b7d-4f21-bb3f-fe2422cec879",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a2f1a2e5-c659-4801-8c74-436bade5cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2169b9-12f4-41f8-bb31-cfe2d2ff69de",
        "cursor": {
          "ref": "df3cb614-8ff5-431b-924d-4065ad9d2b9a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7222181c-0f4d-4354-bffe-ed2d08c3cef9"
        },
        "item": {
          "id": "2a2169b9-12f4-41f8-bb31-cfe2d2ff69de",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b9db9d6e-c5c5-40ab-b17c-07126f74df2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d1b42-ea52-4b78-8b0f-331d27463731",
        "cursor": {
          "ref": "34758e30-6b00-4078-9827-ee261aacf876",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "00c50740-f7da-4e25-a227-54b95b108992"
        },
        "item": {
          "id": "672d1b42-ea52-4b78-8b0f-331d27463731",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a418c447-fe20-4b2b-ad65-cb4e253e80b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3195f76-d9b3-48cd-96a8-b52e96f9d883",
        "cursor": {
          "ref": "92031eec-9663-46f0-a389-a6647366bb54",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "138607c2-18a8-4851-a531-aeb7af36e91b"
        },
        "item": {
          "id": "d3195f76-d9b3-48cd-96a8-b52e96f9d883",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "969ea74b-ab5e-4066-aa12-f7757fa8bd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f82caa4-9fe7-44bf-9514-ae2ba320586e",
        "cursor": {
          "ref": "3c40a2b5-8dfb-46c8-a011-798005a8d947",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f6e0bca8-12d3-4fc0-aabb-43cfa8f3e95c"
        },
        "item": {
          "id": "3f82caa4-9fe7-44bf-9514-ae2ba320586e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bbd15c1a-cfab-4729-a4eb-b9c0283331e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ebe53f-8049-4e38-9cd5-c9edced32947",
        "cursor": {
          "ref": "4a394aef-6c36-4a7b-935e-d7087619f3a8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "72f9c5e5-b9e8-479d-a6fe-ae800b438435"
        },
        "item": {
          "id": "a8ebe53f-8049-4e38-9cd5-c9edced32947",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ff7891d0-fdda-4fd9-abbc-a30fe59c3bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce88390-aae5-49ba-8c16-9bb335d61106",
        "cursor": {
          "ref": "8f5c7855-51f1-4b76-bced-062bf833d2bc",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "462e271f-71e8-4ea2-88f6-001127b28dce"
        },
        "item": {
          "id": "1ce88390-aae5-49ba-8c16-9bb335d61106",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af57324a-0209-47c9-9e4d-2bbb0950a159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba2a7f-772a-412a-8564-89201a36d66d",
        "cursor": {
          "ref": "e8051f4a-cdbd-484d-8308-a953037b2206",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a68acfce-cb9b-4b20-80f2-c20fae415633"
        },
        "item": {
          "id": "21ba2a7f-772a-412a-8564-89201a36d66d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1a8b48e5-b9e7-4363-a23e-590b4b5cb9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292837ef-7e64-43ef-91a1-716b2ba77697",
        "cursor": {
          "ref": "20793c85-ee85-4663-82b4-8c66dd4db4bb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8357f6a8-7a25-4b46-8a21-27b1a1f19e29"
        },
        "item": {
          "id": "292837ef-7e64-43ef-91a1-716b2ba77697",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8921430-6031-4596-893b-f841f5bb7593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90e44f2-a5df-4999-b3fe-cd7fdacde424",
        "cursor": {
          "ref": "0c81cf05-dc29-4005-b6a1-0d6e44b9a676",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "37f25967-55f0-47fc-87d4-f8eede4f1e58"
        },
        "item": {
          "id": "d90e44f2-a5df-4999-b3fe-cd7fdacde424",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f3dfd055-f822-43f2-9fbe-732404a14513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d809a07f-63d6-43eb-b747-482ada4bbfca",
        "cursor": {
          "ref": "83075305-7237-45a4-99ef-0e688b684ca8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "99829fdd-bdf1-47ea-aa7b-47f47c0e28f7"
        },
        "item": {
          "id": "d809a07f-63d6-43eb-b747-482ada4bbfca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c366667-ba51-4153-9b7a-65a2e48119b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b416eec-d624-4da4-a5f3-9a0b6c7d3b8d",
        "cursor": {
          "ref": "d338b5b7-e950-4b14-953b-e37f864ee49d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "98ee3cb4-e432-49f1-9b2f-04857194f581"
        },
        "item": {
          "id": "0b416eec-d624-4da4-a5f3-9a0b6c7d3b8d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8715cb6a-cbb1-4e30-a1cb-b12410e50358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ed8194-f5c3-4516-96f6-76a09cdc35c3",
        "cursor": {
          "ref": "0f017501-4950-4001-9cd3-c5454196dd77",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "57003ebe-574f-422c-b5c7-1eb2378da6fa"
        },
        "item": {
          "id": "69ed8194-f5c3-4516-96f6-76a09cdc35c3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b98d6594-211b-4e3a-a700-2460b1fe1967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76943e43-27fc-4439-98c8-4a84ea7a468a",
        "cursor": {
          "ref": "6630954d-e315-47c1-a115-06e1cca9f743",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1f90aa64-453a-44a7-b556-32727b79e586"
        },
        "item": {
          "id": "76943e43-27fc-4439-98c8-4a84ea7a468a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "818a40bd-b370-427d-bfa7-b8285c594c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2f4af3-9e4b-46e0-848c-d72194e82a81",
        "cursor": {
          "ref": "fd71a5c8-d778-4018-94ae-55ff888656f4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d46f8d38-35ca-477d-bf98-498256c63fdf"
        },
        "item": {
          "id": "fe2f4af3-9e4b-46e0-848c-d72194e82a81",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c3426484-010e-491f-8692-f5b5fe226bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad3687d-0afc-4925-8fd6-34fc1a63351c",
        "cursor": {
          "ref": "36d2f363-1689-49ab-bc9a-3b8c6dee82cd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18be763e-b3ff-4479-a522-23db80f33443"
        },
        "item": {
          "id": "4ad3687d-0afc-4925-8fd6-34fc1a63351c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "45762285-1660-453d-839e-6ac4adb846ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a681a571-343b-41f8-aa8c-bd8b4ed3aa98",
        "cursor": {
          "ref": "040f2309-ab4d-49a3-9293-d7d3f7e7a92d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6199c3c2-1e81-4acd-bc43-267fed8b3a58"
        },
        "item": {
          "id": "a681a571-343b-41f8-aa8c-bd8b4ed3aa98",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2615b89a-5e37-4a66-90f6-e3e5045cee8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369be2bb-9847-48c9-aa91-d665e93e4e1f",
        "cursor": {
          "ref": "08f69614-d1cf-493b-84e0-49761b468183",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e9512f05-3e50-4c6b-9408-62bed366e8f6"
        },
        "item": {
          "id": "369be2bb-9847-48c9-aa91-d665e93e4e1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8390e68a-6de4-4885-8b79-839144a744e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7df6e3-3eff-424d-89de-818418596ec0",
        "cursor": {
          "ref": "a9fdb4d6-8cfc-4151-a8df-97a1c1b59541",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e29f7d35-216e-4164-a1b5-ec1926a06994"
        },
        "item": {
          "id": "fc7df6e3-3eff-424d-89de-818418596ec0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f8f590bd-ef98-4444-9bc8-32ca2ec19dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56197294-d85d-4cf6-8360-299afb9f5cc8",
        "cursor": {
          "ref": "509baa92-af48-4ab4-818c-03867bd3877f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "edf7800b-924f-4678-a0e7-f0567cd1250c"
        },
        "item": {
          "id": "56197294-d85d-4cf6-8360-299afb9f5cc8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f9178222-64bd-4631-9cf1-566640db3178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2dac48-21ef-48e0-a613-573bd11e7670",
        "cursor": {
          "ref": "5c7b4103-a710-41dc-a5b4-852b46d2f0e3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "622e980d-f553-407a-a8ee-d89c0dee1991"
        },
        "item": {
          "id": "cc2dac48-21ef-48e0-a613-573bd11e7670",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48c86144-14f3-458e-a7d4-456a8407dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec95924-77bf-43b7-b8d2-065c1ac588e9",
        "cursor": {
          "ref": "731effcd-2720-4631-858f-95fe291bb015",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "13bca249-0051-4a11-9b1b-df900e8f09c8"
        },
        "item": {
          "id": "8ec95924-77bf-43b7-b8d2-065c1ac588e9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c8895fef-8340-40df-89db-c72d8891578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1877cbe7-4074-4b7c-9581-139766e966ca",
        "cursor": {
          "ref": "8a467685-1118-4487-8f3f-ec04f4c184d1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4ad3045c-c7c6-4d81-876e-9d9e061263d6"
        },
        "item": {
          "id": "1877cbe7-4074-4b7c-9581-139766e966ca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "97b0f8d0-bd72-4e65-bd79-71b18aeec915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b9a36c-0979-44c1-8070-b415e2a8a8be",
        "cursor": {
          "ref": "e3355279-f6bd-4740-84d3-fea91b77db37",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8d6295c5-5749-40fc-b0a7-5da1cc91af6b"
        },
        "item": {
          "id": "51b9a36c-0979-44c1-8070-b415e2a8a8be",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "311fa80c-5290-40a7-933c-398466d810b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52502d77-531f-4e19-bd3f-dd64cc4b708d",
        "cursor": {
          "ref": "3f8c0781-2b5e-4b96-b842-72cda50b4aba",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8d0052f6-1825-4a6d-abbd-41b50be07d43"
        },
        "item": {
          "id": "52502d77-531f-4e19-bd3f-dd64cc4b708d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3c51629f-81dc-43e8-9ad3-691f921f68a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244ec97-20d2-4d1b-955a-1dc31f5c5e88",
        "cursor": {
          "ref": "e6143f80-e754-4a03-8a93-de3673d27168",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "abfdda3c-7f1d-4088-b28d-2f19a7b60895"
        },
        "item": {
          "id": "6244ec97-20d2-4d1b-955a-1dc31f5c5e88",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1e78465e-3b6a-47f3-8d74-55662cfdb8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a315a-f056-406b-89c4-550bbcc70373",
        "cursor": {
          "ref": "21b6abba-907c-4e0f-b592-cf7a9f22c906",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c543a769-68ee-4f7e-99e8-9037c863d114"
        },
        "item": {
          "id": "936a315a-f056-406b-89c4-550bbcc70373",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e717abfd-0b93-4d78-9053-1d1b54d68015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b99fc9-42f2-47c9-9dd7-74d512b82782",
        "cursor": {
          "ref": "c8747470-bf5d-4d65-ba7b-78e8b56db480",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9d064c8f-05fb-4db9-bce3-9e4c2b8972f8"
        },
        "item": {
          "id": "77b99fc9-42f2-47c9-9dd7-74d512b82782",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a698c72-f584-4e61-9638-0cf0409cf8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f601cbf2-6ae6-4266-8dc7-1b7d1c4062a7",
        "cursor": {
          "ref": "7c44fc71-83fb-48e8-a1f0-4157e11c1601",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4e2ad177-2e09-4f88-81ea-1bcd4bcde8b3"
        },
        "item": {
          "id": "f601cbf2-6ae6-4266-8dc7-1b7d1c4062a7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9c0dbb8e-90c3-4008-82be-5211bbbb2f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42267b7a-ad84-4dff-b8d2-cd278dce8e5e",
        "cursor": {
          "ref": "7b6bae30-11db-434c-8c31-11b7c8573206",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9934be37-ada2-4b2c-9f92-979de98c4dd4"
        },
        "item": {
          "id": "42267b7a-ad84-4dff-b8d2-cd278dce8e5e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1a03bdb1-1696-4d17-8895-8c39ed0369a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9541979-4c96-445b-af62-79593548f8b8",
        "cursor": {
          "ref": "47bc1e16-c8aa-4ceb-94ab-4c1a0369a40f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6dea1d00-f404-49cf-a1f8-575b1f4f24f5"
        },
        "item": {
          "id": "f9541979-4c96-445b-af62-79593548f8b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4ce599f3-2644-480e-9233-542eb356c25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce868b28-f08f-447c-85b6-ee49acdd0826",
        "cursor": {
          "ref": "6a4bb9fd-d7dc-44bb-a19e-550096179eed",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "24a49c04-d296-48a1-a504-7cf1d5ef5e55"
        },
        "item": {
          "id": "ce868b28-f08f-447c-85b6-ee49acdd0826",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f9af2d91-fcf3-4fbf-9ab5-c709befdef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f8a547-2be1-499d-bef7-c2efc0593c75",
        "cursor": {
          "ref": "5b7386c1-9441-4052-8b23-b7f7be0051cf",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "272b8bb7-c4a1-45b9-ba68-8a7641128c6a"
        },
        "item": {
          "id": "87f8a547-2be1-499d-bef7-c2efc0593c75",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fc033a28-e69b-4afa-8335-9fdcdad87431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917764ea-7684-4a4c-9f2c-d537d509210c",
        "cursor": {
          "ref": "bb9f4a71-77fc-4cea-a7f1-4bcebaef4465",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ad38cda-0970-4c16-8295-3912f4b013d0"
        },
        "item": {
          "id": "917764ea-7684-4a4c-9f2c-d537d509210c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7ccdfa0d-fda7-438f-b104-a04003fb653d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555db23-a1bc-464d-a21a-1fcb6d218332",
        "cursor": {
          "ref": "2c20606d-5650-4ab5-ab59-600f47662315",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0e52efd5-69c8-40da-8ad0-d15e05c4f369"
        },
        "item": {
          "id": "7555db23-a1bc-464d-a21a-1fcb6d218332",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "60da3319-9ba9-4963-8eb3-87718dffa1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb6c96-835a-4556-b3ff-aef46b96ac99",
        "cursor": {
          "ref": "4703f295-5896-45d8-a5b2-2d9bda971e7c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0efc57d2-e79b-4359-9743-9c69b5c9f20b"
        },
        "item": {
          "id": "20bb6c96-835a-4556-b3ff-aef46b96ac99",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7083eccf-b5c8-4336-a357-8b436977816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aa485f-3123-49d0-a3f4-9c5b3162a475",
        "cursor": {
          "ref": "db7a0729-cff1-47af-b098-53e5dd26a86f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "657afacd-94db-4b29-9e9a-dca7b24f11aa"
        },
        "item": {
          "id": "f6aa485f-3123-49d0-a3f4-9c5b3162a475",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d5705d4-1b8c-4186-9a64-48e8e01e3bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5db187-1f00-45ed-b95f-2c51dd1a5bef",
        "cursor": {
          "ref": "c4d1a5c8-2ab1-4449-8d61-7284deb17ea1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "09c3e7f5-8e40-4ebc-a7e0-97502a3bfec9"
        },
        "item": {
          "id": "bb5db187-1f00-45ed-b95f-2c51dd1a5bef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "02e02cfa-e2c8-435d-876d-105d8541e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795c1025-d221-4bd5-9a11-b02db7d98f48",
        "cursor": {
          "ref": "7d5b5381-15b9-4b76-a2b9-ea98cb5cc880",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1996442c-59fd-4947-bf3b-07f491126123"
        },
        "item": {
          "id": "795c1025-d221-4bd5-9a11-b02db7d98f48",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2753af87-3df5-4911-8679-a2245b6909de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac477b9c-698e-4f0b-9bad-9afb5db2577c",
        "cursor": {
          "ref": "453a010b-1742-4702-aee6-0a96da8ac31d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "604947b9-b4c2-4e46-9ebe-1f9b31019aa3"
        },
        "item": {
          "id": "ac477b9c-698e-4f0b-9bad-9afb5db2577c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e62a5f3-1cc6-4831-b400-4924692b2a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0946dd-ee88-47f9-9c98-52c9daa8546a",
        "cursor": {
          "ref": "94cc42f2-1793-4965-9959-96d9558a2df6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "40e1ce4a-041a-4a51-aaca-14f1504c6326"
        },
        "item": {
          "id": "7a0946dd-ee88-47f9-9c98-52c9daa8546a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "573c6b37-8f2b-4895-a590-2140bcef19c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f400a8-d8eb-4c2c-a770-0aae9de7bc26",
        "cursor": {
          "ref": "930ec999-63d0-4f5d-a758-a7365cb10574",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b53a011d-e665-4ac5-a24c-8a1355eb77c3"
        },
        "item": {
          "id": "75f400a8-d8eb-4c2c-a770-0aae9de7bc26",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "daf2f206-2086-4e1d-9014-ea6112a45986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf38007-c679-4e2c-8503-469b174a64fd",
        "cursor": {
          "ref": "1f379b05-f4e4-4963-ba1c-3ce7a0763076",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e4bb5c05-e394-4ee5-a1c1-0a962c2cca69"
        },
        "item": {
          "id": "2bf38007-c679-4e2c-8503-469b174a64fd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "64df2d71-3bd9-4b57-a6a2-17159cf5c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632877f0-f05a-4b9b-a4be-5ceb25eedfdf",
        "cursor": {
          "ref": "bccd94e8-5417-4172-9a36-57affb901c8b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0e8904d7-e82d-421e-b121-95997e94fde0"
        },
        "item": {
          "id": "632877f0-f05a-4b9b-a4be-5ceb25eedfdf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e88462f5-1c08-434c-9e8a-cb8bb0b1c36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c6794-2e43-4765-b9a4-4f64d1547e2b",
        "cursor": {
          "ref": "f1fe2211-1bb6-4385-94ab-eb609ce699bf",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "09f361f5-52ac-4e32-8e33-71e9891a3d46"
        },
        "item": {
          "id": "ba8c6794-2e43-4765-b9a4-4f64d1547e2b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1877fec5-78ff-4ed9-8bc4-1c5081647781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3179dad-b0c9-4da0-8961-4d00551bb4d5",
        "cursor": {
          "ref": "955f5b43-acb6-4cec-998c-8301c9e68e58",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d4200700-8f72-4508-b3ce-2b3c6875cecd"
        },
        "item": {
          "id": "b3179dad-b0c9-4da0-8961-4d00551bb4d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a684c2f-99a0-436b-ae2f-56f0e5fc88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03651b6c-eb52-43dd-a754-37b96d5e6d7c",
        "cursor": {
          "ref": "db482eae-7709-4b09-b593-b75d4b9baa75",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7749e66a-2220-4d8c-9530-96be2e09f11c"
        },
        "item": {
          "id": "03651b6c-eb52-43dd-a754-37b96d5e6d7c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9a43ea11-486d-4280-a83b-09422b88aab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5a3739-a3a9-441d-8d25-7a7ed4cc21b0",
        "cursor": {
          "ref": "d47999f4-13f4-4b30-8c20-3704cc2db557",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e347f2ac-4cb1-42f6-8bb0-bbc4c378a3ba"
        },
        "item": {
          "id": "fa5a3739-a3a9-441d-8d25-7a7ed4cc21b0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "460fcc54-17e1-49d9-b2c5-1e232d5e1bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e4a8f8-a8f3-44d8-870c-cc4f48001144",
        "cursor": {
          "ref": "3b6e14b1-7a21-44b6-b731-129b27834368",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2a12b13a-b5a3-4935-a8b8-775ed964da5e"
        },
        "item": {
          "id": "90e4a8f8-a8f3-44d8-870c-cc4f48001144",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "45d6eb51-27a8-4899-98b7-d7f7b42d35c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69a2b6-e521-4abc-868f-f39fe25a999d",
        "cursor": {
          "ref": "e32d9c01-304c-45a4-961e-10da3162f2bd",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5cb17cec-79c3-4f0f-aed0-0efd462c9b2d"
        },
        "item": {
          "id": "ef69a2b6-e521-4abc-868f-f39fe25a999d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8921476c-d74b-4ed6-856b-be5a9aa964d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa71260-c676-4a2e-87fc-810cb2f76b55",
        "cursor": {
          "ref": "bd9515e0-0780-48a9-a7e0-b7e172a50c43",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2ee310f8-9798-47f9-95d8-59ab2d64b7ad"
        },
        "item": {
          "id": "ffa71260-c676-4a2e-87fc-810cb2f76b55",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "56b03971-edda-4c7b-a0b4-4bf08619c8a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 106,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2164d26-1215-46e8-bd06-d3113a069cf2",
        "cursor": {
          "ref": "014a0467-cc06-4f5e-9fa0-65d8126fb747",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "17cb28af-b74a-43e3-bece-f5b5f2fd2cf2"
        },
        "item": {
          "id": "e2164d26-1215-46e8-bd06-d3113a069cf2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2f197ced-3d1d-4967-b303-27517627a25f",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "102b5778-ad16-44eb-b0a3-4a4d4d3ff250",
        "cursor": {
          "ref": "db9db3df-e7e8-4ec3-b90e-96c2c3279c1f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e74113c8-c4c1-4468-bc33-2ac43965eb6a"
        },
        "item": {
          "id": "102b5778-ad16-44eb-b0a3-4a4d4d3ff250",
          "name": "credentials_verify"
        },
        "response": {
          "id": "edd17b35-00d8-48b2-8579-69a83bc0d279",
          "status": "OK",
          "code": 200,
          "responseTime": 4035,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67304d63-c0d3-4cbf-82da-7eb4e35baff2",
        "cursor": {
          "ref": "3b9e345a-4763-43b0-9cf7-659e08e20344",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8233c84f-146e-40fa-8374-9882a27056aa"
        },
        "item": {
          "id": "67304d63-c0d3-4cbf-82da-7eb4e35baff2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1890b8d2-d0f4-421b-bb99-4ea5ca28c09c",
          "status": "OK",
          "code": 200,
          "responseTime": 2678,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dfeea5-7b03-40e9-8f11-efbc89f89582",
        "cursor": {
          "ref": "f2239988-bb26-47f2-9815-4f3bf1b0ba01",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1e04e5ee-2a86-4252-8106-0682151064c1"
        },
        "item": {
          "id": "37dfeea5-7b03-40e9-8f11-efbc89f89582",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1c3df98-d8f1-4c85-8e98-b73e78ea737c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dfeea5-7b03-40e9-8f11-efbc89f89582",
        "cursor": {
          "ref": "f2239988-bb26-47f2-9815-4f3bf1b0ba01",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1e04e5ee-2a86-4252-8106-0682151064c1"
        },
        "item": {
          "id": "37dfeea5-7b03-40e9-8f11-efbc89f89582",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1c3df98-d8f1-4c85-8e98-b73e78ea737c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86ea1d9-5d43-4170-8bd8-756bd4c597ed",
        "cursor": {
          "ref": "58ee88f2-6176-4bd9-850a-d2c2d77733b5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d0426233-6098-4b81-a99f-359569d72201"
        },
        "item": {
          "id": "e86ea1d9-5d43-4170-8bd8-756bd4c597ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "104b84af-3d48-4d70-b408-b3c436fc28fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce129ca-9de5-4185-9d3f-123b0b837bbf",
        "cursor": {
          "ref": "401c1f0a-6712-4c11-b8ef-e1609be749a4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3da9635d-c332-4059-b64d-5161b51511be"
        },
        "item": {
          "id": "7ce129ca-9de5-4185-9d3f-123b0b837bbf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6b9ba62f-5250-4240-9e70-c33e1c8a662f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}