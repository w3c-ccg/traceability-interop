{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "649cc147-cccc-4030-9c8e-4a2daeec57f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c84df09e-a977-4273-8a57-fe3bcb8725cb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ade1438-e97f-4eba-ba2d-acd915969f31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f220c64e-439b-46ae-9d74-439baaf49f3d"
                }
              }
            ]
          },
          {
            "id": "a76d69de-38d0-4a31-b473-d40fa0384397",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "716ff332-398e-44f3-9183-2c9f9ae74e24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac8853a2-8287-4ad2-9b43-df69248ce827"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3216a197-47ff-4b6d-b275-34d2b97c2e61",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f5a82d8b-539f-45ee-8452-a7428e465498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b634c16-ade3-44dd-9020-78841fba1384",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c2f13b9-0d2e-4190-9489-2dea6de73d6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "731c6891-5935-438d-bb90-73fe10055172"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18da45b3-531c-4bc5-9476-a6cf1ff6bcf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45df0c87-06e6-47ce-a7d7-21b4bd32fc5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d919745c-cdf6-4fac-ab36-76fc79a10edd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87c97de3-b4c1-4b7c-b569-f2524babfeb5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49fae993-a341-4cfb-8f4d-2b5fdad40271",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "89a4b504-b507-4646-8a73-bf0a3dc5ce47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "531f0870-f780-4c3f-b2e7-e5f1bb24b0ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a48acb6-75d8-4503-aeba-6822c5e1f152"
            }
          }
        ]
      },
      {
        "id": "5913ae24-ec17-463b-9d5b-e73af02c1e2d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "130e91bf-20fd-4679-861b-e5d5a79fc14a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cba1f50f-a957-44cc-8a02-0f80e4031a3e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb7d3e63-c6f3-4305-beac-a9c8ed00c133",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e3e30-4480-43e2-beb9-7f89161c9d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6982dc19-2a40-48b6-9464-f04dfa62f392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b75191-3f95-4dad-8b2c-8141d87f7b21",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc724ca-4e04-4ab9-bf2c-b438f98fc1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "429b5ff5-69e6-4a13-a87a-6c010ff5f5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443e005b-5913-41e7-916c-fae2b002f315",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821ee2f-877b-4b1a-b6dc-994e08816229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b4ec576-d738-4244-b529-428c07141ec9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18e50942-d05f-4a8b-ad0a-0495d3e852b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d9db412-9ef9-4a5d-a69d-6ef2c2ba8c15",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edad44eb-ac34-4880-a372-d1c64528518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1bb8258-378b-4d89-bd26-6e7c428da4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb86e07-5950-46a1-8b5f-026a28d88c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b76bd9-329d-4cf8-80b9-0b23d7205e49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8c56f580-ea35-4098-a457-f20c1346399e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef51cf57-3686-41cf-b50e-bcad00fc920c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2d127fa-df15-4e62-b18c-4919c18ea9b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a1c4c867-6868-4c4a-a5a8-9dc8ce0d960b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cca0f84-579c-4b04-be9d-61f9b8d23b45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4a182cd7-43ba-48cf-a6bc-12b3956e03b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde68288-9641-4236-9346-2c4c7c196964",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "434e955d-acaa-45af-a7df-ea0645f1745a"
            }
          }
        ]
      },
      {
        "id": "948f6251-17d2-4f33-8dde-52bf68904513",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12bd3c01-d4d7-4c0e-90ef-95e45cd827f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef95c63c-d959-43d6-b794-607cfcc15e38",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d0a25607-19bc-4dbf-8762-077512580839",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830f9fa3-a2f5-4941-91ad-b278f917212b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfb2679-0ea0-4302-b510-6f421c730c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f0f9c6-d475-4965-9fb5-7c8687c93ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a58512f-5edd-4809-a2c5-ddf22364e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a3cb47-37df-4d61-8ebf-a92f514d06aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4118bd9-5452-4490-8f3d-341efef27ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394d4146-b25b-4f35-9342-f1ef32f4a8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8195dd-608e-4c61-aefa-f7e658717e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3d26e4-4c19-4b9d-9807-cd765e902a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a2551e-a8ff-46f3-b68e-050ec27e65a7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5a63f6-e239-4652-8b8d-347b24422525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa99f1a-2fc1-4e76-9211-985bb3a6b273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e2ea9-3349-46dd-b519-0dcfcdb81188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865e83a1-0531-471a-aefe-9bba74d721fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8387f7b8-417a-4e3b-921e-a989cee7dd26",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a328189f-8dce-4f2e-963a-034921ccd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef2daa3-68cd-4550-9db5-c82e41fb46bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed3a5a1-2c0e-40c7-9e36-8fb2df69e616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9789dda8-f7ff-4855-bf85-3935d8d35745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebe77aa-195d-42e1-848f-e7fe7a096bfa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677963a2-58f9-4fda-afd9-162431d3b295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facfab48-6b78-47bc-9dde-6c4579bd96ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76abe655-ec56-4237-9502-35701cfe18e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f26a3ed0-beca-45ad-874f-7d1abff4dfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b35ca6b-97d8-4d5a-9c9e-1e4b79927f10",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fb65be-d1d8-4527-86e2-4f8894468eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81130daa-c6bb-4769-9cec-5c81ca6935ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8581e2a-a46c-46b5-ab46-dca5f44b953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f792929-54a7-4a62-a460-69544d67e25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf423d4-fd5a-433f-97a8-b2eeb2fee240",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c16b87-ca1f-457d-bf9b-fc5f79493e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5030f376-9627-4dac-8a9f-98c6da1f03c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecf6d69-e791-4465-a94f-56e1fccd8733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ea70a5-7da0-44ba-a3be-75af69a0271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9dec4b-dba0-4336-930f-917e77fd3ed3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d7efc8-1f0d-45af-913a-11cf6e71427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae024cc-645c-4c6a-84c4-7399599c5974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb57597-c75f-4f60-bafc-e8b13a3cce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d12143-309e-4093-bd6d-c38598710f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf462f4-79ff-4407-ba32-151a527b1a9a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0209bc-cc66-4e6a-acf2-5d22f4611b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7ef89d-02ee-46d3-8bd9-b53a8373df3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b90aff-1046-4f70-ac5b-b8fce7883673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43f306c3-8dfa-4079-a5c1-c4f5a4874cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f58787-1ab1-4795-9525-e9beea11d0dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03dbf66-d4ea-490d-8900-0e0627a760a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15999a9e-a42a-477c-9230-a0f0d3cfd882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70228b08-e1b1-471c-9a18-b59cff902f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "518811e2-91d1-4544-b96e-bf4570e17289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430ac7fd-bcf6-4ff2-b7aa-a70729dfc026",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9477eaf-6e6c-4e2d-b838-02684a3c0cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ed9c92-5705-4e06-846a-c91ee47e5ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb3d21-e738-4831-9962-4a53513eb398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b33fdd12-be12-4d74-863f-a77638d75a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaba016-28d8-45b5-b2bc-e856a891031d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7e60d-5fb5-4009-ae67-d83a106fbf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a56567-5932-4b1f-977e-47ca32a89100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c808c737-9627-47d8-a188-93b9e6bca3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2aeb7dc-2e9e-4661-9431-50ce19d3c5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b87e83-aeb2-441d-840d-5649d0473c88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea251c6-e1ea-4d52-81d9-92292f084112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec85bbb3-56ac-4a60-b5d4-51f1d242d4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eb132a-b602-49db-a2f2-d91604a673f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34e99a3a-b3ba-4f97-9e4f-60a991d75ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4351f-7cac-43fe-899a-06c7839c3b0f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3ac6c1-dbf1-4e71-97fc-1c2cd9db804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97d4700-b395-4b4b-94fa-091a29beaf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71084b5-2b77-4c69-b1f8-5c92c85293f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c98be15a-5eda-4f6d-b1a2-153d0e925903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0a43e-4b64-49b3-b15c-44fd707e8ab9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d705304-6e61-45ef-8fa1-34ac6900151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24d3199-210c-4e1b-b90c-519eb99d7e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c9f61-9a40-4bc3-82cf-8cf8c75d4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cea4507-0022-4a48-b4ae-1f831f39f100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f469e7-761a-4fef-afa7-64cf47e93e7f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0c7ff2-bdba-42d1-bc07-c90ff395ac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d68b1a1-c5bb-45a2-94b9-db552e17701a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca57cc-9b76-47a7-ba7e-acd66d1967bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d06478c0-2c6f-47de-a707-87379fd1cfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff4c795-492b-4cdb-ba90-99234fa2fd9d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be8aae-8bcb-46d9-8d63-b7e38a42b6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127ffc88-ccb3-4d7f-9e69-aab9ea92be58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de329c8-6c28-46a6-b091-889d4facd8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2adf45e8-0f52-4c3b-8c83-6080ba44e7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99b3974-cfff-420f-af9a-ee4be0f64ecd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c78879-5e8b-44d5-9662-de83d50ccc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f6a8b3-8200-4a9f-a3a6-3379c860285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7c3027-7d82-4f6b-afa2-ed4a8d2304fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f9db43-2917-4252-bc6c-15d52a62aac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef84abe-8131-4ff6-991c-a020274a3e83",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166def9a-74fb-459f-8137-94fdd3a2c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a7aa17-cf72-4fce-9d6f-08e314742fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98f00cd-3cb2-4f25-a3b6-126895ed8347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49cbb701-54a1-4fd9-b973-1259256ab095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a408368-94a3-4a28-9341-889f599f84c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174c324d-432e-46c1-baf2-9a8a5458f865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0dd81f-e7a2-40e5-afc8-ad16bb19c312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1a0373-d6a7-4dfa-9115-14e7b09ec6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddae54d-dcf7-49bf-b5e8-12a380447895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffe9553-4c01-4b70-a105-810aad4b091c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9b889a-74ea-4459-97a8-24839bbf6188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f295c5-e788-41af-b3d8-a70560318a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad31b5e-d10c-4a76-92ac-1578af75a40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c683f8-16df-4c4b-8538-9ea7281b3d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd15ac6d-8935-4d32-91fb-e28f1df84923",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf7abb0-24cf-4ea9-8702-37c5baed0688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba8b808-3872-47f9-b2f4-1806c11fb449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a904ee2-652f-4cae-afc4-ce7390ea8967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fac3a72c-3b89-4064-8c67-34ff6b63229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af6a2d2-be8f-43b8-a5fe-7da4bb9b9187",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f47fe8a-8a3b-4893-a267-90bfc84d2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e108e6da-1e53-4750-8e89-ca8e538bfa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0bed6f-cc4d-4fc7-945a-66b4e141ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3188496f-46db-4351-84a6-bc9f7076d1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da924fb-d755-413f-ac44-08efc0b7b732",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ec324-4212-4d60-9479-a633b68819c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822f9ac7-7577-4b8e-87ff-1b4b3639ae84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c50d2d-276f-4196-9099-7eb7de7208c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8601c6ed-c704-47a2-b729-193e641b3fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecea9845-77b9-4423-9e93-ddbaf2a1d387",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a15bfce-2873-43e9-bd55-245fd8e917e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cf9152-4331-415c-b774-7bc501411a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e2a821-23be-454a-8ec0-115db46a80f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c70357-a62d-45df-8fcc-5001a7e400b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13ca9fe-1be0-44d5-b04e-6a207daea687",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea6a29e-8082-491c-9570-953491fa89e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a7a56c-ff58-472b-95e1-0825f8ae01f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c110ef1-8456-4d13-b588-5c9727908b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb13a5b-b50f-4cad-94e6-70b18f3bc862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92762f5f-5f20-43f0-8a08-d2105ed688c1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d825e8d6-a1af-4cdb-83eb-c9753f36645a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfb974e-efb1-4949-97c6-99915926bb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bb437e-b9cb-49c3-b3d0-aa22bc5b0efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a22496-fd26-46b3-8997-5bac0bd0b2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76cb246-526e-4a24-bc92-f9253bf865b9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35261cc-593c-4c25-8441-6b9b979f107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29aa2b0-db5e-469c-b705-1e53ef65f59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5af172-1d46-449c-9758-e8c0585edffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddaa975-8d47-4bac-aa70-59de6d0b2652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05501bcf-884e-4c1c-bce5-36e83856c1e9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ec753-e670-4f8f-9282-6dcc10bc5dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0484030c-ed62-4f6d-93bb-c9cba4227583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6139753-ebed-471e-bd1b-c3140797bcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b72f84-db84-4534-9be0-15477239e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81afa880-b7ab-4bf7-bd7d-33e445946966",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795f184-97f7-44e6-ac78-175e15a00589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb53d5b4-c232-4b76-9057-fd24955af3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e58556-c40e-4a14-b68c-7441b39a3370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c11c0de-2e01-48e2-9967-a056a081a198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f239ad6-00c7-4499-840d-5b18082d282d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb77718-5202-4299-9c21-e66d58843dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5b771a-ef93-4156-ba67-1fdbd3400276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc6bbed-8ee5-4c2e-bf1a-3ae1c96a3d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f85799-649c-4555-b800-ba06c43bf619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90516a6-ed90-4e9d-97b2-e309109ae627",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4088d562-6820-4c8b-89ae-a47f9507f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9588038b-7b94-42d7-bfa8-f3923c20cf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e692880-b714-4684-aad6-7106e553b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05171d8e-b19e-4e8e-b1a9-1f77ddeff59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cae5941-d138-49fe-862c-664ae0283c69",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb45f4e5-9d58-4475-9ecc-13397173f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcda4704-2a7b-403c-bab7-0d6a6a196c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cafb61-1f35-4d2d-b85b-9ef49e026b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9902900f-adf3-4553-98a8-8e1de35c7029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fa33fb-ac4c-4677-b724-5eb6efe7c626",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11777711-e49a-4b58-beac-555a7ec3b47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea1c79d-8824-4ac4-ac78-fb1cef351a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e092865f-d5d2-4e2e-8369-ea5d55b39683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af28ad68-6288-4cc4-9d55-40ea3db8c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be50bc52-2da0-4e2f-aadc-e59d922e6341",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec81034-5cad-4903-9cd1-c306bdf66bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e0cdd2-11a2-4ab2-aee1-aef108d0662c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec202602-89a8-45af-8e1a-1df057e3ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c4b634-b65d-4fc0-a4c0-930647720f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74506cb1-5829-4aa7-98c0-6dd78ec1a2af",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a18c5d-ebc2-48b2-9813-95a3d9c6fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "633fb98a-21e6-4bff-9679-5c7a1b3388db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b2fd75-26f1-4790-8e14-e123e1eb3c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f94f4b03-8ab8-4e88-ab99-cf3cbd34ae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7636977-af4c-4eee-bcd4-5d23db5d196d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91e530-2127-4bc8-8248-997194df00de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09466383-eaa4-4faa-8df9-3922a42fa4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f926e24-3411-4108-a0f0-dfd528ccfcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1205b499-5305-4b87-905a-db1475c29f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5223a11b-8e1e-47e7-b734-c3b67f0167c9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8347a1-5791-4edb-8bf0-17f54348f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b17a1f-5919-4064-a3e9-e53e2ef5c7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bcbb5c-e16b-4364-ad60-8e1f681ad655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a41aaa0-d3fa-4ca2-9280-28ab4b249b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0f8447-c37e-4f3e-9c56-2500082d866f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830dc18e-4714-4d07-a145-6d8e108a1327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85da6833-3d05-41a4-9a61-f9955370c006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6d09f5-8e87-4e15-a47c-f9557700d792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9757e79-4fb6-43a5-802f-7e5a194f5db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5c0201-43b7-4423-adeb-7f1f1593ea23",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a5cf6a-0f97-4c2d-821f-082590f8c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3c78ac-9895-4915-8e00-d0ab100e023b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10c26ba-4ae0-4ded-a766-2eb1b482d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e3afa7-8633-4bc9-850e-41c7ecd78b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f51c6d9-0b4e-42cf-b017-028d1da493fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1222651a-37dd-4be4-b64b-3891a1b2280a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ef5d52-0ef3-44b6-b103-4d9fe5204d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f3554a-d86f-4629-bce6-6712420bec33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63da554c-9561-4e95-8785-e7ff7d3ded71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e01358f-a954-44d3-a78f-90f14d3e0cb4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e9a8ec-43c8-4a82-9329-6765f32f9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e0a27c-f915-4554-8bdb-b1d710038d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082253c5-40a4-4777-99b0-90ba6fbdc5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c3dce4-59ba-45fd-b713-95cda673c742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffea620-7dab-4811-bf7d-0decaf69cae3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771bdd1a-8994-4d58-8a8b-b63f6cfd5dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59a1fe1-fe0a-4b80-a5bd-e6292a3dc2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af7120-5464-48cf-9e33-53737ccf0a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a2f7ce-e23c-412a-a05c-768980e55b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439eeace-18f3-4d6a-af74-d33d36a7e329",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f930a7e4-efb3-4233-b9af-24ea8ea3a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4172ba9b-ee59-4717-b8e2-28a44c4b8f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76c4ef0-5040-4c73-8c70-70be4f95629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67858ff5-4bcf-41a5-8e41-b0fbc9178fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d74b60e-4f13-44fc-9433-695449f53f78",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca4621b-759e-4c36-9280-96e11f560c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2641793-01df-453b-942c-4f0943beef45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82341274-7a3d-4679-afa0-afffaaf27c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93891bc3-a6ed-4c0f-ad78-6d3c58eb0434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b3a17e-d851-4d3d-8787-a276c3375d49",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77acf1eb-b945-4abe-9367-fde63a889d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059a8b29-158e-4b23-8cd9-de4657891761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2da0cb9-2862-4248-af9e-0538fe5c4c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ba6a71-bdb8-43c6-bef2-f8cef67e026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca09b40-0082-4932-ae5a-1fb0b3f279af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92de0f99-e653-4d4a-8070-37ab8d85a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8dda49-9e9b-49a2-83ac-114abb4b1d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6b59de-d3eb-4010-98eb-4370aa3f9b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d32842-7e7a-4fbc-9d0b-6400b2f341a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810f902-8ea6-4f02-96a3-b0bcba2060d3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a5772-0711-4ca8-bf43-38ecc4d4dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca9fb76-7c12-4549-9261-3ab2387e5f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ca3b52-6bd6-4a86-bdd6-8791165d1bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "119a5b61-95bd-47bf-9d17-e2309acc8a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c79f1-080c-486f-b1a7-ddc38264137f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61150622-49f9-45b7-90c9-53b2bc53eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab3447a-d810-406e-af3c-4803d6bdee14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f8a47a-b5d6-4f6c-a815-bdab7c2336d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55affefb-f0a1-44d3-8d41-24c1dbfabb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e37f8-acc9-40c6-a803-da06fb47d199",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a576a9c-bb0e-4a7d-be3e-394f2864adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29044e74-061a-4e33-b0c3-b30d57518ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836f81f-ca8f-4374-9ef4-e3179f807b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a82619-1f6f-484a-b6b7-8bd0fb531172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29d064-6cfa-4778-bc13-6611aeca6254",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f6fcaf-f255-425d-8bc6-a47377b564fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3a102e-fb02-44e8-a4b5-628e78e160c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3ee5e1-cd33-45a9-8895-6a38cfda4fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0183cf4f-90d0-44c8-b61e-70bc3344389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42165a3a-7a07-4a65-895c-70c9f6b48ed2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ebaad0-4ebc-4521-ae85-1079e1a35ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a12564-b604-4bd3-912c-5a1b666441c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb07ce6-8f47-4d8c-a1a5-5b06c62dfc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e7dd85-07e2-4d83-92f4-6c4be7889376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682d86d-1677-48ef-b2f9-5400a6f64ac4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5aaba21-1ede-4135-9047-0678e327920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ba2f60-eb46-42ad-817d-2ef1d3cfe9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc472b9-9747-46e2-931f-8031fe25de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d48c2df-c17e-486c-a532-51329d31e335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c22aef0-26c3-4c8b-98df-c0c085af6b72",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d00fe0-af6b-4187-8111-1587bb5fad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a84139-7748-4250-b6f2-8741f728a4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31e2476-c7d1-43fa-bb52-7d1c198c6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36739d5c-5227-42d7-a960-abc1dc4d7c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db463311-caa9-4995-a393-2d687e4cdd33",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a24bd1-7f3f-45d3-906f-a88a5980049a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4812f0-dfb7-4a84-90c5-49e4a3b57b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e61678c-413d-4d53-85e4-7810361db4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41192095-7057-48a4-80a1-4f9fbf651c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d71b052-67c0-451c-a4e5-706baef74000",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4825ab34-0bce-41dc-90b7-c9e9e0af9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf89779-16ba-430e-996a-4a36267ab921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b368b06-b268-494b-8da0-00404f62459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "644f2048-75e2-48bf-b7f8-e96eec647f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57980883-2b26-4cf8-81cc-f9648d448470",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0316a490-8af2-4590-913b-42fb5bc90978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65691a08-53d8-4b39-a247-5876a16d8ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbb0328-9927-4df9-97a5-e3b8e17ae7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4b458a-7663-4fe3-81f9-25c46bed3854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17079427-9fc0-4337-b1f8-7cd64990351f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1252582b-48ee-45e2-aac5-e2974fa6978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d926bddc-b1ef-4740-bbcd-a5d5bd33bc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d7a6fa-21e6-47ca-9847-cdd13e91d6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21da743c-51c6-4753-9c0d-d43949e96cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c11212c-0eb7-426d-8794-6af0c9a07f27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e008ee82-7773-4a48-8ba5-5063a235f438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc3f092-cf52-4b7a-a865-9a725a65aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ed4c5f-7481-4637-8671-6aa3eae09b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1900796-681b-4f85-bcc0-7ae425018d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9149ad-ecc7-4e6a-adb4-ff3b8a1364b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df03721-fdc9-4bcf-9f4b-1514c6f24b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c288d11f-10fc-44c8-bc0d-01b9404c4a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6481218-fee2-4bed-a3c4-ac13c914027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03894c1c-f2b1-4386-b0e1-ad70afb35a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be551b-0b03-41da-b6ff-d04f861169db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a507798-83fe-4db8-9369-5b25dfb95da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c828eeb7-d13a-429e-ab02-4750c0b73a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0daecc-f0c5-49d3-b4cf-a2b91165a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e09c4e-b667-4203-bab7-7e42d20b614e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad067ee3-3fa1-430d-a3ef-942317558daf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ed5532-bc9f-4795-8946-a82ca104982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce421cd-b276-4950-8f0e-8c4d282bf07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed18854-13bf-413f-86d6-97f26febe5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f017742-fbce-4345-b94d-63efd00e57a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a830d840-ab74-4f6b-ba10-8e0f85fc845e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5208170f-9878-4ed0-be83-848e3d482622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0668ab-9ad6-41e5-b565-9d8dfe37e851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74758bf0-c789-4a36-8bec-7cc1b2758ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4b0a2a-25cd-430c-9337-98bb7ddbf9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e00de-9560-45f3-aa19-9f27679c4e32",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c20334-a9f2-4e14-93bf-8cb59aef69aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8935c28a-01a7-4744-9ae1-2748956c6d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04434055-e094-4973-938b-120d12ab2608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6935c03-a16f-49f7-a7cf-a5fc39416b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444e7a8e-a5a6-4946-9f61-46062268562f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bc7f39-1b91-4af0-bce1-c030f2b95222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fbad6d-ec92-4f80-a890-3bf26fec4573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fda5c37-56e6-4701-af0e-c399ea3a7f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76c70c2-c0df-483a-922a-a84f1ebe4ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b11ceb0-856f-454f-9d9e-b3801951d41d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d700c95-fcb3-42bd-bf4b-67a6d84681a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de508014-c519-4b48-ad6a-765940b53cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3562cb51-44d0-41cc-8e28-720be9241662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5a0b50-3306-410c-a198-b7957b280fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53252386-2602-4029-b380-f0e87aacebeb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28d6742-f394-4f39-9b6c-9723cf727e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cfe9a3-4f76-42f5-8723-7972a40d12ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a89fb3-67df-440b-b722-acaa188728ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c30bbc0-5d95-4746-9800-3fdfaf9cd037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f8d636-1c22-48e7-994c-34c47b15dab9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f876fd-6e7d-42fc-bfaf-6e765c0edc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64f1622-d68f-4327-a33c-dad444e94054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ff1af9-3368-4dba-a596-46bf7db448ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cece928-a7b7-4925-aca6-3d1d668cb9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fea8fd-0e07-435f-9d82-0de67322f4fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549c09e9-0cfe-45ce-a1ad-cc779ae5bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77268323-69d3-42be-ba0b-df14b87eea24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d486c59b-ffa2-42f6-b0f6-19d1f8e55f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db25f07b-f44b-4da5-a000-7b11fea31c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86420222-66f8-4aa8-8b07-9c43834c9951",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae77c0f-8160-4322-aa8a-2521b3b366ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45c80d5-a679-45b3-b0c4-ce6280f7eae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933b1b15-c78d-44e2-b31c-46974ff4e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f72e39-d0b8-4478-b9f2-c06f72512d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9aee05-6251-4431-9c74-c2af974c02fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f589f4dd-9f85-472f-9f6b-aafcc499ce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9de27ac-203f-4cc5-971c-1661e4623717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492f00c3-8545-43fb-8188-1d125c3fc17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66223342-c5a8-4607-ad53-72f57beba84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d1fdc5-47c9-4aa6-bf98-8016d2289d8d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583eddd-7f83-4d1c-a70b-8fd75be0681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a11b22-dd2b-4b7f-8a18-03765c45361f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c24419-8de2-42c0-8671-97d531fac284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e2e250-9fc5-473f-b2bc-f299e30c54ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfdd29a-e67b-449f-bf57-caa8464d61f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1665fc-478f-4b3a-9223-83e610bcf2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff666eb0-2039-4190-b820-f0d6b9b6da87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09b9c88-8b65-445e-8676-0ff124a4a226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d55f5ef0-d58f-42e8-9729-e25630c7c437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ba3d5-44c7-4c23-a70b-1b3848c9f346",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39d6f82-21a9-4003-ab25-11dc7989a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa895b82-167d-46ce-9865-e33d3aad0b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b2945-e870-408e-b23c-8c70a6927fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad52f92-2c26-42ed-851d-13cb7faf99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043b2243-9aca-44da-b99f-5f8de103c49e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b2cab-ad74-4280-a5b8-8c6cb5bb6764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8183c31b-acda-4e64-9c14-a39f8c9d972d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7464736d-57aa-4df0-814a-783f2b5dfc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e0aa55-1648-445b-b5fb-1a4f7ec90b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd49f6f9-38bc-4a95-afa9-7779819b083d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45509ae-889e-473d-b7ce-97d97f3b6094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f81b7f2-2724-49ca-b4ef-0250e5aedcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c749c92-7d8f-4580-9992-4adf1cf56001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6adbbd69-67d6-4d5a-badb-ba308c0f84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c400c995-b7ef-4b52-9d1f-4743c2b5257b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961da34-5dbf-4afd-9f32-0fece38068c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dd4841-927b-48f4-883d-976a12df88e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb6290-8f98-4cc9-bc43-a3ef1d0c7cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6700758-7f19-42c8-91e4-dc3d41ba1698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218eaaf7-b83b-4ff4-bbb1-5a4a2d9bfd5d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024443a7-d7a6-48d1-9088-5a5b6ae1fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082dbf01-ed57-46ca-a8e4-39a25b5fa1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8789ef69-70a9-459b-83a1-da64d09719ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71d1948-0ae8-414d-9be0-aae5292b98ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42c2caf-d77f-4d37-9898-b0bfda2a70b9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5bc577-a85d-4877-b7d3-27c3f3cc48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ea5d6c-c27f-4499-bd65-d8a60f8ef049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059df522-5506-40db-9a94-2fa242a036e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6fc932-e0ef-46a7-ae95-2670c95a1e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20acfed1-d41d-4179-853a-2e89d9662f7f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6551a44d-47ee-4509-a784-d766224fcd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ab2ecc-dd1b-41d3-ab96-15cd58ac44dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e86be0-64ab-4bf3-a348-f19856eb46d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbe6744-6008-4323-8864-84ccf8b449c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e705ff-aff6-4aed-afe0-c83581d72848",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb28641-6d99-4b12-a2f5-515ebd329770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2364384d-dd4f-456b-907f-98d8dd8f87ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd9d783-c81c-4f39-949c-9a4f9db9c95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b979711-a508-4507-9a21-4d4956d8c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdb75ad-11f5-4882-b84a-6f80f7355ae2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7724b315-5dd2-4799-937a-0e849ec88901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b792c9-b1cd-482a-9384-147fdb6152ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0b5ca6-7ebc-4991-ba1a-93f579862554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07c8641-6241-4bad-aad6-acff270095ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58a64d6-a930-4283-9ee9-c557677fa1fc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea4609-5680-4868-a338-78c1af299936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5765f2-74fe-4d70-b85f-720ab348f0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80768fe9-d16a-4792-be23-728f8cacdcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd476870-33d2-468d-b3c7-672b4be4ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d092e9-54c6-4616-9e8d-67db8f84cefe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37914b13-b6df-4ab6-964b-f8ca99ee1803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2211bd-7b0a-4b26-8107-107b9a1a3768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6103ea6d-e4b6-4db4-909d-e559ada3647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2060cfc6-66f4-4ab3-86f4-2079265259e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88757db5-1a39-4643-9c88-704709073741",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3719cfaf-b571-42f4-a6ec-3ba30de1f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a05569-05be-4978-b071-b118a780d858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc54a70-7231-4a3f-a936-36192404457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2655928-8329-4ee9-a8af-12be746545e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448bf86f-138f-43ac-8159-f0e0cf56376c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc1897-ba33-4a15-9b87-b0235527a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c03ae0b-764e-4b7a-bd6f-5fbeb3d991f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac74d75f-e2dc-4c0a-a4be-8ecc0e9d2786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e6d2bd-aeba-43e6-86b9-60d57cae67f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bc3876-306b-4ae3-89f5-d2139b34498e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93422f14-0dc5-4eb1-b01d-eedf33427aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad86772-db72-4f62-988c-a4fc1dedd042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f00e332-2ba2-40ab-98aa-9ae09401756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab743dd-bf9c-4346-a22c-4543b82b2c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692c04e-8fce-4859-8355-6d2d87d160b2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba74c55-20ec-4316-b2d0-cf6c4bb6c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fdd69c-427e-4ba7-8baa-d621442fd39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed5336b-19ca-4a79-ac04-0309ddc2836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "639899fa-e7d7-4034-a8eb-b33debe65c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5ade4c-f753-42fd-b154-e3db96c331eb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860d229e-8df6-49fb-9269-68ef0efb1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3384554-86e7-4a0f-99d6-9d325a794526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9915e-443a-4b4f-bed6-b1b13351456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62879709-b5c3-4ef8-bf9c-e77b176ddbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b79e18-317f-4d0a-9add-4ad07fb4b372",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea2143-9902-4670-a48c-8a918925a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c294b9f-2717-4829-ae0f-84523d098399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481c2c7c-6257-46d0-b680-1b403ddc835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3dc25e5-63b8-43a5-b1b7-d8f56ad0191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3128e8e2-510f-43f7-8770-7a7f6ef3ac41",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123837a4-75d4-4f95-922e-eb5010dd0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb4d76a-5792-44ac-998b-8aebd8c634c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8921383-d442-4cac-bfd9-dc0914df7823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2658a2d5-812f-4250-8751-111eaa74cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5323d28-c9c7-4531-97e2-fa95d91f1e50",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167203a4-8a7e-4eb3-8a7e-a63b740c343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e1a3ef2c-b46e-4656-81d3-dc164286d74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd75da1-071a-44a5-934f-afecff7eb7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56e82ac-7819-499b-8024-d3e4d640ed26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b38a49b-e02c-4d04-9cd8-17bea036f936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d7cd886-4188-4d6d-a5af-e84e5d914525",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d263fc83-4068-4218-ba34-d262d1fa293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "524e4504-3d1a-47c6-8e56-7ed1106381af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5145e4-e1dc-4b77-a0f3-d4fdea6fed96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "766c7d52-74ce-4c04-9bbc-4ac7fe579de0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a52e0125-ff5c-4928-afbc-98168ea763a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad7f3d84-2306-44fa-b690-b9c8f3124801"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32e87503-4002-4bb7-a0cf-b7d7ceb0b45c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "295ad8f3-d88a-4f3f-81b7-bfa6fd0ff609"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0128d7d0-020e-4490-9b36-c613af99ab63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "334f289c-ecbf-4050-8fb8-db6105cc7927"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de366a87-5420-4ef9-a9bf-6e554a3e7557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b014b80b-420b-4bf5-b897-ddc244b2fab3"
                }
              }
            ]
          },
          {
            "id": "8c35df13-f82c-443a-885c-3e1bb2a1f592",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f80599b6-c9b8-405a-8a98-11505d900db0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eadbde3b-3347-4feb-ba6e-afb7c86e7e7d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5856fcb3-7c16-4f0d-bc87-dec116b5c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eafcc200-ec72-4a7d-b26f-05460f50dbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f320a367-b80c-4ec4-8724-b7194ed99ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5572b169-29b9-49c8-b227-aa685ec03477"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "799dd0ab-b639-4a2f-a014-3d7537d6e453",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13f1aa9c-1c43-4ca6-81c5-0ecaae421d20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ad3b984-535f-4d45-9cb9-415cbeef2a86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a54bcb2c-bb44-4a42-895a-59044f6aab3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34cbfb7b-294c-41d4-b65e-7e51f92ab82d"
                    }
                  }
                ]
              },
              {
                "id": "1b90b85b-faf5-433f-b659-9a66835031b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f770592-1bc2-4635-8b6b-f2b4eff4257a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1e09bab-5c6d-44c1-b85f-f5ed5b0b1453"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386cd9b4-4a7a-4963-a04e-10c15121720f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f327386e-71e4-4ae6-881d-755b38e5272b"
                    }
                  }
                ]
              },
              {
                "id": "772f9eed-b287-4c3c-8bf5-8dd2cb96f054",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d517de2f-86c1-418f-800e-a1b4f60dca63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "268cf395-d65c-4e09-b401-b8fbbb43d4ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fa1f601-31fe-4e8d-8dff-fb4a3b12668e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af4e4643-4ec3-4b49-8160-218d2ac7c15e"
                    }
                  }
                ]
              },
              {
                "id": "09808996-a7e0-4086-b795-ebee80655536",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b09ed88f-6147-4736-849e-8a8b9791cef5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15740a99-e895-497b-b961-46fdf3363956"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e887221-356f-420d-87fe-3377e62ca818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9b05aeab-a87f-4f66-9b6e-81b99ba5809f"
                    }
                  }
                ]
              },
              {
                "id": "41c5a4fa-2f13-4c29-99b9-270badae0d28",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3b3333f-143a-462c-b7c0-df0030a4cb42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56f8e565-66d8-451b-b78c-7b7551bd7bb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "569b5472-f5c4-46a4-b95e-84dd55d29130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1eef28bc-7eb5-4380-8b94-965e5d0a92fa"
                    }
                  }
                ]
              },
              {
                "id": "9d3987b6-d56f-4cb2-abea-ff18eecfa4b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4959e066-43d7-477f-9832-bb80972de585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce7f7393-e24f-43fc-a5c3-0c34682d37cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "448f580c-27e7-45fb-bdf0-8629e432eb19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6963ffb8-27c2-466c-86fa-a3e06c1b351d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa5f2788-b32e-46d3-a713-283dbdca1275",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c70f58f-6425-416a-9bb9-d987928d49a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2243b581-0d91-4810-b9a4-81d8601e0470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bda078de-a45a-4b8a-9e8f-56ed564c067c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31fe841c-84c9-4a7b-beca-d4cf8fd508f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "011c3a09-a01e-4b57-ad21-2f0eb0976d4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61d2ec60-0b42-4833-868c-260738d8c83b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b603f9aa-8219-4a54-83fc-5060d62f6872"
            }
          }
        ]
      },
      {
        "id": "37805ee5-a8fc-4f1f-8586-4849dd9564c9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3e0f039-9c96-4c04-8d79-baa7e0288ef2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ab29736-5e3d-4ab0-bc84-bab2cf077e55",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2275d9f5-a3d9-4552-8b28-8070ec3cbdc4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734dad7b-1df4-43b5-8daa-079813b70e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110beb18-cc93-4653-b2a1-263658d8a74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fd4774-158a-441b-9892-f6f1f7aa620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "44d94695-3cf8-4218-a2f5-3812655c22c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c69439-bba5-4cbf-a79c-9f6babcd582b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814d707e-47ef-4711-932f-4efdec693c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f19986-55b9-4205-8a1e-4ceb219c5a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80916ae5-bfb2-4422-8013-d3a7d0f3b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbb40c4-cde6-4bc8-b72e-73c5eca3e563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594fa717-1d66-44b3-9035-2dbeb49f70c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222e1c7a-6fe6-482f-8a17-26a457d00fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdad888-552f-4f33-ab49-3196dcce0a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d6adb7-6486-42f1-8718-6106fbb6d4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16dc0e1f-a016-424d-843d-901115019e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d676af-9c5b-400b-b466-65968086b8e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c617fe23-a6e5-4b12-b2bb-b92376eba947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc312525-ee05-4682-8928-c9c219adcf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf13d2f6-c142-48e9-8a8f-191705dd2dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc22a670-cfbe-40fd-bb0e-5e1c892608fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aaad1c-564f-41db-bf55-9d2c8c4d71c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f40886b-bda4-430d-a1fc-5adf43dc4f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dc9fe0-1ce2-461f-be12-80934efd4b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc927efa-894f-4acc-9949-12842f75a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6249ce-d71f-4ff8-99c4-84315aa2fea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e22a56-a718-494b-aac2-d68992f2c364",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc05d6b6-944d-4da4-9dd7-9ce4138656b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2d7da6-651d-44da-8333-6ff7142919c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cda5dee-1988-40f0-b5fa-a51097dd6fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0ddacb-7c44-4a96-9bc4-1270df03d73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5941410-b4a2-4a2b-9c2b-c20823c4e48a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fa20e-1600-4d02-83c1-dc984496f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0057f5-3c4b-4538-b3e1-6d83136d7552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81af29f8-3f0a-4f2a-bd90-8bcbf012415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c63defb-27d4-4ee7-8f1d-a0a43eeb1765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd3b0d5-72a0-4347-b298-e084be16ef46",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1b06cf-fb90-452f-b32a-f0c032cafc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f8e2b-8ac4-4afa-aac7-c54d3c27e746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a63a6be-5f8f-4b79-8cb9-e4eff698290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbe0720-0b16-46bd-8096-c35af84ebf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27633a77-3fe6-4396-b823-11cdc7e7d416",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddadcc1-9231-4b4d-9a99-183f8bce3da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83a2a58-5633-49ab-ad6f-ed197c6e42d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c593e38b-b8bd-4a68-b63a-fdeedfcc6e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6aa532b-a1ec-489e-b2d6-06ee9f8473e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94539fe6-3c81-4893-bdd3-3ac469e8f03b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5053ba97-c296-4cb8-bca2-083349abc218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f6b90c-1991-4297-9f47-0cb6fbcecea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf626c-aaea-4aef-8765-78225df941fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3d6a59-7826-4762-8c90-786f20fa6ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74be7045-73bb-4fc3-9454-7402ea74a216",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf23335-5fde-43ef-8447-24fdd7349c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ee705e-d628-4859-945f-047065de0b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c2230-369a-41ea-8351-0b807a1918dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2007859d-1616-4346-99d4-37571b8e50bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0678792-24fe-40ac-ac31-cdd36a295c25",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f95cb8-c86f-45c3-9948-25f6e227d191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263d5165-2d05-4788-92d9-1bbb845e0db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e4a99-ebd8-4a80-a65a-c24a3199d4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79f37334-202f-4f0f-8c1b-0ddc7d5b9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d75f4-5015-4474-83c5-3b84cfa18629",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03c87ff-7bc0-44cc-a740-bc65b2b23728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46860f16-c71e-4337-99ae-8f5953f9f882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b40d46-fb97-4fef-97a1-a86cf0186e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4b5fcc-2296-413e-9e2d-51983bfa27c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd10053-b012-4f7f-b25b-3218c08a2372",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2c9e6c-f6e5-4da9-b33a-7dcf190f8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5eb71f-4fa6-4495-b5a7-0706119b6b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e456c6d2-8e9e-4c38-8de2-9bd00b812964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "13674f29-1c3d-4ba6-874f-3e5a4384aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0b2b02-7a97-442b-95db-351a53f6e4f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137c0ed8-abb1-4ce6-88d9-ba7920c5759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729bbd71-0912-4bea-8ee8-c34646dcb3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4145ec-4700-4b5c-8b59-4730ccac093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d233a7-7bb7-408b-962d-bf1b8260837e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c369dd-12c6-4028-852a-455bb1610134",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40284efe-2bf1-4e51-9933-b8b6c2f5c42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e55da5-10ec-4099-8d38-83a6b3882867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96ef0cb-6a45-427b-826a-b9825187d54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be646ff9-bebc-414a-91db-61350099fb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3004bdb-84d7-40e9-adc9-7eae7fc69d49",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee98b70-1c7b-4928-ba85-ac3577802a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4275f03-6316-4591-bee2-4d66a9abd653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ca312a-fdf0-491a-8b29-3716c01835b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e94697-0921-4514-a13b-be95d0b946d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7156bf-146b-46d1-b327-4c6e72d11878",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c8fd7f-e3fe-423e-9a68-2c50d64da570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fce277-ca33-4837-97c5-762400ea18b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedeeac0-83c4-4676-b4fb-819c0175432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc040c-1d99-4ae0-b4e6-caed8778769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84cad3-c643-4d42-9bfe-5c5b0e76ded0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b0ffc3-3588-421d-b03a-ec8aa25f2bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18df5285-0608-4c90-b240-870181757bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38431e9-3f8d-4e70-a0e0-fdf64c195331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cb15d1-e5ae-4a80-a4b3-fec21e713134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ed97b-847c-44ba-8b14-00d460e53659",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54839d-d5f3-4e03-9a8b-a0ce1ff821c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d400640-effe-405b-93cf-243b586eb93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16545d90-bb3d-4a6c-855e-ecf41c7720f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dfb4ae-5114-4f1a-8724-9c630d10aa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623849c6-bdb5-4c54-a052-df4ef0846c6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0217bf06-e90b-45f1-8c0f-6931e05d57bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95becc92-b7c5-47c2-8ae8-414ded3b8bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb8ca04-cc7f-4893-ac7f-a6ac102edc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61ab2c4-194d-4c02-9a54-0277a9af0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6c0ba8-d432-4e93-bbf1-06158de04a12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8526e14a-b0ad-4069-9fc1-5c8ccd0db2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b064b294-5f8f-4995-a300-107d925c1646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be10bbd-4c51-496e-b8b9-30dcb5809155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656604f8-0d50-4ce9-bc9a-c4b1d284e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21fe12f-ffdf-4da9-8c47-3d0e755941db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a224cc5-8468-4307-8738-e3d483902e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef13570-5613-4879-bb6f-aca0c7f85774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98da5ba-8665-490e-9e5a-c64b7d14a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61cbb5a-04ac-45ce-b3fe-b825eb031362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd4214b-b1e4-485b-a58b-c8eedae57455",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124154c-c905-410c-9a9b-73b1642b037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4257fc1b-c5bc-432c-afbb-f321e4723d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b580bd4-475e-45f6-a17b-44eb610e2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c783b0-00e4-41c3-b062-bbb94e9fdccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb34eae-c9d5-4aa6-bee7-5bfd70f30856",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c860a-9f46-4286-bf15-4bad9e2403f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a997b3-2231-42d2-ba5f-43a68c3047a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a213d7ae-d035-4383-afac-252089798010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7351b85d-3ea9-4641-9a14-2b08282e8ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeadae52-f011-4de4-8e17-628fa3052c48",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1c4bd0-389f-416a-8511-08e717f8db0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13a498a-3d30-4229-ae27-6a7e914e3b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88430171-04ec-459d-b34a-ba88a4a35163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f011900d-1bb4-4214-9d88-6b8b071fc4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaf599e-0b55-49bc-a8b8-d690603ab279",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccda571-db7a-4d00-ac67-2eac590cc857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78afc1d9-1049-473d-a13f-7e42272cb14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25641eb9-8dfd-4d27-835f-63773c8b5d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21dc8eb2-90cc-47fe-b459-fc15e00e4230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0129d338-2a79-4a87-b894-7b79004c2493",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83efae6-83da-43d1-9b5c-ba07f619eee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d782c4-ee10-4162-ab4e-002121ae0ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7505ff3-1cee-4106-b3f4-c04677ccb8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c8f089-9d01-4f66-82df-fc18c24fb888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78bad19-abb2-413f-bb56-15cd27d8043a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3305a3fc-e51a-4bf6-a295-86ade6cd5eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797998f5-5b88-4731-895c-edd5472a05a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c8a087-400f-41bf-bfab-f7535a9435ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff76ae32-ceb2-49dd-8ca2-1bbf12b12978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ffd115-c593-4125-adc6-c0fd388f6823",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f3b39-a6f8-4918-ae2e-c365077bcbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dd2659-496f-4a14-a693-4a732041c170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9677d54b-7b9a-4f60-83b6-3146f13d7823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f0c08b-f740-4e47-87ed-17e63a744028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bca3e4-6581-4563-98bf-90a494b52420",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5609a843-a3ee-4db0-8e9b-743a1992cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf8a37f-efd7-490a-bbaa-6fb9d49c3faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d49f7-644e-45db-aedd-eda1d1655eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64dbe6b5-83a6-4d4c-88f5-70212c59e5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c661ba8-97cc-4f14-9088-37899257d577",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f6238e-0b52-4a10-b0ec-613865c5226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be11880b-acbe-4d28-a573-c1f97b9179de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54408004-fcc5-4cc0-a7da-1c672b1d0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd268e6-71e2-4695-a866-b67a2b39ec66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "789d7e84-9205-47d0-9775-4c54e8c98526",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2b12608-795f-4e90-a97a-56becf8cf703",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b686fc63-feb1-4aab-a3b9-6aef932060e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "019c94b3-e1df-447b-b3b0-156e20e2d617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c52865e-3798-4a91-8c13-8a4fe6d28060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76d122c0-371b-4e61-afd7-49089632bf7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a6a2a2-1388-4c5e-9b9e-dfd0fa952c40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2178f0c5-21f7-4e07-902e-7a7e2ab1d98b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e172bc0-8f25-45bf-8585-7a0e1057e87f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84154c3a-f62c-433f-a02b-7ff1d560b263"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "938fdde0-bbd3-44d5-abe4-93cbf74781fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8efbe5e8-1da7-4d5b-884d-9fa880eb1782"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e506aef-bf1d-487c-9280-724fbaa5406f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42fa6a04-ef8a-48af-8436-3189af3a208c"
            }
          }
        ]
      },
      {
        "id": "a957f5d2-6130-4c66-9e04-6b2ef6c1ee27",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "29b1d6f3-f6fa-428e-8311-2b28fcb30992",
            "name": "Negative Testing",
            "item": [
              {
                "id": "217e2667-3a0f-46b5-b4d6-e6a49c575a2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a2a8500-23f1-4a1e-95a2-90538c8f054e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f028a-5b6c-4394-956a-3f90f4dd3d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d42d08-78e9-4ebf-bbcd-12d5d6994438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c491eddd-9a5c-4ffb-9b73-b1bc7b050ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65529dc-7661-4974-8e06-82858cab461b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b6fb61-8e91-4112-9b6e-793750456dd6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b0face-5d89-4412-a187-8f5e0bf39382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfa2d76-82e1-4b8f-9551-88a53449d61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b97e0-7df2-4196-8073-c0652b6b14c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39497983-a6ff-40d6-b249-f0917485ac19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1b1950-dfc7-44f3-82a1-88cec72b2754",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21373e-1765-40b0-b7aa-331ede4d3f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737e9383-b132-4ba9-8285-5433598bc26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3f48ee-8bf0-4ad2-8e9e-53ef7bb7b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bb0cc4-99ec-4f5a-81bf-858bb7678646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3577765d-a5cb-4fea-b1b7-df41ad765742",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f7ee46-4dc5-4abc-b829-66e78a3f72bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d282705-d4ac-47db-9ec3-777b81597ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3295190c-4fdc-4c43-89ad-a4001c2e8a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cfbe8f-dffe-4109-a26f-f7f91036e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3b99be-4692-42cc-803f-f0b076b3468a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752d9a7-c596-425c-82c4-f79348efc8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce1ecc9-a757-4d41-a49d-8edd6d59aa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ef8f1c-cce6-4595-a5f9-140423735737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8841b97-d231-4462-89bd-bb7e54ad65a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089bedf7-fcd3-4ddf-98a9-9bb1b6bc51ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016367f2-39fd-45e2-a3ee-d8278b573bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209725e4-d72a-4a78-b9c1-c2a6af20bcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b582a-8dcf-48b8-a53f-6f5a5ce40e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5da316-7390-49b4-85f9-e25e25dce5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3111ca49-0a0c-46c8-ab11-6981acb66ee7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e031867b-29e5-4e52-9160-d54d806c8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e874ce1-649e-487c-8f75-d74393825431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67253e8e-b958-49ba-bace-95469e86387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcf5293-6dfc-4164-93e4-a8a5f12c6957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3df079-384f-4302-b88f-2755f56f4c9e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdbe821-ca39-4e45-8151-26798ea243b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a75801-f398-4c84-b204-b260a30cf114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd372c-6261-4cae-8823-74908d41f19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cf6786-abf1-41c6-8096-2620b7a47eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae05a9b-90af-479d-a239-f7e6b95436bb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd2de17-376f-406c-9193-18ee36bc5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d74f2c-c7aa-400b-bd7e-352106ca19f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe935e45-2c77-44f9-a350-a48229459886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eb98c9-6f08-4b18-a8d6-315b53d69a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc16d7-1ce1-4974-987e-7d1faafa4b3f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796caf5e-944b-4920-bf38-ce52fc7b0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5909fcc-14ad-42d6-92b9-180ff7388cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680641b3-0f20-4f71-be8f-f2ad4060c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c302d112-b87f-40e8-a372-b6e1117b1f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6378f34-2d98-4631-8a5c-d82aaab60a88",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1fb5df-117e-4a59-95d3-8c1c2e597a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87314a48-d8ed-442b-b86b-a57737166e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dfd59c-8098-4fc7-93b7-3452ede7b526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f58ea03-cebd-4979-a2e0-977bef7541e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544761d8-556f-46d8-89e6-7c507c7fff7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0016db0b-60d4-448b-a75e-f2bc81dc3bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deee5761-1859-4525-b79c-82f3f50536cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c64ee8-6f20-413d-826b-87b35f93ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48287653-3057-4448-89c2-9494625ca63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a761f5b-7ac4-4358-8b8e-acfd6c9813f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba8d9c1-02fd-4bd0-80db-9c39ada8adba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b158248e-7fe0-4766-9e62-3654cd1533a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9604954-685c-4f2a-baba-363a14a91dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8a5b57-5c57-4229-afcb-71d78dd36f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa957f1e-4d38-4ed4-b72c-f08ad15b14d3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925839cb-099c-45a1-9beb-2729163c6702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b90121-4f95-4896-837c-ee7ca017adb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26935dae-b75b-484a-ab5a-4b52a0b0cec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ed0897-58fc-4b87-9e28-f24c3d22e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53fbd2c-ebd1-4a5d-aac7-4e2a56daff45",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdf2ca9-45f5-4e28-ac8e-3d15e7e5bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af51645f-e453-491b-a917-ddd1fe474c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb95ec5-753e-4d2b-ba07-69630b497d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc63bdf9-0464-4135-82ef-57a4dc08a0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f2bb0-4b4a-4665-8371-1d84ab139611",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b605fb-7586-4fa6-b58a-b8f192459b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcadbc5-8bb4-4927-9ab2-edb8b4bb1051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362958c7-96d7-41c7-aec7-bd12d24ef365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2216c222-0f0a-43ee-8917-c582307f9108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbe32a7-fd89-40e0-8070-6d4c10ed694a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed75fc2-0b8c-4a47-a5fa-9336af332fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9c341b-2fa2-449c-8c5f-8b2c110a74d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c6557-3a35-4910-878e-e6deeea9db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "108ac002-1879-4b0c-a431-491d49488336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ee3b5e-64a2-4641-b912-9e0e263f5934",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51219e7f-4295-45a3-a06c-cb3fd57839fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f070f70-a1bb-4712-876a-b1dc1f9c7eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac358205-9080-4395-b7b8-90f61f410c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e57501-2da7-4301-8769-ada9bbc20ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fa0fc-4667-467f-b2c0-738eb498f183",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c188dd6a-03be-47a7-adb0-a88534387371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e444cf-7b53-4bda-8ff3-6208947ba900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a378882-c3ab-417d-a9d5-27141abd5194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeca4b3a-5068-4039-a632-ab4991b23423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3db4d1-fdf9-4efb-8d5e-af1fb49c142c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc87d93-841d-455c-9cd1-91c12a0f3e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aaecb8-3ab6-4c64-9adc-ae53b22ff01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4541e7c-ac6d-4718-8d19-49a5509733f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3006753-db19-4506-87cc-c3a71753fb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e76146a-a416-4fc8-a7d5-247a3010f610",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576f0c6f-c802-46e6-9449-bd478518269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa34a82b-99db-4380-bdd1-8b9a4b2ab4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bcb2b-df28-4843-ae55-17136e99d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4beaea1a-7042-444a-ac18-06d1d037a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3710a8c7-7235-4f1f-af6e-c96b95f82233",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a304e68-0a3e-4a6e-ae72-931ae0a64019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9acab38-1959-4a5f-8968-e49eb7109dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894358b-3bb7-48db-8ab3-ec5d7a2b3be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64fb8e6-79ac-415d-b633-38de92bbcc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e2277b-9bc8-4f0b-99ec-50dee4b8b343",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0016ad0-5d56-4e78-bbb1-31ec0ed5c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21a2e45-0e34-4b76-bee0-8d8e040ef490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa40b225-603c-45b4-9be6-096f4a63aead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1492b1d-13a8-40bd-bd13-f7c86c0fa967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f911a503-d9a1-4734-b701-cf1710729df3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cfc9eb-4c9d-4886-951a-7624639749f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556ff81d-5bd8-4fe8-bfb1-32d6eaf2a131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac5e005-0b5c-4447-88fc-1a990965aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99771804-bd74-434d-8371-ef78bd4997f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe6f8b7-d2ce-446e-ad1e-18211039915b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36db504-9a90-444b-a299-2b100af24a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e89d18c-25c7-441c-a0eb-1c73f0386978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1f41b4-ba3f-4786-bb2d-29630a6fe493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "162b8526-2e17-4061-8921-dafdf1a0487f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f900a83-21d8-486b-9334-f652a570c081",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a01f3f-274d-474a-a1a1-04fdcec7c846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bd325b-180e-441f-b975-68c212af4f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08647dfd-253c-41bd-a05a-39c3baed19d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd546d5d-14e1-4235-9573-7b888fed1031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb142ff-8b0c-4b1f-835b-62b2f5b44b5c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2b9086-2055-482d-b141-51b8dfcdec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc089bf-e1c8-4ef5-a238-090bac61771d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d5ce0-083b-418c-8db9-327fe5f04ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "394ffdae-b629-4f79-8516-b912549ce95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05f5be6-7950-4e80-821d-e512aa87e58a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560faff8-8cff-4bdc-b524-1ef51c9a12fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088c9c5c-550b-4977-8149-68fe340630b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d2630-debe-4d72-a39d-a1180bffab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d314862-5c6c-4cea-a648-d87246b775bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caee7d8-f4db-4d0c-bcad-a6c7651e5ff3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3530b9a-b5d7-4d34-b99d-4db922acdc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdcc6cd-39c2-4e56-9819-7a07157e01d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9871d8e4-3771-4c1c-aca8-c772a702c057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1941a803-d481-460d-8366-40a307763667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa1b350-b111-4b12-87e2-ba82f6791e2a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f38535b-169e-496e-bd1c-9e7e5dcce2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68af2b93-c683-4ec3-86a1-ff1c08a22caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f4e416-2f18-4a9a-b51d-2df0f135adf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c6def7-b2c2-41d9-a25b-c601c7346a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56275978-98ef-4991-82cd-cccb03a1ae4f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4da8b64-dcb5-4e4b-b52f-f710d3423104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de93c14d-4a8e-4545-9518-786be5a1e764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4aa9d2-d2f6-4479-9db6-cfb77cdc8c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c5ad22-e8e8-4719-8439-a69245bbde41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b99af-e2eb-4a8a-b2c0-c710387f2234",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207c250-8f29-46b9-93fb-b78a46d81d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d9dd0a-e31b-48e2-9532-1088cccbb942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241b229a-89e7-454d-986d-bf0e8911514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a78201-f2bc-43d7-92fb-3535f6d7971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a76a9a-1215-4613-a323-3d0187226cfb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebd2184-2340-4511-8d11-7c44f94b500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ef5a9b-748d-4326-9b81-73f918b9bb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d42261d-e2e3-4344-98b2-201987bfd22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25efcc08-c191-4ffa-be97-751c4c264ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c7e89-7f04-4596-9a1a-de71a9df42ee",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7df2664-aca9-4e74-a2c0-7882820b8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16ce630-7523-405e-b28e-0d5584c7987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a813a9f4-42ae-48fd-be1c-942aaac5c7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3283e973-f4bc-4d23-936e-87927a7e0e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4b7d90-3e3b-41f8-99de-d08857ca94b9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e14858-70b7-4270-9e10-a63a1751c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228f3431-8279-47c3-bffe-eebc4ff84062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ab731b-48df-4cc3-8b94-659a402c3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd8122e-aeae-4496-8f07-03a1e3c4960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfac08d-a717-47c0-8d6a-aab6dac6bff1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14e223-52e3-4c8e-880a-0c1193ea68cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a67f05-86cc-4b55-a6dd-86770d3dae54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddba7ee-d278-45e9-ac4b-01c5e05f1d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7523c6-53dd-4c91-89f4-b46717940d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10716783-a6a6-4661-a215-0d96ba448609",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8eab46-efde-4440-b184-079d5e26ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bf4a23-7dd6-4252-b3d4-cb866b6da91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d30e83e-0b63-4cb5-b231-401f70d7ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c2637f-e3a4-46a4-a4af-e747488da987"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9795c438-c13f-4d61-ac99-013054f12a94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "178accad-76db-4309-bdde-36f79bf0ee98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0591af4-6a5f-447a-a852-de972b8f23a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59424b73-4116-4eef-b005-512a386a1ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae112251-545c-49a8-a4d0-b7d248f32b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82df4705-a709-413a-acb0-9958e3435317"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "241646e5-628a-4f3e-b155-84bbfd1d120e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71ffa3cc-87a2-4c2a-8ff9-8081d8e0fd9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bbface7-5c22-489a-8624-06b8fb5c9a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67eaa9ee-84f1-4b7f-810d-ffa535a3b273"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d2f8272-f78f-49eb-9648-986338b90d14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60b74708-22a2-4f1b-a17b-74826d7b91c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1059da8-5433-4cfb-82b8-214e5a573ce9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0c70741-19f2-411f-aca9-8bb3a095a3a9"
            }
          }
        ]
      },
      {
        "id": "483e99c8-395b-485d-bb2d-8c915edc1cb5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0b103d8b-2271-4160-92af-940c6d738761",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd2dd22-b4c9-44ae-92dd-81a684da3e64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b22fbe5e-9b4b-423d-a581-dbf0cd202f74",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b50da32-ca49-46cf-bc7a-79a17b1696a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3fde03-a686-4873-a613-f32986a860c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ed7186-5f85-428a-b316-1840591a6807",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227fceb8-4c9e-48f5-9c17-872b1fa3f445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39341dc6-3f77-4db5-ae53-ca97257bb038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abe6b62-1b8c-4bd6-acc7-bcb276e3813c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d80338f-11ce-4a2a-b364-d0dc83f1344a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01dae3-566d-429d-bbdc-7f5a11e2cf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc255adc-71c1-4148-b89e-0c1451c27685",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62625528-050a-4426-a966-e1db120abfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde3fea5-915f-463d-8ecf-ecdc690d0b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cba8f2-bb3a-4481-871a-bc558a3edfc7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a300f3eb-9a74-49df-a3ef-29c71f868917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7fecbe-f9c2-4bdc-a2d6-464626170a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960600cc-7297-4c1f-89df-0440855ce4df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079c63db-78f3-4867-837c-df5c06c016cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132def2f-6df0-4bb8-b836-6196c7f94943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d137c88-6b79-47ce-9379-a086500f0900",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1124c5d8-e1fa-4718-81fe-3fd740828f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d72779-9706-41e4-ba2f-a92e1739ddd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1f8385-7e65-4354-9f79-6795dcdfeba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee39541-183f-4be5-8889-23c73d6e8b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87748696-d9a5-4e9e-b185-6b3d8eafc90b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6a03cb-022c-4a5a-b4e3-819b446e02b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0a000c-25e5-4188-8c4d-1891fb773b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb4ce22-cb25-4ef2-885f-0f8abdd150ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d171758c-0d7c-44a9-8e72-fc62dea4b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0b24bc-766b-4907-a6bd-4e76992e3083",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c6bbae-7a45-4ffe-801a-e05ba2bd4061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7b3c9d-9179-498d-8dce-8e5725b6e7a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeb9827-c386-43e9-9cbd-f5fe783a26d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13e252a-c043-4b69-9cc0-573daf51e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2947974-a576-410a-874a-20f7da1d7bb5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943bd33f-2f80-4329-9ab6-915841bf4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8323e388-6754-4a14-80fe-fcca82a4ba89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b596a3b-0f0e-46a4-a99b-4a67bf7c605f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693201e3-4164-46af-bc33-2091625b8798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b61126-e07c-4740-a760-c565c999adb0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ab7b9-7fde-4cf4-ad2d-5ac9bc04230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b604b80-aed3-4b09-9e04-0ddbf58b5ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e5846f-c03f-430b-89de-d3f85d00a13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55bf621-104e-4154-93a6-b74004bbe39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bd2cd5-5d85-4b20-9e00-51db87aa7efa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b0618-6b5b-41ee-91ae-dd0de030f21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180ebc61-15ce-44af-8b3b-02085dfdad49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba71186d-079b-41ef-baee-a5683783400e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea61c4da-a6df-4730-b43c-42148f710952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba6ebb6-94fe-4a5b-91b3-f8cb40ed7430",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1473f21-e328-4a7b-89a6-55be8f579f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c120abf0-2640-4982-90eb-b497eeebc315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce2ee60-e507-4e83-98ce-1d05a44b80e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5ca6d8-0ca5-4ccb-a4f3-a96367654c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cecea39-ae2f-48b4-9c83-928a12841045",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8308ddc9-57db-4a7f-9fea-8dce238f1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26182d66-6320-4316-85f9-32c246ea2cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed0952d-befb-46c2-b9d4-0f68abbdfc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9931da02-f613-428d-8548-cc1f5382640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b244a179-7a6e-4aec-9171-cb39f3a6b8a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d6d2d-a30e-407f-b138-b53cf04a5084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f4d82a-43f6-4185-b66f-c9ec71b5aef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4385c73c-0e85-4ce7-98a0-661c30b47a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1661186-89f0-4287-9cf7-33267e1a6249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3fbd8-c053-4db0-9802-51482d557bbf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685bf363-0bd0-46fb-bd86-b4eedc8e5676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fee0826-e168-4762-a03a-ed4511d5df97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74a5f56-2cb5-459e-aff1-fff907948cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e70835c-b28d-43ac-a909-e8ee88703587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e19ea7-5ac1-49c6-b5df-7e7098221bd7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3c6421-f22c-4114-8ad8-3c71180f5755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d4f6bc-38a5-4605-b35e-f85f7a4e8604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb997feb-3f55-426a-bc60-1e5f79d56eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e39365-7225-4ff5-94d0-27f0d1ea6c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b662ba14-e487-4f5d-8a95-981e09e357ae",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b0bf6a-54ca-4d53-a53e-94d04a67ca89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0891ba-e712-45a7-8479-68529ce1413a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d61ff88-9894-4a12-895a-b51bad7ef45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ed42ee-2da6-472e-83e1-f2440f088907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5588ca6-8d76-41e8-b6eb-a904ff84689a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea86fa1-c879-4711-8e19-c73bf86a3400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a4e9b6-15e3-4d0e-a122-baf83d2cdc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d729341-014b-473d-b361-a764fb9633e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2458478-f01e-4d33-85f9-fef139413255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0492ecef-d0e5-4dd8-a4bc-af518d1f414f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eca6c4-e660-436b-bc18-a3405e0b34e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837f9321-ba4a-486f-9713-67eaccbb3b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef86f0a-2904-47e5-9950-6ef4d2a0b57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973507c0-30fc-4c1e-8027-964b0b81334a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52741e02-ceb6-43ae-b5a9-5bcbc43c9fed",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef3a8a7-7432-4b9d-a97c-25e54a2e7c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534fac86-a3cf-42ea-bf61-395d5d751f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4920441c-731f-4fe5-8867-626788d70612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbba9008-fcf7-4642-bbaf-04bcf02546fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87307ccb-e169-49f6-b753-6fa3e8171107",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bec5b43-fa9c-48cf-82fb-ea7acf6d635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15746e4-eb56-4731-8595-90b001c4b97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a1bc2-e997-4f6a-9511-6ac3bd1b9f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c15e84-46d0-48a0-85de-5f1bc7e2ec9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0af5d-d9ac-4e2c-9e1a-efbed7bb0bfa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40367f9b-df26-441c-99f1-4232557405cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978ed4ba-cdce-43cf-9cbb-767e596ab15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bcafd0-2eb1-46fb-830d-2b3b38381783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc84716-fc31-44e7-b23b-55f5719b3fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a211805-b803-48be-99e2-cd1d7de983e1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01b4b2e-1538-4da1-9745-7d2bf1eee80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbd14e8-8c66-4373-89d8-cbf2e87cdaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ab080-23c6-4dc4-9789-a1f2e01930bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c8c907-d015-4840-91ea-83a1722760ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de0860-1787-4391-99a2-91ffca4552b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa2df29-e9d0-4a68-b953-3dc51f097af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e61a00-32ed-4c75-86e8-e8f4b084745c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a0e10f-fd87-4360-be1b-a797cd750aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f47687b-05ad-48bf-b0a7-32d40a8bfb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aa948b-348b-4832-91b5-1731190dd60a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a1968e-766e-4f11-8ff4-f48d333596c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce85093-42d4-4dc7-b010-0fe5b852cc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a6f9ec-4cbb-49cf-8d0d-6542e0005d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0421f4e2-4f2d-43bb-ae26-549924051ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ca88aa-03e6-49eb-a926-c0a6725dd7a7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3b2e17-0d15-429b-a974-5fbbfd4e9860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba741f41-d43e-4220-8521-563f90a87ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cd27fc-d7c2-45aa-9be3-2547d16c0750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81a2fbf-ce8f-4b05-bd29-7ac8bcae1610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d8d2b4-3c3f-4490-a75a-fb952f2340a6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51065174-8428-4368-a551-a60fd3314257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0891445-c233-4e6a-8275-30c93111c3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e3f91-60cb-4df3-84d2-7c958d3c8aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be7ba04-78c5-4715-9294-22ac4eb852e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36b6a6f-fcff-46b0-be9b-07d68c68e219",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e9ad75-f7ea-4d3b-9d81-db8e1e7b1244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f772d27-1a67-4b6f-8abc-d8e7d560cb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a9a93b-a3a4-41ed-9058-759076dde94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b93a39-36c5-44f6-97e9-0405e816eda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c071ed60-798e-476f-b9bd-64897ea492da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91c63df-8153-4566-b8a4-dffd8767e845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a491bdcd-2e4c-4620-bb64-d64feb3de68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc8c4a-2854-48f4-8184-b3e8bfca322d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656c17dc-9314-4fc6-8c6b-226b72fad279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9c875-04d1-4130-9e34-746eb1d55326",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cc5885-6329-4189-8f02-a25033e55d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a26d79a-7b5b-4464-b77b-6777c9af6343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff312bf-f217-40a3-9581-569c54c25436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391fab11-aeb8-4e5f-a6a7-97e28803ed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b190920c-6c69-4a2d-b191-d0125a27b3ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8191e69c-2bb2-4824-b7a1-1bd469d35068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0408c9-ac18-4348-9bed-f3d562499cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed85a661-410d-467d-84ff-a7025312ed58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07b2545-da87-4fe5-844e-3bb1859a2d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5417c0-3b1c-4bb7-ae10-7492e0369548",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9791edc3-32ca-42e0-9d3b-385a3283c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13642dc6-e361-46c5-b2b6-2be45833d3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ed7e4-a1e1-413e-b8b1-bd4efc4e4846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195d84a8-5f56-45c5-a11f-c342b22742b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1efdebc-873f-46a4-86ec-6051df713f1d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dba09b-52ff-447a-975f-c044665d2d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1d07b5-718d-41c4-b798-36e5bdfee5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3084a6a-c65d-4065-88b1-7d27c831cece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7747a6d-8fea-42ef-b798-1a2923199866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff808b-a7fb-4bdd-92d3-ac5e9efcf20d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cc4247-8225-487e-865e-27f3826a9efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07939d4c-e833-4334-9a23-a59664a5ef3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eb4ac9-9d4e-4d76-9b62-d10e12590c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b5f62-48ab-4080-9778-d2c44dcd37c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2234b6c8-fa96-4630-aa12-cf05a02b6b72",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115400c7-9599-4204-ad0f-b4c80cbf1f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abd35d3-ccb6-4f99-b144-f042cf6f0443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5331a75-b6cb-42fe-9b04-a6ab77cbce5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5d6b66-60fc-46e3-8969-cf4854832a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bee4a9d-01a9-4d51-a37a-81997f53327d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fdbef5-d1a0-4207-967d-469732a1442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17fe3a6-9de0-4cfe-a729-05c57b707692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99abbb19-d088-4917-a4de-535fa1d0fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3485041b-4a31-4d8e-8e87-afad1119df54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fff7199-b40f-4412-8936-3879dbc27592",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e3e117-aeba-4dab-91a5-e1024dac773f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32538e2-5128-49ba-8c10-c5e985425bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85efef85-a340-4a35-8a6c-005ad411b0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4852917-4a2c-4ba6-b867-07c1f326269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f621d64-8c16-4099-8dff-6eb198eb0a4f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d4ba74-9b90-4d51-ad7d-e9485ef68f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca978e73-a2d1-4b62-b472-d6b484de4705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c895f6d4-4908-48ca-8e5f-6db37f5fffa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e301b8a-717e-4835-941b-b0653f00d156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740b610f-f49c-4430-819d-a5373c0b3e00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef035d6a-ecd6-43e1-bb3c-4dd9ce6194b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5753bb5b-ad60-4b2e-8e84-8b29d4033f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfe0e6b-d478-4d7a-97ea-cb473be52fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138c4af-0a53-4956-862e-78a78b4c1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f55eba-5c85-4773-9beb-ba1a56511133",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afca6494-289b-41f9-a525-edaab48790e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14694a12-a16c-40bd-a8be-9dcdee0965b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34622d2-a287-4368-8983-f37bc70bcd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc4a818-7a8a-4725-993d-20efe6ab8680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f90638e-8c39-4243-b46d-c4fd98e6e8ec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9ec9b9-5b60-477f-9348-0051afb33b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebcbe89-6443-4662-94a7-903f3c4a8e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adfa7fa-b8b3-436a-9400-08a92c6b8889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7228cbc-07aa-41c2-ac12-3b25d0f3297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bafb30-981d-447d-9d3d-9c61dd56bf8c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06fa977-d598-4f14-a206-4a8e853b6e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d60ce73-60d8-47c4-891b-c3a7001c10ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1792a9-3d3e-485d-971f-90602463c741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d178a3b8-8023-488d-9092-d878c5cff02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94efc602-1d99-4400-a969-9abb44db2a59",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20abf4b9-6e31-43b9-b4a3-9b8c407e279e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0521feb6-994e-4c3e-9da8-6379f7759ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085b1508-78ab-44e9-a6bc-81aeac35f0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95cbfff-c9bd-4799-920a-181f0f930e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196b6a3a-d355-4326-8475-5ddee32f8e73",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1f29bd-1c6a-4648-8b7b-94315631448f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa2bfb8-b1d0-4f41-ba8f-f82a2ebb6bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba59b76f-b98e-4158-879f-581fe726661b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c78175-5772-4c08-8382-94096ff21e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb0f6b2-fb03-4a92-9522-1d08458a63a6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa6afd8-341a-4c84-a3c6-0bd1fcbfe52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46d9710-ea17-4867-8053-e954b12b5743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2071d00d-d1aa-4629-aacc-647917c59784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2318b65d-30ec-4a5f-b70d-f0d85948b91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ba6031-7387-4300-a8c2-cf86ffb94c41",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adaf0c4-ee81-4c65-94ce-8f63de270548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c7103-301f-4b52-bafb-f4cb28fc89c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c240fd3-7b8b-49cb-9db1-fa8eaf0fd201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e365aa7d-0c53-4ddd-8b85-1ab3ecff74bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f70cb8c-b617-4f49-b0d0-2647f04ce9c2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd378b29-96f5-416f-b853-6585b49b1ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dcc5fc-5df9-461a-bca0-a455c67d03ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31a17f-a10f-4edd-9c53-3c24adaae5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fea598-6a1d-4d6e-9edc-f1a64fd2b2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d884c62a-ae4c-4dc2-8d22-f4acf8152d1c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440b257f-1859-40ab-b70a-0a0ea7aeb3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500b7d2f-f7f1-4476-9005-40ce12b6007c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a627b2ef-af9d-4530-bf38-f833e4bc1c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a864ea3f-3c94-436a-857a-1ee7f348f00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c38cb7-981f-4606-86d0-6377308f1f87",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48267042-3e56-4401-948e-accf4747a515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07992be5-d3b8-4c76-8387-8a738b091ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e715f-9ed0-474d-aa02-2984a0c7b20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c182d3bf-a521-40f3-bce7-ff9fdfa9da0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c033d4-2f0c-4c86-afb7-1e1265f6e720",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e027c6e-0dd2-429a-a9df-5a2f130b7fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c657211-0adc-4142-ab09-58aff8a220b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96c10ed-c795-4513-a2c9-35438ab0282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc048164-ed11-486b-ad7b-7bc4b444d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca72f9ee-8191-41ac-ba35-dcd169d7d2f5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b095d1-c7ed-47e8-b321-d8e07ce88b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8e830e-7303-4147-837e-9e8e8dd0b3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76d6b48-6037-4916-bf37-0fc82e390786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acc622c-2134-4320-846f-b3ad9db68277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dd4279-a227-44dd-9365-a5d75c0b130f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a4862-7f7f-485c-841c-8ae18c3f4167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dd7558-c242-4f45-bb95-3ff0e671f262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afce36-7fdf-4a72-a647-c0d372de2708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502636e3-4968-4372-98b5-1fd0739d1b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1a5929-83e2-46da-8cf7-c1c5c360768b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54769b03-7dda-4ed8-bfa3-0bfaf2b4f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edff7cc3-dc63-4da1-85a9-27747dd68aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0332558-968e-4aaf-a7be-0a5a4bffa07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efe10bc-aeff-4016-b025-7aa48551e45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529f2635-2966-4681-9a22-b58699a9a8d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1036fac-e338-435e-b73e-b86ac8552f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f59259-fde5-4ff7-8b01-8df098dfb924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1034af86-aa6e-4ad8-934e-c1c6d46fb89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c939fb-a19d-4cdf-b36e-ff25ec0e9060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b09cc3c-663b-4fa8-90c3-657299beb3a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a65aa1-3da8-4a3d-a917-a1ad4843ad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c8ac26-b88c-4dc0-b3fd-724fb72433fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73b731b-5ed0-4dc5-83b0-9f4aaf685af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291a0798-e57d-48c1-9beb-85ee768ceec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d280a62-fe7f-448f-b36d-078f896e8136",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15642ac4-dcb6-4e10-977b-0484bae435ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b44ad74-4233-4c7b-85a4-35b7c41c4900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad29287b-19b9-481a-b6f9-07aa47649b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e778d7-db3c-4399-aa8b-1c65b689de1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cdc41f-85ec-4bda-a943-bb270620a73c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f981d01f-0910-446f-b59a-6f84071675f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9060ef62-e0d7-4bec-a2da-9b777bb60b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231615b3-c623-4847-9159-6cbe4a3442b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a1d8be-519c-4552-9f3f-3bab4c39295d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8616be-9246-466a-92ec-a094d1903b1e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28e0961-7fcc-405b-9f7a-38e5bcf7d3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7511f1-9ad3-4e2e-8001-336b102d2d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a1dbf-96f8-4290-89bc-d3636b8d3d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e981399-b706-4acb-83b4-ad6f707cf144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a366783c-7563-4fe9-87b8-4309ad0b1095",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed3bc96-d1b8-4437-89a5-2b887d207df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d30d5a-5177-4ed0-88d1-5d002cc8aba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c95817-bab7-498a-85e8-ad6b9ae0eb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf74582-7d2b-4536-b22f-8a85f75494f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f0c1c7-8661-4933-8e49-2231ce156676",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c00bc35-ad1b-41df-90b1-c1c497a71219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5606d0c-ceb4-42a9-8c5c-e9248ec95638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548d4972-0986-4c3c-8ff2-24b8b066e7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb086013-8b69-41ea-8a4d-5f754742ef9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82039b47-2296-4f50-ae88-48914770d5f2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64958a8c-589b-4cf2-ab92-39e5e62802b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebe9988-59ee-4749-adf4-2b03433d9fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79bc985-d622-4122-be64-2de09fd06978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154f28d2-f944-4df5-9b0d-821cbe7156b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fa2467-584b-4944-a2e6-6c520b34ae96",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a3aeed-3ef8-47ff-a3bb-fb2a78e45698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75c670-874b-4516-8189-feb410da3bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01515d8c-f31c-43a0-a704-b5b3ea8d1867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8acf69c-86e6-4ac3-8eb9-7bc750e7afe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973fb815-815c-4550-b4b6-9fda3c064337",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51734431-d2b3-4a55-a028-4d04d949eb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f535307-7ec0-448c-8577-9e2f39c10d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08749b03-159f-4cf0-92a8-09407d7f9d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec11393-f42b-4eeb-8ff2-60cff0f519e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d56feb-9880-497f-9e99-0895ce54f681",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb02383d-4c65-4728-bcff-9bb09b518242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc530c1-2fa1-40bb-91e7-b2fd63f04fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eef73a-4322-431c-8397-2c51a9412a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe7971f-b2ce-4806-b47c-307801d31260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2624f4-feb0-4c86-b8d4-0ef7a14af8fb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e432154-6fa0-4968-8a6f-7c26a99be494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684131ba-803b-4697-baa0-6e844ab920b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c439ac51-c4be-4015-9987-63542fa56ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e97fd3f-1644-4a94-b74c-7a2f05027d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6eefdc-6ced-45aa-b6a8-125bd8a8ec17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6c56c-59de-4650-b173-d739f6ddc907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd9697e-a9b5-440c-857a-aca4b6a6edfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211a9859-ed08-4292-a83c-00e04ec5c449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12098ea-b461-4608-b6b6-32fd99a4922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf19170-c18e-45b1-82bb-34d187370f39",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58461917-9eef-4d4f-803e-649118eb9842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe35ed6-c3bf-46d7-bf5b-bc402e04fa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d45e788-ef14-4eed-9c5e-9d80389e390e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499d1ff9-caaa-4b3e-b862-449eb92c9d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63926b-2906-4b0a-aa42-a2dcac444da9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f94d43-b67f-4205-a634-f2fec6e52eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9805bbcf-4ae3-4969-976f-532bc5e517c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39602d6c-b56c-40a8-a3c7-431951a17868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f4efc-8148-4f89-bdb1-299f2da097de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83751dac-3dcf-4878-9f0b-1e33b9ad2d60",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f757de7-b3ca-4495-8dce-9665c56e8730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6faa565b-6ef3-427e-a5da-4231c79d22f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ac42bd-f427-42d0-a9a2-44a6d6a36fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a192a44-6528-4f85-bfa7-831cbc070009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b2cf3-80fa-49d0-8183-b8d0a1879c17",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bd3b08-c06a-4286-abe9-c501a1cf110b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70761397-ff76-4655-b028-8cf936d7607e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14698d26-9903-4611-b29c-5fa941545960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c065ba-7841-43eb-a99d-740b1f2b300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bc50bf-87d0-41b0-916b-a43adfe6b102",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf878138-c7fb-417d-8cff-d69f9e4d8980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3f0afc-cde9-4ce1-8640-21c7db40cfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e9e45f-4d99-4a05-9fed-1e8fceea0ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72aecdd-c09e-45c9-9948-3f718645b8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c99a21-8549-43cd-be96-eb4111157228",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5781c1c-389e-41f7-938c-c6b2f7175350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7d4969-ab7b-40cf-abde-bdd7f747bb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f29ce9-9893-4463-b289-7aa7b52b2cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3514ca8a-74ee-419e-972f-7fc680edfe58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c959a73-f391-4686-bfe1-35c4a0f1790c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b98e64-cc83-4642-aed0-8090181f7fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9993a50e-f090-488e-a4b5-f5441e09405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c23db-306e-42ad-8307-9fdebc421264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e65ada-a8b4-4495-ad95-90c6e370c7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04be013-54d0-405e-b100-6f89a646fec3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6b8690-d7b4-4dd1-8e9a-8f4594d93be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5bad8f-eabb-44d3-860d-9be187e493e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a8b71f-43a3-4f4b-a483-7b707af58771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937574e5-0ff9-4b6c-bae7-8dcd69f94f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832d9902-97a3-42d5-8f5d-b8695106885f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349cac8b-8303-41ff-a1c1-e00c41e0bed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b68752c-13f7-4c31-8448-75128976eafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740593f8-d49c-4f64-b803-698c2cbf98a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8829cb-ebdc-42ae-9e3a-b72f34f389d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56651b63-8f8a-435d-a7ba-3a5e1b387918",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3b4f3-1247-4f19-86dc-61e0590dc02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2806c9e5-844f-4c51-a60e-2de212aa6b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6802b0-6886-4486-a9a1-61d37655d067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a046a70b-1654-4c4d-9813-ef1cf7d3a86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaefbdb-ca01-4e9c-b215-e45c0e08ee37",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3304ea8f-d3bf-4c08-b06a-63921b2f762c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0be9f90-ee63-4217-8664-b6a2d5d67dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3afe1d2-d121-40f5-bc9d-8e36a26ff17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcd5b7a-b80a-443a-b261-92be6303fea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401fc0df-ce37-4568-95e7-120c5735c357",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed489e0c-41b9-4c5c-ad3f-d5f9300c5007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d389cce0-0cf8-4916-9764-a93f5d76420b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b2431-6e73-4463-9f98-1af14be11953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c39cf3e-6e97-4437-aa19-c5f3c77d636b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e0c26c-f114-4b4c-8b0a-31f82ccebbb8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ecd369-5c99-4925-8e1e-55d49c56b9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f630c6-8989-49bb-89b1-98fafb0626e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c1e165-e7d9-40bf-84c8-9c3c07e2930d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9659b0b3-5e46-488b-a9a5-148d4f301f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20174b4-ff63-4899-8b3e-1a8fb2adcf40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c8ff13-4135-46c9-bb30-5b288b0e8929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71883eb2-8636-460e-ba16-0b52cfe85e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aef7f0-8521-42a5-99f3-e8ba0ccbe9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233b4a0e-a554-40a9-a6ef-ea55ab40face"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f863e-ef5e-4326-a5a9-afbd7e980732",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6054fc-a936-457e-a2f9-6c9a18ab38a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef740e89-1f9c-4dbc-92ee-92b90dd01e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647c095b-78a4-4bdc-9ba3-4a63530caa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6215d3c0-a52f-4afe-9dcf-c360f587d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d36729-9177-49e2-b63e-70c10260b25f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8def1b-6e3f-4d76-a809-9c483e2c5b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77630062-f59f-4150-b17c-8f709e3c9896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b250d78-6db1-408a-9531-07bb15866066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24748e29-890d-4c75-8a4a-513b89523e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f12c55-c9b7-49e6-9f1b-c0dcdcce42be",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75586dee-b2e2-49ff-b6e6-5a78d2bec842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7100e0ea-02e1-47f6-bab5-b04ccb92d174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43d5ae0-e021-477d-af2e-499606ef2c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3173d74-4db7-4070-9c70-d878d1937852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450fa0f-40bf-44b6-9c11-ddfb35371fd3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f2990-b5fa-4c9c-9b5a-273cf2ca89c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f3ca28-e849-4f74-853d-d6a266d44195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c2c60b-7ca5-4c05-90ec-6737d6ecd106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddcdcba-ee30-4300-8d7a-a6d97cbd9f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63b934e-e912-4572-9164-53ac4677e0b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06484797-fe16-4a49-8ffa-8a0e29bb2e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9793ecf3-1a45-41da-af5a-bdcbb2dce57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244b5c19-eea5-4b67-beea-bf9e30c9283b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674d556e-96d6-43d9-8e3c-4ded805b79b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b3885-599e-4092-ad5e-c8f16d793671",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd4dbbe-80cb-4d60-9334-168ccdb5e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95829d86-748a-4c8b-895c-7f9fdf34c163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c707f467-5817-4f3c-9932-0758da330cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1f0380-91f4-457a-98bf-aca517ba3fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f0e149-a072-4bf8-a0ba-70daf37f5c1a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930ebbc1-1ed7-4dbf-b1cd-dbfae2243e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2771b405-75c8-417a-99f3-2b2a60fafecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b600f4-5f5f-4f47-bf48-01cbdbf4507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9689bd8e-a2dc-4a68-9a65-f8f157863a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7172b2-5026-4d91-ae54-63e26433a811",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432cfd1e-144e-4cd5-a62e-ac5ff2b702f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298c9d56-b725-4b4a-9344-135b71739ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9324c9-3205-45a8-886e-48dd54fe4ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54d8734-11b3-4bf9-8a58-37a2e5de6efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff5bee-4a7a-4b1c-88e4-8f71ab56653a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccb2ae5-9617-40bf-bdfc-03c6dba51d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60fece65-63f9-4102-847f-7339a7bb534f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326b6878-6e23-4ab7-97fc-01449dcf4336",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aacf27-3b8a-4a6b-825d-2acae2f68538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f791ca9-5a8c-40f9-a57b-3e160084a3b9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e27e16e-12c8-4ead-a4f7-d1d25e076fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8a1080-8c4a-406d-a903-a64f8b6aa44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db34b68a-3904-4d39-8813-bf2b9c0f0e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b78ce1-a2c2-4c7d-9590-5968b6aec4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e2b247-a38e-4848-a5cd-59db1119fb81",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab498c1-ce73-4f02-b5cb-3f0d4d0c1bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61e93ac-bbaf-48ec-9a64-e7f76abd8d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026cc23b-a8f6-4d0c-a32b-bfbd28d39ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66e58db-9b04-4292-8502-9c234c98e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53940d3-3860-48c8-b059-8fd79add9eb2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b78dca4-7c4c-4092-9a09-ecaffb3bc8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4e4c93-fc09-49a1-b01f-5cee06fb7395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0f65d9-0137-4031-8016-c160c3de3e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6f146c-1e37-4285-a3fd-aff4f2f02baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed8bed2-c55a-4cdf-9740-51d472a4dc85",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee5fe1c-8cfa-480d-874e-5fee4b6f761d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bb3e32-19ff-4bea-a5fe-1f67059f18a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbe865c-b7dd-4119-99ef-13fbc5265010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf8d616-a5e1-488d-b2e1-f8ba64b3c4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9664270-7cb2-4ee5-b3af-89514fd2a764",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84488cc-6501-4972-9aa4-3c5d43a22ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5213ccc5-16b0-4319-b44d-e3628ed53830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499c3b3a-8233-4e88-8755-973d0e8ef89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9bdf9b-002b-4dfb-9cb4-8c8de3de3ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4334674f-37e7-4472-a47d-e6f3bd10a70f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc603e6-ad71-4e41-b20d-9de94f77b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff7f974-346c-4edc-8ce3-530cc1a92bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12ccabe-48f0-4afe-8b13-a4a36001ba57",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f3f3d2-5528-4181-8866-89b87d9c75d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64828294-765a-4e55-8a21-e06687f36ccf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4bb4ec-c385-4a22-a46e-088c634bd1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57492065-25ec-4022-888e-69fa0ea710f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f0d616-b3e1-4a50-ac9a-7d85512a6ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fee3a8b-a862-4e26-ba19-ff02912368f9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6a0c98-d140-403c-a1d7-1bb9088c3c3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7c502d-f874-40d0-8fe6-6d72a5e700c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c05619a1-bb46-41f5-9d77-e89ac3f14cb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c743eaf8-bfae-44f5-bfb7-dbf2d599ae3a"
                    }
                  }
                ]
              },
              {
                "id": "d13af1aa-5f43-46ff-aa62-f9d6810217ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fb3266c-d6ac-4a24-9f78-61945bf00378",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891b2d88-d9f9-4eb5-ad74-d2f7d8e43168",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3434a723-3ea3-442e-9ea2-9cc9c271de27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816c7192-437e-44ed-aacf-253fd771dbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ba86e6f-0745-497a-89e5-e3e56bbb5baf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fb751c9-2c47-4489-bb13-21ff56507370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fab40da-0412-4ecd-99aa-356698240e5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e9c3bcb-14f5-4660-8703-e65dac78010f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6951c8cf-09a1-4358-89c5-7edbb298a4c7"
                    }
                  }
                ]
              },
              {
                "id": "6dc84b23-3014-4af4-a23f-fcc6e3bca07e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f3f7860-d1e9-4e6f-9df7-83ee602f7215",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558c41c2-4071-48f2-b947-e3332ec65b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9d040857-ee9d-4341-aa02-65832d44ab91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafcdf01-d967-4117-bf55-30116055fd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246a35c4-660d-44ff-9202-180d950be494"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ce4106e-5f1e-481a-92a7-80315b18fb99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b35724e-e70d-469c-9b4a-a0113b53772d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f063f6-d9c6-498f-b395-dcbb1648c2ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "50799e3c-873b-4c06-83b5-e8d027e48d47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd3c3028-9c2e-43b5-8caa-24e8b24b7c2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c1d38fb-4424-4005-a99b-648dd4259eba"
                    }
                  }
                ]
              },
              {
                "id": "408c1d72-f72f-4c23-ae25-2c961a120520",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1364583e-e18a-44f6-b8b8-26df94cf1aa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9f2c2fd-ba2f-47b4-adba-792bf431d4c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebcde3ce-2739-4c0b-b474-60dacca162aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d341cb9-203a-402e-830a-2f57cf96b4c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a232afd7-d27f-4baa-b92a-e44510ed6f61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c01cb65c-8672-4eb0-a351-df573c14564f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d69f5aa-f216-4aab-ac94-84c828d6df52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "371ff14b-3e1e-4307-a637-1bb7643022a9"
            }
          }
        ]
      },
      {
        "id": "1a7aa344-336a-42fc-941a-7e3e8ae59594",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "18d41357-d9a5-48e3-b187-36164bb91802",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d10ad883-8568-4f18-b855-8f6cf1431ac8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1004c71-ff2f-4153-99e8-b49444a9bf84",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e738458-09f0-4865-add8-3a57d59a0f23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ace6c1a-8c51-4c0d-a1ed-ea6bea495c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c9491b-926b-48bb-afb3-0b5f92d54c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8afbbfd0-f0c4-4d9b-ad1a-1b9e3dc0ca25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24a4dc9f-cf93-4acb-b772-f09391053d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c20ad892-fa9b-48bf-99d3-4a670a1d1c83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05058e11-183d-41d5-be6a-2f3a74b68498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a0e187-0ba6-416c-9476-dc185b454b6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd81c979-c44c-41fa-bd4a-71769bda248c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "facc7f01-df56-4462-b3ad-60fd57b0064b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff446d9-dfd3-4664-b293-a2436a36b8d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14f83938-9b04-41ee-98c0-251f37b03260"
            }
          }
        ]
      },
      {
        "id": "12474465-2d6f-4f13-a561-f85d07c6c7dc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a5760bd-2911-44ab-a5c8-fd1259236619",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec6a93cf-5aa6-42ed-a1d1-ae46a400f3f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00d311c8-52c3-476f-a6a2-d68a47faea78",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19447ae-3720-443b-b1e2-96615a9dd72a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e09ae8a-1b43-4257-bdad-d53dd81ab0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bfb4b3-00e4-43ad-b715-68bdbf98f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36c17ad7-4465-43b7-9750-19cef80942b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ede28d-790d-456b-b76e-6ff73ff5458c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9fa5cc6-6410-4ad3-8da3-7ab945528e79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e500d9-d3c2-4e5a-9e6a-8d51f8b16b89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac91465-4a9a-434c-a7db-1bb5aa8a06d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fa23069-58c2-49c4-8e30-faeef19fc9ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8a3248a-5a1e-4384-8419-3eb1bdcc0998"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ece19343-73e5-478f-a7fd-6f56f0d0c123",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ffa0e00-b85e-4883-8a1e-73a775cb7a3b"
            }
          }
        ]
      },
      {
        "id": "a35ea675-8e39-435b-9cb5-75e890238585",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "97f7db3f-9ef8-43ca-b039-5ee4a54adaee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40d80fa1-c698-49e3-af59-1594e6d01fad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61c90cbf-30dd-453e-834b-369dca7d2df8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5675f804-fb0c-4e4f-8e08-d3495ae84257",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f8ba0c-727e-43d2-9ea8-8c82bdba68eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f691db7-8ec9-4615-9db1-0947f5be4da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df99936b-5812-4da7-8301-9b8f018881bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a63fdc7-04f4-4425-b5aa-05a672be03e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d91019a2-e0ff-48a8-a02d-935e4e6b1675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eddda611-0b0a-4cce-b25c-dc29f938a13e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42794f17-2d83-4ca5-b172-97c447262e38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dca49ecd-6888-4005-8898-adf1f695e44d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "750181f9-d3b0-46bf-861e-e23b2e72354a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d5ea4c4-55d5-42b7-ab5e-a4082faf8043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7cce4c4-47d4-4996-9002-393cb4a160e1"
            }
          }
        ]
      },
      {
        "id": "a1f16762-78fb-4cd1-b658-3168e6046bee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "751b39c2-a8f9-400d-9594-be6d215d4eb4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aba6420-701f-4449-8fc1-6250029cbfe7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3cd25bc6-3588-4929-8076-67e314cc819c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78aaf931-f904-4927-8f58-e7066bcb64e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa9121ca-ee3f-488f-9864-37867c87fc8b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 79.98245614035088,
      "responseMin": 3,
      "responseMax": 8259,
      "responseSd": 557.2849877638465,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707870839732,
      "completed": 1707870871757
    },
    "executions": [
      {
        "id": "c84df09e-a977-4273-8a57-fe3bcb8725cb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0019766a-6fcb-40c1-a6df-ad31d824321d",
          "httpRequestId": "dbe2e06b-c84f-438d-973d-f71e6f8fc961"
        },
        "item": {
          "id": "c84df09e-a977-4273-8a57-fe3bcb8725cb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dde57b05-2896-4447-8990-7d61b3f40b17",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "a76d69de-38d0-4a31-b473-d40fa0384397",
        "cursor": {
          "ref": "e46c4a90-c813-4a7a-9ecf-cfb7de762d54",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "13d5e623-8c5b-40d6-a4b3-ec586d5c8066"
        },
        "item": {
          "id": "a76d69de-38d0-4a31-b473-d40fa0384397",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "10498e69-42cf-489e-b208-7487074332fb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "7b634c16-ade3-44dd-9020-78841fba1384",
        "cursor": {
          "ref": "4463e904-f68e-4807-a4de-004ecb223b4c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1931ca0e-3090-400e-bedd-3914893fb924"
        },
        "item": {
          "id": "7b634c16-ade3-44dd-9020-78841fba1384",
          "name": "did_json"
        },
        "response": {
          "id": "9a7f8cb9-6200-45ac-b25d-fe944ff5380c",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d3e63-c6f3-4305-beac-a9c8ed00c133",
        "cursor": {
          "ref": "99da58dc-5c88-4551-a435-010c79200804",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5801f983-bee3-4933-9997-23e345edb5e9"
        },
        "item": {
          "id": "bb7d3e63-c6f3-4305-beac-a9c8ed00c133",
          "name": "did:invalid"
        },
        "response": {
          "id": "e887601d-a097-4765-8a28-cbde08a31ec5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 521,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d3e63-c6f3-4305-beac-a9c8ed00c133",
        "cursor": {
          "ref": "99da58dc-5c88-4551-a435-010c79200804",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5801f983-bee3-4933-9997-23e345edb5e9"
        },
        "item": {
          "id": "bb7d3e63-c6f3-4305-beac-a9c8ed00c133",
          "name": "did:invalid"
        },
        "response": {
          "id": "e887601d-a097-4765-8a28-cbde08a31ec5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 521,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b75191-3f95-4dad-8b2c-8141d87f7b21",
        "cursor": {
          "ref": "435bc70d-fc14-4b4b-bcd5-20d5f9743dc3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "42a6976b-88f2-4ac5-9fc8-e1576ea2c949"
        },
        "item": {
          "id": "65b75191-3f95-4dad-8b2c-8141d87f7b21",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da27d9b8-a98b-48ec-83a0-9313f96733ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443e005b-5913-41e7-916c-fae2b002f315",
        "cursor": {
          "ref": "b55a519d-e2d9-491e-a5af-f736ee4a75cb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "715f439c-fc87-461b-8ac9-718387ea80b2"
        },
        "item": {
          "id": "443e005b-5913-41e7-916c-fae2b002f315",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "12bce972-374c-44cb-a319-e26b51da58b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9db412-9ef9-4a5d-a69d-6ef2c2ba8c15",
        "cursor": {
          "ref": "1aa3f511-a087-4b91-ba7d-1732dea3d577",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9bf4b722-6db5-42fa-9f69-ba0b4d2e376e"
        },
        "item": {
          "id": "5d9db412-9ef9-4a5d-a69d-6ef2c2ba8c15",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "02f7fb7a-aa63-4485-b58c-2fa3d1f0ba7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef51cf57-3686-41cf-b50e-bcad00fc920c",
        "cursor": {
          "ref": "8568ecfc-5f29-4e07-a3c7-8735baa77a1c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3cd179f9-7889-4589-b903-fd5f52150359"
        },
        "item": {
          "id": "ef51cf57-3686-41cf-b50e-bcad00fc920c",
          "name": "identifiers"
        },
        "response": {
          "id": "f92109e0-2127-481e-8f50-f95ff07ff391",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a25607-19bc-4dbf-8762-077512580839",
        "cursor": {
          "ref": "9de9220c-55f6-4f53-a022-340df6e93ffb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa123937-2a3a-4cde-804a-507e64ba8a95"
        },
        "item": {
          "id": "d0a25607-19bc-4dbf-8762-077512580839",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec3a27fa-8c06-4f01-8afe-cfb82e49fd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a3cb47-37df-4d61-8ebf-a92f514d06aa",
        "cursor": {
          "ref": "0dc71478-6c26-40a8-a813-5eecaabe61ca",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c6ff060d-c4b0-4892-89ac-949653f903fe"
        },
        "item": {
          "id": "18a3cb47-37df-4d61-8ebf-a92f514d06aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f133119c-38d8-42c6-a1b4-eea3294efa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a2551e-a8ff-46f3-b68e-050ec27e65a7",
        "cursor": {
          "ref": "9bc20745-bb56-4d6c-aef6-f7269797f236",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4e4f0b6a-644c-4173-bb04-8a3ce6c34880"
        },
        "item": {
          "id": "c0a2551e-a8ff-46f3-b68e-050ec27e65a7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd9b47a4-23fd-4a5d-abfe-66d8599c1d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8387f7b8-417a-4e3b-921e-a989cee7dd26",
        "cursor": {
          "ref": "a120faa5-dd44-4fa0-9afd-39eec86fc986",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0e98e81e-352d-488d-b682-5b5fbab4bf1f"
        },
        "item": {
          "id": "8387f7b8-417a-4e3b-921e-a989cee7dd26",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "21eb32fd-3004-4579-a50a-d6f2766ebd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebe77aa-195d-42e1-848f-e7fe7a096bfa",
        "cursor": {
          "ref": "b0da6233-2964-400a-9780-c2573e4da57f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e84ebad0-e3c4-42c2-b063-f6fbd954d49d"
        },
        "item": {
          "id": "0ebe77aa-195d-42e1-848f-e7fe7a096bfa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "796e29d4-c4fa-4e3f-8aa8-9ad3b09ab39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b35ca6b-97d8-4d5a-9c9e-1e4b79927f10",
        "cursor": {
          "ref": "713ca56b-1154-4e02-84f8-3ab51c652f5c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "db3c4eed-b31f-418a-8bdf-6576b42e955e"
        },
        "item": {
          "id": "0b35ca6b-97d8-4d5a-9c9e-1e4b79927f10",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3d920f9-92b3-4574-bb96-6c4e702d9438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf423d4-fd5a-433f-97a8-b2eeb2fee240",
        "cursor": {
          "ref": "fe88187e-1811-4928-93cc-1ca307277499",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "463b4c09-e36c-4dd0-b5ff-84e018a60499"
        },
        "item": {
          "id": "8bf423d4-fd5a-433f-97a8-b2eeb2fee240",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7072fdda-3a8e-43da-9994-13a5b21c24e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9dec4b-dba0-4336-930f-917e77fd3ed3",
        "cursor": {
          "ref": "8c33313f-151e-4f4f-88d6-7162c73fe59c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d1115eda-b3cc-4508-a4e1-64d82852fd95"
        },
        "item": {
          "id": "1c9dec4b-dba0-4336-930f-917e77fd3ed3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ceb1a195-a024-4a67-8007-dcd01a6f42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf462f4-79ff-4407-ba32-151a527b1a9a",
        "cursor": {
          "ref": "3ea3261d-de3c-4f83-a302-99e1aff1ea4c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "22063fb0-c740-4a8a-8de4-fa7a42e42098"
        },
        "item": {
          "id": "acf462f4-79ff-4407-ba32-151a527b1a9a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cf1a76bf-40dc-4cc5-8a1c-34d46f94face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f58787-1ab1-4795-9525-e9beea11d0dc",
        "cursor": {
          "ref": "7994b7ca-d06d-4d57-b3a6-003907e9a439",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6f345a99-bdf2-4770-acee-d298dbe1603e"
        },
        "item": {
          "id": "c7f58787-1ab1-4795-9525-e9beea11d0dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c742ccfd-0a8b-48af-b425-1b476e08dc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430ac7fd-bcf6-4ff2-b7aa-a70729dfc026",
        "cursor": {
          "ref": "3ff26862-0587-4b6c-a707-868d87d61e4c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fa104567-d429-429d-943f-8c00275a2359"
        },
        "item": {
          "id": "430ac7fd-bcf6-4ff2-b7aa-a70729dfc026",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b2c044bf-6e43-4227-8fd0-6be80d6eb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaba016-28d8-45b5-b2bc-e856a891031d",
        "cursor": {
          "ref": "4f90e07d-95ea-4cf5-84bb-8ae672d6151e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cb235864-fdfc-4d5c-9c56-04fd8765b923"
        },
        "item": {
          "id": "fbaba016-28d8-45b5-b2bc-e856a891031d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01fd31e3-52a4-46c2-abcf-5c42bcf6e65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b87e83-aeb2-441d-840d-5649d0473c88",
        "cursor": {
          "ref": "2619a1f1-d4fd-49d6-ba07-231ec5dbb465",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39089d01-6809-45e6-8999-c79153355310"
        },
        "item": {
          "id": "b1b87e83-aeb2-441d-840d-5649d0473c88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4732adb9-57ba-4d8d-824c-398981bcef65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4351f-7cac-43fe-899a-06c7839c3b0f",
        "cursor": {
          "ref": "ce488e4d-e297-4e20-b6b9-ac1b4abd404e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7995c20a-5992-464d-b4c6-d853579959b7"
        },
        "item": {
          "id": "d5a4351f-7cac-43fe-899a-06c7839c3b0f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c901f2b3-5e3c-4b88-948f-3798868e93bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0a43e-4b64-49b3-b15c-44fd707e8ab9",
        "cursor": {
          "ref": "b049ea4e-e863-4308-a920-ec122dd5c013",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a72bc5ec-fe8c-45a4-a963-b2554983c0c2"
        },
        "item": {
          "id": "abf0a43e-4b64-49b3-b15c-44fd707e8ab9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2de46d0b-3ddb-4d9e-8f48-7d34eeaec61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f469e7-761a-4fef-afa7-64cf47e93e7f",
        "cursor": {
          "ref": "bebc0cba-90ab-4d51-acd0-994b41a8b823",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "03378a15-0b3a-4a1d-b357-ed4eb25ca86f"
        },
        "item": {
          "id": "68f469e7-761a-4fef-afa7-64cf47e93e7f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3fc66215-e5e7-4f89-8854-0bde2e694613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff4c795-492b-4cdb-ba90-99234fa2fd9d",
        "cursor": {
          "ref": "3d7c8df8-8455-44af-9081-b2d62d3a3126",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d71fb574-5ff4-449c-90b3-720b80b5fcdc"
        },
        "item": {
          "id": "2ff4c795-492b-4cdb-ba90-99234fa2fd9d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ccdf4bd2-e82f-4d98-b882-94a6ca427e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99b3974-cfff-420f-af9a-ee4be0f64ecd",
        "cursor": {
          "ref": "12c3c79c-0f3e-4dcc-bfdf-6b5b5981e8f1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8d3e3a54-027f-4a15-8d3a-a0c46fde74c4"
        },
        "item": {
          "id": "c99b3974-cfff-420f-af9a-ee4be0f64ecd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "badbb311-83de-4cb1-a0f7-802e3cc1c42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef84abe-8131-4ff6-991c-a020274a3e83",
        "cursor": {
          "ref": "78c1ac0d-502d-4356-acda-1d6f87c2a6c7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6cc9cc99-53d3-40b3-b6f7-54ce22b31888"
        },
        "item": {
          "id": "6ef84abe-8131-4ff6-991c-a020274a3e83",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "67ca0bab-8bc3-4173-8c71-89b3738821ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a408368-94a3-4a28-9341-889f599f84c6",
        "cursor": {
          "ref": "adc60c7a-03ac-43dc-bdae-8ab69b3b87c3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1409d38b-819a-49de-bf6e-ce2b0f69a508"
        },
        "item": {
          "id": "4a408368-94a3-4a28-9341-889f599f84c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db5f3c2d-5433-4ad2-9c43-5e134c051110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffe9553-4c01-4b70-a105-810aad4b091c",
        "cursor": {
          "ref": "81ad8047-66b6-4ed7-9568-3c16a25a7ef0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb16bc0a-2e22-42df-b936-3c1b07859629"
        },
        "item": {
          "id": "bffe9553-4c01-4b70-a105-810aad4b091c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d5e2df49-45d2-4ddf-9d3c-6ecd5dc5dc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd15ac6d-8935-4d32-91fb-e28f1df84923",
        "cursor": {
          "ref": "17fa05d9-3a42-43da-a2d6-8e9f98346840",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "be615c99-722e-42ae-8b8a-6438e8b03f68"
        },
        "item": {
          "id": "dd15ac6d-8935-4d32-91fb-e28f1df84923",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5c7a5b6-397a-4718-8a1b-74d68215fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af6a2d2-be8f-43b8-a5fe-7da4bb9b9187",
        "cursor": {
          "ref": "9ec79099-41b9-4a95-b86a-bd4851113ff4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ab70f14d-4119-40c9-bd18-c53c26e3e51a"
        },
        "item": {
          "id": "5af6a2d2-be8f-43b8-a5fe-7da4bb9b9187",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aa601fe5-d9a9-4223-84fc-0b643bba9a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da924fb-d755-413f-ac44-08efc0b7b732",
        "cursor": {
          "ref": "ddff2469-2ae8-42b7-87cd-de77f2b8e548",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dd3d1f43-1a8d-4b47-8fdb-6f42759e8a54"
        },
        "item": {
          "id": "2da924fb-d755-413f-ac44-08efc0b7b732",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c75ed3f0-c27a-426f-93a5-5f8f7c2543c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea9845-77b9-4423-9e93-ddbaf2a1d387",
        "cursor": {
          "ref": "dc579fb7-2658-48a6-96c6-ede38fd2e66f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "79c2d295-cbd1-4c1b-af30-9548339217f3"
        },
        "item": {
          "id": "ecea9845-77b9-4423-9e93-ddbaf2a1d387",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "845d0614-8cf1-446d-b1ad-3bcabda98366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13ca9fe-1be0-44d5-b04e-6a207daea687",
        "cursor": {
          "ref": "b2553199-4f94-4eaa-b488-5d417b8a2cc6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "67e26739-7df8-483e-b84d-354e2404c31e"
        },
        "item": {
          "id": "f13ca9fe-1be0-44d5-b04e-6a207daea687",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ff336482-9442-4e41-8998-d5913671267e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92762f5f-5f20-43f0-8a08-d2105ed688c1",
        "cursor": {
          "ref": "8259de17-9a61-4ecd-aa5f-8568e88df3b6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8e90993-74ed-4c0c-aca7-71240f1e0693"
        },
        "item": {
          "id": "92762f5f-5f20-43f0-8a08-d2105ed688c1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3485d3b0-a0da-43b5-994b-3319bbf433e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76cb246-526e-4a24-bc92-f9253bf865b9",
        "cursor": {
          "ref": "ea1ce22b-2916-4365-bf9e-ff13105ac9c0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1bed1c96-46da-4e09-8a51-5b9534faef14"
        },
        "item": {
          "id": "e76cb246-526e-4a24-bc92-f9253bf865b9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b899a916-92ed-426e-9ed3-a7a1b5209df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05501bcf-884e-4c1c-bce5-36e83856c1e9",
        "cursor": {
          "ref": "f4b0047b-3934-4817-b355-46702db9b906",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e091d42f-979c-4a86-89d6-cdafb7a717a4"
        },
        "item": {
          "id": "05501bcf-884e-4c1c-bce5-36e83856c1e9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7189f3cc-7dfc-422c-9e9f-40b9202aebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81afa880-b7ab-4bf7-bd7d-33e445946966",
        "cursor": {
          "ref": "4489e2cb-79ba-448f-b29a-f18ce0235bc3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "553285fa-0548-4a1d-b1c8-8d3649fe02ba"
        },
        "item": {
          "id": "81afa880-b7ab-4bf7-bd7d-33e445946966",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ec1730ba-b4fd-44ff-9e3e-f05e6e87c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f239ad6-00c7-4499-840d-5b18082d282d",
        "cursor": {
          "ref": "52d4fa65-10ba-4b47-af88-80836e11bd4c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fdb26d86-df18-47d4-a804-20de6d90330f"
        },
        "item": {
          "id": "4f239ad6-00c7-4499-840d-5b18082d282d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe863187-8e2d-4204-89a2-a446589529bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90516a6-ed90-4e9d-97b2-e309109ae627",
        "cursor": {
          "ref": "65c45ea8-b58c-45ef-8834-4fc7a88bd179",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8b1730a2-08ba-42c6-b196-0710eaa08fbc"
        },
        "item": {
          "id": "b90516a6-ed90-4e9d-97b2-e309109ae627",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0e685911-b1fe-46aa-8f81-3371faf57ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cae5941-d138-49fe-862c-664ae0283c69",
        "cursor": {
          "ref": "97d8486c-433d-4e5d-be63-a3161317a433",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a21e25b2-2823-4e21-9a0b-603feb7e1235"
        },
        "item": {
          "id": "1cae5941-d138-49fe-862c-664ae0283c69",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f4c0a90-18a4-4a97-96ec-6e801cf30f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fa33fb-ac4c-4677-b724-5eb6efe7c626",
        "cursor": {
          "ref": "e0d851df-b2be-4ee2-9fe1-ce27a461dc8e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bdd4f4e5-4db5-41e6-9dbb-68740d1dc2a1"
        },
        "item": {
          "id": "04fa33fb-ac4c-4677-b724-5eb6efe7c626",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c7b86a98-0947-4ae6-a244-a607c83287ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be50bc52-2da0-4e2f-aadc-e59d922e6341",
        "cursor": {
          "ref": "856da53b-bd70-4042-acb7-5d881f51b329",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a61f08bb-c7cb-4129-8d31-38f9d00dfe30"
        },
        "item": {
          "id": "be50bc52-2da0-4e2f-aadc-e59d922e6341",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05188948-5eb5-4012-9d90-67589ea54f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74506cb1-5829-4aa7-98c0-6dd78ec1a2af",
        "cursor": {
          "ref": "4eff4d97-c39f-41cc-88ce-46b59169ad6c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e906a6fc-417d-4ab1-acae-f93d3147b2ea"
        },
        "item": {
          "id": "74506cb1-5829-4aa7-98c0-6dd78ec1a2af",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "912ea320-736e-4ffe-94c8-803829cb8a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7636977-af4c-4eee-bcd4-5d23db5d196d",
        "cursor": {
          "ref": "e488a182-e7cf-44f1-8936-6fdb99255823",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c9ee5645-72b0-40ce-abe4-fb7609d99354"
        },
        "item": {
          "id": "d7636977-af4c-4eee-bcd4-5d23db5d196d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d5288b90-6d81-4b6c-b35e-eedfb0085b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5223a11b-8e1e-47e7-b734-c3b67f0167c9",
        "cursor": {
          "ref": "973d8adf-9d17-43da-879e-208aa8bf1655",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "51cad42e-f928-4005-afda-b8b0a73ad246"
        },
        "item": {
          "id": "5223a11b-8e1e-47e7-b734-c3b67f0167c9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "945011a6-c946-4e2e-af9c-b6d888affbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0f8447-c37e-4f3e-9c56-2500082d866f",
        "cursor": {
          "ref": "a525202c-af32-4f4d-b808-fed10ba069b0",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23c1c76e-b36b-4786-99b7-aa71bbefe02a"
        },
        "item": {
          "id": "aa0f8447-c37e-4f3e-9c56-2500082d866f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "01a767f0-66fb-46c9-b23a-fa891d8dafae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5c0201-43b7-4423-adeb-7f1f1593ea23",
        "cursor": {
          "ref": "79c85965-5eef-4787-8d29-ccec26edb249",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b324985c-141e-4e86-8fea-35028ca1b72b"
        },
        "item": {
          "id": "0b5c0201-43b7-4423-adeb-7f1f1593ea23",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8aab138b-066e-4833-a31a-7ffa00408097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f51c6d9-0b4e-42cf-b017-028d1da493fd",
        "cursor": {
          "ref": "0affa37c-f4b9-4d4e-be75-a5a85c98846c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f6cc275-106b-4908-bacd-03f3e4533a39"
        },
        "item": {
          "id": "0f51c6d9-0b4e-42cf-b017-028d1da493fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5efca63d-04c0-4285-9c0f-739fde6bf490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e01358f-a954-44d3-a78f-90f14d3e0cb4",
        "cursor": {
          "ref": "5da40e39-920b-430c-96a3-ad8bf489636b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1360e3af-c415-4fe6-af84-e997c7cb8e88"
        },
        "item": {
          "id": "0e01358f-a954-44d3-a78f-90f14d3e0cb4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ed6afc52-cbf4-4c67-a727-484c77b9813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffea620-7dab-4811-bf7d-0decaf69cae3",
        "cursor": {
          "ref": "9f4847ce-0991-4129-ac8f-924e51baf56a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "589274c0-0053-4369-aa8d-9d3ed7f47802"
        },
        "item": {
          "id": "5ffea620-7dab-4811-bf7d-0decaf69cae3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee94e8f5-3622-471f-b1fc-250b9dc389be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439eeace-18f3-4d6a-af74-d33d36a7e329",
        "cursor": {
          "ref": "5934dee7-9d24-45d3-9af5-23207e844f8d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5f75ddc0-c876-4c67-bfb4-aeb62f14f29b"
        },
        "item": {
          "id": "439eeace-18f3-4d6a-af74-d33d36a7e329",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "75c2238d-4ab3-4cb6-8448-2ee18ceb744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d74b60e-4f13-44fc-9433-695449f53f78",
        "cursor": {
          "ref": "13d89d06-be0f-4992-b165-44b96d75c581",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b7b2deeb-3db6-4be1-af95-de08cc90d575"
        },
        "item": {
          "id": "3d74b60e-4f13-44fc-9433-695449f53f78",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dc2908ea-0f53-4f6a-b301-546f48a22625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b3a17e-d851-4d3d-8787-a276c3375d49",
        "cursor": {
          "ref": "190397a5-4471-428c-8d6c-df5f6675cad6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eeaf7c39-5683-4520-89b9-4c6fa611c0cd"
        },
        "item": {
          "id": "09b3a17e-d851-4d3d-8787-a276c3375d49",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9bcda233-c93b-43ee-a118-80aaa1d6c1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca09b40-0082-4932-ae5a-1fb0b3f279af",
        "cursor": {
          "ref": "35823704-72ac-4e5c-92cc-09f54471402d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1a5bf552-468a-4080-995c-9a5098abfbea"
        },
        "item": {
          "id": "eca09b40-0082-4932-ae5a-1fb0b3f279af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "565a1b1f-e3f1-48f8-b15d-c77178231b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810f902-8ea6-4f02-96a3-b0bcba2060d3",
        "cursor": {
          "ref": "c36ada1c-d32b-42c2-9584-ccd064929ce8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e1743f8-cdf0-41e6-868a-b2af6194aa0c"
        },
        "item": {
          "id": "b810f902-8ea6-4f02-96a3-b0bcba2060d3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2bfdc008-2205-4eaf-ab23-64f537d15b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c79f1-080c-486f-b1a7-ddc38264137f",
        "cursor": {
          "ref": "f17cff12-8377-4658-9d4e-5121b75cd3b2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c0d97de8-89f0-4eb8-ab0e-ce5cb305683b"
        },
        "item": {
          "id": "ea7c79f1-080c-486f-b1a7-ddc38264137f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "32307b72-0fbf-449e-b3d2-a70b454d4438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e37f8-acc9-40c6-a803-da06fb47d199",
        "cursor": {
          "ref": "5853575c-fa60-450f-89fd-92b506188440",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a2fb70c2-9914-4682-8f71-b6533662a84d"
        },
        "item": {
          "id": "0c7e37f8-acc9-40c6-a803-da06fb47d199",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "500f9076-91da-4fea-9c47-861c65d79afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29d064-6cfa-4778-bc13-6611aeca6254",
        "cursor": {
          "ref": "de57f50c-833a-4352-b14f-8a4ae22ab2e2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "427919eb-ed84-43ab-93f2-2fa44bc43f94"
        },
        "item": {
          "id": "fe29d064-6cfa-4778-bc13-6611aeca6254",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c01a1576-e288-487f-af35-01e643c8ce4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42165a3a-7a07-4a65-895c-70c9f6b48ed2",
        "cursor": {
          "ref": "223a720b-d16c-445d-9a3a-e984a83b587f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24615bcd-f4ed-4d09-b9cf-3b7e88cb942c"
        },
        "item": {
          "id": "42165a3a-7a07-4a65-895c-70c9f6b48ed2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5293e237-c50c-4f69-b2fa-8d66cdfc9b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682d86d-1677-48ef-b2f9-5400a6f64ac4",
        "cursor": {
          "ref": "bed642db-3f39-4dde-af33-f985e2186d0d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "99f47816-5035-494d-b418-159a0f06cab5"
        },
        "item": {
          "id": "6682d86d-1677-48ef-b2f9-5400a6f64ac4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6c4b8b1f-2c1e-417c-abf0-05f02cbc3ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c22aef0-26c3-4c8b-98df-c0c085af6b72",
        "cursor": {
          "ref": "58e9e9c4-a204-4455-a26b-8956ff845375",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4f2d15f-7bc5-4a8a-a212-bf75ca28c471"
        },
        "item": {
          "id": "3c22aef0-26c3-4c8b-98df-c0c085af6b72",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da8d8b95-8c8c-46b4-a126-d7e8dd505030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db463311-caa9-4995-a393-2d687e4cdd33",
        "cursor": {
          "ref": "1fdb6fc8-ebbe-4445-8ccc-c00e2ebbdb24",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76c9bf2f-d17c-469d-bd31-2304a08de586"
        },
        "item": {
          "id": "db463311-caa9-4995-a393-2d687e4cdd33",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cd09be17-f4fc-4e62-b03a-7dac89ac18cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d71b052-67c0-451c-a4e5-706baef74000",
        "cursor": {
          "ref": "7570c3c0-40ce-45ca-a504-e5d3389547c0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "64a0336d-3400-45a1-a89e-4bd6a57239d5"
        },
        "item": {
          "id": "6d71b052-67c0-451c-a4e5-706baef74000",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3602d6f5-f39b-4910-8e40-cd964b1971a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57980883-2b26-4cf8-81cc-f9648d448470",
        "cursor": {
          "ref": "4645ec46-2a54-4a40-a41a-d210468313d1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "41187e44-88e9-479c-a6f4-bd858a23b5ec"
        },
        "item": {
          "id": "57980883-2b26-4cf8-81cc-f9648d448470",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69415374-aaee-4f30-8d04-ff670ddcbb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17079427-9fc0-4337-b1f8-7cd64990351f",
        "cursor": {
          "ref": "8fa25d8d-72ed-4e57-a490-f744534fcb76",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "36b15f75-58ca-4ac5-b22c-19fbd688262e"
        },
        "item": {
          "id": "17079427-9fc0-4337-b1f8-7cd64990351f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2980cebe-b9da-4468-a1de-a5e27ea7af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c11212c-0eb7-426d-8794-6af0c9a07f27",
        "cursor": {
          "ref": "7bd0d60c-3fb3-4bfc-b55f-bb42d6620a47",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e2f08d2-280f-45d4-914a-373764e9db41"
        },
        "item": {
          "id": "1c11212c-0eb7-426d-8794-6af0c9a07f27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9a9459cd-cad2-43db-9b8a-f3940aab1623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9149ad-ecc7-4e6a-adb4-ff3b8a1364b1",
        "cursor": {
          "ref": "c6f84104-3173-47ed-98d0-004a69bd305b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "82564fa1-63bd-4ace-9911-931e8ca9ad92"
        },
        "item": {
          "id": "aa9149ad-ecc7-4e6a-adb4-ff3b8a1364b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2ebe1e5-9cdf-44f5-b637-a5abb7597765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be551b-0b03-41da-b6ff-d04f861169db",
        "cursor": {
          "ref": "01c04593-8bf9-491e-bbc9-567e1f82b2a3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "63e94b14-6318-4644-8650-79975ef76ece"
        },
        "item": {
          "id": "62be551b-0b03-41da-b6ff-d04f861169db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1927d335-d3ef-45e4-8172-fcecd603dc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad067ee3-3fa1-430d-a3ef-942317558daf",
        "cursor": {
          "ref": "b5e57b9a-fc63-4a95-92c4-5cb1818fa4f0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "722ce89d-b5a1-43d8-87ba-2f48ed7fc893"
        },
        "item": {
          "id": "ad067ee3-3fa1-430d-a3ef-942317558daf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "62a6979f-b319-4152-b592-c78eaf4ba9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a830d840-ab74-4f6b-ba10-8e0f85fc845e",
        "cursor": {
          "ref": "20f6bea0-379f-4aa2-9d61-ce0a2d5d0792",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ebe01d0b-d9c7-499a-a2c4-7f0a17c5717c"
        },
        "item": {
          "id": "a830d840-ab74-4f6b-ba10-8e0f85fc845e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "147a8447-951c-46f5-b045-b0e0595de182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e00de-9560-45f3-aa19-9f27679c4e32",
        "cursor": {
          "ref": "0839f30b-26ed-48b2-8494-df26683bf650",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4456777c-8cea-4199-966c-60098c1a274c"
        },
        "item": {
          "id": "5c9e00de-9560-45f3-aa19-9f27679c4e32",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "669ecb4c-38d8-496f-9c29-11bb5d021aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e7a8e-a5a6-4946-9f61-46062268562f",
        "cursor": {
          "ref": "7f43cb08-52c4-431f-9a7c-7bceff7bb2f2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "76da2081-b3fb-4e67-95ac-79627b3be6f0"
        },
        "item": {
          "id": "444e7a8e-a5a6-4946-9f61-46062268562f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2333dcc7-78ce-447e-a52d-427e5102ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b11ceb0-856f-454f-9d9e-b3801951d41d",
        "cursor": {
          "ref": "ca4dfa5d-3039-49a3-b058-557513bb124d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a307feb0-55b5-4e82-b9e4-5400bee9469d"
        },
        "item": {
          "id": "3b11ceb0-856f-454f-9d9e-b3801951d41d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f7a48555-77e3-4fab-afd5-f48052f9cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53252386-2602-4029-b380-f0e87aacebeb",
        "cursor": {
          "ref": "9ebc61eb-f439-4906-bad3-4cbd17175e54",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa0bbc5e-ec40-443a-a938-835d9309d3bf"
        },
        "item": {
          "id": "53252386-2602-4029-b380-f0e87aacebeb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b761a626-29b7-45b9-bead-9067f248c151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f8d636-1c22-48e7-994c-34c47b15dab9",
        "cursor": {
          "ref": "2748cc0b-1c2e-468f-8fb1-533ed3daf5d3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "debd55b4-bfd3-4917-ae07-292d87af9bfd"
        },
        "item": {
          "id": "45f8d636-1c22-48e7-994c-34c47b15dab9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1eab9f7c-8e6f-46db-9914-08d3846c38aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fea8fd-0e07-435f-9d82-0de67322f4fa",
        "cursor": {
          "ref": "1916453c-5a1a-4bb8-891d-7e346bbfc056",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6fd7b7a8-7eae-41a9-848b-e27e4250dfa4"
        },
        "item": {
          "id": "15fea8fd-0e07-435f-9d82-0de67322f4fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3deeea0f-d326-4fd2-ba0a-7a4944ba6062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86420222-66f8-4aa8-8b07-9c43834c9951",
        "cursor": {
          "ref": "df96d69e-c6bc-453d-b084-707921a76ce6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bbd6e66b-20ff-4fb0-a9b8-b9e92e574b47"
        },
        "item": {
          "id": "86420222-66f8-4aa8-8b07-9c43834c9951",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8699a2a1-292d-4a24-8d76-d3d59207e617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9aee05-6251-4431-9c74-c2af974c02fc",
        "cursor": {
          "ref": "3d6118fa-240d-4729-a469-44e0684c72cd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b52a6425-c740-4db8-b093-739602d1f6b1"
        },
        "item": {
          "id": "1f9aee05-6251-4431-9c74-c2af974c02fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c7df4b7f-4a3f-45a1-a6b0-d2342ae386fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d1fdc5-47c9-4aa6-bf98-8016d2289d8d",
        "cursor": {
          "ref": "b8d9a851-2cac-45e8-b8d4-63c369f64159",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1657e2c7-a289-42fd-a950-51c57c5a433a"
        },
        "item": {
          "id": "f3d1fdc5-47c9-4aa6-bf98-8016d2289d8d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d8513b2f-22b0-4eec-9308-9bc18984d238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfdd29a-e67b-449f-bf57-caa8464d61f5",
        "cursor": {
          "ref": "f175ff14-9d2e-4b98-bbd5-e67ab45d08ea",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "147d5b4f-fa45-4217-964a-0e78819f9b1a"
        },
        "item": {
          "id": "2bfdd29a-e67b-449f-bf57-caa8464d61f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a77e62f6-9c79-41ae-8939-98228edcd902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ba3d5-44c7-4c23-a70b-1b3848c9f346",
        "cursor": {
          "ref": "e9b6d25f-cc84-4073-9e10-fa723bdf6951",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb33c500-1913-4080-9753-1f351624f80d"
        },
        "item": {
          "id": "607ba3d5-44c7-4c23-a70b-1b3848c9f346",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ef332337-8600-452a-bff5-46c9da50beeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043b2243-9aca-44da-b99f-5f8de103c49e",
        "cursor": {
          "ref": "939727d6-b396-4c69-90a3-a600c090aaa1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "766f2fe4-3bb6-47f9-a294-a69a507b9a0f"
        },
        "item": {
          "id": "043b2243-9aca-44da-b99f-5f8de103c49e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "22a6de7a-fb2e-4446-91d1-9fff9c1d1314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd49f6f9-38bc-4a95-afa9-7779819b083d",
        "cursor": {
          "ref": "e87c2ca9-c05a-4cb7-bd6d-bc29cc59f586",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3ff90359-0e40-481c-915b-b3683e2886c3"
        },
        "item": {
          "id": "dd49f6f9-38bc-4a95-afa9-7779819b083d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "05ad8c18-fb21-4f26-a64e-7cc91f366829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c400c995-b7ef-4b52-9d1f-4743c2b5257b",
        "cursor": {
          "ref": "69dcb729-ffc2-4c61-ab9d-664254d55354",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0161ee5-6d23-4433-bc44-2dca3525617c"
        },
        "item": {
          "id": "c400c995-b7ef-4b52-9d1f-4743c2b5257b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6a35d04-4fb7-464d-9aab-4dd9e165b223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218eaaf7-b83b-4ff4-bbb1-5a4a2d9bfd5d",
        "cursor": {
          "ref": "bda95e48-ed90-4e30-ab95-4680c2474468",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0253a424-853a-48ed-80c3-7b6c090da0ce"
        },
        "item": {
          "id": "218eaaf7-b83b-4ff4-bbb1-5a4a2d9bfd5d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "83baa5c0-8a80-4a76-a842-6bbfa9d8583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42c2caf-d77f-4d37-9898-b0bfda2a70b9",
        "cursor": {
          "ref": "746b5e38-de2d-4325-8ad3-6026846baad4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "09fd4dac-7518-42b9-9766-fad83a987831"
        },
        "item": {
          "id": "d42c2caf-d77f-4d37-9898-b0bfda2a70b9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9fc35a24-ad39-4857-a1f2-f6439cc39308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20acfed1-d41d-4179-853a-2e89d9662f7f",
        "cursor": {
          "ref": "ab347ff9-c442-4fa9-bb8f-190bbe28fba3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6c758da3-9ee9-4db2-bd05-357ed7c475ab"
        },
        "item": {
          "id": "20acfed1-d41d-4179-853a-2e89d9662f7f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6b96aebe-18d5-4f92-9171-739d160ea786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e705ff-aff6-4aed-afe0-c83581d72848",
        "cursor": {
          "ref": "d58026b7-ce4c-4771-8755-26bdb9d3e2c1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "749661e6-f007-4d5c-a062-1481cd83a0ef"
        },
        "item": {
          "id": "77e705ff-aff6-4aed-afe0-c83581d72848",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "059041bc-570b-465c-b750-183605ee6114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdb75ad-11f5-4882-b84a-6f80f7355ae2",
        "cursor": {
          "ref": "0a94c7d4-14e5-4398-b916-8f38eb8796c8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2afa035-e951-4895-85c9-c0b17f27d7fc"
        },
        "item": {
          "id": "4fdb75ad-11f5-4882-b84a-6f80f7355ae2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "38724300-d3ef-46d4-ae70-8962602271c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58a64d6-a930-4283-9ee9-c557677fa1fc",
        "cursor": {
          "ref": "77db0d73-6c05-481a-8a52-d7de667a1a02",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f80b5b6d-f14f-4884-8df3-ca3b7b57219d"
        },
        "item": {
          "id": "b58a64d6-a930-4283-9ee9-c557677fa1fc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7cbc96b1-9e8e-4a72-a636-aa446158284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d092e9-54c6-4616-9e8d-67db8f84cefe",
        "cursor": {
          "ref": "609d7062-b601-4fc9-a41f-d08ed5b31870",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4a19c200-d5a8-4e3e-a639-5108fa77e139"
        },
        "item": {
          "id": "c8d092e9-54c6-4616-9e8d-67db8f84cefe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "948242fd-9701-4d5d-b20d-0f4b1a1b3930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88757db5-1a39-4643-9c88-704709073741",
        "cursor": {
          "ref": "0100b2eb-b00f-4d8c-8b16-660f88161127",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ecee3e1-6b0b-40fa-820a-5124ff82ad7f"
        },
        "item": {
          "id": "88757db5-1a39-4643-9c88-704709073741",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6a08093c-59d7-46f0-b9a9-ca0b62133200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448bf86f-138f-43ac-8159-f0e0cf56376c",
        "cursor": {
          "ref": "65b0b6da-e965-48fd-872f-9a36ef6d5351",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cff5adb8-08df-4c5a-ade0-cd1f3f28e5af"
        },
        "item": {
          "id": "448bf86f-138f-43ac-8159-f0e0cf56376c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c08809fe-3499-40aa-81d1-73ec06a217aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bc3876-306b-4ae3-89f5-d2139b34498e",
        "cursor": {
          "ref": "93fa9640-8607-46ac-b2e3-f69eb943eb15",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f58bb50a-812b-4c4a-8612-f79b81bf00c5"
        },
        "item": {
          "id": "28bc3876-306b-4ae3-89f5-d2139b34498e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9bd68e58-be78-4cef-b21c-2ede22da64af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692c04e-8fce-4859-8355-6d2d87d160b2",
        "cursor": {
          "ref": "69657ea2-535b-4bbd-a50f-c56af67f57b4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1b0b19fe-4f6c-4f3b-8137-747631c296ae"
        },
        "item": {
          "id": "4692c04e-8fce-4859-8355-6d2d87d160b2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c3a64858-e8d4-4cae-beec-62f6a5d42eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5ade4c-f753-42fd-b154-e3db96c331eb",
        "cursor": {
          "ref": "c1c2ecf1-4c41-403d-8f0b-071fd7d7cf9d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "55aa690b-908e-4a5e-a719-c546681bbb7b"
        },
        "item": {
          "id": "cb5ade4c-f753-42fd-b154-e3db96c331eb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75a94ae0-e7c1-4598-a3fa-be18f314d97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b79e18-317f-4d0a-9add-4ad07fb4b372",
        "cursor": {
          "ref": "60155f19-5383-42b2-a7c5-35a8bfccabc9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc4d6b9b-d8f4-4d71-946e-02a714c2f0c9"
        },
        "item": {
          "id": "79b79e18-317f-4d0a-9add-4ad07fb4b372",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b9440365-6397-4cd7-9116-1ac96120141b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3128e8e2-510f-43f7-8770-7a7f6ef3ac41",
        "cursor": {
          "ref": "3da16543-d6b8-47c3-9e6d-d241b9e62863",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "591a62ad-6f37-48fa-996f-44d55efcb9db"
        },
        "item": {
          "id": "3128e8e2-510f-43f7-8770-7a7f6ef3ac41",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3bda53b2-aa0d-4cf0-829b-bbd531fa62d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5323d28-c9c7-4531-97e2-fa95d91f1e50",
        "cursor": {
          "ref": "adf9829e-b81d-43d5-935d-65e5048d79ee",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae80f026-8a41-4424-99a9-f5d530897f08"
        },
        "item": {
          "id": "a5323d28-c9c7-4531-97e2-fa95d91f1e50",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3a69be81-c9d1-4800-8e86-c88a79859738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7cd886-4188-4d6d-a5af-e84e5d914525",
        "cursor": {
          "ref": "9455ec01-a9ee-4110-9f29-683d1c54101d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b807a204-33ea-41ea-afb8-927de10030b9"
        },
        "item": {
          "id": "9d7cd886-4188-4d6d-a5af-e84e5d914525",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2001c082-b6f6-4928-b044-0411f2a6378c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadbde3b-3347-4feb-ba6e-afb7c86e7e7d",
        "cursor": {
          "ref": "03394c60-1e6a-4c17-b2c9-b153d515a383",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3a2ba895-cbdb-4f6d-b8f8-74aebe1ed75c"
        },
        "item": {
          "id": "eadbde3b-3347-4feb-ba6e-afb7c86e7e7d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5b0c000d-495b-4479-9428-8f18b6a723ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "799dd0ab-b639-4a2f-a014-3d7537d6e453",
        "cursor": {
          "ref": "2d809098-1842-4b8b-a15c-da6bf298dc65",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d5d89b22-ee21-4e43-8781-68974a86d968"
        },
        "item": {
          "id": "799dd0ab-b639-4a2f-a014-3d7537d6e453",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f950b45a-c2a4-4344-8960-78e258140518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1b90b85b-faf5-433f-b659-9a66835031b7",
        "cursor": {
          "ref": "aace7011-b581-407e-809f-af5b6712304d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d162ccae-da0d-4304-937d-c350ae0d53ac"
        },
        "item": {
          "id": "1b90b85b-faf5-433f-b659-9a66835031b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "44caba6f-1a84-4ce1-bad5-1b3d1a0b9c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "772f9eed-b287-4c3c-8bf5-8dd2cb96f054",
        "cursor": {
          "ref": "997a823f-de72-4400-9f83-cae50be238d7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "173ed304-1143-4840-a2ab-837f79c6e0f2"
        },
        "item": {
          "id": "772f9eed-b287-4c3c-8bf5-8dd2cb96f054",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "929bef15-b54f-487b-a714-5bd2957d48d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "09808996-a7e0-4086-b795-ebee80655536",
        "cursor": {
          "ref": "b98378d6-493c-4e6c-9f19-1733377caa94",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ca1cf51b-8bc0-498c-8cd6-d2e4b897d02c"
        },
        "item": {
          "id": "09808996-a7e0-4086-b795-ebee80655536",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "496ea7f5-848c-4b20-b10b-af929f1a9ea4",
          "status": "Created",
          "code": 201,
          "responseTime": 8259,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c5a4fa-2f13-4c29-99b9-270badae0d28",
        "cursor": {
          "ref": "d11c4972-3dd9-4649-89b0-36040f2989c1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f3a49638-31da-465f-895b-420814af7cc7"
        },
        "item": {
          "id": "41c5a4fa-2f13-4c29-99b9-270badae0d28",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb3c3f62-13b2-496a-9830-1fc45f77d1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9d3987b6-d56f-4cb2-abea-ff18eecfa4b4",
        "cursor": {
          "ref": "043e02ec-0e2e-44b6-a2c7-4b6f764842c4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c0d6ac5a-3bff-4ac1-9804-e5861d356f7f"
        },
        "item": {
          "id": "9d3987b6-d56f-4cb2-abea-ff18eecfa4b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0631ac9e-7ff9-4025-bd73-14987fb88744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2275d9f5-a3d9-4552-8b28-8070ec3cbdc4",
        "cursor": {
          "ref": "7fc9acfe-b9d9-42e7-93bd-fe5a760db866",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f1a4adb5-771f-4028-b5a0-b5a2f11f3d37"
        },
        "item": {
          "id": "2275d9f5-a3d9-4552-8b28-8070ec3cbdc4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "072df125-fb4d-4b58-828c-930bf4c13593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c69439-bba5-4cbf-a79c-9f6babcd582b",
        "cursor": {
          "ref": "dc2e2156-c470-4c99-b416-fcb1ab61ad66",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9162a3a-bbde-4b8a-8400-09611b020896"
        },
        "item": {
          "id": "40c69439-bba5-4cbf-a79c-9f6babcd582b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adc81c01-1e24-43e9-81ab-c975ebbeb3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594fa717-1d66-44b3-9035-2dbeb49f70c8",
        "cursor": {
          "ref": "cca79416-4ae1-431c-accc-dc48123881a7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3728ab24-2b48-42b3-b014-fabd23b8fc9f"
        },
        "item": {
          "id": "594fa717-1d66-44b3-9035-2dbeb49f70c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5b81a22-cbd1-43a8-a283-2cf9ed0f62bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d676af-9c5b-400b-b466-65968086b8e5",
        "cursor": {
          "ref": "267a1a7c-6bc5-4c53-a756-f6818bbb6cff",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b61d743c-344c-4caf-955c-a428d83c627b"
        },
        "item": {
          "id": "52d676af-9c5b-400b-b466-65968086b8e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "16ce4df9-754a-497c-9fb8-f90d89149b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aaad1c-564f-41db-bf55-9d2c8c4d71c0",
        "cursor": {
          "ref": "d0d289dd-7489-4911-bee8-0848657cad3a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a537e102-54f0-4803-8d08-2ef083000f67"
        },
        "item": {
          "id": "d0aaad1c-564f-41db-bf55-9d2c8c4d71c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "be52bbfa-d047-4a8d-9131-9410880b4f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e22a56-a718-494b-aac2-d68992f2c364",
        "cursor": {
          "ref": "8d1f8061-64e5-43b1-872b-d58d0d749ebd",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "96c08fd2-d426-497c-afa1-900551336b0f"
        },
        "item": {
          "id": "e7e22a56-a718-494b-aac2-d68992f2c364",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "754b5091-71db-47b5-8d11-e34128fe03b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5941410-b4a2-4a2b-9c2b-c20823c4e48a",
        "cursor": {
          "ref": "76fac1a1-b50b-4b94-a189-4eda34665642",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e69bd688-cc56-4ad1-baa7-eb68bbdc00e8"
        },
        "item": {
          "id": "c5941410-b4a2-4a2b-9c2b-c20823c4e48a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d6f9c49-3176-41fb-99cb-1e66daf587dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd3b0d5-72a0-4347-b298-e084be16ef46",
        "cursor": {
          "ref": "fd55c521-7182-47c9-af99-0fcb456deae5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "891e7b54-be2e-4c75-89b4-133493f11f1e"
        },
        "item": {
          "id": "bdd3b0d5-72a0-4347-b298-e084be16ef46",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "458e1a85-86b9-4d08-b207-035d1cb40d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27633a77-3fe6-4396-b823-11cdc7e7d416",
        "cursor": {
          "ref": "731cfecf-80dc-48a2-87bc-769cf0b5a73a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ed08e8a-4bcc-47dc-8720-51c328129128"
        },
        "item": {
          "id": "27633a77-3fe6-4396-b823-11cdc7e7d416",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c0b2fccf-40c6-4b10-a1cb-97b4ea05d64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94539fe6-3c81-4893-bdd3-3ac469e8f03b",
        "cursor": {
          "ref": "558bf23c-7a4a-44f1-b404-a729a9f26463",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d54cb94b-02a7-4303-b542-e0956b1777c1"
        },
        "item": {
          "id": "94539fe6-3c81-4893-bdd3-3ac469e8f03b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cd8da5dd-68af-4853-b8bd-11bc2842ff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74be7045-73bb-4fc3-9454-7402ea74a216",
        "cursor": {
          "ref": "f112ac9c-da43-4d0e-b80f-2348458bdd7c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "142ea474-3ad3-473b-91ad-54b66499c939"
        },
        "item": {
          "id": "74be7045-73bb-4fc3-9454-7402ea74a216",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f67d36d-f8e9-4856-b6da-fabd90b1a6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0678792-24fe-40ac-ac31-cdd36a295c25",
        "cursor": {
          "ref": "c52dce40-cb58-418d-b666-4fdb301a341d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48c019fa-6835-4b33-9420-3e4b68bfb5a8"
        },
        "item": {
          "id": "b0678792-24fe-40ac-ac31-cdd36a295c25",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22c49b33-0acb-4d75-a417-fb57b58e73d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55d75f4-5015-4474-83c5-3b84cfa18629",
        "cursor": {
          "ref": "16d6e4a1-ffac-4ae5-8507-41ec5fc5388a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ad38ae6a-c28b-4e89-956d-8d8fb56a1fd2"
        },
        "item": {
          "id": "e55d75f4-5015-4474-83c5-3b84cfa18629",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8bef1ffc-6429-4a95-ade7-79d642bd1cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd10053-b012-4f7f-b25b-3218c08a2372",
        "cursor": {
          "ref": "409470d6-36bf-4940-8fa8-0c4aa4b908e3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8ba89675-01c9-4455-8134-d7235040c310"
        },
        "item": {
          "id": "5bd10053-b012-4f7f-b25b-3218c08a2372",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8976ff22-f113-4c9f-90b6-0277f2e5e0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0b2b02-7a97-442b-95db-351a53f6e4f5",
        "cursor": {
          "ref": "7102645d-d352-4658-ac48-3abb0f86b874",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3eca1af2-27cd-483e-b96f-fd61eb32a0f3"
        },
        "item": {
          "id": "8f0b2b02-7a97-442b-95db-351a53f6e4f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b022e03-be54-47ff-8a5b-a3c605ef98a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c369dd-12c6-4028-852a-455bb1610134",
        "cursor": {
          "ref": "34e6f2df-86c9-4fc4-8961-9e9eec8a2099",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "935f8ce8-246f-4bb8-ab0d-27e201ec049c"
        },
        "item": {
          "id": "86c369dd-12c6-4028-852a-455bb1610134",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41eb30ed-2a17-4568-b37a-081de8e15be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3004bdb-84d7-40e9-adc9-7eae7fc69d49",
        "cursor": {
          "ref": "fdd9ee5e-e2a9-478b-b91c-b2c802b9ac4a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1523112d-b66d-45cf-a1ab-3b4d5e79da71"
        },
        "item": {
          "id": "f3004bdb-84d7-40e9-adc9-7eae7fc69d49",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "89cf81d4-a71a-4427-a70c-c64c48192587",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7e7156bf-146b-46d1-b327-4c6e72d11878",
        "cursor": {
          "ref": "74bde37a-867a-472d-bbc7-5f80a09a6734",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f95416b3-5bf8-43f6-89df-083ccf3c16b5"
        },
        "item": {
          "id": "7e7156bf-146b-46d1-b327-4c6e72d11878",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44b1a206-3a03-49ff-b30e-3d5f928f61f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa84cad3-c643-4d42-9bfe-5c5b0e76ded0",
        "cursor": {
          "ref": "a1674d23-ad05-411b-a664-66679a8bd052",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a48e92e6-870a-44b5-8dc4-e35cfbc665b8"
        },
        "item": {
          "id": "fa84cad3-c643-4d42-9bfe-5c5b0e76ded0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0409d1bb-d6bf-4f11-9265-c21a0aee38f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ed97b-847c-44ba-8b14-00d460e53659",
        "cursor": {
          "ref": "5f0c7df0-efc5-4eca-8345-c77e84785c11",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a2cf18c7-cb12-4d9a-a15c-76c4ec2f2de6"
        },
        "item": {
          "id": "015ed97b-847c-44ba-8b14-00d460e53659",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a52ac370-f9e2-45bc-974b-9e18165cba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623849c6-bdb5-4c54-a052-df4ef0846c6b",
        "cursor": {
          "ref": "7a9679ab-312c-4d82-9811-7243eb7c1db9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "384a4bc2-f260-442a-ac42-ec325b3d7dcb"
        },
        "item": {
          "id": "623849c6-bdb5-4c54-a052-df4ef0846c6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4aa333e9-88ab-4f18-9a56-b18daf4ffd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c0ba8-d432-4e93-bbf1-06158de04a12",
        "cursor": {
          "ref": "7512a1f8-1491-4ce2-a95f-210946a2f830",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "97135d66-ab8a-4acc-9034-565770250cd9"
        },
        "item": {
          "id": "3b6c0ba8-d432-4e93-bbf1-06158de04a12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e657dc3a-07e7-4f2d-9e50-9dfc306e33c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21fe12f-ffdf-4da9-8c47-3d0e755941db",
        "cursor": {
          "ref": "03a92d25-72e2-4958-92f4-11499a948e2d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afe3f912-2f7d-4aaf-9a4e-fa969ee1af29"
        },
        "item": {
          "id": "a21fe12f-ffdf-4da9-8c47-3d0e755941db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e061f19-7be5-4c57-9f3b-c4b0425790c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd4214b-b1e4-485b-a58b-c8eedae57455",
        "cursor": {
          "ref": "0f0d6f2a-a101-461c-a5c4-3794d6e0a5a5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "807f6f10-87ed-470c-be7c-1d44d242fda8"
        },
        "item": {
          "id": "dbd4214b-b1e4-485b-a58b-c8eedae57455",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abab78f2-a254-4338-9418-4dd2e64822c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb34eae-c9d5-4aa6-bee7-5bfd70f30856",
        "cursor": {
          "ref": "e2830326-b032-4d08-9d4f-10c8d300ea4d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "01699148-59b9-4a91-9b35-4953417c79dd"
        },
        "item": {
          "id": "fbb34eae-c9d5-4aa6-bee7-5bfd70f30856",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6cd27c9c-3bb8-4695-867b-3827ef1f4d93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "eeadae52-f011-4de4-8e17-628fa3052c48",
        "cursor": {
          "ref": "40ea323e-235b-40ac-bc23-205e5aff54b6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "15e23a0a-e929-4723-86ef-76fcb0f26e3f"
        },
        "item": {
          "id": "eeadae52-f011-4de4-8e17-628fa3052c48",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26dc7bff-6b4f-41f1-83e6-77261e3d870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaf599e-0b55-49bc-a8b8-d690603ab279",
        "cursor": {
          "ref": "d12c7f8c-c8a7-4a41-b11a-631dcccddf7b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "08941ed0-7386-4c04-a87a-a4caf73e8a25"
        },
        "item": {
          "id": "bfaf599e-0b55-49bc-a8b8-d690603ab279",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e629765-145b-4c74-b5b3-b6f1215d5fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129d338-2a79-4a87-b894-7b79004c2493",
        "cursor": {
          "ref": "c323dc81-da07-4324-98b8-9dadb3ef8e1d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5b3a27e5-add0-4585-a7a8-45931708e438"
        },
        "item": {
          "id": "0129d338-2a79-4a87-b894-7b79004c2493",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "00426626-5e6a-4a41-99e8-945477690d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78bad19-abb2-413f-bb56-15cd27d8043a",
        "cursor": {
          "ref": "97b7a5f5-dbb4-48fa-92b5-e4a481ded902",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb0425b5-3d52-47bf-b14a-94eab3547e6a"
        },
        "item": {
          "id": "d78bad19-abb2-413f-bb56-15cd27d8043a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13e163d8-7a97-4e60-8b86-1d862cc71725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ffd115-c593-4125-adc6-c0fd388f6823",
        "cursor": {
          "ref": "5c971fe0-17c7-40a1-acfc-96a0fb026989",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a876e086-0529-4dfe-9613-0b9eff58ef0e"
        },
        "item": {
          "id": "39ffd115-c593-4125-adc6-c0fd388f6823",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1a571a35-7d5c-4ef7-8b96-426249274dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bca3e4-6581-4563-98bf-90a494b52420",
        "cursor": {
          "ref": "535f5eae-a7ce-4257-995f-a06d1ab6e9a5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "476dcc91-6094-4c5c-bc44-db69a19493b5"
        },
        "item": {
          "id": "00bca3e4-6581-4563-98bf-90a494b52420",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4d69e706-d879-4eb3-8ed0-1e3f0fdfb892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c661ba8-97cc-4f14-9088-37899257d577",
        "cursor": {
          "ref": "10685671-f32d-4eef-bcd7-98af64cbb492",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0d515769-6969-4a39-89df-d37439393e39"
        },
        "item": {
          "id": "8c661ba8-97cc-4f14-9088-37899257d577",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "85bb95cc-4f41-4715-bfcd-e1c10113c321",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f2b12608-795f-4e90-a97a-56becf8cf703",
        "cursor": {
          "ref": "7f0d9fc6-a2a0-4d74-a7a1-fae4258ed9f6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "08774ddb-3e4b-48b9-bcb3-8e31e0ba9700"
        },
        "item": {
          "id": "f2b12608-795f-4e90-a97a-56becf8cf703",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "910107e8-394d-45cc-bf66-4dd8455941fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a8500-23f1-4a1e-95a2-90538c8f054e",
        "cursor": {
          "ref": "0a01834f-12f9-49f1-adab-83e98c85fa72",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90387a79-b857-4da5-bcb8-a6012bdfd6e5"
        },
        "item": {
          "id": "3a2a8500-23f1-4a1e-95a2-90538c8f054e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb425337-5e82-4922-b118-624a160215bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b6fb61-8e91-4112-9b6e-793750456dd6",
        "cursor": {
          "ref": "c5722c18-c72c-4440-97cd-1657ee7db171",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "af55722d-89e3-40de-85da-223608c35661"
        },
        "item": {
          "id": "d7b6fb61-8e91-4112-9b6e-793750456dd6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "727e18d2-f0dc-46cc-9a2c-cd827f18e9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1b1950-dfc7-44f3-82a1-88cec72b2754",
        "cursor": {
          "ref": "f7db417c-c40d-4672-8c35-906077aa83f7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "78325528-fb1f-4db7-9938-3885242b2e8d"
        },
        "item": {
          "id": "3e1b1950-dfc7-44f3-82a1-88cec72b2754",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f0b7b3f-7e5a-462f-9715-8fd52d2d2126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3577765d-a5cb-4fea-b1b7-df41ad765742",
        "cursor": {
          "ref": "af1e6c2f-eb7a-468f-ac45-1391f0458900",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03dd4d2e-5071-4dfa-ad59-3ac162a6c2f4"
        },
        "item": {
          "id": "3577765d-a5cb-4fea-b1b7-df41ad765742",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "394aa9d6-1c33-4b5d-8ded-38f80cea1491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3b99be-4692-42cc-803f-f0b076b3468a",
        "cursor": {
          "ref": "8885cabc-584d-46d3-ab79-714681842d51",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bd3ad09e-0ed9-4c3c-bfce-d93780791879"
        },
        "item": {
          "id": "db3b99be-4692-42cc-803f-f0b076b3468a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ffd1f1a6-3347-47bb-a817-dbb903f01016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089bedf7-fcd3-4ddf-98a9-9bb1b6bc51ea",
        "cursor": {
          "ref": "c209bb45-0c5c-4048-b81f-479ad8454cd4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c158afc3-1115-494c-99c0-44f0196b6d72"
        },
        "item": {
          "id": "089bedf7-fcd3-4ddf-98a9-9bb1b6bc51ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5a4618cb-02f3-4b89-8a3e-e89d9258d6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3111ca49-0a0c-46c8-ab11-6981acb66ee7",
        "cursor": {
          "ref": "00b1123c-ba62-4ae2-84ee-817eb4591e0b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4cec7ab1-1c9d-40aa-9df6-f15b64c1234d"
        },
        "item": {
          "id": "3111ca49-0a0c-46c8-ab11-6981acb66ee7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f9a59ff-56f0-4ecd-a114-1e2346c4abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3df079-384f-4302-b88f-2755f56f4c9e",
        "cursor": {
          "ref": "d3093582-ce9b-4e6b-b554-60ed5de74990",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "51f78eae-faef-476a-9f98-aee5301be245"
        },
        "item": {
          "id": "5e3df079-384f-4302-b88f-2755f56f4c9e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ee34f4ff-1960-4fe6-a1c9-a3965419a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae05a9b-90af-479d-a239-f7e6b95436bb",
        "cursor": {
          "ref": "926da4df-1bd5-4ab9-b8ba-55cb82d863cc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6dd5fbc2-3842-47d3-98ae-47aa039ef7dd"
        },
        "item": {
          "id": "5ae05a9b-90af-479d-a239-f7e6b95436bb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f82b2b9-4540-4978-a5fa-1e96b134c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc16d7-1ce1-4974-987e-7d1faafa4b3f",
        "cursor": {
          "ref": "6e555a6c-e925-4a13-8ba0-0b50b7a1d730",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5a6745b-124d-4536-82e7-3181d13cd82a"
        },
        "item": {
          "id": "a8fc16d7-1ce1-4974-987e-7d1faafa4b3f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b302db3-b8e2-46a6-ad21-100ce39a00d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6378f34-2d98-4631-8a5c-d82aaab60a88",
        "cursor": {
          "ref": "75613294-21ff-47f1-9622-362ab8adb326",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7459d92-9a3c-4031-b16f-1e629dfb4c4f"
        },
        "item": {
          "id": "b6378f34-2d98-4631-8a5c-d82aaab60a88",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dbcb65e4-7264-4867-b28c-8443cd72a51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544761d8-556f-46d8-89e6-7c507c7fff7c",
        "cursor": {
          "ref": "2ce04998-592d-45a1-a79c-aec31b24858e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "96950ac4-8fd6-4089-a518-4cf5a77abca3"
        },
        "item": {
          "id": "544761d8-556f-46d8-89e6-7c507c7fff7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1004856c-c446-456e-8bac-0e69d1fd66db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a761f5b-7ac4-4358-8b8e-acfd6c9813f7",
        "cursor": {
          "ref": "5be4ffa8-567a-45f8-a1ca-385c5ed99c78",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4364fbe8-01a1-4b5d-ae91-42f7a9ff85e4"
        },
        "item": {
          "id": "5a761f5b-7ac4-4358-8b8e-acfd6c9813f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7b7d5155-f074-4ea7-911d-16cdb275d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa957f1e-4d38-4ed4-b72c-f08ad15b14d3",
        "cursor": {
          "ref": "da26bf56-7670-489b-9ef7-751535777b69",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b32c1a73-2783-44ce-b1bc-9b3e5db0f2c4"
        },
        "item": {
          "id": "aa957f1e-4d38-4ed4-b72c-f08ad15b14d3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b037fb5b-db00-4af6-8c82-b1da6ce0b6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53fbd2c-ebd1-4a5d-aac7-4e2a56daff45",
        "cursor": {
          "ref": "a859c9bb-b7ef-468f-9b37-0cb7249a8a67",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a4476f21-e25f-4b1f-9f37-383c27cbbcb7"
        },
        "item": {
          "id": "c53fbd2c-ebd1-4a5d-aac7-4e2a56daff45",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d1a13e0a-f705-45d5-9e6c-87c8f1472c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f2bb0-4b4a-4665-8371-1d84ab139611",
        "cursor": {
          "ref": "deea4751-7acc-4cd9-9e83-11a0f4e79cc6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "23b989f5-a56a-4e16-94d9-a8abbb9cec19"
        },
        "item": {
          "id": "640f2bb0-4b4a-4665-8371-1d84ab139611",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5220449f-6f37-4786-8995-6825cb402c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbe32a7-fd89-40e0-8070-6d4c10ed694a",
        "cursor": {
          "ref": "e95524b3-ad46-4ea5-a4f1-ede90ab9548e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c387c733-a7cd-4b9a-9f3b-d52119da7c93"
        },
        "item": {
          "id": "fbbe32a7-fd89-40e0-8070-6d4c10ed694a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f7fd2eb-f52d-44d2-94d1-1b18ca8aba60",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "d8ee3b5e-64a2-4641-b912-9e0e263f5934",
        "cursor": {
          "ref": "f2bd5759-0c22-4717-8900-fa8b5acc5c41",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "80cc03d7-dbd9-411f-b5e4-f68a2171da24"
        },
        "item": {
          "id": "d8ee3b5e-64a2-4641-b912-9e0e263f5934",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b02ce906-913c-4461-82c9-1e47425ffb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fa0fc-4667-467f-b2c0-738eb498f183",
        "cursor": {
          "ref": "44ca1392-292c-4329-a7c6-1201bf384119",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d96e693b-698e-4413-bff4-252e6318eaef"
        },
        "item": {
          "id": "838fa0fc-4667-467f-b2c0-738eb498f183",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e66ccee9-5414-469d-bb16-8f374e4242cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3db4d1-fdf9-4efb-8d5e-af1fb49c142c",
        "cursor": {
          "ref": "ae1fbeff-6fb7-4d60-ac0b-8d954667724c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "81ccd7b1-0ab4-4b75-bb70-b4a1801121fe"
        },
        "item": {
          "id": "5a3db4d1-fdf9-4efb-8d5e-af1fb49c142c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d91b34f-697a-486a-a7aa-cc84278d53b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e76146a-a416-4fc8-a7d5-247a3010f610",
        "cursor": {
          "ref": "9e0b2aa2-1517-4447-b26c-e0719fcd72ea",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "08287674-52f7-4d23-b5b0-f24b7ac5317b"
        },
        "item": {
          "id": "6e76146a-a416-4fc8-a7d5-247a3010f610",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85fb71fa-0fa1-4070-90a0-0ded30a001a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3710a8c7-7235-4f1f-af6e-c96b95f82233",
        "cursor": {
          "ref": "b141881e-ec1e-40c6-9b3b-70c81c16c7ac",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6564e3f1-ca56-434d-9e92-2b949a8121a9"
        },
        "item": {
          "id": "3710a8c7-7235-4f1f-af6e-c96b95f82233",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4dd70f91-667a-4151-acee-bbf54b313a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2277b-9bc8-4f0b-99ec-50dee4b8b343",
        "cursor": {
          "ref": "0eebdc25-5465-474e-a138-07c9987d7b3c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e6564e4a-1fd5-4372-b163-79ed8997503e"
        },
        "item": {
          "id": "e7e2277b-9bc8-4f0b-99ec-50dee4b8b343",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b54c0725-ef7d-4590-965c-e33a05bfcf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f911a503-d9a1-4734-b701-cf1710729df3",
        "cursor": {
          "ref": "37a86b46-68a0-4b63-be08-0fecde656ee1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c130f69a-e359-4425-9a9e-01157a987b49"
        },
        "item": {
          "id": "f911a503-d9a1-4734-b701-cf1710729df3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b915001-7038-4924-8004-dbfc89a0b17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe6f8b7-d2ce-446e-ad1e-18211039915b",
        "cursor": {
          "ref": "fcf535cc-fb4a-403f-a3a7-5559a7cadee9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1242910d-1d81-4e46-bd24-619a3c3ae634"
        },
        "item": {
          "id": "0fe6f8b7-d2ce-446e-ad1e-18211039915b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e3ba9c70-5b96-4d98-936b-8245daf5bb24",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "0f900a83-21d8-486b-9334-f652a570c081",
        "cursor": {
          "ref": "e8cabad5-b5c6-4b92-9a40-bc3f3eb7a66d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a0720c5-3d52-40b1-ba1a-9a1cf7b5de46"
        },
        "item": {
          "id": "0f900a83-21d8-486b-9334-f652a570c081",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e4538b9-94d8-49df-bbef-af463ab6ba4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb142ff-8b0c-4b1f-835b-62b2f5b44b5c",
        "cursor": {
          "ref": "14292271-b239-4d64-baab-8d84f0617d41",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f71344b5-a018-468f-9bf5-8aa12594f2d0"
        },
        "item": {
          "id": "3eb142ff-8b0c-4b1f-835b-62b2f5b44b5c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2628dfdd-1901-4caf-9373-bf3b04c0e365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05f5be6-7950-4e80-821d-e512aa87e58a",
        "cursor": {
          "ref": "91a96c4a-7001-4955-8b54-4c39ae07233d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c832ef3f-1f22-47a2-8764-39724fba2248"
        },
        "item": {
          "id": "e05f5be6-7950-4e80-821d-e512aa87e58a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1eb4688d-947f-455f-81a5-7c1427f5b6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caee7d8-f4db-4d0c-bcad-a6c7651e5ff3",
        "cursor": {
          "ref": "cf7f5247-ef23-496e-a502-7715be75bb71",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95ae48df-4cb3-4cde-b5b9-83abb3b76aa1"
        },
        "item": {
          "id": "6caee7d8-f4db-4d0c-bcad-a6c7651e5ff3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e7c843d6-501d-4e9f-9386-ab6ba0dcaa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa1b350-b111-4b12-87e2-ba82f6791e2a",
        "cursor": {
          "ref": "ea43b7ef-456b-4d38-a798-98a9d6fd695a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4efc9266-1dbc-47a5-8945-3f27584ec15b"
        },
        "item": {
          "id": "efa1b350-b111-4b12-87e2-ba82f6791e2a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d63e794-52c9-49de-be62-97eeefc7acfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56275978-98ef-4991-82cd-cccb03a1ae4f",
        "cursor": {
          "ref": "415be1f2-6af7-46a3-a03f-19cc707f688e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "582e452e-9f1d-4a21-aa0d-38d6e5048171"
        },
        "item": {
          "id": "56275978-98ef-4991-82cd-cccb03a1ae4f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62607ce6-e744-4034-ad9d-4503d8a0fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b99af-e2eb-4a8a-b2c0-c710387f2234",
        "cursor": {
          "ref": "4dfac95d-a474-4a2a-8227-89dc03767183",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3f84df1a-d462-49da-b4e2-08e68832655e"
        },
        "item": {
          "id": "c59b99af-e2eb-4a8a-b2c0-c710387f2234",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7d7a6b7f-fda0-43d7-b2a0-cf437dfa729f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "36a76a9a-1215-4613-a323-3d0187226cfb",
        "cursor": {
          "ref": "aa88e3e3-fd3d-48de-a6ee-cd3979733359",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "30c51b80-a46c-439f-ba8e-4453a6b36fec"
        },
        "item": {
          "id": "36a76a9a-1215-4613-a323-3d0187226cfb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2728e9a2-b03c-4ed4-a54f-bdca638cabb5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "5e6c7e89-7f04-4596-9a1a-de71a9df42ee",
        "cursor": {
          "ref": "654cf072-1a0c-4bd0-9221-6da2c2587033",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0000a848-ca37-4501-8537-62700eace8e4"
        },
        "item": {
          "id": "5e6c7e89-7f04-4596-9a1a-de71a9df42ee",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e581c70b-0d31-4f01-b2b6-d069f3786d67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "5d4b7d90-3e3b-41f8-99de-d08857ca94b9",
        "cursor": {
          "ref": "8a36b541-cb82-4086-8aeb-e45ff70584bd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4187d575-faca-420e-a8d3-5eac2f78f34e"
        },
        "item": {
          "id": "5d4b7d90-3e3b-41f8-99de-d08857ca94b9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bad64f0e-7d6b-46d0-9c66-0f407cb2a00e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "8bfac08d-a717-47c0-8d6a-aab6dac6bff1",
        "cursor": {
          "ref": "d205e7fe-518c-45a4-a7bf-6b74fc25f8d1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "69876fce-1571-4085-8ff9-9719556ed3f8"
        },
        "item": {
          "id": "8bfac08d-a717-47c0-8d6a-aab6dac6bff1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0feeaeb3-8e01-4669-955a-1cffbf810653",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "10716783-a6a6-4661-a215-0d96ba448609",
        "cursor": {
          "ref": "fd8f4521-63da-4775-a33b-dbb8a0cee760",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "32b92e2c-d410-4d03-a881-fb7300c2752a"
        },
        "item": {
          "id": "10716783-a6a6-4661-a215-0d96ba448609",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6e8034b2-9c4f-4559-8d12-46cbd29bc975",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "178accad-76db-4309-bdde-36f79bf0ee98",
        "cursor": {
          "ref": "a7b0e03d-6991-4d2f-ab9a-1d76c37fc991",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9d601296-fd0d-456d-98ad-78ca14e8de58"
        },
        "item": {
          "id": "178accad-76db-4309-bdde-36f79bf0ee98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a84a937e-e83f-4d7e-bc19-3fb372abb562",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22fbe5e-9b4b-423d-a581-dbf0cd202f74",
        "cursor": {
          "ref": "52414ad7-19cd-46b2-a270-fddc32116605",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "47f96cd3-1d6e-490d-9f08-1817edc97a2a"
        },
        "item": {
          "id": "b22fbe5e-9b4b-423d-a581-dbf0cd202f74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88a75d92-8338-4835-9d5c-b6240b1ebf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ed7186-5f85-428a-b316-1840591a6807",
        "cursor": {
          "ref": "1ae84a0e-de9c-44f1-8edc-0a74d653a096",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbca604f-ada4-40f9-ac29-41c264366df7"
        },
        "item": {
          "id": "d7ed7186-5f85-428a-b316-1840591a6807",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d59f00cf-aca8-4296-95f2-6afe09e3e383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abe6b62-1b8c-4bd6-acc7-bcb276e3813c",
        "cursor": {
          "ref": "9a01e97c-beeb-4302-a93b-0b87038c1140",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ab8e8c7b-0f46-4144-82b8-eb3f976490fc"
        },
        "item": {
          "id": "0abe6b62-1b8c-4bd6-acc7-bcb276e3813c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e7041ecf-772e-4768-989a-6850f39bd868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc255adc-71c1-4148-b89e-0c1451c27685",
        "cursor": {
          "ref": "9d7a8cc5-d645-490b-9a5c-b9e74a0aa4d9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4749fdac-5fb3-4e1e-a041-f3020adc6701"
        },
        "item": {
          "id": "bc255adc-71c1-4148-b89e-0c1451c27685",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46e7ce5a-491f-4f5d-b747-64177ebf9417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cba8f2-bb3a-4481-871a-bc558a3edfc7",
        "cursor": {
          "ref": "46bb3fe7-7e72-4ab4-8dc1-7cfe057ac2dd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2c77ae85-2b07-4d6b-b69b-35a17c52527c"
        },
        "item": {
          "id": "b6cba8f2-bb3a-4481-871a-bc558a3edfc7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8499018e-af78-4b47-8bb3-ffb150066450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960600cc-7297-4c1f-89df-0440855ce4df",
        "cursor": {
          "ref": "9fa84d76-6048-4b85-a526-e51e02a816cc",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f9f4a077-97be-4473-8011-b1335a558e1f"
        },
        "item": {
          "id": "960600cc-7297-4c1f-89df-0440855ce4df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "847450b2-2053-47c5-9744-9843771c711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d137c88-6b79-47ce-9379-a086500f0900",
        "cursor": {
          "ref": "f9ccabf1-7e50-4d54-a5e4-6be44640d137",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1c1bbf48-4aad-4b60-bc9a-d3d6672c25f1"
        },
        "item": {
          "id": "1d137c88-6b79-47ce-9379-a086500f0900",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d7f3f4e5-c28e-4801-9b63-bacee1065295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87748696-d9a5-4e9e-b185-6b3d8eafc90b",
        "cursor": {
          "ref": "dae680e8-206a-4db9-a9d6-80006ec92ff4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4e9c4d49-9ef1-40ee-898b-c6964c838e61"
        },
        "item": {
          "id": "87748696-d9a5-4e9e-b185-6b3d8eafc90b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "85d068df-6832-4f51-afdb-03178d75a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b24bc-766b-4907-a6bd-4e76992e3083",
        "cursor": {
          "ref": "29318858-78de-42a7-9539-a35dc8400d37",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6f5cc657-57d1-4579-b7ea-6b99390b0309"
        },
        "item": {
          "id": "3b0b24bc-766b-4907-a6bd-4e76992e3083",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d8850bd9-f59b-4c16-8b5f-77ab43d14ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2947974-a576-410a-874a-20f7da1d7bb5",
        "cursor": {
          "ref": "597b0a27-6207-4a69-9e63-e7de20dfa9e8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d3aa8b8c-4de6-4b38-839f-7d0d7a687034"
        },
        "item": {
          "id": "a2947974-a576-410a-874a-20f7da1d7bb5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "03189868-cb7b-423c-9158-6fc03e04b6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b61126-e07c-4740-a760-c565c999adb0",
        "cursor": {
          "ref": "93b8d172-2445-4745-bb9f-381694666c51",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "820225e5-268d-4b36-a9e0-27c002d512de"
        },
        "item": {
          "id": "b5b61126-e07c-4740-a760-c565c999adb0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4a0a4ca5-7f49-49b0-aab0-14e27496e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bd2cd5-5d85-4b20-9e00-51db87aa7efa",
        "cursor": {
          "ref": "2cec3f4d-6e5c-4145-bcc1-fd7f748e48ba",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "007b9bf7-54b3-431c-8078-2a661b44073c"
        },
        "item": {
          "id": "a8bd2cd5-5d85-4b20-9e00-51db87aa7efa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0cd7c89-5d4e-4a7d-ba16-621d1bd2c39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba6ebb6-94fe-4a5b-91b3-f8cb40ed7430",
        "cursor": {
          "ref": "d2a99c3c-bf54-4a88-bb82-549dfcc57e05",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c060d860-90fc-442e-96d5-423a41275ee1"
        },
        "item": {
          "id": "6ba6ebb6-94fe-4a5b-91b3-f8cb40ed7430",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e2ba038-00b2-4542-9640-3f2e13ae7c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cecea39-ae2f-48b4-9c83-928a12841045",
        "cursor": {
          "ref": "097d1e3b-d9b3-41e1-ace0-e5ae38ef201f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b97567e2-2591-4de9-a79a-494607e4594f"
        },
        "item": {
          "id": "6cecea39-ae2f-48b4-9c83-928a12841045",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "87b75274-b85f-4676-8e07-5fee0a98a1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244a179-7a6e-4aec-9171-cb39f3a6b8a4",
        "cursor": {
          "ref": "3bfb997e-293d-47ec-8f08-e003d6feda90",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d50fa0dd-9d78-4de0-be37-da8c57221caa"
        },
        "item": {
          "id": "b244a179-7a6e-4aec-9171-cb39f3a6b8a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cff9d5d8-daa8-44e0-a436-87666bd58ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3fbd8-c053-4db0-9802-51482d557bbf",
        "cursor": {
          "ref": "079b682a-ff81-4c0c-b7c6-c4cad474170e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6157d51b-3164-4adf-8649-447e64471448"
        },
        "item": {
          "id": "7ed3fbd8-c053-4db0-9802-51482d557bbf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d3f5d18a-1a14-48f6-a1cc-3939d9df7eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e19ea7-5ac1-49c6-b5df-7e7098221bd7",
        "cursor": {
          "ref": "3d576820-704d-4ce0-a954-7a995e1d2c47",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8b96f09-0d07-4df7-abc0-f3132f35bf20"
        },
        "item": {
          "id": "89e19ea7-5ac1-49c6-b5df-7e7098221bd7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c5dd71e0-2bd2-4085-8030-81aa9a59ca60",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "b662ba14-e487-4f5d-8a95-981e09e357ae",
        "cursor": {
          "ref": "dee611dc-a453-4994-8ac2-c1511dbd67ce",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "99d453f6-70d4-4930-9d4c-7652d4279b72"
        },
        "item": {
          "id": "b662ba14-e487-4f5d-8a95-981e09e357ae",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cab26a18-770d-4eee-9f30-ce8536c86d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5588ca6-8d76-41e8-b6eb-a904ff84689a",
        "cursor": {
          "ref": "df8e9f04-a6c7-4061-a418-a26ebd4c95d5",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0bef0ef-f349-4144-ac0b-c4817d77b68c"
        },
        "item": {
          "id": "c5588ca6-8d76-41e8-b6eb-a904ff84689a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9160f6bf-4cf4-451a-83ac-04d9f18d6a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0492ecef-d0e5-4dd8-a4bc-af518d1f414f",
        "cursor": {
          "ref": "d7a0fd01-142d-443a-818d-44041ce5fa2d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "abbcdaf5-eb11-4f94-978c-9471c2fdc20b"
        },
        "item": {
          "id": "0492ecef-d0e5-4dd8-a4bc-af518d1f414f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d6d0ddf7-3cf1-498d-b623-024368ff7157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52741e02-ceb6-43ae-b5a9-5bcbc43c9fed",
        "cursor": {
          "ref": "79289d86-c53a-4900-ba65-14d30ebea20a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "89e0cbf2-e95d-4076-b8af-590aeb6609dc"
        },
        "item": {
          "id": "52741e02-ceb6-43ae-b5a9-5bcbc43c9fed",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "53338ba4-b7a0-4b38-9c0a-04abe68b2767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87307ccb-e169-49f6-b753-6fa3e8171107",
        "cursor": {
          "ref": "adaafab1-5d1d-4be0-bfe6-09d4e82b2f2a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "729d9978-b6b7-44e5-adae-725ffa9f77cc"
        },
        "item": {
          "id": "87307ccb-e169-49f6-b753-6fa3e8171107",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c8cafa2-be8b-4d08-bf52-4ec883fde7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0af5d-d9ac-4e2c-9e1a-efbed7bb0bfa",
        "cursor": {
          "ref": "15e7800b-9864-46fb-98de-0f50b080feb3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ed274a5e-710c-4688-917e-0f5fa3e577fc"
        },
        "item": {
          "id": "2da0af5d-d9ac-4e2c-9e1a-efbed7bb0bfa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "600fd706-42fd-403c-979a-b1c70e43f1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a211805-b803-48be-99e2-cd1d7de983e1",
        "cursor": {
          "ref": "55cfe60d-56af-41bc-9098-cb7bf4429bef",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "51ad7ae1-0f3b-4884-9743-62b3dc823ddc"
        },
        "item": {
          "id": "6a211805-b803-48be-99e2-cd1d7de983e1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03c63201-05e5-4a34-8924-b6eace6f0d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de0860-1787-4391-99a2-91ffca4552b2",
        "cursor": {
          "ref": "bb8ea415-06b9-4900-8241-859e32f315be",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4c46d593-c266-4a88-9c02-10fdf3b6c6ea"
        },
        "item": {
          "id": "c9de0860-1787-4391-99a2-91ffca4552b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "997cce0f-5e81-4d95-bdb6-c0bff86f0848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aa948b-348b-4832-91b5-1731190dd60a",
        "cursor": {
          "ref": "4964fc5d-e3e1-4907-b80c-7b298393642e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4a7ded2b-594a-47d2-8e40-51cb82927988"
        },
        "item": {
          "id": "41aa948b-348b-4832-91b5-1731190dd60a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "715ac22d-2837-4f64-8f29-770029aef9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ca88aa-03e6-49eb-a926-c0a6725dd7a7",
        "cursor": {
          "ref": "c6ee2d2d-56ca-4eb0-9df5-e5e4b19d64c7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0280e634-9fcf-41ef-802b-2653b460038c"
        },
        "item": {
          "id": "e0ca88aa-03e6-49eb-a926-c0a6725dd7a7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "898590e7-a605-448b-92bf-13595c04541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d8d2b4-3c3f-4490-a75a-fb952f2340a6",
        "cursor": {
          "ref": "0c22a8b8-8b11-4509-b0c2-123f67242b50",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4a17ce2-7b96-4b37-9fe5-891a4faa1bd5"
        },
        "item": {
          "id": "72d8d2b4-3c3f-4490-a75a-fb952f2340a6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2dc9d199-954b-413b-be83-4bd27274035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36b6a6f-fcff-46b0-be9b-07d68c68e219",
        "cursor": {
          "ref": "c1956264-31a6-48f3-9119-0dc304fa6cb4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d57125e7-2f91-4adf-9737-09db9bd32cee"
        },
        "item": {
          "id": "b36b6a6f-fcff-46b0-be9b-07d68c68e219",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "425fae8c-7b12-4d48-833f-eba75fe67f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c071ed60-798e-476f-b9bd-64897ea492da",
        "cursor": {
          "ref": "9ceaba6c-db21-4a1a-814e-672f160632c8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "79a0db67-0f94-43e7-aded-d31a31cd05e8"
        },
        "item": {
          "id": "c071ed60-798e-476f-b9bd-64897ea492da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d7af6c8b-c769-4d85-9d8f-2b3b67a5b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9c875-04d1-4130-9e34-746eb1d55326",
        "cursor": {
          "ref": "564e2bf5-cc8d-4972-bf27-3ac46e6f0faa",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fbb9528d-e364-4342-a4e9-d070c6bd2850"
        },
        "item": {
          "id": "d0d9c875-04d1-4130-9e34-746eb1d55326",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d8252d6d-8de1-43e0-bb79-b1f422b511d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b190920c-6c69-4a2d-b191-d0125a27b3ca",
        "cursor": {
          "ref": "0800d8b9-7df0-4fe4-81dc-d762779a06d7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0890f911-536b-4291-8c97-4435350953ac"
        },
        "item": {
          "id": "b190920c-6c69-4a2d-b191-d0125a27b3ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bf2710c7-da46-4f5b-8269-cfa73b1012d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5417c0-3b1c-4bb7-ae10-7492e0369548",
        "cursor": {
          "ref": "d9a86c7e-63ed-420b-9557-f938be327ca4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d37fb93e-be1d-4677-8172-2e5a790455c6"
        },
        "item": {
          "id": "7e5417c0-3b1c-4bb7-ae10-7492e0369548",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b57f5c9f-adba-42bf-a131-7258020a2fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1efdebc-873f-46a4-86ec-6051df713f1d",
        "cursor": {
          "ref": "cecf3213-15fd-4ce9-9575-54928e1cc0c1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "668b29a6-8aca-4c69-9b7c-eadb31b658bb"
        },
        "item": {
          "id": "f1efdebc-873f-46a4-86ec-6051df713f1d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ad4080e-9233-4dd3-a5e3-41a9396278df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff808b-a7fb-4bdd-92d3-ac5e9efcf20d",
        "cursor": {
          "ref": "aa2525cf-48fc-486b-ad2e-0cdb39fdba68",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4db30c4b-00fc-4eef-9bff-266c87d8c966"
        },
        "item": {
          "id": "42ff808b-a7fb-4bdd-92d3-ac5e9efcf20d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "56c6916b-de1d-4fd0-97a9-f29a3651d97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234b6c8-fa96-4630-aa12-cf05a02b6b72",
        "cursor": {
          "ref": "762fbded-bae2-4e8d-9ec9-45fcd17c35d4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "91d1aecd-a0b8-44c2-aedb-6f578bbdd778"
        },
        "item": {
          "id": "2234b6c8-fa96-4630-aa12-cf05a02b6b72",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "40590611-1529-43de-a8ab-6569e7e5a7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bee4a9d-01a9-4d51-a37a-81997f53327d",
        "cursor": {
          "ref": "3f42a32e-fb93-4791-bc0d-be91d136d837",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2b1cae59-b2c4-4a70-97a9-6e660beb973b"
        },
        "item": {
          "id": "5bee4a9d-01a9-4d51-a37a-81997f53327d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "872cffa6-aa92-4a83-b45d-5f902a002299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fff7199-b40f-4412-8936-3879dbc27592",
        "cursor": {
          "ref": "b4ed2154-63ff-4ade-8610-14d5e95a8250",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "801a4f1e-9dc5-453f-bd7d-7200375ab576"
        },
        "item": {
          "id": "3fff7199-b40f-4412-8936-3879dbc27592",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0648b0bc-6b67-484e-a32e-21c02b9afc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f621d64-8c16-4099-8dff-6eb198eb0a4f",
        "cursor": {
          "ref": "dd0d7aa1-98a3-4368-834d-ebf6215c4c27",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "43ede8b2-ab76-4eeb-8fc7-baeba81636af"
        },
        "item": {
          "id": "2f621d64-8c16-4099-8dff-6eb198eb0a4f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dcf34b96-3e89-472d-9698-2581d1eae15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740b610f-f49c-4430-819d-a5373c0b3e00",
        "cursor": {
          "ref": "e8b9061d-abe0-42eb-92e3-e447e3c5bcb8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b9fe4ece-1e56-4f3d-bff4-55762567801d"
        },
        "item": {
          "id": "740b610f-f49c-4430-819d-a5373c0b3e00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b43da78-f015-4575-a7e6-f5ac3b54f992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f55eba-5c85-4773-9beb-ba1a56511133",
        "cursor": {
          "ref": "dcaa3686-da55-4efb-856d-18cc4833c556",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a1d7bef8-db25-4742-bac1-2488901dd582"
        },
        "item": {
          "id": "78f55eba-5c85-4773-9beb-ba1a56511133",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4c470967-b12a-44d9-80d7-cf92a09e6eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f90638e-8c39-4243-b46d-c4fd98e6e8ec",
        "cursor": {
          "ref": "a36a011b-8368-47ee-bde3-ad41e95b70f9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fe1ee7c0-935d-4c51-b567-be57c78ed24a"
        },
        "item": {
          "id": "7f90638e-8c39-4243-b46d-c4fd98e6e8ec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0e23d92f-433d-4765-aa66-c332909738f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bafb30-981d-447d-9d3d-9c61dd56bf8c",
        "cursor": {
          "ref": "b8b531e1-b15e-4ca0-b164-97297f207545",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88682903-c3a4-4581-8b87-d2747b7cad32"
        },
        "item": {
          "id": "81bafb30-981d-447d-9d3d-9c61dd56bf8c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f4368262-8f16-4d94-81a3-757c7b496db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94efc602-1d99-4400-a969-9abb44db2a59",
        "cursor": {
          "ref": "89807bf4-11e1-4ad7-9307-f7588493d051",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "820457ec-d343-44e9-83dd-541d3ec5ded5"
        },
        "item": {
          "id": "94efc602-1d99-4400-a969-9abb44db2a59",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b8fdfad1-ae9c-480e-a7b3-bfb7a81e2e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196b6a3a-d355-4326-8475-5ddee32f8e73",
        "cursor": {
          "ref": "4aac9e9f-ec5a-4cf4-9b1a-5326dfb88429",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "43cd2387-a564-42d4-8d99-08a5b95f5f68"
        },
        "item": {
          "id": "196b6a3a-d355-4326-8475-5ddee32f8e73",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b38e55b6-aa42-4424-8c9d-d50a97a5579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0f6b2-fb03-4a92-9522-1d08458a63a6",
        "cursor": {
          "ref": "06f3c529-6844-4afe-9673-050adb63667d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "17bb2994-5882-4ef8-8449-f5bbb6cdeee3"
        },
        "item": {
          "id": "8bb0f6b2-fb03-4a92-9522-1d08458a63a6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6bce9aab-4aa1-4051-93a6-fab88cc9a04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ba6031-7387-4300-a8c2-cf86ffb94c41",
        "cursor": {
          "ref": "132aa43d-b714-4340-b1a3-e42174335e22",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "51ec880d-08d8-4d86-afa6-8ae83c4bed17"
        },
        "item": {
          "id": "c0ba6031-7387-4300-a8c2-cf86ffb94c41",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "692bcd7c-b662-4251-b714-0ab862c88a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70cb8c-b617-4f49-b0d0-2647f04ce9c2",
        "cursor": {
          "ref": "b5ac8bed-4d07-428a-85bd-a39069ec85f9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "251700bd-6b4a-4bad-a439-4486426df341"
        },
        "item": {
          "id": "0f70cb8c-b617-4f49-b0d0-2647f04ce9c2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "853006fc-e771-42c0-8520-69daeb3b1a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d884c62a-ae4c-4dc2-8d22-f4acf8152d1c",
        "cursor": {
          "ref": "190e244b-e2b5-4103-bde2-e94bf5328edf",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b494df93-1233-4589-8a90-7fdbf3c22259"
        },
        "item": {
          "id": "d884c62a-ae4c-4dc2-8d22-f4acf8152d1c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "85fdc77c-e428-4576-a68e-58a8d7398712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c38cb7-981f-4606-86d0-6377308f1f87",
        "cursor": {
          "ref": "efa6c7f2-6e06-4fef-ad42-263e56fc4693",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ca317bfc-313e-4864-9040-9510b44efe4d"
        },
        "item": {
          "id": "41c38cb7-981f-4606-86d0-6377308f1f87",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "58e90fcc-1d57-4d44-9bc6-980050f10da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c033d4-2f0c-4c86-afb7-1e1265f6e720",
        "cursor": {
          "ref": "e5d6eaf0-c8bd-4202-82bc-e4594cb927b8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "faa80a04-4dad-444b-83e8-fa8b89f38824"
        },
        "item": {
          "id": "10c033d4-2f0c-4c86-afb7-1e1265f6e720",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a5d687c8-9bb7-4b4f-8c27-f72f33277ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca72f9ee-8191-41ac-ba35-dcd169d7d2f5",
        "cursor": {
          "ref": "6790be01-5e40-464b-bda0-146cbc074b30",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1d998bce-f939-4325-b584-7d28f4729a07"
        },
        "item": {
          "id": "ca72f9ee-8191-41ac-ba35-dcd169d7d2f5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5ff34b1-6d50-418a-bbc4-2957c17189e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd4279-a227-44dd-9365-a5d75c0b130f",
        "cursor": {
          "ref": "790e1f6d-965d-4dc4-8c75-2ee016d68599",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3aa06db1-a519-466b-a47c-3725924a0967"
        },
        "item": {
          "id": "a5dd4279-a227-44dd-9365-a5d75c0b130f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed4fb26e-2c05-4b52-a3d7-5a513ddbda5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1a5929-83e2-46da-8cf7-c1c5c360768b",
        "cursor": {
          "ref": "eba51e3b-91ec-465a-9bcd-fa47803ff1c2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "71cb7404-2a9c-4818-b025-f0644ad6f32b"
        },
        "item": {
          "id": "fb1a5929-83e2-46da-8cf7-c1c5c360768b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3d10e610-91b2-488f-8dab-67db920c9d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529f2635-2966-4681-9a22-b58699a9a8d7",
        "cursor": {
          "ref": "cbd28fb3-f332-487c-855e-91e4452cd981",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5f21c7ed-b7d8-4e52-ae8a-8af960341d00"
        },
        "item": {
          "id": "529f2635-2966-4681-9a22-b58699a9a8d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cda60a22-b9ee-471b-9666-beb90b88626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b09cc3c-663b-4fa8-90c3-657299beb3a1",
        "cursor": {
          "ref": "a5283bbd-815e-41cf-a69e-568352ad918d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1dbd503e-a841-4caa-ad59-f8a55ff1e3f6"
        },
        "item": {
          "id": "2b09cc3c-663b-4fa8-90c3-657299beb3a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cf825bf9-f85f-48b4-9c38-dbcf1019ed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d280a62-fe7f-448f-b36d-078f896e8136",
        "cursor": {
          "ref": "1a62e3de-5d25-407a-80ce-d9ebc3092910",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5cc0788a-dfca-4804-8d06-967443bdeffe"
        },
        "item": {
          "id": "6d280a62-fe7f-448f-b36d-078f896e8136",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9edf0732-3829-4bfa-9620-aa839da3bd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cdc41f-85ec-4bda-a943-bb270620a73c",
        "cursor": {
          "ref": "5bf16a87-6d0e-434c-9009-d5143de90e6e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "29ec4150-e9bf-497a-9b89-a07d33b067e7"
        },
        "item": {
          "id": "82cdc41f-85ec-4bda-a943-bb270620a73c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dab57b02-bc72-4184-a5c1-c777a007f205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8616be-9246-466a-92ec-a094d1903b1e",
        "cursor": {
          "ref": "a4f95b77-9e2c-4226-a418-927d35284fcb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "18855bc0-78f9-4533-84f3-a1222fd60e7f"
        },
        "item": {
          "id": "cc8616be-9246-466a-92ec-a094d1903b1e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f15cf07-81e6-4dd5-a37e-62aaf4b48ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a366783c-7563-4fe9-87b8-4309ad0b1095",
        "cursor": {
          "ref": "f399bf0b-1fb3-442a-ae14-ff1effb76619",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1e012183-3c75-4245-8b78-c7c47f63f5d8"
        },
        "item": {
          "id": "a366783c-7563-4fe9-87b8-4309ad0b1095",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ecdf86d9-43b8-476f-bbd8-330caf991349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f0c1c7-8661-4933-8e49-2231ce156676",
        "cursor": {
          "ref": "cfe67e03-c53b-4087-aa8b-cc22de95b259",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb3ea1a7-f723-4cd1-8822-9baf705e71d9"
        },
        "item": {
          "id": "31f0c1c7-8661-4933-8e49-2231ce156676",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75fb81f9-6129-44eb-8963-720d339dcae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82039b47-2296-4f50-ae88-48914770d5f2",
        "cursor": {
          "ref": "7ff757d5-c8f0-413f-aca1-97312aab7800",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "675023a6-6dbb-4036-b3fb-ea291d7d6c16"
        },
        "item": {
          "id": "82039b47-2296-4f50-ae88-48914770d5f2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bfb0f3fb-24eb-42b7-a3e4-b07b42407c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fa2467-584b-4944-a2e6-6c520b34ae96",
        "cursor": {
          "ref": "9cb00c42-d724-494d-881c-aa6ff53f7f91",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf33f6b7-ac8e-4047-805f-e53c015cdf1b"
        },
        "item": {
          "id": "49fa2467-584b-4944-a2e6-6c520b34ae96",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98109d37-b214-4565-b252-e9f2ad3a53a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973fb815-815c-4550-b4b6-9fda3c064337",
        "cursor": {
          "ref": "7127912a-1589-4b5e-a57d-bad59d3c11b8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "865ac058-3cd8-4fe6-92a9-d84abacafb6c"
        },
        "item": {
          "id": "973fb815-815c-4550-b4b6-9fda3c064337",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9af160e7-3bf5-4b88-92d4-0c8cded0de54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d56feb-9880-497f-9e99-0895ce54f681",
        "cursor": {
          "ref": "fcbfcb55-a34e-449f-ad62-525e1c6e4713",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2da8acc1-5592-4a06-aa46-26856e42c625"
        },
        "item": {
          "id": "c3d56feb-9880-497f-9e99-0895ce54f681",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fcdccaea-3a5e-4a26-8156-341f14cc82dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2624f4-feb0-4c86-b8d4-0ef7a14af8fb",
        "cursor": {
          "ref": "b7ce1931-5990-44db-909a-0f0ed6f5b0a9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c276b75a-17c3-4440-b3b5-4610073ff322"
        },
        "item": {
          "id": "2f2624f4-feb0-4c86-b8d4-0ef7a14af8fb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6914d4e6-9eba-469e-9e2f-38b2d36440d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6eefdc-6ced-45aa-b6a8-125bd8a8ec17",
        "cursor": {
          "ref": "345c2a61-3610-4fed-9d07-2a5c41155a99",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27180679-cb93-4719-a78b-ff6d7bb47e14"
        },
        "item": {
          "id": "6a6eefdc-6ced-45aa-b6a8-125bd8a8ec17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "82e4c0e0-c3fc-4d0d-8f3c-6e392bef55f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf19170-c18e-45b1-82bb-34d187370f39",
        "cursor": {
          "ref": "0ce0ccb4-dd4b-4df9-8a52-52935b5e1638",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27d81d77-4fc2-4038-8377-a1ed0bc974da"
        },
        "item": {
          "id": "8bf19170-c18e-45b1-82bb-34d187370f39",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a9a1c992-8f4d-4725-bc54-d8f496639877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63926b-2906-4b0a-aa42-a2dcac444da9",
        "cursor": {
          "ref": "c68c51e5-173f-42ee-afd1-191f6fbc2851",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0423972e-1caf-4999-8252-8a765b14a75e"
        },
        "item": {
          "id": "9f63926b-2906-4b0a-aa42-a2dcac444da9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3222a925-8c13-483d-9dda-8f2ae21547f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83751dac-3dcf-4878-9f0b-1e33b9ad2d60",
        "cursor": {
          "ref": "d8a05422-dde2-45d1-b3b1-141618347c89",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "94127b42-5c36-4706-9d74-0d31029c6f4f"
        },
        "item": {
          "id": "83751dac-3dcf-4878-9f0b-1e33b9ad2d60",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0500d217-9ce8-4dc6-90ee-7b1d32775e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b2cf3-80fa-49d0-8183-b8d0a1879c17",
        "cursor": {
          "ref": "a82874a1-cb3c-46aa-b414-b4c8a9d73805",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "776d5757-22e4-4aee-87a0-7f95000bdc50"
        },
        "item": {
          "id": "742b2cf3-80fa-49d0-8183-b8d0a1879c17",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c0997047-0d90-435c-a2e1-7192491215e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bc50bf-87d0-41b0-916b-a43adfe6b102",
        "cursor": {
          "ref": "3bae5980-973b-417d-a140-2f650a15a326",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6581fcc9-fe81-4607-9c4e-713fd5ad8d80"
        },
        "item": {
          "id": "f6bc50bf-87d0-41b0-916b-a43adfe6b102",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8313fe9c-2c3c-4f3d-98d0-e38afd4b9fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c99a21-8549-43cd-be96-eb4111157228",
        "cursor": {
          "ref": "13bce56e-fd63-4194-93db-0d4acb5419ea",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ecfda0fd-9472-4034-b66d-a5b240d7bbed"
        },
        "item": {
          "id": "37c99a21-8549-43cd-be96-eb4111157228",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31c1c6e8-daae-4b61-8a38-afc2c5ede459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c959a73-f391-4686-bfe1-35c4a0f1790c",
        "cursor": {
          "ref": "9763e680-9d9d-4ae3-94cf-dd70e46036df",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "af34ff33-d4cc-424d-af24-ffe155765389"
        },
        "item": {
          "id": "4c959a73-f391-4686-bfe1-35c4a0f1790c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "24717655-7c27-4316-8a80-fcc69144b7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04be013-54d0-405e-b100-6f89a646fec3",
        "cursor": {
          "ref": "90449127-d77e-4000-9608-5657fc215adf",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "22d10280-d7eb-4577-93f1-946ad54614cc"
        },
        "item": {
          "id": "e04be013-54d0-405e-b100-6f89a646fec3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bea0b6c5-47d9-429b-b938-fec5577d0057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832d9902-97a3-42d5-8f5d-b8695106885f",
        "cursor": {
          "ref": "c23f78f7-927e-45dd-ad15-1c66084d57bf",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0c2652b8-8003-480a-bba5-22e2d5d713db"
        },
        "item": {
          "id": "832d9902-97a3-42d5-8f5d-b8695106885f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b74b9907-92af-4e25-a975-c07be7a2fe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56651b63-8f8a-435d-a7ba-3a5e1b387918",
        "cursor": {
          "ref": "a9f74d0d-3055-4caf-b68b-068468a06f95",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a3095f68-7190-4e24-9e5a-1e81f6f444a7"
        },
        "item": {
          "id": "56651b63-8f8a-435d-a7ba-3a5e1b387918",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6802afc4-aeef-45cd-8f5f-1e5d5732b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaefbdb-ca01-4e9c-b215-e45c0e08ee37",
        "cursor": {
          "ref": "b0c1c5ea-679c-43f6-a581-0c9e66c06c9b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9c7d2cd2-04b1-4c11-94e7-f7423035aa53"
        },
        "item": {
          "id": "ebaefbdb-ca01-4e9c-b215-e45c0e08ee37",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15dfef81-afe3-4d55-a1b8-d9f1c2ff490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401fc0df-ce37-4568-95e7-120c5735c357",
        "cursor": {
          "ref": "1e9088b5-7146-4b86-82e4-cc6439eb3d12",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0b0fd9af-e9d2-46a8-adde-fd6e82aeff41"
        },
        "item": {
          "id": "401fc0df-ce37-4568-95e7-120c5735c357",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6fdfbebb-4367-404c-84c6-0018f2031dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e0c26c-f114-4b4c-8b0a-31f82ccebbb8",
        "cursor": {
          "ref": "e527b0eb-7697-435d-97d5-f7c5e436bc33",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "995ec6f6-a71e-4293-b2cc-f93b1fb0426a"
        },
        "item": {
          "id": "73e0c26c-f114-4b4c-8b0a-31f82ccebbb8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac74e5de-3030-4073-8359-e6ad521c4bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20174b4-ff63-4899-8b3e-1a8fb2adcf40",
        "cursor": {
          "ref": "3ab3e02d-c5a3-46cf-9437-20e1a4a067fe",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e1604c21-dd7b-4e44-9823-38a7f3562c29"
        },
        "item": {
          "id": "e20174b4-ff63-4899-8b3e-1a8fb2adcf40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a715057b-4766-42cc-9ffb-10faea331c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f863e-ef5e-4326-a5a9-afbd7e980732",
        "cursor": {
          "ref": "19a25c2f-9048-448f-9a0c-6ac062fc3636",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ea27dc4e-0449-452b-b61b-b209dfbd80d0"
        },
        "item": {
          "id": "4d2f863e-ef5e-4326-a5a9-afbd7e980732",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "91b50438-5a5f-47f7-ba62-d37b1a3f1adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d36729-9177-49e2-b63e-70c10260b25f",
        "cursor": {
          "ref": "775d79d9-a1f7-4840-9f71-6d6ce9ba32b0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "88b7af65-4660-4b04-9b58-2a1bca81f3cf"
        },
        "item": {
          "id": "44d36729-9177-49e2-b63e-70c10260b25f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a57c31d7-7b87-441c-b759-bce52acca7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f12c55-c9b7-49e6-9f1b-c0dcdcce42be",
        "cursor": {
          "ref": "d365551e-e326-4988-86b8-1adc6bdd61db",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0fe51d0d-f6b6-4996-8f33-91ff6be61c7b"
        },
        "item": {
          "id": "12f12c55-c9b7-49e6-9f1b-c0dcdcce42be",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c1ce7cba-572f-4aef-97f7-5688a81f6477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450fa0f-40bf-44b6-9c11-ddfb35371fd3",
        "cursor": {
          "ref": "dc35b35c-7cfc-4ece-b523-5b19585a8137",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1b9db82f-3bf8-4e22-8c33-f0e7e9cdc8ea"
        },
        "item": {
          "id": "0450fa0f-40bf-44b6-9c11-ddfb35371fd3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ad8433b6-33c1-4ca7-9917-45e9cbcc7d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63b934e-e912-4572-9164-53ac4677e0b7",
        "cursor": {
          "ref": "c586c1cd-6c42-4323-91f2-5e5b6eb13801",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dad5ab34-3fb0-4249-8133-db68f81cd4fd"
        },
        "item": {
          "id": "c63b934e-e912-4572-9164-53ac4677e0b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a949950a-ac09-4c89-9b6a-35b61a80f87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b3885-599e-4092-ad5e-c8f16d793671",
        "cursor": {
          "ref": "b4a7b318-7fc0-4617-916a-23de372faf7a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e5bc3803-d5a1-4e14-88be-1a895afb3d05"
        },
        "item": {
          "id": "786b3885-599e-4092-ad5e-c8f16d793671",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dcb25809-5539-4f7d-a08c-1fddd59d0094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0e149-a072-4bf8-a0ba-70daf37f5c1a",
        "cursor": {
          "ref": "e98908fc-b097-4e24-a295-0a7d1b8d95db",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4cc97198-ff79-4c47-af31-6c7281351bdc"
        },
        "item": {
          "id": "79f0e149-a072-4bf8-a0ba-70daf37f5c1a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e1c3b647-09d8-4d17-a484-9fa845c77818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7172b2-5026-4d91-ae54-63e26433a811",
        "cursor": {
          "ref": "c0e1df1b-2d23-4a26-abda-30c0b112fa06",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "67f59648-0eb2-48e0-a50c-0ddf4f8fdfe8"
        },
        "item": {
          "id": "1c7172b2-5026-4d91-ae54-63e26433a811",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5c806e8a-57d1-4956-b2db-63810a111650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff5bee-4a7a-4b1c-88e4-8f71ab56653a",
        "cursor": {
          "ref": "a8434b04-b4e8-460e-8fa5-97b5be9e0fb3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d8622fb-3158-4565-8c03-90d4f5d3d079"
        },
        "item": {
          "id": "0aff5bee-4a7a-4b1c-88e4-8f71ab56653a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8a757549-2876-4152-8654-12b3d5c06d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f791ca9-5a8c-40f9-a57b-3e160084a3b9",
        "cursor": {
          "ref": "cbe78ce8-4d66-45bf-b0ee-107712b1909c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "30eb33ea-6fed-4da8-8f2e-5b356961700c"
        },
        "item": {
          "id": "5f791ca9-5a8c-40f9-a57b-3e160084a3b9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "29f9f909-506e-40f3-89b9-0cb3b6908fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e2b247-a38e-4848-a5cd-59db1119fb81",
        "cursor": {
          "ref": "550f2b92-9047-4837-ae00-7ddf26110ad6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "49059092-d27d-4b00-844c-20856a75837b"
        },
        "item": {
          "id": "e1e2b247-a38e-4848-a5cd-59db1119fb81",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e3761704-a26f-476a-b323-893304f7abd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53940d3-3860-48c8-b059-8fd79add9eb2",
        "cursor": {
          "ref": "bb2af6b8-3185-4697-ac9b-220a5a351f8c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0f0b4d26-0cf0-465c-b128-b8fa488bbcf5"
        },
        "item": {
          "id": "f53940d3-3860-48c8-b059-8fd79add9eb2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c9e16aec-e1b3-444c-8243-84d5e10c9449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed8bed2-c55a-4cdf-9740-51d472a4dc85",
        "cursor": {
          "ref": "f65de2f6-3b3f-4361-8a5f-9a8a51609e07",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eb3be358-37b7-45a6-8293-f3eb37fdf2c1"
        },
        "item": {
          "id": "0ed8bed2-c55a-4cdf-9740-51d472a4dc85",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e191fb10-a710-4e99-8d89-4827c0db799b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9664270-7cb2-4ee5-b3af-89514fd2a764",
        "cursor": {
          "ref": "b94d4f2d-fd0a-44cf-8225-3232cec76b7c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4027d5ec-47b9-4d4a-b923-512d4ec807b1"
        },
        "item": {
          "id": "d9664270-7cb2-4ee5-b3af-89514fd2a764",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "df9a96a0-6f09-485d-9df6-b5a35da8d467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4334674f-37e7-4472-a47d-e6f3bd10a70f",
        "cursor": {
          "ref": "cabe5172-2f04-4e3a-ae01-6c662a9cd725",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2fac9c51-ac0c-443c-be62-bd596a4c626a"
        },
        "item": {
          "id": "4334674f-37e7-4472-a47d-e6f3bd10a70f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ea02cac7-249a-4a18-b1af-69963261b060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64828294-765a-4e55-8a21-e06687f36ccf",
        "cursor": {
          "ref": "d9a43e01-decf-4ea0-aeb4-cfd07cb1b94d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "869809c0-4dc4-4bac-a4de-4a9e65a27c93"
        },
        "item": {
          "id": "64828294-765a-4e55-8a21-e06687f36ccf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8027a46b-3d48-4615-b23f-0ba4fb658d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb3266c-d6ac-4a24-9f78-61945bf00378",
        "cursor": {
          "ref": "930c9d63-071d-4abc-bd92-c97872bb8e76",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ac0d55b8-b752-41a3-8a2f-181428bd821f"
        },
        "item": {
          "id": "2fb3266c-d6ac-4a24-9f78-61945bf00378",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "43eef8f2-98fd-4beb-8d39-f36531d7289e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3f7860-d1e9-4e6f-9df7-83ee602f7215",
        "cursor": {
          "ref": "2b197543-b045-406d-8519-2275e20978fc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a9cbd4ce-e607-4da4-afda-17f123fd6141"
        },
        "item": {
          "id": "6f3f7860-d1e9-4e6f-9df7-83ee602f7215",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1f7bd7c3-f350-4df8-a809-4734d2d780dd",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b35724e-e70d-469c-9b4a-a0113b53772d",
        "cursor": {
          "ref": "3c3d59a7-6211-43c4-9b7f-bd8da02b657d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c04444ee-38b3-422a-9952-904a0121f509"
        },
        "item": {
          "id": "0b35724e-e70d-469c-9b4a-a0113b53772d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "911f2106-226a-49cf-ac1e-3fa65e192553",
          "status": "OK",
          "code": 200,
          "responseTime": 3430,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c1d72-f72f-4c23-ae25-2c961a120520",
        "cursor": {
          "ref": "76a5100d-1689-4fcc-b532-bd0dfbc724c4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b9cd86c7-f5cd-4ee9-ad62-2a1c79b08f1a"
        },
        "item": {
          "id": "408c1d72-f72f-4c23-ae25-2c961a120520",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2263dcd0-cdc4-4174-ae18-3556d29f8f42",
          "status": "OK",
          "code": 200,
          "responseTime": 2872,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1004c71-ff2f-4153-99e8-b49444a9bf84",
        "cursor": {
          "ref": "c8b08124-45fc-4cd8-abd2-b0ea92512955",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ec8523d7-47d6-4d7f-b7fe-5039fdb4f2df"
        },
        "item": {
          "id": "f1004c71-ff2f-4153-99e8-b49444a9bf84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "32ac6d14-3508-4c52-b3ca-bd6c72ecddad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1004c71-ff2f-4153-99e8-b49444a9bf84",
        "cursor": {
          "ref": "c8b08124-45fc-4cd8-abd2-b0ea92512955",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ec8523d7-47d6-4d7f-b7fe-5039fdb4f2df"
        },
        "item": {
          "id": "f1004c71-ff2f-4153-99e8-b49444a9bf84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "32ac6d14-3508-4c52-b3ca-bd6c72ecddad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d311c8-52c3-476f-a6a2-d68a47faea78",
        "cursor": {
          "ref": "b4cebb3a-cef0-4204-8aaa-9e5c184c6710",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cdd17db0-f06b-4f83-b06a-21fdbe8072ee"
        },
        "item": {
          "id": "00d311c8-52c3-476f-a6a2-d68a47faea78",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6368a5d4-4294-4868-a40b-d48f088e89c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c90cbf-30dd-453e-834b-369dca7d2df8",
        "cursor": {
          "ref": "1be113b4-c768-4b98-9a6f-039e7bf6f598",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "95465ff3-7810-42ea-b113-18e166244650"
        },
        "item": {
          "id": "61c90cbf-30dd-453e-834b-369dca7d2df8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "99cd8d3d-8938-41f6-9437-5b25e927c302",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}