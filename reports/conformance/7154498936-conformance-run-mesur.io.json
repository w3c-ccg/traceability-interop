{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "522f20be-18af-4528-9b5d-7ff8830740c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "71751ccf-77f4-4d4e-9896-74227b0c5646",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64fd248f-3912-42a0-9bee-bdb81f93ab43",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "795b7f1f-5892-4615-be0a-304cb1fb7c7d"
                }
              }
            ]
          },
          {
            "id": "3a0d4623-4d62-43d4-9614-188356e2167b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd1b30ab-0ae6-4745-a762-4bf8d6545682",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f52e3250-e587-4d73-ba84-afd807be0811"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "be7e2939-8921-463f-a830-e7f00c085757",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e618e2f4-0e80-49e1-ab42-3bfaa89cf911",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efa80c20-969f-4ca1-a884-7f3711529bc5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8790543c-8e3f-4957-bb1f-b26aae519d0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31b1fe75-20a3-4bac-aa56-6e79b728efa6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55e0f8e4-94b4-48b8-bc2c-c473bf4e82ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c581ca6-abe6-451a-a098-f40eee66162d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a0331e2-ae8e-4ba2-a692-ed163328a7a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebd90a59-9789-4a81-b44d-176c3ae9007d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74e1d940-0f4e-4a1e-84e0-25fd4a779d3a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a58c327-4385-4d1d-98cd-672e57b1f10a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2666cd36-774d-47e8-9d53-63335e532d1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "066974c9-7f33-46ca-a842-de6dbcd1314d"
            }
          }
        ]
      },
      {
        "id": "9e350c0f-c631-407e-959c-9a75b42f08c2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a0e3ce4-599c-43ab-b4a4-de9037162e87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57ac259f-79de-48f1-b981-debbfb32abbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aed54663-03a1-4d52-bfba-bc8f1319d15b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23c87fe-d51a-4718-b1e1-be2ba42731b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fadfaa4-25f8-4920-b2dc-f246270dcf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f75f77-c895-4b6e-9281-d2bc3e5e69fc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b3e75c-1394-4c88-982f-7336e83b05b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9372aeed-9f8c-48b7-95a2-8a4bdbb48c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8765bf53-e1ef-4159-8157-a67727f7d72a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf119551-d176-4017-a33f-fee9044b904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12d815dc-d2d3-495d-8b91-4c39cc09f052"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7a022cf-3910-48b5-89c4-5eb8d8255ca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5012ba4-3075-47a7-b656-6acb10ecf411",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedb92d6-fb3d-475e-83f5-8b5a32d3ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2884d878-482d-46ce-af2e-cc33c218823a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0fa156-7158-4f9e-83ce-4b50f442fbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0113b8-4251-429c-bb26-4a9d316eb012"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad01c248-f07a-4a29-b600-894424fbf269",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd6b7147-de3f-42e0-a4ef-8512658ed02d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8551fa85-e487-4e56-8561-37ed67d096ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19d99e13-b1a3-4211-9053-1910662b753e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d85688a8-5d2a-40af-9e16-ce60edb05594",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0ce0b9f6-c1c3-468e-88c3-4c01a4721dbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56b3c82b-7b56-45e9-92cd-f0509f867520",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "168c6f56-5502-475d-aae1-32b6f2a05903"
            }
          }
        ]
      },
      {
        "id": "48e24de3-afd0-49f3-aa47-c69432e66f4a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "491033cd-3d5c-4d8c-a2bb-ee0bd5dbaf58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "245345f8-876d-4be6-9d1c-0065e56e8b1e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1ffc3bbd-ccf7-45fb-b657-4ed12fc64f44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf9a294-b747-4f89-bbe8-4fce341b943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8326e4d0-e6c8-4b31-887d-e443cf13688f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557fac6-e331-439f-9430-99946fb0582f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6b07a90-9c5a-4a6f-a4e9-4b11848d6e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba78d06-384f-427c-919a-3ab33dfa83ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396e8dc1-709e-43d5-b734-b193acd982a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71948e92-0961-4327-adee-8323a228c341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e076a3-511f-4fa5-8a39-9d0c7a4efe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9646222-9538-4ebc-a5d5-50490464d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eca157-3feb-49d8-a1d3-79015852d6e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb728546-b9b9-4ce6-b329-9ada67d200e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a51642-09d5-4155-8653-625ad4eae2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ccf7cb-147e-4129-b0f5-0d9b3261897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e62b7a-cdfc-4553-b042-5427760164c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3469fc40-338b-4281-bf75-2f597835c08a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b3260-e4e2-44fa-ba69-43048a9c79e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dc911f-b609-4d03-a220-86b0147cafe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab012c61-ee25-4ac9-b31c-fa6f771adeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c955bfc-2229-43d0-9b02-7b009a5be9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9847e2b-f861-4870-9752-8b21e586666d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1d65a9-0b26-4868-96b7-80bca6869360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a38780a-4d63-4d57-a003-cfed863be45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36665827-839d-4c78-88bc-70c029bd0f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3db17465-bd4a-4eaa-8ec9-9d0c1a5d8904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37841a90-3a81-45fe-8f42-e1dfb1b1ae2a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8fe446-55f9-4007-8c83-b04c63b3ac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07773c9-92c8-463d-bf0c-be5f6147834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b342328-12d6-4768-ace2-535944d856da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffa1c30d-1b1e-4a55-a75c-f3617207258d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7013cc88-987e-40c0-8b29-9ef72dffb307",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb446d0-4669-4331-ba7a-2b91fba8efc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b024621-51f5-4801-94d3-46fbeb5616af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc3db29-e184-4f0a-a4d9-acb135d68399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d334450e-b53b-4960-ab97-7b984797ce78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fce580-7691-49bb-800b-ba16393af129",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e915653d-5629-40f4-90a4-30548b15fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d020ff68-ae30-4b98-9d02-890017d4f401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb96264-8af8-4ca0-82cc-41b7c4a82d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a514697e-3aee-416a-8159-972527e2c18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a346d59f-cc06-4635-bb0e-3e3ac46bee01",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f2933-74e3-4421-b365-c2b44c2b482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a71eb9-8cdb-4706-b7fb-54f4664b5a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc87cc19-92e7-4ff0-b40f-f5863bd43c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee3dc677-cb9b-4f60-bf04-31ce8f95159b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473ce7b4-b9e5-4174-b02c-59efc93f2228",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544edcc3-d5cd-4278-af5a-80d5072e3cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a6fde8-b460-4051-a8f6-881519dd25d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60ccdaf-0b2c-478f-8dc0-c23f467dbfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f01d620-6a23-4f8a-a48a-2b1b98d68af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e9d576-be3b-4dc6-a68f-6d4a588b0dd7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e388010c-ff3f-49b0-853d-d54ea35f0d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7e2edb-b6cf-4b51-8887-1a7a971d4c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b5afe-6825-46d5-988f-249b9a50ac11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1638e84d-d3a2-41fd-b17d-c073bdbd897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0516b639-bd4a-43e7-ab7c-beaf0700f044",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a900033-451f-4724-b285-01380edc33f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a7b7f4-1358-4e50-b540-874a51008fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46c0929-5ee8-460a-a136-5790b5a72946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2531ef20-530d-43fb-b395-352e253f1981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0179b066-7872-4c71-a58e-a98a2a8a666a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7956f29e-3db2-4b7c-a3d3-d401a987628d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ae250c-1b3a-4c78-899e-f97283fb096a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f992ef-d712-4125-bfc7-3057b0ff7752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07a0f0f3-ddf2-47e3-9f1c-dd6cbfa7e4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62093ba-d53e-45fe-b074-6a34e7e430b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ddf78c-3ef0-4c9d-b905-59f43c996057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed0fb46-8b3e-4bea-9c77-903c0e89746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f036c7-9aec-4d02-96e5-9207e0520ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1526755-01ef-476c-9924-fcc4ebc8831f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716ec49-754a-4b36-b3c0-05f6b2ae539b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6801f67a-2379-4ef8-b2d5-a9a9fbad8d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdeb7d31-0d5c-4290-8df0-17f1d33ebb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3903c0-551b-4188-8d31-8ee4e3b36153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22bb2f5a-f4ae-4b6a-8561-ac27a029cf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc78596-51eb-424b-869d-af42bd17b85a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1727ce50-9be6-47ed-8f86-8e8c64836b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e38059-d76b-455e-aa3a-1e9e8a8462ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7064382-52ea-43ac-a5a1-65fc5024403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f9e93ff-9580-49e0-9163-393c0ac39137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c750881e-d2db-4079-9ec6-f66433cdcd8e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afca964-b6ee-44ea-bbca-d7cc211fd409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2677af12-93d3-4810-a852-58ca7de534ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4384a13b-cd24-4382-ac97-e7c677630845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8109963e-2fac-4095-8a81-604565e99b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ab895-12b7-43df-a8c5-833db6db8d96",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa344152-941a-4764-97ed-feed559593d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940604d8-f318-4d64-acd5-3ed4b2758d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8fbe5c-c586-4ec6-9744-3a1e62b5b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b5223e-70d4-4b8d-9616-c4f18717363b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795767dc-3b95-419f-aec0-e40b49a747ae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dddb78-2d15-4bc5-812d-7d3306d31fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87f936f-5ba0-4054-9bac-37f24720bef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d85ecb2-d4ad-4c8f-96d6-48880b3f230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a8e06e-2572-40da-814f-8fa3d54488ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fdc84d-9501-4b8e-a778-ffaa5b60b721",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae4200b-cfac-4d33-a626-2cd40d6e46da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a2e1b6-5685-4278-9f94-393a8c5a7ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d0a444-2571-4d15-9f6b-ea3d1e794e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8639d5f9-d182-4789-9645-73ff06506a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c9b75e-06e8-40f5-afb1-e717540ab6d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360f67c8-652c-4541-95bd-33a9f0c70ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee76ce7f-4aba-43d7-b1f5-7e2519b3e846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe969042-a071-4caf-a84d-69aad3971079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be6a6bfa-23b3-4e07-a186-04c420291dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0c6611-752e-4006-b6c5-d1c0f9eed634",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6c9d0-19ef-49d4-99c2-f42c16d284c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae99ebd3-30c7-4bf0-a9da-0de2c3a2436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11dc9a4-275d-4789-b8c3-52fea9dda854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b88f4e22-a82a-4d85-a4df-9d95a45ba400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b4a758-ff5a-4067-9bdb-0145732550db",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab33583e-c442-486a-9469-50f98a7db4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352385ce-ffc2-41af-9896-c91f708a366d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34dc725-1024-4dda-a509-507fb489ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0646d21-b7b9-49cf-9781-4b6e2b4d15fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac09575-ad81-4e7c-994a-bdc034786809",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e379be57-d6d7-449e-810c-a69e8b2ab845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481640d3-6d5c-497d-bd2f-8a3d26931587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bf2cc6-f678-4ffb-b172-4585c3ce8449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6548a58f-740f-4dbe-ae7f-0164e7045c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a7352e-74b8-4334-a0da-1e5cc2f421c1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b21b69-212a-4da2-9846-885e61241da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae24ae41-a237-4f27-b5de-b5f9d64e0d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad0db7d-922a-4dab-b7f0-b6786d2bde97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2dd78d-6f9c-4572-aa4f-6de21339292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a7b7f5-8943-4b3d-a66f-38f2aba3dab0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7571046e-8fc7-4a27-a8b4-d14690d407ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b69a262-86b7-424c-84f8-e4a8b30bd19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddca7a0-1ef2-45f1-af86-301d7eb6d157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b79df75-5105-403a-bef2-349698190ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbde3d4e-61b0-455c-8d7e-27d2fd2ad87e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f69fc74-caec-4daa-9887-e9c1775d1423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bc6214-846a-4ab4-a548-595a19c021db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb47bd91-b09a-4b09-a939-d04c7caac2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ce5c9e-2d25-4c1b-a8de-fb4e84a32a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bfe476-9654-444d-a685-ba6100d12249",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4394255-dc9c-425c-bdaa-052bbbd28210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056b0799-10c1-4521-86ae-c66769a759d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410a3961-51b2-4229-905d-4852a13cf66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c67f0b-f077-4b16-af6a-36aa3640dabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef176ad-97fb-4398-8054-7f03884dfe24",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29efc7dd-eb3d-4a84-96a1-849cf03f1e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73db09-51c8-42ef-a3ca-37b46095beaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085fc353-8550-40a8-a61a-6e23cfdb98a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "318589e0-9ea2-416d-ad66-f3412accf9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626bda07-4ed0-4552-b48d-8a552e485919",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7f2dae-860d-42c1-ac78-9cdba64395cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3f98d1-2e03-4df7-a1b0-d057892d72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb036bdf-2457-4dba-a690-aa142daec414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1395a95a-0821-4ef2-ac70-a69d0ee364dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56356d24-249f-4a17-abfd-a1aa94695be9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898b53c8-2c30-474e-a7c9-bbda1e8f994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eef2e22-6369-412f-9f7d-8fd65d88aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef00f2-8f47-44b1-9285-0c92b9ab9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c7deff-c11b-4d9c-ba61-e1266acd9953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b73980-758e-4d1d-b916-6203752c2f0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab1aea7-8937-4bcb-a0a0-690bf837f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32501fe6-f5e7-48f7-afb1-fce7b649f6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca45dd8-2756-47b1-a4f8-ba0992f6ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2210506e-6feb-430c-bd59-3b7a56543e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5a2cb2-355d-483c-a04d-203f94170b7b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bccd163-3661-4599-b623-94c93e300d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b034d7de-ebeb-46bf-9966-40bd0fe4eec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c786492b-50d3-4cf9-928a-a5d3c16c9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc0154f-f11b-4636-93b0-2f3910ff05d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab98ca8-1dd7-4742-98a3-37e08196b4fe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223a8eeb-ca32-4ae1-a257-fa84ff8e26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9848c685-7e51-4d7f-9b5b-0ae5b63808f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0da94-b734-4f28-97bb-84454a2bd951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68e0c2e-c285-4281-8f1c-bb4a09f59b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5701a6b-87ed-41f4-949e-ac95da500372",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2990e15-a4c4-4200-b520-32b827baa2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd3ca90-a65a-473a-8208-1069ee3388d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772bdb0c-2d67-41ff-8d27-eec0343db0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fbf53f-0345-4947-acce-2b65d3e86ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf7e488-96e3-43e6-b2a0-0bff30357753",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340cff71-079b-4133-a846-0c2d95f2518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37f08de2-b490-489a-b107-6832dc828f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0cc25f-6dfa-4e6d-ba78-de008255d801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41244cbb-52b7-4ab3-b5be-a8c2c9ae4b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2328fd2-102e-4838-b58c-2ced72b9bb1a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d7ddeb-9039-490d-8b13-7bebf0475dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87de06a-6920-4f42-812d-2cc5d0b4903b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee961ed7-431d-4b87-ad8a-244862928b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f66f767-412c-4689-a573-7f73c2dbf446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d602448-7151-49d5-ba9a-515762127caf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b6c18-83c7-4ffe-91df-e5242ea80390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263ab95a-95ee-43ca-9c4d-f315cba60518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adce29c-1a62-4312-9c38-612c2d3e1d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2825c947-b401-480f-b2b6-aa404372c920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71279a3f-ca8d-40a4-b580-621149ee634f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1108be2-9bb1-4e89-905d-5ea7cdd59f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801fd59a-ab1b-47b2-afd6-e7e5d65dd6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b971bdd9-43d2-4234-9e1d-c4467eba27b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91327fd6-6bdf-4eff-83b4-62691498f1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830ba4ed-3896-4563-83a7-378b403c1616",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38edce6f-d386-422f-bedf-cab6a04767c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90465458-9883-449f-ba09-69aefabf3273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e942213d-ebe7-4079-8f28-0e131180bf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26207b3-216e-4bb2-b34a-cc124cd68e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c2bce0-1be4-498a-b00c-c1ee61626ef0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af89c183-7637-44d5-b36f-ad99e85c4a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8013ae-832c-43d2-a22a-3b01cead3a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b51c2e4-217c-4c7f-9718-e3a9698fca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5a4cb6-8e63-4936-b3f5-b73149e78ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f333f5-ad88-46b1-928f-e0233155b210",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4f363-88fa-4269-8888-789dbc79aec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d16c565-82ca-441b-bd52-eb63f2294916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3077208-fd59-4a8e-9dd7-1e88b9923b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d10e003f-964d-470d-b5a0-97e6658a2e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2dc82-ecaa-4c74-ba4c-a65ff59ee4d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca94120-7948-4c03-90ee-655c94685a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b0ff54-cbd7-4bbc-9118-344662ac0c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3ef211-1cad-4bc8-816e-8307aa63f646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e73b6861-045c-46a6-8677-b03acef37fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178ad17-46ea-4b8b-9ca6-18a25dacaee8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41b63ac-e3f8-44e8-9a6c-8417854c04b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd1db13-48bf-45f1-b50d-2b6eb7c77037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed95ae1d-5429-4f51-aa4f-e4b0308786fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "af6c5670-cb46-4bc4-85bc-54c4e4b1272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5046056-424b-43b2-9a86-20ca62f8360e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a598ae0-59f4-4e64-8ea4-69930b123e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68e096a-ff3f-46ec-9868-e50ede109725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1af3426-56d8-457f-8cbb-d21623b5ba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d80ee6-4a65-4ee3-8e47-8bc2ac0f9799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d4cec-8a1c-47f9-93b8-7de668738c0e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425a5571-dc99-498d-a556-13e70e1c26d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8c8b43-e1bd-4de8-ae1b-a63bc015bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c57792e-aa76-43bd-aa12-b3f566869a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc45545-30ca-4b0b-8810-f66b582fb327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f912a38-6bf1-436e-8481-445dc66515c0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ae0a75-cf63-484f-b2e6-301423df0f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04efac2-da0e-4eae-b7b5-45511535fe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311daeef-7c08-46fe-9139-b7033f22b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bf4dca-06b5-439f-af09-08f209d9834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8dfaf6-d5b1-4879-a2ba-a9fcf597aa47",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3843a5c1-3860-4e26-ab39-0ffcd0b1b7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3189f2c-78d3-4c79-a5a9-0b2b016e2033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2707ac76-5b46-465a-8930-c916ec313c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad04451-0b4c-45b4-bfb7-15087ca53c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e5a497-a73c-4d99-a051-b04871aac784",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e96e6b6-75fc-46ff-9297-85b2a9b5931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b9c9e6-f753-46da-a488-1bbe279be462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b635cb3f-5c66-4db8-8ff9-88c7c03f437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b44c65-4059-4b2e-9e8f-a4d8f492bef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af9cddd-3dc3-4d7b-9ffb-96d9bfebb43c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cae5dae-a0bf-4ea6-9d16-c963f7e0a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1297196f-2e2e-4b65-8535-b58473ba9ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c638e8ec-588e-47b7-90ae-5c6bca92fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee359d98-2635-4df8-b2de-07206c7fc5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e233e48-c85e-4d57-8004-b2a82c9fe244",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0415a4-cad2-4d20-8f19-0a8187453184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fa3fbe-f9d9-4189-9cf8-a75f20560322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6190d8ed-2382-479c-aede-a8627da6eb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4752840-0600-4c66-a21b-e6e88111680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f830d9-4721-41b3-b7f5-6d28682d9683",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16759044-39a8-4449-a3e0-c4d92800ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75be58e0-2ca4-456c-9526-cf1952a13014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca94693d-8e70-4fab-82cb-efcd10b7feaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ead7e4-8df0-4b7a-a0ee-91f69d7e9e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be58bc69-2a0e-41a8-986a-459a3628095b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ee4c0-9dc9-4185-af0d-0a4905b98308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10630bed-74c6-4b7d-8120-fa2ab31930df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579a6263-e1b0-4523-94ed-911c5bc3d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9402efb4-e718-4ce8-86ba-1079458a38aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8304bcc3-0a8f-4763-9f5e-df0300b33f1a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23641b4-a234-4a02-8911-25d161b784ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b99f29a-335c-464e-8fd4-8abff56b03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae97a3b2-22ec-4766-8e63-7b9cb60ad140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce51623-bee2-4b59-9045-e02326fe57f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8b6083-22dd-4086-a94e-e2f623b69fb2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877931e-5d32-4ae9-996a-f338e232e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b87953-6d3e-4ae4-8c00-844d9a3c03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae350fe-d8ae-46ae-9ebf-2b9efc35cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef40a5b-11b3-498b-9527-a3a310e6f105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b19572a-610e-4e8d-9923-d7530c369915",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4666e28c-b7b3-4296-bcff-0139daeee427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95e0918-6440-48f5-b2e5-8444c41d7286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bf6020-9ab5-402f-bcc9-91577eda0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f992cf72-ea2a-49c1-a978-1ab7bce4f6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9fd58c-169e-4af4-9bf9-fbb550863edc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a449062-da23-4989-aa00-b5bcb47f595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae25d739-94a4-415a-84c1-089d46f65fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8879ad75-c12c-4776-a4e0-cc1f965cb952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e420bcb-b191-4882-b339-0221cbf76860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d5c9d8-d7d2-4206-b3e5-98a98cefcfdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a315d2ae-4aa1-4ba6-afe2-4347cdc344a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a193d11-b841-48ee-bfe5-30c451023790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80662ee-3a75-4209-a07e-9159274b474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7802976f-0e66-45b2-8ec2-761756034dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a524f6e-de04-422b-85de-8083cd2678af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fc6e57-7c0e-4300-bc82-ec240cc9105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58314ff-f2a8-46f2-a817-01813f3af4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d4adcf-1b53-4826-994b-547a05ab9243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3fa0d6-9869-430b-b5ba-54a6a217c4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ce0487-f068-4a3c-ab3e-82f10ea64f41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44c9a90-5d05-43c0-bbd2-bac1c027f862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9b04d9-6c03-46e5-86fa-ca9470ebd36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eed892-0e6a-478f-9b42-3a22d344ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7801d6d-6559-44c1-913f-b315f7f81440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7183776e-bc88-4648-a4bb-0b946bd2f611",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d045fd03-87cf-4649-a90c-871050b1066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95c92a1-540d-4de4-a54d-d85c6ec6ab98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f5289a-94c9-41b5-938a-95a853a608b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e7dae5-e983-4b08-b2d5-fa842fb5c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b24536-aa97-48e7-ae03-cc511a0dd7dc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ecf2d-47cc-4ff5-9fe9-3ec00adc2ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef7abd6-9da9-413d-a532-b47f664a6cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe507ae7-22f3-412f-a33b-012f7685b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4235f8-ef12-4e41-b375-44a13ef6ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283f898-2b6c-483e-ad9a-a21a769c53e3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f3787a-eda9-48be-a857-f70233055337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78634b55-db13-41ac-9272-a4a9ae5d60e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73d0969-23c1-4aee-b772-9472317a9f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9233ab5e-2799-4db2-9f31-4c9d8aed435d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d90086-0d67-47b5-b346-6f6257f29eee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3765d58-876f-4566-bba2-7a488f208716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cc5b0d-2f6b-4924-9922-9d878a0ae61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045a0337-b77d-42ed-9fd4-98dddbbd1e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ddca4b-1617-4b33-9d5e-71631a40642e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f899afc-9ab6-418e-a446-c99e62b22e4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b302b5-725f-41d2-ab9e-8018bc829785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c50be28-9770-45f2-aa71-7879720a51e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe5d0f8-1e8c-42c0-a4c7-20805579e192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a6a331-3257-4e13-958d-bc6fcab5cc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8a47da-aef8-4e5b-a475-4401050c0e7c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f72f9e-9ca4-4151-9d00-05a5afa52f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ef74be-209b-4274-bd4b-e90e15c8827f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2541f-621b-4ca2-82d5-5bb0e910365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75105501-4506-402f-9f3d-fe47a2ae41cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c5f069-a77b-4ca2-83eb-498192663e16",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa773342-428c-4234-819b-d3fd341f8af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59ddef7-a5c3-4782-ba6e-4c87e93561db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a40b7f8-35ec-4516-ad01-173d7eba9ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "558a015a-f28f-4461-b371-977c76925868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1451f27b-1e67-4ca0-b46e-b19ba88afc81",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fad868-9d62-4a2e-80d1-fea87e5cd9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647fe21a-1b7a-4f53-a182-f373bfaadf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8f4e56-dcb7-4d61-a279-084e3cc485e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2518fa18-26aa-45e5-a5a4-be690440d32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384c1676-cc51-431a-8fe3-7044cef253b7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d55c8a8-046c-48b1-98e9-6b1568ed21d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e4e55a-4b05-444c-8f98-c47fedf92367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00aca13-3eb6-4278-97bc-2b22331358e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7081a952-25c6-414f-a0b2-1bfadee23bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be3a60-9545-446e-9627-804d52aa8e86",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04dce47-9551-4aab-9dd6-f800f8e1dd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b062d427-24ca-45ae-8c1f-96319ad52f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90972239-d408-484e-b55c-dbf93c2f1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce01f6-2a60-4494-a9aa-05d18f5960b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d11a823-4ffc-481a-b25c-bfe809cf9973",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2335d96-f203-4b48-8740-e36bcaf586aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eba5bb3-d655-4a32-b019-d71acccb4973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c249c97-a5cc-4cd0-a324-e88d6e85aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7cfcbd-68bb-464d-a02c-25f7086e8616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8effcf-885b-40d9-bae4-75aa4b105c4d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f75efd-e22e-4bb6-ba4a-4c43ec04543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862259f4-3597-4e80-9515-ea7190ba6454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f04302-b076-4b7d-becb-b9b23fb88814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5150f707-91cf-4819-bae5-e69705cd0371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a847e6b-fd75-4658-9ad3-29ed490cb979",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404812c5-5c04-42ac-acf8-c69073b64aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014ae4e6-3a3c-4aea-a587-634b66ece40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218a5f6a-e667-4246-b3fc-82e95dec2d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "126d5dd1-ceb7-427f-aedc-b23890f4cbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ba5979-fb16-40b9-bf95-598b21c36d37",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49436e50-baf1-4f22-be24-ace25e0300e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3d43c1-8f67-483b-8856-5957977e079d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d57f76-fb87-474f-a3d0-90d08de870f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ffeb79-845e-432c-840c-13757c09f935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db37e7f-0a56-47d5-9c49-4ff6ef9f8336",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2066bb8-fbf9-4351-978b-693d1d521819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc78642-2d17-41ae-920e-5bc0b770e08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eda5f8f-5032-4765-a110-8dee44cde90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c601f05-76ee-4904-bb7d-aceecbeaf6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a49b1c0-1afd-4e74-bc91-517c038b686a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d9410f-e374-4dfb-92c8-c93fb2c6d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56022776-47ba-49ea-86fd-cbc2f910e4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653c48ef-9cc1-41fb-9053-32abb004a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d795e08e-48ed-4f4f-810f-678b6aae7f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b7085b-9c60-4058-82ae-b185838c3fee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8723dbd4-e046-4eb4-a7e1-3078656cb302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40eda86-912f-448f-94de-4f4644d05569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb552e2-4e55-457e-abca-ea38dfb2c895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20adb9c3-2d12-444f-9279-80cbadbfd993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff987b8-b74a-44fb-a7a0-5e7a991be897",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48ca055-538c-4da0-bd8f-0b399f68989d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc66d1fc-62ce-4de3-8bad-f1033f1a3146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e555b420-296d-4785-a1b7-5e0820bf64f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98287b3a-5a38-4ca7-9189-1bbfcc9d2e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eb3628-6e92-42a1-95c2-1869b1b7ccac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f7be77-157f-4bce-a28f-2f642dcd8fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f68669a-869c-413d-9a3c-0aace7decbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5af121-c053-4e25-afa7-fa13a5ce3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c72a34a-cfff-4e23-bda5-02f66276a559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c62337-a7d6-490d-8c0c-505809f2fafe",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88fc0bc-3c69-4f81-a204-9a49492e81e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8298d1a1-7da9-4613-af4c-25612bf66403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58270e62-9000-4a81-98a8-efe0c3f688f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3500d85d-74c5-4c56-b543-4385203764ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57535a07-6a5f-4ccc-bcdb-acb0e4b72f7d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4f3adc-0660-410c-9924-0414658cd237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cbf846-2bce-4a6c-8329-d3430bd3272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f94c9c9-ff36-42ec-acb2-3c9cfd82c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "166b17cd-3c26-4e4b-ad2e-22335b45142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702e6961-dca1-47f3-9792-273d16b9a86c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691b1a77-74da-4a5e-ad26-0464259765c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c32f2a3-3025-44f5-b73d-5adecc2acb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3dfec-a34b-4919-85a0-95670e62ae96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "398611b4-7352-4744-93ee-2af6ed160953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7b075-82f6-4814-879f-56e71cb360eb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eca0294-9c7c-4626-8296-f2176da02de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f4e8fc-52f6-4884-b7b9-b7de025a9949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9c4c57-28eb-49ce-b2ff-391658e2098f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5446e2-5085-4401-bea6-410b4095d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7a327f-6ba3-46dc-9fae-a055f479bc7e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b54dd-ac8e-44f4-8507-35d1e4666773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ddce8b-aa40-4dd8-951d-b062ba943e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cca509-6fee-4b7f-b937-4570e85c4dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbdeb4b-4ac4-4a60-8557-652654ac5eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c82da9-f8c4-4a6d-8eb8-bb42e568272a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399a544c-109c-4c84-b1cd-f56ad5d71eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ac117b-dbdf-4bed-be34-18265ac49ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2883b176-8840-4fa4-935f-9721021c39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfdd138-aff4-4088-9a35-25e03d18ceff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9924832f-4399-44c4-9492-57baf57ce894",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce391574-2f72-476b-ada9-96b68408349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afad97d-301d-4ded-94ba-a26b08163a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74a4718-90d0-4d9f-a3e6-aeafa7874b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3af975af-706e-4232-9eed-8d883cddf7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629eaefa-ac15-4391-ad5a-5b4271ff0a00",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e85a73f-e734-4874-af22-4cc17270e723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7239afc-2e6c-4101-a41d-0629609e9cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257355ad-bc2e-47a4-8ffa-9c02023511e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7acb601-d772-4265-bbd4-736cea94a69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982c31b1-fe56-4248-bd49-3bce2e777f2f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b030ed7-e61b-4b06-b064-bdfb85fb016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d87adc7-5f8e-461f-8892-b25cf695465a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e962a17-7e77-46d0-b3b8-64e2b2a67532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa51578d-60b1-486f-a896-0eae08e2acd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c75e77-d031-4c9c-b520-d3a543857c96",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158df970-b8f5-4a33-bfb5-633735122a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5b9c07-6069-45b8-a0f3-68e9fbdac60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b21a38-2869-4ebb-a9be-0aef009d208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6141caec-2059-4dec-a6e8-c308eeb25224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda9e8c-4d75-4aed-9f64-47398fd0d771",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66914d7-8c98-4bd9-8f83-e98f1e9289cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651cead7-ba06-4ee3-bd7d-f49b387d196e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7fe0ab-4e18-4bfb-9b90-f50dc54dad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b14ca67-4cda-4fb2-9e49-8bda263090ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e255367-373f-48dd-8ff2-fde3efb0630f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655fb8b-ed4b-4499-8502-6956e2dc45e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29406450-591f-42be-8d44-91305e2f1953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47246ab-e1a5-41fb-8f3d-ba8935404827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca2ec4d-cf9f-4db6-86da-b588b7384ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab4689-8134-4039-a59e-1910fd58e4d1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae286a-e300-4cd6-8e22-d9d1692b9e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cb850b57-8e86-4495-87f8-c3ac8108f800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69d196e-a7e9-4673-b03c-2c165415665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5e6926-805e-4776-a215-ce45b5178161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aac6d22a-0e69-4af6-b15b-86632a63c92a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c83424b-f9a6-4801-85ba-866e9e46082b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af2937c-5ad1-44cb-83ad-280c45a219e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09b067fc-e91f-4a2e-8914-cb46471fd033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e776376-4f3b-41fd-8893-40cc084db346",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62554d0a-982e-4572-bfbf-38c871f67fdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19f885cf-9404-48dd-a1b6-beecebf74e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c32f71-5c43-43d0-bd9c-8fcb651a128c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4688e113-33cb-4714-b22f-2479dff9229e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c093bbb-c138-4357-af1e-75003af5654b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2b2de3e-62f3-4ce3-a865-8a4baa166206",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2de9292-d8ab-4e45-9a6c-141c66b8c982"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df7b8ed3-e6e1-42dc-865a-60fcc5b13fd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62ee73a0-62a0-4825-ad4c-b1ac955301af"
                }
              }
            ]
          },
          {
            "id": "2e7ea884-95b6-45af-ba52-05bf2e1be1bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8a15efc-4587-47b8-a33c-810e5bde9494",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ce38a254-bc83-40d8-bb6b-b5342eb0c057",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6923c25-a56c-4d7e-a869-e952419e29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cf866b0a-384a-4a70-be9f-3340a716d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f47cd71-cff1-49b2-903b-962ec3d82a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade491ee-41f1-41fd-9eea-ba4fe24a58e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "962e8b30-a0ec-46ba-a2c7-f73bdf41e3a3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "840accb8-2eaf-42a5-b6ef-da05617030b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "800a302e-65f4-4711-aee5-0081d9c12d42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aadc7e35-3d50-43c2-bd13-4042e06ea4ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b135de39-cb36-42a9-a288-b38dd52434fe"
                    }
                  }
                ]
              },
              {
                "id": "8c8df1cf-76c3-4b23-90af-a67c53653fd4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43c03758-c23f-421f-88cc-d0da01ec7bdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b930b67-20f9-4b98-a0fa-1a6c32314434"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c87b1766-7a0d-470b-9d11-651aeb25cc13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6882c248-2eb3-425f-98df-d758aab405b1"
                    }
                  }
                ]
              },
              {
                "id": "85160cfb-32b4-4e55-ba46-18dcd2851c58",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11c139e4-bde6-4305-b9cc-6d3fef347943",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0189825-8dc2-4c56-8f9c-b0e729660852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fb804e3-d3db-4e85-8003-a4a9ebe08aad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c01a165-f3e5-492d-b217-e35597eec612"
                    }
                  }
                ]
              },
              {
                "id": "da089fe3-6b8c-4083-8193-ae22b708c8fc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98fd6b36-99af-4a9c-a6b8-b6d9cdb66a18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fe93bfe-fdd1-4735-aea3-c179fd337619"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3661275-1a52-453e-81fb-3fb21b9686ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ba94d1e0-b47c-46c9-bd61-b3bd0017d2ba"
                    }
                  }
                ]
              },
              {
                "id": "39ee393c-2f6d-4ff1-ba15-1ad7c914944a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b8ad4bc-6b6c-4784-a91a-fc2a997f0a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60bf42ac-dbb6-44eb-a273-9c98defba339"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3136cee-9af2-49c6-99a5-bc99fbac63e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e1ff443c-ebeb-45db-97c8-3e3cf34c281c"
                    }
                  }
                ]
              },
              {
                "id": "661a4538-097b-428f-b241-0c6a66422325",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c165fd-85f9-4f02-bb74-42251f2f17a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "312c20be-b960-4bc1-b5c8-1872cbe5d2ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aa834b0-5c68-4931-9fe9-7b2563f82f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4aa0b5f-4b5e-46d1-937f-74b7465f8c05"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f52ff31-be13-4b7a-991a-57c11bcd7164",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6060ffc-127d-492c-8af4-eb0d28fc85f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64395ad7-7335-40d1-9b3f-09b1cf3f42d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95cb3861-55f3-4c78-9a88-e8af3630fd6d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "897d9579-4fcb-4efb-811d-1a770a6c2fde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3bd51851-4424-4e6f-8d0d-aa36f98f8225"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0837de-3cd9-4e05-8fde-a6004734585b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4ac920d-0b72-4585-911d-773510030aa6"
            }
          }
        ]
      },
      {
        "id": "528aa796-0bf5-4016-982f-11f56bc7d10e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3f3e3b57-bd70-4e49-b893-951347105051",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31cd473f-e774-4830-8eab-5245a69e60ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11dbcffe-f884-4c6e-835b-7c2f0934ba23",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26234c4-4425-4ff8-a26d-2c3382370f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e18bc4f-bada-4834-be19-dd1b94a0912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f6589e-f54f-4798-b308-72712c3e659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65ab8e5-fbe1-4d0d-b953-74c3c2edb73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4b706-5ebb-495c-9e6b-680034fe31e9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381d1858-2b2f-4242-a6fb-a7b04748c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce203d21-3897-4475-9d23-10cc6bfa1ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16641fbb-f68e-48cc-8658-378e5396ae06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec88b94d-dbc6-401f-83f1-68b80e25846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3c3d1d-4546-4a32-8c32-b16d70e88d9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be65dfc-6c5c-465a-ace3-8765c5759b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7575bd-cfaa-41ba-860b-3121e7a5f47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc95dabb-b3e8-4ea8-8f2e-152d40f4b400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd9c64c-3b6d-4510-8bfa-c6be2816a5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862ae20-f778-49c9-aff7-cf81341951bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a2ad65-b5d9-47cd-820d-a4d398368af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6581f30a-4020-45fe-965b-d7ba471c1f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fcafe1-d03d-4188-8079-ffe4213df238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47490612-577e-4251-89a7-0fdf12f5dd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3258127-4d05-46b1-b467-b0e4c5f39ae4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b30a49-7042-4ad3-854f-8ba51a4663e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef3abe5-9bf0-40bb-a539-2d046e09a6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489f2af3-136f-4b05-ae97-815131f9b8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bfaaec-d9f5-4c62-9eb7-af75db91e20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0a7725-f725-4a2c-bbd3-6983cff963c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3f8811-85af-4763-80cc-b0bcb47c3515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5edafe-328b-42c0-8a6e-46deac78dd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7db50f-4804-403f-bcc3-f6f822b50de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6196a20c-786a-4ebf-9e00-8a1427391804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8324eb-46b2-49a3-86a2-6e3ae6e69fd4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455098e-db94-4197-a51b-00d7b78a29be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ec0b8d-7afa-47a1-9274-a1c3a15e763a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03228315-e042-4d28-b246-d08531da1413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "653b1d3c-bdb0-451b-85b3-7f17159109eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f84a76-2101-4615-9925-7a925ca81ee1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a5ecbc-5963-4c81-92de-dbe5e818c566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f20c87d-f580-4a97-bb42-a76498d59d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d1b5d9-9935-458c-93cd-c953e6a23a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "636d18cf-5869-433a-a58d-7f4f240b93f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08ce9c1-5f65-45b5-a74f-a10697000fde",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12896870-f9ff-4303-b5e2-f36948abbad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5986d7a0-ece0-4580-bd1d-a02083306df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e858a87f-a498-4833-bb3e-4e32e60fbfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b61af6e5-827a-4295-922a-3bac80504a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4939c407-8549-4464-ac46-feaa9a472254",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee60ac2-888c-40df-b670-f41ec00b2e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86576a90-530a-415a-a98c-5b5ac28a10a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077874f7-c56a-4d60-bda3-b6c01bcc4200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a11279-8aae-4806-a220-1c67f99a10ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309c1c46-96ae-4f23-9b49-42e85b90ad01",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfca7114-dbde-4a39-bc35-63f559395f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fc31d3-3e55-4933-bd95-bcd357f239e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07121fcf-a7b8-4da9-90f6-9c35d621f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "991baf21-f736-464c-bf8b-1f5b8f6ae5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f1207-5cd5-4f73-86fc-efb79a455b16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaa0c50-b696-4a4a-a8b3-c0177de09e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de79cd6d-3ece-4ab4-be9e-69aaaac7990c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b7b935-90de-409d-be7b-0f7c20c35a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbad612-c3b6-4d98-b9a9-3e68e7d98183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be665b74-d9f1-4593-9528-878cc41b9aff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab284808-ba5a-4362-8551-5297db18468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490e232a-ac82-44ed-a666-aa56a1f090f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc872881-71a9-452b-93b4-413c2565b4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3904a9c-0038-493a-ba2f-1e02f573542e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c090ad-18db-4811-a8ff-51e7cb67d310",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8443581c-c22a-4aff-91ff-b0f23a413a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b490b46f-f5e4-494f-8b17-bca7dd8a4a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fae0c7-5847-45ec-84d5-bc6f283319d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a8af59-65be-472b-b121-bc5f3747a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d221097-4b15-4905-8138-089571416120",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e11d14-f5c9-47bb-ad08-2706a896d706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53b98ad-0bb6-467c-9770-1f81c6b5f3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987b6e49-db64-4cfe-8407-d0b2250f6467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "94897dc0-ed2a-47d0-a3ea-1a43ec4a2baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0456af74-6995-4a56-a85c-850fc86fb592",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba41fd55-06d3-4c29-b6d2-a51e4440ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89481540-8c94-4148-9cd8-d3f9c99dde5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1064f08e-4d34-4be7-80e2-693e2e387c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb69d4f-9347-4081-915a-41395a11e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb553d-1d32-48c9-a3f3-ffaca5f488c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01e70db-0030-4fe0-8a33-e0b46bba9f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4be7e2-0217-4a60-9248-f7d01d18f4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a617a571-dc47-4b8d-b399-d9cc0d9e1429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7841fa-5cdf-4168-bb83-171ab79d4d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baf99c3-adcb-4a49-94ed-0e1e1ef6c151",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a5b3d4-1de3-4b4d-b14d-30445ffb2ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36ca2c4-781b-41b6-8127-b276127d0a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3128b9be-a5f9-4601-b627-a3f14d2d9583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d5529e-474b-42ee-8fa2-47a78b8a8997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689621a6-45db-40c8-8213-e07a122ada8f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eefd4f-1b0e-40e3-a0a9-f0f1e37120cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25262d96-c345-4599-aad8-9888b7ff25c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d427f5-2ea7-4d89-8e4b-95519e3e4696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9b6f71-893a-4471-a32d-f8f9abb437e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89700d8c-44dc-4f3f-b0fe-7c46f06bd699",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6056c20-46d5-4ac1-bfbb-356b26693bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf75d967-79dc-4d7a-8c69-4950761978a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46edb0f-4918-44fe-983e-9c057ee1d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb849ba-72ce-486b-b936-dc19217524f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e4e020-38c9-4961-befc-316b5f77e962",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b939b70a-b5b1-44bc-a655-f746914f7857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cba9542-1247-4747-9fe5-941d7931fd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a479c10-d37b-4a2e-98f6-2241ab95634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8312aa41-4a2e-4dea-95bd-cd3fc20c64b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61d3e8-49dc-4815-9f8f-321a8f7de355",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24fed5d-1c98-4be0-9a60-54f8a9657dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc369d2-5401-4ab0-b1b3-e6a598e04a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c245bc7c-56ee-48a3-b4df-7830e8ebdd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd03a031-a5aa-4cbe-aefc-1555c7299e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05253e45-f2fa-4729-bb69-72d7dade4bf5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d81a7be-4aa5-4eaf-9cf2-6f3f3e53e6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac18dfb-f73c-44a5-b9bc-95634e783be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362fe9c6-05da-446a-aeda-b239347dfd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6449dd6b-7322-4a84-83d7-93ad588c8f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693cb43-453b-4fc5-a86d-746d2ae050df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b186bfd-8e66-4b64-b9e2-3870f28c4d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab6e438-7e1e-4398-8e8f-118118cde3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3607cb-d123-40ad-961a-c747e3fc2cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5f994e-28e3-4b36-a250-1c2e8b5956cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ecedf-11c1-47be-a7da-7fc984e78674",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b139718a-8b88-4f9e-b515-547fa31b91e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce22c229-1ebd-4030-85f2-0deed73a84b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bfccbc-9d53-4dea-8881-44321670ae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac60723f-090f-46b9-b045-ebd9924f37c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873624e4-6059-4191-af6c-437b50bb1abe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e44389-009a-4078-9e75-24a1dc295625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c9888d-81e6-4ad5-b4d6-d3df5fa09032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee3661-d8b2-4863-b94f-96a18701c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0754c8fd-d885-48a2-b00b-40eec27e1fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002ea0ff-ef7b-4bd8-942d-85750bb6dbd3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8dceaf-e542-49af-a5c0-55337ff9dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c4843a-30ae-4b34-9eca-2e4a5a1b1e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d42e094-f268-4ae9-a8ed-cd88f9e605a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a350ee5-20e8-441e-b9ea-83f44fa63f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc38319b-f12f-456e-8122-3e9f651a70f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8e3108-fcad-41b0-9985-6a899037e460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2d6a33-58cd-443f-8dce-d7cbc33ed6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d9ff76-55e0-4e44-8ae4-ff60f36e5554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476bba7c-006c-4c13-8641-67a7b5709ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55bd832-009d-4057-9c4f-3c0b7c4ac072",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65ba123-5eb0-47d6-b607-ea81a9e49ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7953b77-c206-41bd-9547-96b7d4aa9929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e485fa9-afd2-44fd-bf03-1f662476cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f359e610-87d5-4c31-bb28-2f41a66d9fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947df1c1-4e41-4932-8913-450c4dd03fd9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c77ff2-30c4-43e7-b9c0-25b6461119aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ccd929-c4ef-495d-877d-235d41395c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501010fb-1b05-4ef3-bdd5-705587a8b520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4082e38-0b6a-453f-86f0-dd88d9e750e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2935c6-824d-4995-870a-9e801202cd80",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca8981-a0ac-49fb-882d-16643fa0278d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f22715-eb3b-4d39-bd6e-5b5be4da143e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1bfc3f-3957-4d27-afd3-42d50cb3d856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3f0856-1e62-47b8-8766-1d1a4db107e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f576625-a66c-45bd-b878-b2afeff26d0e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286a201e-30b7-48c0-857f-4a4d990d201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d62c861-4bc8-4275-bdac-8b586981f709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774528fc-cf46-4c20-8cfc-406ce7e93fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2077bca-d0cc-4c52-886a-b39f64bc66f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a30e32d8-db10-48ba-80a3-449f56bd49db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39649c5c-df6a-43e8-9cbd-78f7c555aad1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01b3c76-5a0f-407b-b020-78a6af9f410f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c8b0a3-7cd9-4603-b8ee-5623ea42bb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d824dda6-d437-4b97-889f-3d5c7f944e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96bb38a4-c800-490a-bb52-956858389703"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "299816dd-9c29-4ba4-bfb7-b1a70ebd43ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82bf3b2c-861b-4322-8bec-5dcd1f5a7325"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91ab9f3b-d430-4179-9ec1-5294a0b8905f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6facb15-6d1f-4948-b597-bfdc6cfa82b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6716e0b6-32f4-412a-9617-7da606f612fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d52d7968-6000-4daf-b3a9-282d238bce7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f33286cc-1608-4ea5-9825-ab0fdbbf2b7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "700a0f02-78ae-4d72-a3be-9b2d83bba355"
            }
          }
        ]
      },
      {
        "id": "316d027d-0d82-4065-b983-9d5adf74343e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f2c45e54-f446-4ead-92ff-34cbe85f8dcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4aea195f-7839-4dd5-b5a3-cac8e03d3212",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da07989a-b42a-46ea-b873-15bcb3aed774",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c35cca9-eddc-44cf-814c-5996d455aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bb604d-ae49-4b73-8ebb-1a792e19c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18230a79-465b-4a7a-80a4-f31e92536af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c0595-f8bd-4745-b944-17ff3372871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cabeb3-383a-4122-94ab-7ec2aaaed82e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149b0b56-8405-45f8-b899-d8cf766d5731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca05cda-6638-4bf9-b9e3-d578b0d0a478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c108f0-eecb-4b39-a102-75ca8572c759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ad3ee4-3398-46f1-b8a0-fc132664c32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daed5c8-14b3-4d7a-8754-22501a8ba7ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85547a5-5009-46a7-8a08-7d8334ca52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ea4b74-4a64-4113-adf9-eb03bc48b814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d812fed-6388-4010-b5ba-2cdbb0e7ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dac2ae6-5820-47f6-a327-f5ff90499bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ebe611-e92b-4994-805b-0764ebe149fe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204c856-14c9-4961-859c-f8e410621e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1978f3-27d7-415d-9683-310ca7da282f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11384a6d-3d52-42df-b898-1b715f04f94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ab447a-6997-4c2e-8f2d-85dfcdc368e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09caa2d6-3ac6-4eee-a76b-998735135a8e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec5ffd8-2560-466a-be4d-edf9ee412244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d12fd3a-f61b-47d3-81af-d87bbd7360b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc5b4f9-7c8c-4731-a50a-e86f54d299ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b930a7c-d4ec-497c-a69b-da208c0f368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d4aab6-832c-4f57-9d9b-f8fbb6fc4741",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a9967e-bb32-43b4-8ad2-81bb20570d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e2d46-16ff-48c0-a7d6-67c168c72e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747a44e3-073b-497b-b623-0e9286a98ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0b5c26-a617-4e0d-b41a-2db53ceb34a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1195a01b-18f0-4b17-bd8b-c04612cf1e62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa831ac-9469-47fb-82a8-b74f4c42468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c68bc25-9764-49d6-8f43-a15e4cff707c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ca6c1f-8424-46ce-a821-bcd1bfb758a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb33ba23-768f-4ee8-a0f1-49c986a998d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5965c5-5f44-4434-82a1-97a05f70c24e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e286405b-f03b-44dc-8c19-830f7dfc6396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67850846-3900-45f5-a623-f5c8df19f6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52719f9-37d3-4329-89a3-5171c1d27483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "955d8691-5786-4eaa-8bd0-ddc7477fd8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01aea9f-7bed-4134-807e-0dfc08e06c0b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc81a688-70ae-4274-8f76-dd3a22678dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9691e7df-c28d-4903-9cba-19cd897c39fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510a71dd-5cff-4e7c-99af-1a2716527395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "720d47db-e2a6-4b93-a092-e47da81c5683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dfd847-a89a-441e-b3be-f7dcae59e384",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaab739-980f-498a-b011-e8523ab1071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79243808-96cc-47f1-bd67-fb1c221b8128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c4bc4a-c33b-45c4-81f2-ec077b291b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7c1570-9fcc-4b40-b549-6b9ac40df716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0b14d7-02a8-400a-ad3f-e97a39a21a09",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5567e2-8b93-4992-b69f-83c14ffedd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c25342-9017-4dd3-8db7-7f3512cb8f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16317ed9-12be-48fa-987b-7fa6810de48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39e5aa00-b37a-4e06-8439-2dc1d31c5f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a024bb-c61d-4b5a-b5ee-94225ccdafd9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21143f-6411-4604-970d-e903b6948783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1920b3d8-005a-4df6-9bf2-cdadd86afa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bb7ce2-a9cd-45a4-ac1b-16361f3dc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7753d199-576d-4cd8-8a01-60551393b654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8e1e1a-bef5-4861-87bd-78a7c8580329",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a43b9a1-a245-4b14-ae1a-6fa8cc2016f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df54e7f-b00c-4389-bd59-9181f0eef013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97efb8f6-7fb2-4f87-8d93-26208c811995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90336a32-83f8-480b-a47b-8d1bca88de19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7312bb-3bc0-49a0-af51-80aec7401e03",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78ffe50-565e-42fd-b3e8-66438f21d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975f45e1-1da3-4439-9c08-30fb8b090b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9362c6b8-30bb-4db9-93a4-8a37da014628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51cbef4-0608-4157-a8e7-321c745fa166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02c030a-3f19-4ca8-ad30-c8ab839967c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca9988-cf76-4bbc-a225-18263b62a745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faa1067-e023-4ff1-8680-99037d081b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b5874-a520-46bc-a388-346539ce28f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4cf45f-d4fa-48b1-8654-f4373fbb285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cd82ab-28dc-4de4-a82a-f8b281738b80",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80dfe14-cd6f-40f3-b392-1566e8a42700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59110b41-e5f4-4318-b000-5108c1d91fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd7186c-a47b-4562-b7cb-d44c9a3d2fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4c4c9f-52c8-4d4a-be3e-3fcb4c507df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea09bc0-6407-4492-83f8-26b334070403",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669ccce8-314d-4a24-8ac6-28dbd01b87f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb580c1-d2c6-4552-9c79-fd0589cba9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52f36c1-c125-431c-bbec-5a117df87c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d2af11-57e9-4f75-a840-971a6368e267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f7d42e-95f0-43db-ae69-5eae9462f475",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5105a9e8-8425-4dfb-8532-c24cafce1712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea16d39-a2f9-4476-91e4-1210e9ee00ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1179e9d0-07b5-4727-8cc7-9916fbd72c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9464b8e4-b513-452d-9906-4cbdddb66636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7868ac-41a1-42c9-8c0b-8ca68341bf70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0803d077-575a-4ac1-94c0-e9cf16b083a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5477bb3-41ab-4b85-bfb4-c09772e2bfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b86a41-7488-4160-b64e-d5f4ce91e35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aa18ef-dbe2-4851-93f9-e1499e9e2b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d018b-b4f8-46fd-b07d-e6d402b852cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c99f1ff-cc3c-4080-b403-5d58b30c7b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8717a3-76ac-4ad1-84b5-555c14c4b7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ae531-bf1b-4a3a-bc33-dd41c3b9d9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6c04b8-7d26-4aa4-935b-8d3ced0f3163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb4c1a9-aece-45ba-b7c8-1c4b7a982753",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c39f7c-8d47-49d7-99ae-4324fc8f6228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790e8203-8975-4271-a6d7-60579c742104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cee3d47-5c5e-46ea-86be-7149ecd40859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "763119ac-bee9-4930-9999-232750e18ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b7bf15-90ce-4009-8ad1-bfff43f41a39",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7c6764-de81-4ccc-a495-a78d17155cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7882875a-eeaf-48bc-9bc8-ea9f4c354145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30592e51-30c7-4a52-be87-a619dd720c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "000dbfbe-e268-4b99-8909-740f0f6bc432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e6c491-5014-4b98-987f-b3e81bb23b92",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869ffca-3c63-4ff3-a72a-d9afd7240441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0537536a-e8f2-4778-a6ed-4273202d962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac1ab1-e2cb-4b13-a29c-466439929894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b19be91-4aae-4e59-839f-b44dff9fe4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6a1a94-467d-408b-ba4f-ce0fd2930169",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252bb60f-2528-4e66-a864-83b56b8e9d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0761b63a-f031-4e1e-886f-73917a6890c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96903b4e-c104-4ee2-bad9-1867618173b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53333592-54b3-4013-8322-3121e49003dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dabccd-4e4d-4272-b8f5-3a0428087a6e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38681e1-b210-4289-91ee-ea6ad35fe78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd65a8b9-a3d0-4da1-8457-830aa8d253ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a1e71a-0fbb-469f-b6f1-50de0ca78022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e700e288-8380-482d-a0f5-f090beca7781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7003863-beab-4bce-abde-7125b7a7da0f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab13b7-2447-4b44-9d7e-0377914dbd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aebcf6f-8fc9-4325-a131-f36baf5e6c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63daf93-f638-44a5-9892-06ad392a9166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "586b9815-928e-4a2d-bdd7-903d1efd303f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a7738d-6ed6-4045-83f3-7f768e79ac0a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4cc502-b8af-4a77-bca9-4227e7362bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7734bc16-a3b5-437b-ad26-f00bce50fe6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfc1919-f3c3-4296-af76-35c8053f2ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e675e8d-225e-459e-8360-59c376aa2bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43f4abb-7994-4486-bbf7-813a1dab171f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619f4156-3e0d-4fd5-97e4-660bd58cb18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c734f7d8-9f06-4c46-815a-cf80e0882945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ca6e4f-18a8-4711-93af-6db1f73fd009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccefd96c-d800-43fc-9caa-e89c293a4ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4309836f-0c1a-4fec-a5dc-45bcb7c203b4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e50f374-db30-4e48-a1ed-75f072effba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fc3c98-1655-4abf-ad59-ed355f24d662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2dd36c-9452-4b2e-a2f2-4dfd2ab9fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88dbb4e-0a0f-4c7a-9276-582f91ce12c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4214c0d-a2ea-4f58-9541-d3b5b12bf8e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2578ba44-1880-45f6-a615-df548575be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de82c318-98a1-44d2-92f4-c0b6b41fab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25606c69-cd84-4d43-8903-b2991159bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c9c2f5-c9c9-48fc-a93a-7b2ca8457f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c554a8-6f8d-4c98-84c4-ae6b40bdca8f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8582d163-ed39-45d3-ad68-99ff10f3bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a25b34-8729-4157-9d43-7a01fa1a66ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f77512f-b8b8-43c1-a962-f8f3f0636f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340de998-8432-40fd-82ae-2f1217431bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d219f8f3-ecd0-4704-9b4c-c8b51df33101",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c144e34-c209-4e35-bb74-43f45412e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7d6a52-41b9-4967-ae71-d21fb6e8c936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ab37e0-e8b3-46e9-aaeb-4dc52cb65ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbb62e7-3b62-4a6b-b988-9b0d4e31e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd03db-cacd-48da-bd87-36882f2ce696",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ceaa6b-869b-4756-92f3-575317e3b56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f666ce3-000f-4909-ad6b-ea8bd367dcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6c588d-ec52-4e06-b9ba-f776191331f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b798f2e-03fb-42f9-8fa1-e1f451524a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4bdeae-ac5a-4ac8-883a-970bad4c554c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae0b0e0-8def-4013-a8a4-f1185f491d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c8aa7c-fb3a-4f11-a175-31311ae722c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e5373-5189-4cb6-ace3-90fa019ea4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552490b3-90fb-4827-8047-638f286b8446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a515f9fc-255f-432f-a86d-de16ff7e50ef",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e6fe0-150b-448d-b4f9-247d14d3c4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfc42c1-baf0-43b1-8020-be0ec2964355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae24db6-7359-4fc7-848f-0ec80bf1dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fff6a25-f629-4a0c-ba56-4ce9563a68ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63178b4f-4543-4750-b0f1-4c2988ca9935",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca64ce-b8a3-4dd7-917a-cc8de1fbcad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb5a97b-6141-4d5d-b10c-b9eef52766b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2856e1a4-a931-40e2-abda-5e0b1de7c27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2feefa09-7b0e-4203-bea5-c3e6e5ca2f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531c6498-b9b8-44e2-a086-b0dc547ca250",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77895108-d052-4b1b-a7bb-524426d25816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835f5b2e-ac8e-466f-b763-389677a44217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def8801f-1817-41bb-ab20-2da147a76000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e505eff-b6ba-42f3-be48-7eb54b5de737"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d9aed16-4cba-48b4-9396-c2976314a5fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ab0d28a-6d8d-442b-8bd3-e25ab270cb61",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48eb248-2536-46e7-b3f5-7840c7ce25af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0121d60-4a03-4341-b72e-20153cb00adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f843b85-877f-46c7-8d59-cce7e05ea7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "535317da-c0b5-4f0b-98a5-78d98b856897"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1737291-fecc-4273-b386-8c5f11f1ce4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd639f54-0606-45ef-bfef-29f8793cce3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e25be46-70d5-46e5-adb3-fee5d11edbca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a54b8189-d193-4d87-9d18-fc05f13769ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d184a6ff-0b87-4813-8ea9-1fcdf84c6048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e045271-4dec-40b2-84ac-72539d1ae7f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9464a4c1-98bf-488e-bfbe-b8c105345bf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0233465-076e-4bc5-89a5-b29bbbf8e2a5"
            }
          }
        ]
      },
      {
        "id": "d53cb898-3952-43f1-b07c-ccbf8cfebb9d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7fc699f-59a0-4b3a-86d4-e3f0957eff8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9257cba7-b795-4463-8101-e9f9f04e9c1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab6b5700-da77-4af2-b986-61842f98bf37",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6e2f0e-1cf7-4798-aff9-6b3fe4c3d676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194e94be-64de-4838-8c9a-0e11ef37f788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc10346c-a937-4ee5-947b-3dbffbb4bd38",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cd9805-cb34-4b43-a1af-f9c26da39533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f30fa8-efe0-4213-aa1a-aa549fb1baa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92cbbea-d51d-4782-91f7-cfcc63b44904",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9771179e-da59-41a3-9551-9dcaa1e1c904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56eccc9-103d-4c69-b0ba-05aa9c6bb814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2c3b96-3942-48bb-829b-12a48cfa4157",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39787ea7-45d5-4ec8-aa00-4207543b7f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413deb47-8a58-4e46-94a6-527c8ee55cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35bb660-8c81-4e77-9dc8-1fac2a75f9c0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aaf3b5-0487-49b1-a119-6c4d0a34bf2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d586c7d-e8ee-4465-aa36-4c0d72dc3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7d2a47-5215-4bbf-bd15-e983a8919ad2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f2b192-6af7-4f39-b5f4-f125e81c52e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb9aaa9-d977-4e5d-99c8-eb3422ec87bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c87cb2c-059b-463e-ad86-9a4df31084ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238e2d1f-a555-4f71-bf9d-25a85dc9cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8338dd28-2aba-42f1-a02b-172b58f9a06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daba2331-6be6-4115-bae1-75238bdbd9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e56bd1-9485-4aaf-9fd9-e07dda569271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4329d3a8-76df-4f86-b1c4-7cb6b573422b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c701d7-9fe1-4d67-8feb-61b3694dbee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5acecaf6-31cd-471f-ace5-9ba530422466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0ea9c3-5471-477e-a147-5740398da695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051058cd-8bdb-4a79-9df5-bca714288604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016a994d-75a5-4e00-8079-59437b21f613",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a282591-0b0b-431f-b4f6-a8f597224bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59a5d01-06f7-4f03-b96b-fbc294ab117d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6924a-87ce-4ec1-a234-cb739ca76725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c0e990-ecff-4580-a5cd-dea16305a0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0cd0c-b6d0-4a41-b270-ad641733beee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c7559-bb3b-4669-9e5a-e54bac01ec74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67499121-ae4a-457b-8c56-34e607300c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9017338-aa99-447f-9c35-9e41987af100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b480cf-3a6f-4b8b-bfd7-c1e2a092063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdbbfa5-276b-4384-ba6c-fc7ff9a28cea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d852302-a09a-4965-b748-bf664752d665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c17c759-41d2-4171-b31d-243195413a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bbe23-e199-4806-a62c-14a9070cb834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced81829-7d5a-420b-a634-458d61030ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791dc76b-1044-4dbd-8760-4fc8fe5a96b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed8f92-f24c-4f73-9a19-025d3344a9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2706164-02fb-4698-b780-54b543afbcaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e205e9-b3f2-426f-8cb0-9e357dc84a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464b3791-6efc-4d72-b7c2-17026b7b5dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d4c401-97ba-4f1d-89e2-a5b26205f086",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e015ae-d59a-4034-b06c-620d7e1b4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f289e383-351c-4a99-8ea7-b31cf6a03cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d210ba-1b26-45f2-8c9a-2b5f6cde2e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57be6ff3-ce77-4296-a327-cfaf0d09765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b613adf-2cff-460b-bd1f-66caed284455",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b025b66-f838-4191-ae9d-5ea9589c51cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91f16ae-2a63-4a22-9025-d4e57170afce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdcdee6-2eaa-4a23-ba40-6080c989b81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389eb632-c943-4cc1-811a-f365bdbe3a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa937287-86e6-4dd1-ae13-e342feb520c0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e0be99-0a31-4417-9b1d-da7661c10921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe21239d-92e8-43ee-a34c-4dc737b57831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d78df0-5601-4921-9701-74136f5bb836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46a128e-62f7-463d-917b-6d84aea93b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8104fb06-3251-4982-8729-23795890413f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b45e57-7cf5-404a-a11e-11ce533aa182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ef2638-6c0d-498d-8bd8-d4e8993f8322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad31295-b5fa-4c91-a908-f720eb7e1992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dc0e8d-b3b1-4527-a261-63270f52f7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da862c2-e574-4865-9f84-b9d3151958d7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300f7e0e-a50b-49fd-af1f-e399914963fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30156da-b0d2-4685-be7a-c8ec70f18180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c12b8e-edf4-4c4c-a282-c8a5c66af4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81e4045-efde-40e3-b94c-64e983e0cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a408edfd-fff8-4c79-9989-ba4866412863",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007af17e-54c4-493e-bd60-be8c283b254b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef847c5e-b163-42bf-b67b-a42598a535e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f844d11-1611-46ab-8abb-1958376665fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d62beb-39c4-4129-82ab-e15e7ff38baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9deb3f-31f1-460a-91e7-10026b9fe828",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db6252f-f84f-4433-b42d-b70e2a1d9082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332602db-9eda-44b1-a170-4eca6d4d6057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f041eb4-290c-4872-8420-f05e88a98320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e346f17-1511-4814-84cc-31e44d486540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05723872-9f51-4f19-925b-b79a7b408697",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb42988-8dc0-4f87-a715-00afac5c90a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6217857-a656-424d-b327-291c63c8f64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b39da7-e3fd-485b-bac8-3c99d7a401c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7136e59-875d-43c6-91a6-08c6b1867637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5591a2f7-7cbd-4c85-957a-8bc0c38815c7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b7b1c7-cca1-4b35-a5ad-bc68b01a7f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9c8a35-c069-4199-a2d9-d9590e32efe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d2bef-c9cb-49f9-b433-b8801d3f3491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38975f00-7d3f-41cb-a2b5-37a5f36b6e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369c4069-9492-4afd-a737-4f4040b464c5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fecc0c-2f4d-491a-bfab-d95b74e84180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261cd463-3f0c-4258-ae4f-6d7f1bfa23b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d60fd23-6bc6-4131-b1ea-3509a1467f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42acf7e-d2d3-4701-b7f2-1f56b622066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2cdc7b-4e52-4c36-9c4d-d750ef24e9a1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8e3aa7-130f-4e10-961b-ff80cbf14522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c15bc9-d6dc-4165-840f-e0f9330161c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19801478-9aab-46f8-8d7e-d9068f08d3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23858b0c-157f-40de-bee4-534fd7798694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e0e4c4-1503-4fc9-b49d-19c411e5f111",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdff07b-b2ad-41a8-97db-c9157b346c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3161a4d-0cae-45bd-8ccc-44ea2219e009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744804bf-2b5c-4dfb-bc35-5076c99c05a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7255f11d-9b65-4a7c-b8a4-428f1d1bfdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bebb476-9bed-49a1-b82e-02231dadd83b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8134f2-5e17-4a92-8815-6699da1b81e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6a9f77-0c93-412b-b4de-2c82da9980b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d896c31-31dc-4dbb-9159-d3f5be362115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164648f2-477d-4c29-b2d2-a5a1996188a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b54167-0771-48f7-9d51-be05b48aee10",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd487ad-1ee0-477d-9f63-f4238722e94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5c056c-1952-4e68-80ad-ca4f1a86dfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a68ee-d9c4-46af-85c7-2ffdc8b61dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e0870f-e70e-449a-b1b4-837317970968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc848cb-a0a3-4503-ac9d-5ab29cad717c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ed2485-f2ce-4475-aded-cd9a17162074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9051cfea-e633-4177-acb3-2874b78841c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2707ed-fa8f-4ade-b86f-09c5880b562e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c6faa4-4455-45f2-b70c-bb1e1c13f558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31b687e-9102-4384-8092-a38c942c8767",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186746b9-9d5c-40bb-a4f0-9361db3c7360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b34f52-769f-4fb6-b953-eb4d33b01177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c7053-54ae-4644-8bfe-4f9a32720c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514fe952-9bda-4816-8dd5-d56e13afff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f87840a-bfbc-4da4-a9d5-68d55c55f3e2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c9fbe0-f18e-45b8-a81a-0e9dcf5574b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3062ec40-b512-46a1-8b2d-7ee4a5ea57a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da24a56d-6218-47f1-b051-f79c53680b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d227b376-eb89-436b-99d5-db4fb58487ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df68af02-c3b8-490a-9f21-0ff092963b2c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32743c8e-9ea8-4c5c-970a-a23dcc4a8d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddca560-a1b6-49b2-9683-39f633df64c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d722b3-7b1c-49e1-82cc-fdf424ed6936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c477e3c-c2a2-4de8-93db-99d5917f6914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760189ed-a228-4f10-8d52-01c16caad750",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e029de0a-112a-4462-87f1-2c06509e049d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff89ab6-db24-41e2-8e58-0fe84dfd11ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ca3b1-30ca-4d3c-a971-a40b0c4f9c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f95b24f-e503-4af0-a867-c6491df00423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27ddbfc-6b63-49ee-b008-45b021675d9c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83cafb3-480a-4088-9f4a-dd07882e13c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0906b1d4-bd1f-45db-97c3-1ce0fe695a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6633585-8e31-4027-bd4f-416d4c84d5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e13992f-5b57-4bd6-b4da-5d49b548ff29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d111b9-2758-4c7c-9cc6-a7ad613f8b95",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aedd19-a6e7-41cf-8e4e-9c4a02fbc2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38ae4e4-a1fa-4175-92eb-56d6d57dadce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee5b5d4-4269-42ac-b645-f527f63a7ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db848cd-e1f8-44e5-9196-30f313334d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a894c2f9-f33a-4809-a857-40c5240a2d63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c2251e-5b11-4a47-b7dd-766ef0f22a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78554fb-09b7-43f1-8b9e-a3e45a567aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af3d7a-0ad6-44f7-b6ad-16e884cb4958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e826b281-2354-47af-abc0-7881eab4588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9dc909-be3b-44bf-9062-92db3ff99426",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16510f5f-1674-41a5-b7ae-6434fc9b9b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55403051-20be-4bbb-be48-b7b7aaa18fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f2a2b6-c352-483e-9c9b-1a4e12509174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e85e802-6d04-439c-91f0-1a93b07e9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d012f8d-5a2f-40d7-adfe-887468e94a57",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee045dba-73e0-41f0-bab9-442a25008398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17037de-66ac-4791-8f24-35ef9f9b4a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a0cb06-7c8c-4cbb-9dcc-07d0566a0334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620d4d37-f205-440d-96b1-247e8d3f10b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad78611-803a-46a4-a3a7-6120f3e2e5b3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da7093b-6695-46dd-9d3f-89ba7a8a5f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c503b02c-e622-49eb-a052-54c3c672bad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519e38eb-03a7-4dd0-8809-345511cbc5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d259e9-c178-4891-be98-1b5503d840a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fcbe99-0b7f-44fe-a457-014e4c18ce86",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a9bb61-79ab-4e27-a43d-b1310bdb9c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8cf171-fde3-410d-9eea-be1a193f6eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425a1bd7-0c7f-4c9c-bfaa-f1363e60523a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08d209b-42f2-4c90-830a-7d579eefabdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d722b6d3-dc0d-4167-bfb3-d329be6bd4e0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5542dc9-3c24-4b5d-b1b9-61d906534dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa55723-23aa-4dd1-881f-c25a0599fed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d2787a-151a-456c-8547-af38e2aaff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa5d085-5e0e-48ce-8c5c-b8f29235262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28dbe48-75da-4187-809c-31004c6136d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec42522-b062-4cc8-a7c2-3330469b4029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe10447-2cc9-43fe-b536-601bfbff0c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e44d25f-c0f1-44c1-88f5-03ddcb91a962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb685e5e-4e23-45bc-ba1d-e54300e35d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7258162c-a26b-4e53-bb8d-8e460a6f811c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d708dbf-22e3-4a40-ac16-d35168ea3b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657403a8-7298-4883-ba31-92476ebfd198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aa3ae1-b91e-491e-b7ba-c273033a9a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe95135-4f5d-40e7-b7ed-292c0319750c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d16ae83-ebb6-46e6-b9a2-d6ae2c1d8a94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565db118-74dd-497a-a805-7de0e917dae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2925d776-6ac9-4f4d-bf27-6f676ced7ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44b8710-57dc-461c-be49-b7d020504538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb49cd5-f471-4d32-9c37-02737ce19711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a5a192-086c-4c12-8c36-6ce92339c88d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f8f1a4-0ffa-4718-bd46-874b211f5047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a70020-7e50-4514-bcb3-2664af8424f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ed77c0-50aa-4c7f-b314-53393aa5c64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a814fc5-cfc6-4ce9-aeed-5a11cebd1daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8795a223-0b8c-4b5e-bd47-74b4b733809d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3180b5-7d62-4b07-9a5b-196c3475e9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e13f77-eacf-4f88-b2ff-6c6edbdad046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecb9329-e707-4667-88c4-483b7169778f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e3c1a4-7b45-4c37-96e0-8214c346be11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca935a6-9cbe-442d-bb3e-8e8177c6add2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e165d41-df93-4b48-8953-5ff913076217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64bd72a-d0f7-4942-ab80-cf4b4daeeed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9f49a-e264-4404-8b54-85d8b7beb69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd40834b-5323-41e3-b8e6-40725b0e7ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c911ed38-cfca-4f6a-95e3-39c5eae13dbd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c1c489-c869-42aa-9882-058faeba2428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fdf55a-49b6-439a-aef2-a105bb219a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa7eb03-a88a-4260-9b27-58f29387ef88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8254abb7-6c74-4288-84c8-680bc2182519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31eb13f-97da-4ee7-b1a4-eecd3cf08af6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50145127-a2d5-4690-9cf5-60113616f9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ab19a0-2ce7-4ba4-9115-841fabe6a973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b037f972-d557-4d3e-9368-cbabdb7fe119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af41678-a268-41d9-83c6-b66537f21343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613fe9c-e0cc-4dc3-ae5d-8d2bc2e828c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5b35f0-f161-417d-8a5c-a6a19ba072e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff02369-e2ca-4262-8f7f-626f74e3abc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768b432a-9e3a-4056-b60f-80459ded344f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbba540-19ed-486c-80f4-5e77f678a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2772f72-2e48-4ac3-8fe7-7e8cf8241cc6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b1e9d7-ac26-4d23-95e0-7906a93f7c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c3f769-5d87-4904-97d4-5ef937424da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f502357-5fbc-4bc4-8d8e-26e2e8a28f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b25ddb8-2a26-4dc9-a651-ae48834bafc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa82546-7601-44e1-a3f6-9b60b3ad29b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e9350-f7ed-463b-b791-6b005c6632d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856dd082-e929-4e84-b621-6e8532070f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da26f1e8-4abf-49d5-a581-745ae6b80f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11368e4a-e2a0-4036-aef1-394192ae713d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f7a26-a098-44b4-97bd-0a562805f99c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52a965-71d1-4ce0-bf05-d4ceb1160f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e28c79-528d-40ce-864c-b19e8006edfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb8dee-b1a2-4049-835b-d689651fc1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf9bfe8-ab52-478f-b1e0-793d9e7b2867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f0651d-8107-4197-a508-b82fef9829f9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be6c925-3834-4ad2-aeae-6fa20f9b325b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff482d5-4b47-4553-950f-229385437dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a8713e-a511-479a-8882-53e9d26a83a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3862bc03-2135-4735-93f4-0f9fa0ccb1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832d20cf-66fa-40fe-9f77-36264d841952",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aea43c6-e3eb-468d-9912-c043876ba040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43655756-b6b9-46c2-b448-4ce0efe45ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78a8a6a-2b29-4394-897a-d5433b0be4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c95c000-1369-49e9-a2b7-6e5fad94614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7974bd-3b36-40d0-b09e-43f00b0ec935",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c183e62-5982-4fe3-846f-c68791628893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0612bd5-c3a9-4be0-bf11-f27e90354672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e49bf2b-7b0d-4869-bad5-4b03555f2f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acbe4b5-a92e-4514-8237-6021f820f9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa7ea72-cf1f-47bc-8350-bb64d37c4090",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7488bd7e-d21a-4a1c-a008-8afa4a611291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a008b12-118c-4dab-a410-1a9b2a33714e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5f949-b9dc-453f-8c37-8a2e57e6ceb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c53d5e-5e43-4bc3-8fe9-7d2ceb78184a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faef7ef-5268-4d0e-b142-8eea48aa1221",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b277a6a4-5671-4eda-b378-c95ba8a0ecad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dba4b86-2f39-4699-a915-d40a61fa05c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b08b252-26ad-4517-9805-2f5d29d3c4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af56c34-3013-470d-8d51-f6c11aadb3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5835b81d-85ee-4286-82c5-32cd3c3c058f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa790d3f-3e3b-41c8-92e9-feb66141dc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399132b4-57d5-4890-85a2-73867d476101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316db12-0960-453a-87d8-ed267150e580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553c81a6-12f9-41f7-ae2a-e1289e48bef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f0a6a-ceb2-48cb-9098-45a0f7bf3428",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee700c59-8767-455f-a07f-44dd373ae76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0246309-ee8c-457e-90c2-82064e00e1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf237510-b5ba-442d-972d-a6e70f429666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb88f9e-e1be-43af-9e3a-94669079a054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909fa038-0aaf-407e-86a4-cdc939a06fd4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef37ba-15c8-4646-acfa-7716bf20c42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619e786a-d359-406e-8009-a15272949a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5bbd5b-d7ce-491b-803b-18a97949b221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d98cc8-8544-4b3b-84e1-f334edce992d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7980df-c6fe-4f56-a427-3d6ce5dc46ec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecda5a5a-1b4b-4a65-8a2f-18af5dfe6033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1531a1-b310-4e65-b142-68fed45bfcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85572bb-8866-4e7f-89e3-13da8d42dddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953378ae-1018-4214-9426-82a0b63e1250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb94a14-9371-4920-a5fc-b077546a9edc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe16e8-ad41-4034-83e7-82f650cf7435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39157a9-5e9c-42bf-8d11-5e034e7d691f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a76208f-1304-48dc-b8f1-7255fa45212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef596e-f643-4c66-b7c1-e53a49a9f6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad99238-48a4-443a-8dff-20ee3bda3ae0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f63a74-3f30-4530-9aa2-7805947bc459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e509d8-90df-4717-884f-e575a5e308d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c39d95-550d-4232-8411-faf654c3de70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bc2e4c-d085-4292-8846-cd435e6cfd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d49835-203c-4e73-a1a0-0e42b002ffe2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc2222f-345e-439a-b943-ff9b62f45a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940664e3-a769-400a-8f6d-864922148c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16b6d3f-e0e5-46e2-944e-a71819fb2720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539f52f4-1426-46ed-a2b3-b4c24bb5fdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3123441-f724-4214-9ad9-f95d2b04364c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc3a4d9-0aab-4fbe-9f4a-4b418b07d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45aa3ebd-76d3-4560-8eb6-c2ef72c7cf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d646656-9bca-4b07-ad86-424dfba76f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b26af6-6626-484a-9d21-93250406854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596ac362-89bd-4575-9abb-48df524a83a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27c89a-86e0-4fb1-ba84-e3a5545a13c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10f913d-925a-40c9-b8d7-2b2d3b5b22a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4863e2ac-1fa1-4473-bc7a-6b838a0ca2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33706276-2ef7-402e-94a0-f81c80e7313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d25fc-47b6-4c1d-8de3-0d7f80cd1bb7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a55ca77-a344-4e8a-959d-0765e6898383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bdf52d-b201-4580-8d39-51190eae4eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b80b7d8-5031-435c-9fe5-ade56a5d4410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbde45d-ca96-4fa0-8b75-88c26f13eb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb93a0fc-ee20-49e0-9e63-d9187e81660c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf9d082-1f3d-4267-843f-d4c2504a9241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07afb75f-60d5-4fbe-b863-a9633d104fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6cbf73-081d-4c19-b992-e5ede0bc4d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514c1b51-e934-4581-b714-c7dc66046d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f207faf9-926b-48ee-a21f-029d399327a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d2de29-2b82-4db1-9792-2a6599dac275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63efa129-d9f5-481e-981b-a53110300cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df4592b-734b-491f-bf92-628cc20a4fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0495e2b8-087f-46f4-8cf9-6c7b60c043ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199f1029-7ce4-46d0-bc33-572a0cc8e81a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c79fe4-8e6d-4376-a44a-7d66dd48360d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761e1b17-74f8-419e-8914-83f8261720e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b48e46-8ef2-40d3-b41c-0918880da144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04361607-8f51-44a4-972d-ef6232d40079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1acc70-9cc2-4bef-a8be-f5caa685b4a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ea9802-89e4-47f8-b093-e383a5edf379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8f72b6-274d-40a0-b57f-ebae1859b5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b34b7a-eb6a-4286-abc8-adcf3cdcf241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb4d768-416a-45d9-b584-a1e14030402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0f2d06-d2f1-4658-a9fe-efa8d11532e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5745d65-6c79-4687-9fda-dc8645055b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fbf15b2-098b-4e9d-9c65-c739f8770a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8934008-06d3-4b85-8eb5-e9d553621600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f9754e-ca28-49ed-a580-c5324fb8c677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7079156f-dd5f-43da-bf1b-de2f3f6ce2d4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e4aef9-6d8c-44cf-b8cf-a85d94da3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a93d646b-e93a-4d9e-b8d2-645a11bcd4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2347ac-cd87-4d2a-95eb-148c77ba5302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0307477e-2e6b-404e-9b46-7abe3ba264f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d6cf7f-8595-4305-b200-c36bf36ce8c2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7286313-6879-4d2a-9ef0-1b8ceeccf81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3287cba9-acf5-4c2c-84a0-d5fe4e8ff83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85681a16-e8ae-42cb-b65e-0af2aacbec38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47f784-aae9-4a96-9a8d-e816267767cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1e333-890c-4317-b9ea-065742678b84",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cc25e6-e58f-4d86-9a4a-c809a83a2e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660bcfa2-c0e4-43cf-a783-83c60d81c576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c465bd-96d9-4453-b4e8-7cd6598ed4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3df9a6-447d-4554-8fa1-be3226f38368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e186b-1e5c-48a5-b46c-f15842ea5b99",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64849fb2-4df0-4e53-9bfd-568f6a4289de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ef65f2-369a-4c2e-81d3-d9db2bcbf77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37e427-3e82-4972-b332-7ee4fc8b7e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13a49cf-337b-4c60-9d0f-bdabd7bc742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f78834-9011-49ef-842c-8d3a1befbf1e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f56fc4-8817-41d6-b67a-d51b903358d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5966dc83-529a-4366-9298-a8eb76014983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3118ef90-9415-43f8-8b43-80ae98c42065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb8741c-90df-4589-af1d-46efeee3593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681af4ac-a4ee-47f2-a42f-2b8a7f4b796d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf5454-55ad-48ee-a5a0-ab7487c6fb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7dc6a8-5821-4fff-b2b4-aca558cf3862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a7d88-5aa1-484e-abb3-d539c1861b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065f87a1-09bb-480e-a31c-fb2259a1f5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab4149b-8c51-4b75-a433-94cb912cf2c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851b0b5a-4bcd-4c04-b359-6fe5d3d25931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90636723-19a0-4e78-b348-53133f98610d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bd4dab-1cd3-48ee-9542-f8935b6d120b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f77546-065d-4b68-8e36-58798bccf5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8bbd66-d9f7-45d6-8f9f-865f03a0c096",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd9278-0107-44e7-80f2-ba10f1196ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e85d0e-089c-4892-b189-a74c52758d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2a515-652c-40bb-a690-a4fed378a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fd6df4-f832-4e0d-b6bc-cc6453b7e2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872b2b5-2fdb-4da4-8608-4fb076978a5b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac832678-5487-457c-be1a-b375a3a3e7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4756d72f-7014-4eac-9767-b8f4008d968f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86405b7-3bf3-4cce-8141-cf7d291075ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307160e8-fda7-412b-9b6f-978130cc7fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4310bd-ce1b-406a-8cd6-9de5e952d7a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee205450-e421-41a3-be3a-0d93a1ff0d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b61908ac-8773-4c33-89ad-16b40fb6ad92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9a3770-1764-4800-98a9-000c9264448f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388191cf-61e9-4c98-a267-770a1b75101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f72735-9610-4807-8e80-aaab7ce48950",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac88f96d-5b9a-4047-9f27-fad3f3a1cfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3bb1c0-ea46-4094-87bd-aab91afa1780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d2daf-12c2-47a3-9a18-59eae52e6e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e12c464-851c-441b-8eb7-85026647b3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8455a0be-a6d3-4fb4-b55f-39f056cb3ad5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f7ea47-ded1-4001-9015-ebc4681d57aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2ca3e7-a030-4b4e-8b09-ce3e9e8006fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe320f-6da7-4d43-a3d7-afa0753c9d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5617c02b-9880-4202-b57d-dbf4825acdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbad7c4-a2e3-4afa-8785-74169fe32300",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0759ed6-556a-4fbd-870e-421075d20460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e183bb03-dabd-4f9c-bf18-ae26155e303b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14ba959-daa4-4e0f-9b87-80cea6fe4e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc005df-57b4-4811-b86b-1a90c8b5374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f9f138-19da-4de6-992c-8c1401378eba",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fa15c9-2830-4542-baa9-563d1d5942c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b57afe-5a49-434a-962b-c9905b0592a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726e914-6698-41bc-aced-1013bb1d8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2150e7d0-7d3f-4eee-a1da-a6424d5130fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf9e91-c042-4c09-b12c-db1e39eb491d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c00014-ef22-4335-b6c4-18b46b566574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc39b6fe-8fbc-4edd-acea-a608cd076765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743add5-bb40-428e-bc22-6b9c4acefb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56676dd8-8243-410c-be17-7f42d79c305d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b818e7fd-cf40-42af-ac7b-d7b26b2ba9c4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed355292-2f98-4ec8-8560-9ef98cda945d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbcb98b-5b88-470d-a7a5-a6ba12577726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17967e59-be13-41b7-9769-66fbc40ef931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886a8459-7ba4-4a78-a9c4-9c522788f9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426e60cb-e382-4daf-bacf-9b7c10f50434",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa76637-2418-4713-8625-61468ff844e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c835784-d613-4955-92f8-4d548a8ab146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee33cbc-06c2-4d1b-842d-ebd393a5a0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9612be6-b1a9-4191-8c09-af48b3c16f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e8bcad-e548-4cfe-bbcc-c7b5ac2f6399",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1e6d89-10ce-4591-8a9d-8ccf80f2dab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afdd7e8-1204-49c2-9e29-ec864813d581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262d717d-7e80-448d-843f-ac1d6787f530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3960cc88-b361-4ecd-ac08-d1baaa077315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734151d6-e130-4e9f-a91a-3a5c5b0f6cb2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c77bf8-46e2-4d66-b72e-0bcc8741ac07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c564d0ef-f824-4223-876f-8e8dc8ab2856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505c259a-ea8c-4d6e-a95a-100e71d8f326",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7277f9e5-d8e5-4710-a824-9315cb14804c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf533537-3e16-4e2b-9557-c3df7870d0e1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0d2c5a-b594-4492-ba12-d824e7a0780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3606b1-e907-4ecd-a88d-f2d2af6b755a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1479cb-aac4-4afb-9009-22418c46427e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c8a162-a7f6-4573-a146-daf84b5b6f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd87bc-e62c-41b1-bc5a-3f42be856298",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa598ad-1dc0-42d9-b7ae-0c44d1c1a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161d447f-7958-4b17-b456-ad27cf304ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18b9255-c8ef-47e6-8905-07f9cd3ed91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3fac56-02f5-4a16-9923-994b795ee345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9dddd0-50ad-4132-9d4b-c28f439f1d4a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14766df6-1122-4fc9-b470-1aeead0805f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff87b5b6-5294-4e9d-8bf0-865dede9e9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b82fce-cd35-49ee-ac30-add8ac5e4209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bafacc-bbd5-44d4-b07d-624883af5f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0154e72c-bfb6-42cb-8385-5d1d800bb0e6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22118194-e026-4c13-8677-102a5ad3258c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509f8a45-0145-4a71-98ce-c23a236a3c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595907a0-cf17-4fff-a42d-5a851a1af0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ef2097-aed8-4f7c-ae26-f35dc3b982f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a22592-72df-4154-8e8e-2d32b4e7be32",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b089d1-1bd8-4a0c-88ff-655f860d5e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f888dcf5-ed3e-4d28-9305-4ac7e6b07ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19c9c2c-56db-419c-b121-b5351a5282d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ecf6ef-1297-475f-83be-68d69de48e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa58a7e-4d64-4985-899d-a334d09aec52",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb78f0f-7d69-4aae-ab65-f15977a15aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803c13bc-f4d5-4116-97c4-5ad756a7ee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4861c3d4-88f7-4c0b-a100-1cd856e136d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5e627f-25e2-40ba-9883-23b377150d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a89b70e-dfbb-4c9f-b3dd-38bad0299945",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b156c382-7a8b-42cb-b61d-af0505953dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b64af1-e3e4-4a43-a216-0fdddffaa5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b9cee5-627c-4a37-8e3c-f78c88bf9e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328883e6-f4db-49e2-952d-20fede56dd62"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a348194-32ed-4e22-92c4-e9d5fb727367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a0e0dda-1c6c-44c6-8718-ebfa4fa68d5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c73bb2f-4b10-4fb2-968c-0ca87ad91d44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84f649ba-b34e-44f3-bed2-72941460a36a"
                    }
                  }
                ]
              },
              {
                "id": "28ff84ed-b09a-4796-9b61-7bd6b4ba25f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "156768a6-74af-4f94-882f-d3f55dbd4f40",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d93b601-dac9-424a-af7b-3c8350540820",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4150259f-08f6-4b1d-8bb3-23dfb6fc79b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1e279f-bef9-4e7e-9166-6b1eee9a0ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60713eda-e3ed-496d-a48e-838c3c64f6c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6255c56e-abca-4fd9-85b2-a45b2e7d8e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b336e460-dab7-4ef5-9db9-e7c725597270"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7cb9e06-5541-48a9-ba08-64bafb63c707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "240af6c5-4eaa-48ef-85e0-63bc626a75df"
                    }
                  }
                ]
              },
              {
                "id": "bb21ab70-441c-46bf-aae5-4b4851bdea53",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "38e8b794-5239-4551-902d-846aa2e1f853",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f988964-4797-4935-b1b9-1abd94fc37a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b417e079-ae0f-46c5-91e4-e9d3d606eaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118c1296-e71a-40a1-b269-f92db36013c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608790b7-7d86-4f33-9385-d02865ab72f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c533c7e-740a-4781-b791-2ab3924d1a39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "879032ea-ec3b-4da3-82f2-93a2c8650d42",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d13137f-3391-482a-819d-a7b39241352d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5a2992f-fb04-4133-b826-2c6f4caff062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78fd46fb-cc5d-4135-807d-9f9312b67714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970f4b2a-b182-4b19-abb5-40019ac7765d"
                    }
                  }
                ]
              },
              {
                "id": "86e98519-b903-4e5a-b29f-093122549bc2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bce6041-9462-432e-aed7-e4e679324685",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "925257e1-52ca-4c03-82f8-eaf34db20931"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a9aa239-7fd7-4d66-b7d3-e2a330a891f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07d068d9-9b22-4b3b-a3c1-490626ee84b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff631ea8-2256-4c48-8ddf-9442776ba449",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "838fd14e-c41a-4da4-b982-660dfc4af062"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a2f3765-ab50-4120-a103-509234686309",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "422c928f-a8f3-4893-9898-4a04539b3d7f"
            }
          }
        ]
      },
      {
        "id": "5a73f1f2-fd3d-42eb-acaf-7dac9af450cd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0f668d48-2cf0-4c75-a68a-07d8bea75764",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4e0927c-eb21-4bdd-b76b-4c2ab8184d41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60144db3-a568-41a2-9bbf-b1433b2a2a09",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6a74a9-4863-4f04-bb26-2685c4ad2a72",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a3c9d376-326f-4f69-95b8-4cf0f53cd7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cf12f3-8c14-44a7-b2ff-3cf8a4c0d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c965ca9d-fad0-4782-99c8-1bbe130558f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a74c3cc-4393-45e3-8f1c-aa240560a543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5090f78-4ca8-4ff6-b36a-0f570a17033f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f42f509b-96f4-4325-a2b3-61d6f972801d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8c23762-5937-4ed9-8b9b-56a55c27f4d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8416d96c-bfcd-4c80-b406-07bd08d2770f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27900a9b-cefb-433c-9197-2bf35695ffb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "381d8def-0f1c-4431-810e-79ef7b164edf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eafb6108-4dbb-4f13-8f39-cf47dcca62d5"
            }
          }
        ]
      },
      {
        "id": "6a0472bf-b33f-4ae5-88f3-11537a65b5cc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "11626e32-1ca0-4d46-a177-1480cbaf3d9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85f723c5-5235-43f0-9f10-216c8a22d254",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1445cc44-f68f-4c83-959f-be5012aea64b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b479d84-d48c-4023-b51c-c1690ac4b039",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0a72f17-72bf-4af9-bb1e-56f54550b99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a281a903-d039-4e64-89e1-1e8c3fe850c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "234870d5-5ce0-466b-a201-7a34ee234b5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb425864-bc53-4465-97a0-064168495d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0a44a7c-d1b1-406a-86e2-2b8b48c1844d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dadc9ea-c2db-4417-8c1b-6eb8bd17d7ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f33519-9209-4a1b-8305-407726cb2a57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93c17334-0184-484c-8050-cc0fb769dc0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52282d85-0732-4695-98e8-16749040e259"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e877515-c4cd-4b96-aff1-74fbfced4c7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf3f36a3-5d03-41c3-94b9-8823f3859976"
            }
          }
        ]
      },
      {
        "id": "b2ad098b-598f-459d-81f3-dd4f2c42ac81",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d2fc70b2-5a15-4d5c-98ca-2949178de164",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111cc5ef-129d-41ca-ba56-5a6b4509537e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db71376c-6e74-436f-89b4-8a06ce138c1c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afb1231-7ed9-4493-8e01-bb2f2fafd540",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e013db2-9198-48b9-8380-360b596f7015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51781e7-4376-4911-adf7-ef74c51b32b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b0ab8d2-fa29-4690-aa9d-3a5039242378"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61a68324-4ed2-47b4-8f88-8b16399ecf5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0acf1d57-a2ab-4da2-85f1-742df551957f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4009f02-8e6a-4ff1-b0da-a7a5d0f84ab1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f8b7b61-f7d0-4abf-ac7a-3284da6f3b21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2320dcc1-1647-450f-b0ce-2e4a3f263ba0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f0949b8-6ce7-4ac6-a4c1-19983f32043f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b296e3-7dd9-47b1-89b0-48f596037012",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "577b7327-cc1b-40d3-a3f5-1dda1c4843c5"
            }
          }
        ]
      },
      {
        "id": "59dc9b3d-73bc-4a54-b460-c976f94c783d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a5e36ff-b907-443f-996e-d895f8a1f3ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c209e030-c2b4-4de7-b55b-858e5a8ec395",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "59dcb358-84f4-47a0-a407-d58e35fc42d5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "768f221f-7424-4f9d-92ac-7342af2e9d02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04e69966-9001-462c-967b-4cc647fcd8d5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.22807017543862,
      "responseMin": 5,
      "responseMax": 712,
      "responseSd": 44.36025467151196,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702168731677,
      "completed": 1702168760088
    },
    "executions": [
      {
        "id": "71751ccf-77f4-4d4e-9896-74227b0c5646",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "311057fb-943c-4afa-8597-08649eb7c39a",
          "httpRequestId": "aff979c8-eea9-40b0-ba82-ee2d3fdf0482"
        },
        "item": {
          "id": "71751ccf-77f4-4d4e-9896-74227b0c5646",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35dc16b0-eb31-4cc6-99d0-8695bf5f010e",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "3a0d4623-4d62-43d4-9614-188356e2167b",
        "cursor": {
          "ref": "d3590b2b-76a6-4918-a802-9e089ef67719",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f314fa38-1057-4508-97eb-6a89f2b52451"
        },
        "item": {
          "id": "3a0d4623-4d62-43d4-9614-188356e2167b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "356a4a78-c181-482c-b655-21dae5991420",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "efa80c20-969f-4ca1-a884-7f3711529bc5",
        "cursor": {
          "ref": "dd72f73d-fc5d-4008-848f-fa160902d77a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5a4b3012-3cdf-4b10-a35e-c497a111632c"
        },
        "item": {
          "id": "efa80c20-969f-4ca1-a884-7f3711529bc5",
          "name": "did_json"
        },
        "response": {
          "id": "48d32214-a155-427f-a61b-52a2c70f0ee6",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed54663-03a1-4d52-bfba-bc8f1319d15b",
        "cursor": {
          "ref": "fb1110f6-509e-41e2-9b3c-5b8d0119d703",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "926779d7-4591-43c1-80b6-0e85677a7ae5"
        },
        "item": {
          "id": "aed54663-03a1-4d52-bfba-bc8f1319d15b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a8b39a15-687a-41da-a8db-b89630db0fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed54663-03a1-4d52-bfba-bc8f1319d15b",
        "cursor": {
          "ref": "fb1110f6-509e-41e2-9b3c-5b8d0119d703",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "926779d7-4591-43c1-80b6-0e85677a7ae5"
        },
        "item": {
          "id": "aed54663-03a1-4d52-bfba-bc8f1319d15b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a8b39a15-687a-41da-a8db-b89630db0fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f75f77-c895-4b6e-9281-d2bc3e5e69fc",
        "cursor": {
          "ref": "8e2b61ab-78ab-4486-9a17-c3dadb3fd055",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d9d007c-ed9b-4914-8847-a1829308f3ff"
        },
        "item": {
          "id": "68f75f77-c895-4b6e-9281-d2bc3e5e69fc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87474e75-556d-4714-ae40-335d1e31a0ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 188,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8765bf53-e1ef-4159-8157-a67727f7d72a",
        "cursor": {
          "ref": "8f20ae12-0c4c-4de3-ba72-53ce7ef797f2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3f9b5fed-e07a-4bc4-af81-902ceb5de95e"
        },
        "item": {
          "id": "8765bf53-e1ef-4159-8157-a67727f7d72a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5da6e597-e193-4643-81f4-986624776b1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5012ba4-3075-47a7-b656-6acb10ecf411",
        "cursor": {
          "ref": "9a4cb986-daca-426c-998a-b96f079c1d7c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90f2a83b-ffd5-4c7d-ba9c-59c439fa2c4d"
        },
        "item": {
          "id": "a5012ba4-3075-47a7-b656-6acb10ecf411",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "971cf6aa-58a9-4f26-85d1-059e59b4eaf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b7147-de3f-42e0-a4ef-8512658ed02d",
        "cursor": {
          "ref": "8bd1e0f2-c43a-4910-a7c6-1be6f24dba5a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e440fb71-2eb2-4ea8-b051-b9f02ca2aa96"
        },
        "item": {
          "id": "fd6b7147-de3f-42e0-a4ef-8512658ed02d",
          "name": "identifiers"
        },
        "response": {
          "id": "51236c89-177b-4bd8-bada-0b6b02beccae",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffc3bbd-ccf7-45fb-b657-4ed12fc64f44",
        "cursor": {
          "ref": "40fbf81b-1f65-4efd-af6d-2b6e496200e2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65b8272c-9451-4d89-bc00-3abeb158225f"
        },
        "item": {
          "id": "1ffc3bbd-ccf7-45fb-b657-4ed12fc64f44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5cae66b3-3734-45d9-ac39-0d4be0210a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba78d06-384f-427c-919a-3ab33dfa83ac",
        "cursor": {
          "ref": "3efa0ad5-02c4-4d87-8d51-e63227ab3f1c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72fd2c5f-5cc7-4913-af56-0a41890fc2b1"
        },
        "item": {
          "id": "5ba78d06-384f-427c-919a-3ab33dfa83ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "db2cc278-e3a5-455f-9a8b-0f103f2ad039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eca157-3feb-49d8-a1d3-79015852d6e8",
        "cursor": {
          "ref": "16e10586-3e0a-453b-b33c-166e064f6eda",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "937e9085-4d15-4256-8a96-fbf9553602db"
        },
        "item": {
          "id": "39eca157-3feb-49d8-a1d3-79015852d6e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ebf10798-f1be-469c-aca4-6c0ffc7e031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3469fc40-338b-4281-bf75-2f597835c08a",
        "cursor": {
          "ref": "a5ab5756-0220-41dc-972c-b873045a95c8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6e61ad00-63d8-499a-91a5-c36d0194563a"
        },
        "item": {
          "id": "3469fc40-338b-4281-bf75-2f597835c08a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "00f979ec-eb27-4ab7-a97e-f44826eba3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9847e2b-f861-4870-9752-8b21e586666d",
        "cursor": {
          "ref": "979c49a3-b864-4a9e-a4b1-fc9cb0c8fac3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cf6b747d-0c57-407f-997a-7b60727c1ea5"
        },
        "item": {
          "id": "a9847e2b-f861-4870-9752-8b21e586666d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "49657ab9-8acd-4b70-88b1-49e6ded80058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37841a90-3a81-45fe-8f42-e1dfb1b1ae2a",
        "cursor": {
          "ref": "b66dec9b-6e32-400d-a97a-1567c460e9f8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aea6d857-131e-4d99-8eee-65c6471863de"
        },
        "item": {
          "id": "37841a90-3a81-45fe-8f42-e1dfb1b1ae2a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a28f1abb-5824-4346-88a2-88b8a55cbaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7013cc88-987e-40c0-8b29-9ef72dffb307",
        "cursor": {
          "ref": "15301f14-6e02-457a-b6a0-6b4a25f83710",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da958df6-f8e4-4ed2-8f07-49aeda827359"
        },
        "item": {
          "id": "7013cc88-987e-40c0-8b29-9ef72dffb307",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b193e186-bf5a-4060-864d-5a3d511b212f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fce580-7691-49bb-800b-ba16393af129",
        "cursor": {
          "ref": "a76feccc-7003-4948-a37a-35dc4dca605b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8bbb08fd-f1b2-4074-a2cb-951aa9905caf"
        },
        "item": {
          "id": "83fce580-7691-49bb-800b-ba16393af129",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6128a0b6-aa71-41aa-bdfb-e5728a2d632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a346d59f-cc06-4635-bb0e-3e3ac46bee01",
        "cursor": {
          "ref": "6b838c2d-7647-46da-9cff-c6e0c9b1eb66",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3d377156-6014-4ea3-877b-6b6db612ba35"
        },
        "item": {
          "id": "a346d59f-cc06-4635-bb0e-3e3ac46bee01",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ab96108a-5f87-4664-9e8b-9057e43867e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473ce7b4-b9e5-4174-b02c-59efc93f2228",
        "cursor": {
          "ref": "6d57c951-1b8f-497d-9cb7-fbdf745a652f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93cce5bb-0eaa-4682-acc7-6552397eabee"
        },
        "item": {
          "id": "473ce7b4-b9e5-4174-b02c-59efc93f2228",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b337b0af-f2ae-46b2-8373-72d567d3ecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e9d576-be3b-4dc6-a68f-6d4a588b0dd7",
        "cursor": {
          "ref": "c93629c4-7d81-4ede-b6b0-3121e0b138e3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "60d0dd77-1515-4f56-b2fb-899e644d4dd9"
        },
        "item": {
          "id": "06e9d576-be3b-4dc6-a68f-6d4a588b0dd7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "49b084d8-8749-4c65-8011-4c9fe4e81182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0516b639-bd4a-43e7-ab7c-beaf0700f044",
        "cursor": {
          "ref": "14942df6-e4c6-498c-84f5-9d14fb2ecee5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aeb88353-0767-4ec3-b041-2fec4cc30a5d"
        },
        "item": {
          "id": "0516b639-bd4a-43e7-ab7c-beaf0700f044",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dc7f9dbb-3459-4369-b623-c3c619ad86ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0179b066-7872-4c71-a58e-a98a2a8a666a",
        "cursor": {
          "ref": "794c409d-93df-4530-bfb5-aa0f26e27aaf",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "447c3dcf-1568-46c1-9bd3-ce70624db24c"
        },
        "item": {
          "id": "0179b066-7872-4c71-a58e-a98a2a8a666a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ceab91d2-db31-4aae-8060-382d7566b1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62093ba-d53e-45fe-b074-6a34e7e430b1",
        "cursor": {
          "ref": "500fa6ff-75ea-4be0-8b5d-b4b40e783cb8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e477fb05-baa8-46b5-9e1f-c5fff8fb5c51"
        },
        "item": {
          "id": "e62093ba-d53e-45fe-b074-6a34e7e430b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "14601835-800c-4adb-8e21-f745db634313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716ec49-754a-4b36-b3c0-05f6b2ae539b",
        "cursor": {
          "ref": "74a8cfba-a894-4f6e-85c4-80db0566a872",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6814223b-736d-44ab-bbd5-83678e8af625"
        },
        "item": {
          "id": "4716ec49-754a-4b36-b3c0-05f6b2ae539b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fbd1ec46-4c9a-4988-b9f7-fa3b2b4ad952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc78596-51eb-424b-869d-af42bd17b85a",
        "cursor": {
          "ref": "30d08e39-fa73-42dc-8813-1201a31abe79",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "effcbd20-4813-46e9-89c4-ad9db17fbf1b"
        },
        "item": {
          "id": "7bc78596-51eb-424b-869d-af42bd17b85a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "be202db4-47c8-4f51-9ed0-8b037f7f80d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c750881e-d2db-4079-9ec6-f66433cdcd8e",
        "cursor": {
          "ref": "24190c61-609a-4b38-b71e-916de4161197",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4edc374c-c95d-4107-a1e1-5450bad9a668"
        },
        "item": {
          "id": "c750881e-d2db-4079-9ec6-f66433cdcd8e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0c5c7bd1-51c5-45ba-8cdb-fc7e6bf237cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ab895-12b7-43df-a8c5-833db6db8d96",
        "cursor": {
          "ref": "4f61e48e-d704-40de-b5f7-5c7bf08439f9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4b87bb13-7b69-456f-9771-fa8538d832a3"
        },
        "item": {
          "id": "6f2ab895-12b7-43df-a8c5-833db6db8d96",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3dfe679f-eae9-4748-8895-b6f87ad5744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795767dc-3b95-419f-aec0-e40b49a747ae",
        "cursor": {
          "ref": "771dd85f-1257-4297-93ae-bcb7b6bc4c6a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "89810264-17ec-4bd9-9b33-4a5b018717df"
        },
        "item": {
          "id": "795767dc-3b95-419f-aec0-e40b49a747ae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "28eaa74b-af11-4359-9664-7edd895cc01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fdc84d-9501-4b8e-a778-ffaa5b60b721",
        "cursor": {
          "ref": "2226bf9b-7cbf-45a6-9945-6bf5b341e7e2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "35c16186-fd4d-463b-9e20-9b84da20996a"
        },
        "item": {
          "id": "61fdc84d-9501-4b8e-a778-ffaa5b60b721",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fe183731-6296-475e-9100-75c514d1045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c9b75e-06e8-40f5-afb1-e717540ab6d4",
        "cursor": {
          "ref": "c5199d57-64b9-4ef3-b3c4-5b960a1c6f21",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dd16b5f4-6063-4689-be6f-e168a5df2369"
        },
        "item": {
          "id": "c2c9b75e-06e8-40f5-afb1-e717540ab6d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3bdb0f55-c3e2-48c9-aabc-3cb21099c907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0c6611-752e-4006-b6c5-d1c0f9eed634",
        "cursor": {
          "ref": "0334ffea-19e8-4c3a-91e9-9ff42787a212",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f54d126e-ba09-49c4-85e8-6b5bf27b44f8"
        },
        "item": {
          "id": "7f0c6611-752e-4006-b6c5-d1c0f9eed634",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c6934491-c3c2-4b5c-8f81-ddede6d2138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b4a758-ff5a-4067-9bdb-0145732550db",
        "cursor": {
          "ref": "0e58aae1-82d3-489f-91c6-a6860ca2d446",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e01b10ce-3dde-4750-b014-f3682c0e1635"
        },
        "item": {
          "id": "a7b4a758-ff5a-4067-9bdb-0145732550db",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3db2bd45-174f-4fe5-aa74-75fb1ae14f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac09575-ad81-4e7c-994a-bdc034786809",
        "cursor": {
          "ref": "ad670561-9485-4de3-92fc-f5f2700209ad",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1595602a-564b-4ebe-a2e8-f31467690b14"
        },
        "item": {
          "id": "cac09575-ad81-4e7c-994a-bdc034786809",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4517fdc1-9436-4f1d-a4f5-533ea387c718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a7352e-74b8-4334-a0da-1e5cc2f421c1",
        "cursor": {
          "ref": "e9bd2a06-5f9a-4fce-b866-8e134ad3bbeb",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d2def30f-57c2-4114-a144-19c80d83b56d"
        },
        "item": {
          "id": "f4a7352e-74b8-4334-a0da-1e5cc2f421c1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "be7aa2b8-1219-42e5-9e50-ab002cc4680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a7b7f5-8943-4b3d-a66f-38f2aba3dab0",
        "cursor": {
          "ref": "17847809-caba-4380-a9cd-8588a50c20bb",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b61474c-91d8-40d9-9281-968800dcbb38"
        },
        "item": {
          "id": "33a7b7f5-8943-4b3d-a66f-38f2aba3dab0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8a2184ad-86d8-4632-8653-f52c1b686ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbde3d4e-61b0-455c-8d7e-27d2fd2ad87e",
        "cursor": {
          "ref": "42ce9a88-ce09-41a4-b1d7-eac4a57dc6d3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c91b1691-fc81-405a-b3ac-85f9762a9294"
        },
        "item": {
          "id": "dbde3d4e-61b0-455c-8d7e-27d2fd2ad87e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b27d5d0b-1499-4da0-9b5a-d5a08bc12d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bfe476-9654-444d-a685-ba6100d12249",
        "cursor": {
          "ref": "4132cf94-b3c7-4327-940d-c92a6d9cae52",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8eadfdcf-aa5b-46ff-9ffc-438ee8d9ba50"
        },
        "item": {
          "id": "c3bfe476-9654-444d-a685-ba6100d12249",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7567f43d-348b-4918-8385-90b5b059fcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef176ad-97fb-4398-8054-7f03884dfe24",
        "cursor": {
          "ref": "d75672dc-46f4-4223-a6d8-6d6c0feb6047",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c2446009-2d68-4e7d-96dc-25ca868ef60e"
        },
        "item": {
          "id": "eef176ad-97fb-4398-8054-7f03884dfe24",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "32f4be1c-f45f-4934-99f4-e10ccd3be0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626bda07-4ed0-4552-b48d-8a552e485919",
        "cursor": {
          "ref": "4e4b8bd1-919d-4f21-acb4-3c236448bcbe",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "15b69111-63a1-4c3d-ba3b-ee448962d0ce"
        },
        "item": {
          "id": "626bda07-4ed0-4552-b48d-8a552e485919",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1738da19-2055-4eb0-b8f7-793eb1863e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56356d24-249f-4a17-abfd-a1aa94695be9",
        "cursor": {
          "ref": "5f3fe82c-2f23-4e14-88c9-5fd6493bcf6e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "802f9c43-bf49-4989-a983-bab1d4fd0fc0"
        },
        "item": {
          "id": "56356d24-249f-4a17-abfd-a1aa94695be9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "923076fc-1d45-44e6-9507-6d3f68d13cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b73980-758e-4d1d-b916-6203752c2f0d",
        "cursor": {
          "ref": "02354049-7fe0-44bc-988f-4af466f70110",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b483fb9a-a595-483a-9b9f-98500bf985c6"
        },
        "item": {
          "id": "67b73980-758e-4d1d-b916-6203752c2f0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e4bb6914-38a2-433f-83f5-b35884b02920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5a2cb2-355d-483c-a04d-203f94170b7b",
        "cursor": {
          "ref": "b1dc4af0-7d46-470e-ae48-65cb40423a29",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d58b7cf5-bd18-41d6-94ab-d9f49be8493b"
        },
        "item": {
          "id": "5b5a2cb2-355d-483c-a04d-203f94170b7b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48116b5c-ea13-4773-adba-3399c3fa025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab98ca8-1dd7-4742-98a3-37e08196b4fe",
        "cursor": {
          "ref": "4ca4bf00-2b1e-41ed-9dae-d9ed939f7a0b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "68215b63-a4cd-4af3-acba-692d562d5f6e"
        },
        "item": {
          "id": "6ab98ca8-1dd7-4742-98a3-37e08196b4fe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f281127b-4693-476d-9309-e0966028b9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5701a6b-87ed-41f4-949e-ac95da500372",
        "cursor": {
          "ref": "793fad4b-3ec0-42c4-a1a5-8c5db76929c2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6e11033f-fb08-4c40-a613-fdb3cac3939d"
        },
        "item": {
          "id": "f5701a6b-87ed-41f4-949e-ac95da500372",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ca48e32-fcd9-4f76-886d-e4d82d860bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf7e488-96e3-43e6-b2a0-0bff30357753",
        "cursor": {
          "ref": "601491bd-2c31-4c7a-9c44-6418719f6101",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dffdeb8f-aa5e-4035-9335-6b58ef5090ba"
        },
        "item": {
          "id": "6bf7e488-96e3-43e6-b2a0-0bff30357753",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "da6759ef-c964-4620-aafb-e626525aa091",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2328fd2-102e-4838-b58c-2ced72b9bb1a",
        "cursor": {
          "ref": "0932c622-5980-41d6-8f2b-5ae796cb4021",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3cf3c8af-2457-4192-b852-4eabb8d08e9c"
        },
        "item": {
          "id": "f2328fd2-102e-4838-b58c-2ced72b9bb1a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "decb6396-948f-42a8-ac08-5d74634f3cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d602448-7151-49d5-ba9a-515762127caf",
        "cursor": {
          "ref": "edc2f884-10c4-4cd9-8228-de7ab0e0b33d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cdf90791-1e00-4fcd-9687-47f02ef8288d"
        },
        "item": {
          "id": "7d602448-7151-49d5-ba9a-515762127caf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1107c245-ec71-4764-b2e3-adce64c9e036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71279a3f-ca8d-40a4-b580-621149ee634f",
        "cursor": {
          "ref": "6c495cfd-3e9e-4b68-95ae-23c1641ac6eb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1167a351-c1f3-43e7-bbca-03e881ac0ed0"
        },
        "item": {
          "id": "71279a3f-ca8d-40a4-b580-621149ee634f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1c84fb05-dd42-4cbd-badd-1ee17e006b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830ba4ed-3896-4563-83a7-378b403c1616",
        "cursor": {
          "ref": "8e8a7a1e-8852-4ae5-be00-f748d27cf670",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4a2d4257-fd9f-44ce-ab6f-9d3f5d31cf72"
        },
        "item": {
          "id": "830ba4ed-3896-4563-83a7-378b403c1616",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2c8936d4-e55e-4daf-acea-1f96ac2cc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c2bce0-1be4-498a-b00c-c1ee61626ef0",
        "cursor": {
          "ref": "1e90d075-c5bd-457f-a284-6133e3def06a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6351c6e7-e63e-40e6-8050-943769d92b3d"
        },
        "item": {
          "id": "a8c2bce0-1be4-498a-b00c-c1ee61626ef0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "36ef8557-c8a9-4659-aec0-7ac7b80071e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f333f5-ad88-46b1-928f-e0233155b210",
        "cursor": {
          "ref": "8e2efb8e-bb41-42a0-80f6-33c46d259c71",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8e571527-0a15-4a5a-a8f1-b606be9eab11"
        },
        "item": {
          "id": "a8f333f5-ad88-46b1-928f-e0233155b210",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fb81783d-3b44-4ded-a6a4-b1febadd91b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2dc82-ecaa-4c74-ba4c-a65ff59ee4d3",
        "cursor": {
          "ref": "2fc61d3d-80d6-4831-9188-9396509c335b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ba0b3a64-90f6-4ef9-9d9f-14c4d21f7799"
        },
        "item": {
          "id": "83c2dc82-ecaa-4c74-ba4c-a65ff59ee4d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4ccde4a3-5dc6-46f2-8168-6024cff27b60",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178ad17-46ea-4b8b-9ca6-18a25dacaee8",
        "cursor": {
          "ref": "bcfa9b26-fb35-4ad3-a018-196b3ce2e9c7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1146d93d-b214-4667-bb90-c126082743f8"
        },
        "item": {
          "id": "1178ad17-46ea-4b8b-9ca6-18a25dacaee8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2751ec94-1ee2-4207-a33d-87e8cf205fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5046056-424b-43b2-9a86-20ca62f8360e",
        "cursor": {
          "ref": "dd6c99d3-414a-4d7a-865d-5b12ab748f93",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6254c746-4a51-4a59-b5d2-c67a5a68a1ac"
        },
        "item": {
          "id": "c5046056-424b-43b2-9a86-20ca62f8360e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ae17a1e-ac43-4234-b46d-b89b41753d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d4cec-8a1c-47f9-93b8-7de668738c0e",
        "cursor": {
          "ref": "318ff112-9a46-4761-8ff4-c0b64ee5d266",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "02f7f7f4-24f3-4d0c-b235-d60ad47c11c4"
        },
        "item": {
          "id": "b82d4cec-8a1c-47f9-93b8-7de668738c0e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa79ce70-0ff0-4b69-b77d-3785d9095ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f912a38-6bf1-436e-8481-445dc66515c0",
        "cursor": {
          "ref": "880f4ff7-0b22-42b0-a91b-92e296198709",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "312221be-9bec-45a2-a2eb-1501f18e741c"
        },
        "item": {
          "id": "2f912a38-6bf1-436e-8481-445dc66515c0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "70131958-89fb-4a82-9a50-82f26b927a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8dfaf6-d5b1-4879-a2ba-a9fcf597aa47",
        "cursor": {
          "ref": "8cba2163-1749-4783-94ca-1ea9e68b8012",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0a91277e-7a91-42d3-ac90-6ee712ace6eb"
        },
        "item": {
          "id": "0a8dfaf6-d5b1-4879-a2ba-a9fcf597aa47",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ae9252b5-1025-4667-92c9-3cf2b3766c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5a497-a73c-4d99-a051-b04871aac784",
        "cursor": {
          "ref": "ea596e02-8479-446d-84e5-108ab51758a6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aac10d6e-c3c7-4da7-a48e-a57d0de0bdeb"
        },
        "item": {
          "id": "86e5a497-a73c-4d99-a051-b04871aac784",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b6e08448-e6c9-4f05-85c4-d65649d74cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af9cddd-3dc3-4d7b-9ffb-96d9bfebb43c",
        "cursor": {
          "ref": "e766eec6-619e-4fd8-ab39-503d85886c98",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ca2feef3-6f74-4145-9c78-9f2c548a5e28"
        },
        "item": {
          "id": "1af9cddd-3dc3-4d7b-9ffb-96d9bfebb43c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f598e616-0713-4e72-867e-a07fb4615963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e233e48-c85e-4d57-8004-b2a82c9fe244",
        "cursor": {
          "ref": "844ddf53-178d-494e-b919-054cb1a622e3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c5c6945-dbaf-4d0f-8a2c-0ffc01b8a19b"
        },
        "item": {
          "id": "9e233e48-c85e-4d57-8004-b2a82c9fe244",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a99ad96d-058e-42da-ac73-2ab5a75927a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f830d9-4721-41b3-b7f5-6d28682d9683",
        "cursor": {
          "ref": "73627c00-fa57-429c-8d59-db98e940ecba",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "651b5969-5c81-4966-b7b3-2a39bd408c7a"
        },
        "item": {
          "id": "b0f830d9-4721-41b3-b7f5-6d28682d9683",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "08197d8a-f1fc-451f-8d5c-9240d982a30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be58bc69-2a0e-41a8-986a-459a3628095b",
        "cursor": {
          "ref": "e5f1d294-1704-470f-89a7-b4e92101bd2e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e615cc22-83a9-4506-abb0-14ee8e4a0d4d"
        },
        "item": {
          "id": "be58bc69-2a0e-41a8-986a-459a3628095b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b334c90e-b3eb-4669-8a76-0125ab8ecc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8304bcc3-0a8f-4763-9f5e-df0300b33f1a",
        "cursor": {
          "ref": "50e99155-b5f8-45d8-bddf-5b7b72442ea6",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ff70ad23-3384-4e94-a099-62e462e26376"
        },
        "item": {
          "id": "8304bcc3-0a8f-4763-9f5e-df0300b33f1a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "53fc23c9-c7ec-4887-99d7-5d98322fbd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8b6083-22dd-4086-a94e-e2f623b69fb2",
        "cursor": {
          "ref": "a330b076-9d4e-4d5f-ae97-97a0bb8c8985",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4d72bfd-d760-40f6-b740-5ca9c2e0caa2"
        },
        "item": {
          "id": "2a8b6083-22dd-4086-a94e-e2f623b69fb2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89d6627c-efaa-457c-883d-973b0a21a95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b19572a-610e-4e8d-9923-d7530c369915",
        "cursor": {
          "ref": "4ab22e9b-39e2-416c-b879-d01dd3bc5438",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "50064afe-9b94-4be1-943c-a9bb349f765a"
        },
        "item": {
          "id": "8b19572a-610e-4e8d-9923-d7530c369915",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "08af938b-1749-4d3a-a162-26afc9853d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9fd58c-169e-4af4-9bf9-fbb550863edc",
        "cursor": {
          "ref": "947d0067-0c62-4da6-8340-512f28124bd9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6cf0ccd2-295b-43ad-a3c7-ce1f34c451ec"
        },
        "item": {
          "id": "1f9fd58c-169e-4af4-9bf9-fbb550863edc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "af3a52ed-fb53-4b46-83b2-ff18f9368c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d5c9d8-d7d2-4206-b3e5-98a98cefcfdd",
        "cursor": {
          "ref": "4d6b17fe-7bcd-4484-a418-9545f872f736",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a933d00c-38f9-496c-b7f0-7e38e06d66f0"
        },
        "item": {
          "id": "90d5c9d8-d7d2-4206-b3e5-98a98cefcfdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4aed3f1-eac7-4dee-8cbd-76c5a41ed1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a524f6e-de04-422b-85de-8083cd2678af",
        "cursor": {
          "ref": "bd7b965d-819d-403a-8ba2-e93c6938e666",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "68aa69e1-62bf-4536-9931-01f0ef2b9ca0"
        },
        "item": {
          "id": "7a524f6e-de04-422b-85de-8083cd2678af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "93fab04f-7483-45dc-a43f-922f3bd167b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ce0487-f068-4a3c-ab3e-82f10ea64f41",
        "cursor": {
          "ref": "1ee60df3-cb51-49fc-85d1-2e8f9440eaa0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4f325429-373f-4cec-9de8-690747d06290"
        },
        "item": {
          "id": "41ce0487-f068-4a3c-ab3e-82f10ea64f41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "35325cae-323c-4418-a64a-11d43fbbedef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7183776e-bc88-4648-a4bb-0b946bd2f611",
        "cursor": {
          "ref": "1cd24acf-7bee-455a-a674-5b0c3e71a4d0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "edda199e-06d9-4149-b5fc-b739b7801f76"
        },
        "item": {
          "id": "7183776e-bc88-4648-a4bb-0b946bd2f611",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7354c3d6-fd5d-4eb6-8798-3dc4b3ab4312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b24536-aa97-48e7-ae03-cc511a0dd7dc",
        "cursor": {
          "ref": "47ad4cc3-33d1-4e8b-9cd3-b89004114d0f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d5078515-3ac7-48b7-809d-5136ce21b189"
        },
        "item": {
          "id": "75b24536-aa97-48e7-ae03-cc511a0dd7dc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e58b4953-d604-4e30-8f87-45f6bed63dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283f898-2b6c-483e-ad9a-a21a769c53e3",
        "cursor": {
          "ref": "d33ffce2-a531-4a5b-b2d3-d920e10528a6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f95b0777-2808-4851-a753-0f29c67e63bb"
        },
        "item": {
          "id": "e283f898-2b6c-483e-ad9a-a21a769c53e3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e5d24a75-2ad3-4207-afad-c11417b34cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d90086-0d67-47b5-b346-6f6257f29eee",
        "cursor": {
          "ref": "21bdce9b-cc1b-4f45-bf26-6f5b26ac2667",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ba549fcb-04f6-4cbe-a28d-7675d0771dac"
        },
        "item": {
          "id": "47d90086-0d67-47b5-b346-6f6257f29eee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "55bef0b9-c669-4641-8ffd-c3d0dfac2990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f899afc-9ab6-418e-a446-c99e62b22e4b",
        "cursor": {
          "ref": "56a45f85-41a6-4a17-89ac-53a9821d6471",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6858b440-88e7-4775-aba2-a80808f3550e"
        },
        "item": {
          "id": "9f899afc-9ab6-418e-a446-c99e62b22e4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aa82f768-65a3-4989-8da2-447ca79538d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8a47da-aef8-4e5b-a475-4401050c0e7c",
        "cursor": {
          "ref": "f8b6f051-c10c-42dc-ac4f-624b6e9c8c9d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9461c234-7dcf-4901-aefa-2466fc4a600a"
        },
        "item": {
          "id": "ab8a47da-aef8-4e5b-a475-4401050c0e7c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e8502bdd-65e2-46bb-8e73-e733a6874c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c5f069-a77b-4ca2-83eb-498192663e16",
        "cursor": {
          "ref": "07524790-71da-464f-ab5d-3edea7edd5bb",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fd0b7faf-926a-45ab-bbdd-76e43058840f"
        },
        "item": {
          "id": "43c5f069-a77b-4ca2-83eb-498192663e16",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "45ea67ac-f6bf-4779-bda9-f085ac8f34aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1451f27b-1e67-4ca0-b46e-b19ba88afc81",
        "cursor": {
          "ref": "1a7e17d0-293d-401a-8f79-790d48f39fc0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "419ec309-3624-4e88-b8d2-d326b3d1f64a"
        },
        "item": {
          "id": "1451f27b-1e67-4ca0-b46e-b19ba88afc81",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5d724a54-c13f-42a0-864c-87cfa5b8d3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384c1676-cc51-431a-8fe3-7044cef253b7",
        "cursor": {
          "ref": "eeba8043-26f6-4772-b2cd-95fecaf9dc7b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51e7ab06-352a-42ea-8ab2-efec0aa87c10"
        },
        "item": {
          "id": "384c1676-cc51-431a-8fe3-7044cef253b7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2aeb24c7-79c0-45ee-8c97-5bef7bb12016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be3a60-9545-446e-9627-804d52aa8e86",
        "cursor": {
          "ref": "24724da5-43c9-4097-852e-3a7bba6ab38c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "673ed889-4e60-4c34-8203-f139a0d6d28d"
        },
        "item": {
          "id": "88be3a60-9545-446e-9627-804d52aa8e86",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "531aa419-76b9-4fcd-8450-f39d9300777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d11a823-4ffc-481a-b25c-bfe809cf9973",
        "cursor": {
          "ref": "bbc5fa79-7da2-4ffd-b7ca-1695bba522eb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ea0d891-1172-4306-afa6-6f41dba530cc"
        },
        "item": {
          "id": "9d11a823-4ffc-481a-b25c-bfe809cf9973",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bf3a8fc4-5759-4830-b6bb-6856f4071698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8effcf-885b-40d9-bae4-75aa4b105c4d",
        "cursor": {
          "ref": "d2ef84cd-f3f7-4fd2-bb3e-c5ce392a332a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "13742d31-efca-4bf6-8a05-6f91161bdf96"
        },
        "item": {
          "id": "cc8effcf-885b-40d9-bae4-75aa4b105c4d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b96886cd-7052-433c-be10-8465cb18eb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a847e6b-fd75-4658-9ad3-29ed490cb979",
        "cursor": {
          "ref": "0f452dd0-02f1-4361-9e1d-0f5f9a185d73",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a20c2bcc-db04-46c9-a0ed-916e68c8d81b"
        },
        "item": {
          "id": "3a847e6b-fd75-4658-9ad3-29ed490cb979",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7d65bf66-21e5-44af-943f-fb59554c0151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ba5979-fb16-40b9-bf95-598b21c36d37",
        "cursor": {
          "ref": "42e6331b-963a-472d-836e-7555fa81a5d9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7ebd5f9e-b201-4c47-8b5e-ed9840d362cc"
        },
        "item": {
          "id": "f0ba5979-fb16-40b9-bf95-598b21c36d37",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ceefb4b-7282-4816-b031-bac8f8e93daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db37e7f-0a56-47d5-9c49-4ff6ef9f8336",
        "cursor": {
          "ref": "80ab30a4-9eeb-4655-9d4d-eeb62f86a2db",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d77b0a2a-5399-498a-a914-885a888cd705"
        },
        "item": {
          "id": "4db37e7f-0a56-47d5-9c49-4ff6ef9f8336",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ebeaf1fa-456e-49be-a7bc-85d8ab659d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a49b1c0-1afd-4e74-bc91-517c038b686a",
        "cursor": {
          "ref": "252b7385-c53d-4e6c-a58b-c44f3dde8204",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7957f94-65cf-4893-89f7-03286d53eb41"
        },
        "item": {
          "id": "3a49b1c0-1afd-4e74-bc91-517c038b686a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f4f9697d-39f6-46ad-be3e-4befe5018d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b7085b-9c60-4058-82ae-b185838c3fee",
        "cursor": {
          "ref": "dcef44b0-a618-438a-810b-95f467c37052",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe38d5cd-42ab-4acc-b46f-d10a925d9a7f"
        },
        "item": {
          "id": "f9b7085b-9c60-4058-82ae-b185838c3fee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "691ede44-6bfb-46d7-81a8-e3ece7e077eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff987b8-b74a-44fb-a7a0-5e7a991be897",
        "cursor": {
          "ref": "d2a79248-2b8e-46ea-b5d0-1bafc5da3529",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a4063f61-cb22-4aab-ad5c-dfa528d99053"
        },
        "item": {
          "id": "8ff987b8-b74a-44fb-a7a0-5e7a991be897",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "96a7697b-d61d-4fe2-a976-7152e5765cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eb3628-6e92-42a1-95c2-1869b1b7ccac",
        "cursor": {
          "ref": "da9cd5a5-94d3-43b7-97e4-77b9df7df6e4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6d91dba-0df4-4fb4-9340-2d3b0fa5e64b"
        },
        "item": {
          "id": "03eb3628-6e92-42a1-95c2-1869b1b7ccac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f96c9163-0be7-44dd-ac96-da192805ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c62337-a7d6-490d-8c0c-505809f2fafe",
        "cursor": {
          "ref": "92259169-0ae9-47eb-9154-acc80bf6a05a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4db07e66-c1de-42c2-80ce-25ff57dd7497"
        },
        "item": {
          "id": "20c62337-a7d6-490d-8c0c-505809f2fafe",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a6880b50-0bcb-4ed9-a15b-f444341372e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57535a07-6a5f-4ccc-bcdb-acb0e4b72f7d",
        "cursor": {
          "ref": "53266ebb-8f08-454e-a56c-c95bd7ec86f0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7de48b92-8035-493b-891e-3fcd404abaa8"
        },
        "item": {
          "id": "57535a07-6a5f-4ccc-bcdb-acb0e4b72f7d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3ff040f-0214-4a9b-8bba-2b2b0caadbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702e6961-dca1-47f3-9792-273d16b9a86c",
        "cursor": {
          "ref": "08e1633f-18cf-4e13-9095-d12d55d52711",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "91cb6dac-5b33-4d69-adb9-5845655d888b"
        },
        "item": {
          "id": "702e6961-dca1-47f3-9792-273d16b9a86c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d3242922-ba15-40ec-bc9b-e6e872e92c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7b075-82f6-4814-879f-56e71cb360eb",
        "cursor": {
          "ref": "c1a1e41e-0e66-4294-b4c9-54395452b11c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7706ce7e-a544-4026-b54d-a1cb66573cb2"
        },
        "item": {
          "id": "5cd7b075-82f6-4814-879f-56e71cb360eb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5491d930-2ba9-4ed3-b050-64085dc33d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7a327f-6ba3-46dc-9fae-a055f479bc7e",
        "cursor": {
          "ref": "935f58b3-e56c-4586-add7-b6dfc4e2f89a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d037ccab-640f-42e5-bdd5-22a66b3047e4"
        },
        "item": {
          "id": "cd7a327f-6ba3-46dc-9fae-a055f479bc7e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ff4905d-13d3-4255-bdd0-cbf2c24c8511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c82da9-f8c4-4a6d-8eb8-bb42e568272a",
        "cursor": {
          "ref": "7b4cd45f-c27c-4faf-9e3f-99797b88019a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a8279e3a-2e58-4b48-bb63-a377a0e2482c"
        },
        "item": {
          "id": "54c82da9-f8c4-4a6d-8eb8-bb42e568272a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "53e45449-3b97-4856-9555-f48d4e9bc370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9924832f-4399-44c4-9492-57baf57ce894",
        "cursor": {
          "ref": "ffbc0b76-c494-4a4a-bbbc-db97d6858922",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3773ea01-84c2-4dbe-a997-1b1af71b2b57"
        },
        "item": {
          "id": "9924832f-4399-44c4-9492-57baf57ce894",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "87f1a46e-7297-4d7b-adb4-f28981ab082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629eaefa-ac15-4391-ad5a-5b4271ff0a00",
        "cursor": {
          "ref": "355f1c8a-a087-4b42-a2c0-0ae48c0d9a3f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2f71943-2bdc-4e41-8aaf-467f05cf2e10"
        },
        "item": {
          "id": "629eaefa-ac15-4391-ad5a-5b4271ff0a00",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a2c24a40-2383-4183-910e-a028f20c8277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982c31b1-fe56-4248-bd49-3bce2e777f2f",
        "cursor": {
          "ref": "f2658eaf-5220-472d-80ab-590cefaa21bb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c1be4630-03b1-4013-9bbc-63e65603544e"
        },
        "item": {
          "id": "982c31b1-fe56-4248-bd49-3bce2e777f2f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9843dab9-b0fc-41ff-86c4-b9a0cdaad16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c75e77-d031-4c9c-b520-d3a543857c96",
        "cursor": {
          "ref": "3215acec-b2c4-4834-9207-5f61d8a61943",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a91654f6-581d-4bbf-afc7-3def962e7e09"
        },
        "item": {
          "id": "d8c75e77-d031-4c9c-b520-d3a543857c96",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ef2ced63-3ff9-4af8-8a2e-fc353d055256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda9e8c-4d75-4aed-9f64-47398fd0d771",
        "cursor": {
          "ref": "aa6e6a19-c515-4bef-9e0a-33009581ef24",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f3c2727c-c8eb-4806-9800-93fcf00353e1"
        },
        "item": {
          "id": "ccda9e8c-4d75-4aed-9f64-47398fd0d771",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "00ac8571-24d9-4d7f-a784-fdaaac8ce7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e255367-373f-48dd-8ff2-fde3efb0630f",
        "cursor": {
          "ref": "d0d1c340-77be-4205-ae05-690ca0ebad4f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2e4802e1-2ec8-40e1-a223-e5e0b125b38b"
        },
        "item": {
          "id": "3e255367-373f-48dd-8ff2-fde3efb0630f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "519f98d0-6d25-42c9-8f01-7af9f0ec99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab4689-8134-4039-a59e-1910fd58e4d1",
        "cursor": {
          "ref": "da6baef0-b263-4c9b-89b3-da864178ee63",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "706274f3-624c-48da-9b7f-c15f5affca94"
        },
        "item": {
          "id": "bbab4689-8134-4039-a59e-1910fd58e4d1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1f200cf3-fdab-4f53-8465-637ecc87a3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c83424b-f9a6-4801-85ba-866e9e46082b",
        "cursor": {
          "ref": "936e09db-b9b3-4cd1-99ec-7d0d5380fedc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "254b1f79-9954-45ef-b454-ed75615897a2"
        },
        "item": {
          "id": "4c83424b-f9a6-4801-85ba-866e9e46082b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b4c3780e-92f5-4c29-8185-3a9deae2ebc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce38a254-bc83-40d8-bb6b-b5342eb0c057",
        "cursor": {
          "ref": "0b25cab5-d733-43ec-8e20-d6f8e4f18032",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "10999da9-5262-4eca-b5ca-9a97f8797938"
        },
        "item": {
          "id": "ce38a254-bc83-40d8-bb6b-b5342eb0c057",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "be3cd085-5d78-403f-b42c-1588bce4d810",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e8b30-a0ec-46ba-a2c7-f73bdf41e3a3",
        "cursor": {
          "ref": "aca5d496-04fe-462e-8ca3-2fe06a7e7628",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "088af27c-40cd-4fa8-9679-9b781a301db4"
        },
        "item": {
          "id": "962e8b30-a0ec-46ba-a2c7-f73bdf41e3a3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "48bc9c09-9315-45e2-9f49-f49313c7842f",
          "status": "Created",
          "code": 201,
          "responseTime": 712,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8df1cf-76c3-4b23-90af-a67c53653fd4",
        "cursor": {
          "ref": "bd55cff7-5f40-4c42-bcb3-b068edaec2d1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9a3586ec-1170-4c77-b7ce-b04a41afcfa3"
        },
        "item": {
          "id": "8c8df1cf-76c3-4b23-90af-a67c53653fd4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6238c57f-4c1d-4f52-9ebf-a6bfba150846",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85160cfb-32b4-4e55-ba46-18dcd2851c58",
        "cursor": {
          "ref": "c6198af9-66fa-4e55-80a6-fec9f2a4dd5b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ad24cbd-0fb2-4736-ada9-c6bc3fabab0e"
        },
        "item": {
          "id": "85160cfb-32b4-4e55-ba46-18dcd2851c58",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1bd47976-db96-41c8-8401-53dd0da4a345",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "da089fe3-6b8c-4083-8193-ae22b708c8fc",
        "cursor": {
          "ref": "439eb1b9-0b3b-4b23-b5e6-705c66b6f447",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "42bed4c2-4aff-4d6b-a80a-58bbebb21a13"
        },
        "item": {
          "id": "da089fe3-6b8c-4083-8193-ae22b708c8fc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8ecaf171-066d-4a27-a31b-4df22feeca9a",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ee393c-2f6d-4ff1-ba15-1ad7c914944a",
        "cursor": {
          "ref": "2f8eddd2-8bb6-49ce-be68-27dba32862aa",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ebb9ee35-f626-4a97-9406-2e67dc51aa85"
        },
        "item": {
          "id": "39ee393c-2f6d-4ff1-ba15-1ad7c914944a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "445cf83f-652a-4361-9fc5-28aee3e7a818",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "661a4538-097b-428f-b241-0c6a66422325",
        "cursor": {
          "ref": "c3813c10-7419-4091-a15f-5929e97c8823",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5cdfd54e-27c0-4dd3-a530-7e5185e34fe6"
        },
        "item": {
          "id": "661a4538-097b-428f-b241-0c6a66422325",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1efd5b64-72ed-4ebf-a093-6d9926f8314a",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dbcffe-f884-4c6e-835b-7c2f0934ba23",
        "cursor": {
          "ref": "f1390b2e-e78a-4771-bb02-94d341cca5d4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ca69f577-1405-48ae-a7fd-b151ae42802a"
        },
        "item": {
          "id": "11dbcffe-f884-4c6e-835b-7c2f0934ba23",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "703126a2-e23b-45ce-a60e-a9e00993fcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4b706-5ebb-495c-9e6b-680034fe31e9",
        "cursor": {
          "ref": "687886e9-c20a-45e9-90ca-03775ed04ca5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9f1b3788-d0f1-401b-921c-5f227ba023b6"
        },
        "item": {
          "id": "43f4b706-5ebb-495c-9e6b-680034fe31e9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "277faa5f-eb75-481c-958f-b131d2d7a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3c3d1d-4546-4a32-8c32-b16d70e88d9a",
        "cursor": {
          "ref": "046858aa-2e49-4962-86af-44068b68cba7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ab77c4ec-4cdc-4811-9422-f8c3419af15c"
        },
        "item": {
          "id": "7a3c3d1d-4546-4a32-8c32-b16d70e88d9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a7aeaf7-a396-43e7-9b9b-b16afee7820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862ae20-f778-49c9-aff7-cf81341951bd",
        "cursor": {
          "ref": "3113bfca-1507-4ebe-844a-538d1c673176",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9d0f32b5-9010-4feb-8b8e-ce299fe8c6bc"
        },
        "item": {
          "id": "c862ae20-f778-49c9-aff7-cf81341951bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "14bde8dc-774c-4bb1-bd62-0eb4bb6b0ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3258127-4d05-46b1-b467-b0e4c5f39ae4",
        "cursor": {
          "ref": "459585d3-2ac7-4d02-bbac-b0da0965f5b8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d928450-e627-4e6e-aa82-4f1ee0df88bd"
        },
        "item": {
          "id": "c3258127-4d05-46b1-b467-b0e4c5f39ae4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c848a184-ec20-4814-aed9-9ca8373be786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a7725-f725-4a2c-bbd3-6983cff963c0",
        "cursor": {
          "ref": "c59f27ba-bd2d-4987-a1be-12ad5ff9a9ff",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "71010b04-ca64-4393-b210-50c060783c65"
        },
        "item": {
          "id": "ba0a7725-f725-4a2c-bbd3-6983cff963c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9903e1fb-400f-4618-b5ac-f75a51cddc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8324eb-46b2-49a3-86a2-6e3ae6e69fd4",
        "cursor": {
          "ref": "db906c15-ddab-42eb-abf5-0108240254fb",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "400cacb4-9612-4589-a8fa-2c00414a4076"
        },
        "item": {
          "id": "2a8324eb-46b2-49a3-86a2-6e3ae6e69fd4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bec5aba-0acf-4917-a03b-613c79e48fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f84a76-2101-4615-9925-7a925ca81ee1",
        "cursor": {
          "ref": "d2794699-2fd8-46ad-82e4-50836997bcf5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fea1c40c-9b9f-44e8-8cdd-dd3d38d9f99b"
        },
        "item": {
          "id": "40f84a76-2101-4615-9925-7a925ca81ee1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "38825142-b0f2-403e-9281-414ebdfccf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ce9c1-5f65-45b5-a74f-a10697000fde",
        "cursor": {
          "ref": "1d589772-c966-46eb-8428-b420a5dec695",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "26e123f5-9c1d-427a-8476-cc1ecc8bee86"
        },
        "item": {
          "id": "e08ce9c1-5f65-45b5-a74f-a10697000fde",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2ef5d921-4b29-4141-a07b-0c4a9a3fd2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4939c407-8549-4464-ac46-feaa9a472254",
        "cursor": {
          "ref": "9c69eced-c34c-49bc-95d6-3d618d26e177",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f7ae3007-287c-4787-a12c-426ad9d692c6"
        },
        "item": {
          "id": "4939c407-8549-4464-ac46-feaa9a472254",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be13f8f2-fd2a-45cf-b280-c4773fc3736b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c1c46-96ae-4f23-9b49-42e85b90ad01",
        "cursor": {
          "ref": "e9ad55d1-717d-4683-9f15-2b8cda51eb3c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "632688b6-7b38-4fd3-b3ee-c62d6bbf0cec"
        },
        "item": {
          "id": "309c1c46-96ae-4f23-9b49-42e85b90ad01",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f68d266-60f0-4704-b4c3-106b203710c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f1207-5cd5-4f73-86fc-efb79a455b16",
        "cursor": {
          "ref": "f8e0eaae-9f1c-4e22-93d9-f081efc74531",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b5a9c377-a7df-4649-83df-3a702bbe1b7a"
        },
        "item": {
          "id": "4b9f1207-5cd5-4f73-86fc-efb79a455b16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f13e1b19-b838-49c4-8a45-95b50b4c82cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be665b74-d9f1-4593-9528-878cc41b9aff",
        "cursor": {
          "ref": "2692fdc3-920e-405c-9f68-0353f42d44c0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "25244324-1e30-45b4-9535-64af0c778a88"
        },
        "item": {
          "id": "be665b74-d9f1-4593-9528-878cc41b9aff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f7f8c7d-7df8-4ab3-97bc-9d4767e7f452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c090ad-18db-4811-a8ff-51e7cb67d310",
        "cursor": {
          "ref": "18bc449f-caed-46cf-90a9-d36f5765f332",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "71189e05-5f21-4576-98a0-6321a5eb6ee8"
        },
        "item": {
          "id": "f5c090ad-18db-4811-a8ff-51e7cb67d310",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1dc739f9-d58b-4113-818f-45861bf92127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d221097-4b15-4905-8138-089571416120",
        "cursor": {
          "ref": "b72b0066-39af-4b1e-bf84-d8b11753964f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f0983c0-533a-4929-a0ad-72f5db462356"
        },
        "item": {
          "id": "3d221097-4b15-4905-8138-089571416120",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "973d0c8c-50e9-445f-908c-0008f3040d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0456af74-6995-4a56-a85c-850fc86fb592",
        "cursor": {
          "ref": "aebc3b58-09eb-46cb-90f4-cdba93742a80",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e145134-b8c6-41fe-9572-339853f0d40d"
        },
        "item": {
          "id": "0456af74-6995-4a56-a85c-850fc86fb592",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4030b2d4-600e-444e-8a59-7f4bfecc4a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb553d-1d32-48c9-a3f3-ffaca5f488c5",
        "cursor": {
          "ref": "40d69452-3235-4c26-a6e8-0080c2e49483",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "44e9310d-e3ef-4269-8549-8fc4c54593d3"
        },
        "item": {
          "id": "1edb553d-1d32-48c9-a3f3-ffaca5f488c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2a2e5abe-3bf3-4e9e-abbc-2f6871578846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baf99c3-adcb-4a49-94ed-0e1e1ef6c151",
        "cursor": {
          "ref": "e06cf9e6-4a10-4a4e-b1eb-95c338aa87b8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a6a1fcb7-cfee-4372-9d0e-7a418768cf74"
        },
        "item": {
          "id": "5baf99c3-adcb-4a49-94ed-0e1e1ef6c151",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c677f870-82f3-4efd-9657-de6f152b27df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689621a6-45db-40c8-8213-e07a122ada8f",
        "cursor": {
          "ref": "58639e60-19f7-4dd7-9a42-a3b02e9c2397",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "066ccfe6-79ad-421f-9aa5-0f659e76f7b3"
        },
        "item": {
          "id": "689621a6-45db-40c8-8213-e07a122ada8f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "783c9491-a9d5-4846-be41-c2cf792f165f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89700d8c-44dc-4f3f-b0fe-7c46f06bd699",
        "cursor": {
          "ref": "828ead95-8b22-4f03-bd21-4c691abee019",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0ea22435-11cd-459c-b62a-0c6e4c76cabd"
        },
        "item": {
          "id": "89700d8c-44dc-4f3f-b0fe-7c46f06bd699",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "90f3b3be-1a1b-4e22-ba45-68c047982273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e4e020-38c9-4961-befc-316b5f77e962",
        "cursor": {
          "ref": "bd23672e-607a-498c-a071-d1ec336c72df",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "32c28917-22af-44e0-adb2-ace995989777"
        },
        "item": {
          "id": "76e4e020-38c9-4961-befc-316b5f77e962",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42dc32f6-65c7-427a-ad40-aaa5e48b8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61d3e8-49dc-4815-9f8f-321a8f7de355",
        "cursor": {
          "ref": "9cca95cb-6c10-4ea1-bbc8-2ebc8fefa6f5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f1f58933-cc26-4687-9c4e-533079114d6e"
        },
        "item": {
          "id": "ed61d3e8-49dc-4815-9f8f-321a8f7de355",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6af81bd5-36a9-43ec-8df3-ead030a65456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05253e45-f2fa-4729-bb69-72d7dade4bf5",
        "cursor": {
          "ref": "0bc8320b-6d59-46f8-8df2-764522e0c7cc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c14ae82a-58c3-4e71-9532-0a7555d800d4"
        },
        "item": {
          "id": "05253e45-f2fa-4729-bb69-72d7dade4bf5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f1b855cd-2dc0-4537-9c41-36ee5904159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693cb43-453b-4fc5-a86d-746d2ae050df",
        "cursor": {
          "ref": "896d1aa5-f9c4-4503-a7cc-8646aebb590e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e7b926c2-0364-460b-ae16-21023b89ae8e"
        },
        "item": {
          "id": "b693cb43-453b-4fc5-a86d-746d2ae050df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6f8d7bb2-b367-4e75-b150-15009fc694ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ecedf-11c1-47be-a7da-7fc984e78674",
        "cursor": {
          "ref": "28edcebd-555a-4581-85d5-5992d2300db2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "582fa176-ee2b-4e02-ad1f-2e4c4713c1e6"
        },
        "item": {
          "id": "7e2ecedf-11c1-47be-a7da-7fc984e78674",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d144a5ee-70de-4bfa-9227-f729b14591b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873624e4-6059-4191-af6c-437b50bb1abe",
        "cursor": {
          "ref": "ecb0132d-c6d1-4fde-bea4-6941c03ec1f2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "156b1e87-6aaa-4fd9-a6e9-88b6b7433739"
        },
        "item": {
          "id": "873624e4-6059-4191-af6c-437b50bb1abe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b515e980-0aa4-4c77-95fa-7b31480cf44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002ea0ff-ef7b-4bd8-942d-85750bb6dbd3",
        "cursor": {
          "ref": "4fa5b08a-0125-49d7-bc14-0576abb75c4d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22e52465-0a3e-416a-b1ae-37727cae2d23"
        },
        "item": {
          "id": "002ea0ff-ef7b-4bd8-942d-85750bb6dbd3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7bf89000-a994-4ddc-b9bf-80940bc75962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc38319b-f12f-456e-8122-3e9f651a70f2",
        "cursor": {
          "ref": "10a48ec8-d412-4b8c-9e8b-56f1a57a8f49",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d20f6e1e-5968-42b4-ae88-b7fedc363ee0"
        },
        "item": {
          "id": "bc38319b-f12f-456e-8122-3e9f651a70f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a88ff93b-9ca8-4ce5-8304-21ead5f5ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55bd832-009d-4057-9c4f-3c0b7c4ac072",
        "cursor": {
          "ref": "29dd26f0-3c48-48f3-96c8-bc6bc777411e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fe99761d-6567-4c10-a3bf-f0f893479a3d"
        },
        "item": {
          "id": "c55bd832-009d-4057-9c4f-3c0b7c4ac072",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "84a066ad-d73c-4e98-b9e7-6ed25224c753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947df1c1-4e41-4932-8913-450c4dd03fd9",
        "cursor": {
          "ref": "1182644d-05f7-489f-a4e9-f3808589af33",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e8f873c6-78e9-4109-8e72-7eb1d34f7bdd"
        },
        "item": {
          "id": "947df1c1-4e41-4932-8913-450c4dd03fd9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1409654-1a8a-4232-9a7d-f885f6640ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2935c6-824d-4995-870a-9e801202cd80",
        "cursor": {
          "ref": "cb349293-5097-48db-ab6e-7c30f1810446",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05a1b4e4-019f-45a2-83b3-d94f15d7167b"
        },
        "item": {
          "id": "5f2935c6-824d-4995-870a-9e801202cd80",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "61a75df5-0f35-49c2-9bfb-e5e448466b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f576625-a66c-45bd-b878-b2afeff26d0e",
        "cursor": {
          "ref": "c65847eb-dfc8-4b01-b8e4-c86b1f16bf5a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ebbb06e-7fab-444a-971d-af99b11f436f"
        },
        "item": {
          "id": "4f576625-a66c-45bd-b878-b2afeff26d0e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b57f11fa-b054-4cd7-aaf4-a00d147fa0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39649c5c-df6a-43e8-9cbd-78f7c555aad1",
        "cursor": {
          "ref": "dcb7f6b3-1d65-49bb-a5fc-b68834fa293c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ea43ddd4-274e-483c-8970-057d099a2fd2"
        },
        "item": {
          "id": "39649c5c-df6a-43e8-9cbd-78f7c555aad1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d51b041f-edda-4fc4-8e5a-7f32716e57c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da07989a-b42a-46ea-b873-15bcb3aed774",
        "cursor": {
          "ref": "11b7eb91-0753-4254-979f-cb2635a3cbd6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "003a808a-7831-4223-8199-9f5075a4379f"
        },
        "item": {
          "id": "da07989a-b42a-46ea-b873-15bcb3aed774",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1552b66-4e6a-4d05-be77-b15a9fb04304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cabeb3-383a-4122-94ab-7ec2aaaed82e",
        "cursor": {
          "ref": "0dcf46fa-bdcf-47a5-b087-32c08b0ecf40",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b31b7628-e3d0-4534-9ebb-83e6381fa225"
        },
        "item": {
          "id": "a3cabeb3-383a-4122-94ab-7ec2aaaed82e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84df6eca-93e4-4db9-88ce-01d62e321204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daed5c8-14b3-4d7a-8754-22501a8ba7ad",
        "cursor": {
          "ref": "90b0ccd4-1d05-44c2-b72f-14fd7eaceeee",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cbebd6e9-a949-4a16-83e4-cf4e8e48e912"
        },
        "item": {
          "id": "3daed5c8-14b3-4d7a-8754-22501a8ba7ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f3682d9-7c98-4c78-a1c6-6516dd0480a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ebe611-e92b-4994-805b-0764ebe149fe",
        "cursor": {
          "ref": "2ea3c4d0-3350-4de1-898d-fca1672ef29b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8b238073-cf2b-4ef7-92ee-4050cc356112"
        },
        "item": {
          "id": "50ebe611-e92b-4994-805b-0764ebe149fe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0ec05ce9-901f-46b9-9dc0-cca7fffede32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09caa2d6-3ac6-4eee-a76b-998735135a8e",
        "cursor": {
          "ref": "28c2754e-9cb6-4f78-a0c4-b9b5f79db939",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bfd52472-1dd2-4995-8cd8-83714ada3511"
        },
        "item": {
          "id": "09caa2d6-3ac6-4eee-a76b-998735135a8e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9c7af3f-579b-4580-8bd3-39d03566f6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d4aab6-832c-4f57-9d9b-f8fbb6fc4741",
        "cursor": {
          "ref": "7e3afb83-0bb7-4d88-a7dc-6cafaf0c82a1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b38f7a53-e499-4917-a087-d5cba47132fe"
        },
        "item": {
          "id": "a5d4aab6-832c-4f57-9d9b-f8fbb6fc4741",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6847701-ee04-4928-8b5c-b6b31b929e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1195a01b-18f0-4b17-bd8b-c04612cf1e62",
        "cursor": {
          "ref": "46138ed4-2c99-418d-97d4-69bccc75e2de",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de9a3cf7-a91f-4b25-9c0b-bc02c2bcc9ea"
        },
        "item": {
          "id": "1195a01b-18f0-4b17-bd8b-c04612cf1e62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "49f17ecd-5bb8-4e49-8cff-db0ffb2ecc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5965c5-5f44-4434-82a1-97a05f70c24e",
        "cursor": {
          "ref": "04e07994-9230-4b6d-8946-ddd0eb4216f5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "af9aec4b-5ce7-4818-820f-d8a6c90d8441"
        },
        "item": {
          "id": "7a5965c5-5f44-4434-82a1-97a05f70c24e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5cd73b5d-2464-4db6-9f97-b27fb02deb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01aea9f-7bed-4134-807e-0dfc08e06c0b",
        "cursor": {
          "ref": "69e5d1e3-d6ac-48a3-b792-221775538548",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5e8f90d4-0c3f-4bd0-8b4f-e709ed29bf17"
        },
        "item": {
          "id": "d01aea9f-7bed-4134-807e-0dfc08e06c0b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c26077f6-a872-4ab9-ab68-1880a62fd61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dfd847-a89a-441e-b3be-f7dcae59e384",
        "cursor": {
          "ref": "114d576a-315b-41f0-92ab-be568c28ea37",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e790dacd-ffbe-4814-af5b-a38363484e5a"
        },
        "item": {
          "id": "31dfd847-a89a-441e-b3be-f7dcae59e384",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "94f51fcb-4eb6-4187-b8ec-d02dd5202225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0b14d7-02a8-400a-ad3f-e97a39a21a09",
        "cursor": {
          "ref": "78ef07eb-3d26-49a3-8386-34a89df9b272",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c35d917-5493-4ea0-b436-a5693fb6e491"
        },
        "item": {
          "id": "1c0b14d7-02a8-400a-ad3f-e97a39a21a09",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "473df700-05ae-435d-a11e-aebd45422fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a024bb-c61d-4b5a-b5ee-94225ccdafd9",
        "cursor": {
          "ref": "43100f20-530e-448f-9753-52d821035cd2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6b16a5b3-d9a1-4ded-823a-00934e2aa298"
        },
        "item": {
          "id": "18a024bb-c61d-4b5a-b5ee-94225ccdafd9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "66bdbe98-0acc-4e96-b80a-dac4275fd990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e1e1a-bef5-4861-87bd-78a7c8580329",
        "cursor": {
          "ref": "9dba59c6-6d7d-4d0a-8cb9-5cea4bc875b4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "86c19e9d-3fab-4792-868a-9247696a9eb8"
        },
        "item": {
          "id": "6e8e1e1a-bef5-4861-87bd-78a7c8580329",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "848f4b83-0399-4c01-9fd7-4643e51258c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7312bb-3bc0-49a0-af51-80aec7401e03",
        "cursor": {
          "ref": "fc0904fb-aeaf-406e-8e54-e5602b32ce51",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e873e548-e09a-457b-9f8e-8b3011db8298"
        },
        "item": {
          "id": "fd7312bb-3bc0-49a0-af51-80aec7401e03",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dbd5cef5-c56d-48ec-8886-4410018ebe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02c030a-3f19-4ca8-ad30-c8ab839967c9",
        "cursor": {
          "ref": "d7445177-e701-4f36-af8b-8c6df675cbb0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "286a920a-760b-48c3-8981-027039e1af4d"
        },
        "item": {
          "id": "f02c030a-3f19-4ca8-ad30-c8ab839967c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f796cc24-d837-470e-ba33-eb8a16d59883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd82ab-28dc-4de4-a82a-f8b281738b80",
        "cursor": {
          "ref": "8ee26f0f-71a7-4f1b-9bb8-84ec8635c723",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2212868-70cb-41a9-bc6d-9ae0c567c7db"
        },
        "item": {
          "id": "a2cd82ab-28dc-4de4-a82a-f8b281738b80",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e3ca2969-cc4b-45b6-8145-ab46c284b1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea09bc0-6407-4492-83f8-26b334070403",
        "cursor": {
          "ref": "06af7d45-7044-45f7-a4d5-3bde7e00846f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "88bbc656-eb06-41fe-87ab-31ceb52ac450"
        },
        "item": {
          "id": "bea09bc0-6407-4492-83f8-26b334070403",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3729823c-1f11-45f5-989b-c3566d7ffeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f7d42e-95f0-43db-ae69-5eae9462f475",
        "cursor": {
          "ref": "fc71300a-9bac-4d14-b0af-ccc553d94eec",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7089bd1f-2561-46be-bf4b-7243fa80411d"
        },
        "item": {
          "id": "20f7d42e-95f0-43db-ae69-5eae9462f475",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec6b8a39-7d7b-4348-92e1-89647c87c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7868ac-41a1-42c9-8c0b-8ca68341bf70",
        "cursor": {
          "ref": "d90a7685-c45f-4364-a230-86c702215658",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9da9feff-8d99-4b9c-b898-e9c7616c069c"
        },
        "item": {
          "id": "da7868ac-41a1-42c9-8c0b-8ca68341bf70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7d377f0c-aef0-45a9-bdfa-8b43a8c4ed74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d018b-b4f8-46fd-b07d-e6d402b852cd",
        "cursor": {
          "ref": "a4c828b5-eb53-4b0d-81f6-7529870c8bb6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eee911d0-6eea-4350-b57b-d8f8ed601ec9"
        },
        "item": {
          "id": "4c1d018b-b4f8-46fd-b07d-e6d402b852cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a93c19c-2031-481b-9b5a-a630b1e0d488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb4c1a9-aece-45ba-b7c8-1c4b7a982753",
        "cursor": {
          "ref": "43d9e783-cf20-4153-8277-11d89904fa10",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "082f75e9-7801-4d19-8a55-5cd59a38a329"
        },
        "item": {
          "id": "9eb4c1a9-aece-45ba-b7c8-1c4b7a982753",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a20a517-5908-41a0-90b9-c280c62b1a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b7bf15-90ce-4009-8ad1-bfff43f41a39",
        "cursor": {
          "ref": "0713ef85-8ca9-4241-a7d4-88aabb0d323d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "be3089fc-c5f9-48e5-bab0-b772fc97a2f2"
        },
        "item": {
          "id": "a1b7bf15-90ce-4009-8ad1-bfff43f41a39",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9cfde109-278e-4029-8282-5e11af6d3a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e6c491-5014-4b98-987f-b3e81bb23b92",
        "cursor": {
          "ref": "abe4e29d-03e5-4bea-80a3-3db9ac5736af",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1033d1ab-2a51-4d27-a7c6-e57b17d023d2"
        },
        "item": {
          "id": "d4e6c491-5014-4b98-987f-b3e81bb23b92",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "80e2cebb-5644-4aff-886e-bb2f5cc7999d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a1a94-467d-408b-ba4f-ce0fd2930169",
        "cursor": {
          "ref": "d3102e53-0bb3-4616-b965-062746373db1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ccead1e1-9d44-4ec8-b851-2a94772ffa48"
        },
        "item": {
          "id": "fc6a1a94-467d-408b-ba4f-ce0fd2930169",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55352f5b-6d66-41f4-a7da-8676ab3a7f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dabccd-4e4d-4272-b8f5-3a0428087a6e",
        "cursor": {
          "ref": "c56d6613-8eef-4e0f-aca7-68cb123cc708",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "402d70e6-f04e-43ab-afef-6669b4573817"
        },
        "item": {
          "id": "21dabccd-4e4d-4272-b8f5-3a0428087a6e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6e4402a-b09f-4c71-9aa3-225dd3d848b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7003863-beab-4bce-abde-7125b7a7da0f",
        "cursor": {
          "ref": "55f8d759-3360-4c4f-ada4-23b4d474e4e4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e856ea64-750e-4c22-9ba9-896cc519dcc6"
        },
        "item": {
          "id": "c7003863-beab-4bce-abde-7125b7a7da0f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6d9f2ab6-8c11-4914-8114-82ae504d98b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a7738d-6ed6-4045-83f3-7f768e79ac0a",
        "cursor": {
          "ref": "daad837f-87d9-46f5-b64c-a18f458a6589",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8cb5220-4655-4b9d-8585-c36b3797ae33"
        },
        "item": {
          "id": "d2a7738d-6ed6-4045-83f3-7f768e79ac0a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "14901bca-8b25-45ac-8abf-d757db1b30fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43f4abb-7994-4486-bbf7-813a1dab171f",
        "cursor": {
          "ref": "05d5d730-dc3a-471a-b72e-e86aca47e661",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e2a94b9d-1237-435d-a649-47316de201da"
        },
        "item": {
          "id": "a43f4abb-7994-4486-bbf7-813a1dab171f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c269475d-58ce-40f9-bf27-aea7394ac1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4309836f-0c1a-4fec-a5dc-45bcb7c203b4",
        "cursor": {
          "ref": "6b59b452-4e6f-4861-8ff6-86177995c308",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "866ea6e4-435b-4485-b969-09cce82d0349"
        },
        "item": {
          "id": "4309836f-0c1a-4fec-a5dc-45bcb7c203b4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1633bb58-bf43-4cd6-89fa-688de01abcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4214c0d-a2ea-4f58-9541-d3b5b12bf8e0",
        "cursor": {
          "ref": "93e0dd65-5ea9-421f-9ebe-156f27351bc0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9edd05ae-c1eb-407d-9d8d-d2ebdbaab84e"
        },
        "item": {
          "id": "e4214c0d-a2ea-4f58-9541-d3b5b12bf8e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "213b79df-96e4-4f4f-9ecf-7ae123ceab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c554a8-6f8d-4c98-84c4-ae6b40bdca8f",
        "cursor": {
          "ref": "d98f185a-3156-44ad-8afb-8c62f6984088",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "397263c4-efd5-4e4d-bba4-ee258cfa3d3a"
        },
        "item": {
          "id": "e6c554a8-6f8d-4c98-84c4-ae6b40bdca8f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f4b56970-4dee-489b-99b6-1d8ef3ccce1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d219f8f3-ecd0-4704-9b4c-c8b51df33101",
        "cursor": {
          "ref": "00efa421-4686-4df6-90bc-f28fef62aa16",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a8acce44-db8a-4194-aac9-6d49efd03454"
        },
        "item": {
          "id": "d219f8f3-ecd0-4704-9b4c-c8b51df33101",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ec6c4085-4cae-4035-bef1-216b7ab119b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd03db-cacd-48da-bd87-36882f2ce696",
        "cursor": {
          "ref": "a6f1477b-27b2-457a-86e6-6158d89283e5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cf5ab3b0-3a9d-40ba-9e6f-e80162006769"
        },
        "item": {
          "id": "1cdd03db-cacd-48da-bd87-36882f2ce696",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0bc49aef-cc9a-48fd-9cf9-f993a33e581b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4bdeae-ac5a-4ac8-883a-970bad4c554c",
        "cursor": {
          "ref": "c72003bd-7b53-45a3-8e26-9ce6d9397643",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a12de24-2df5-4715-9b56-2d8aea4f2d39"
        },
        "item": {
          "id": "6d4bdeae-ac5a-4ac8-883a-970bad4c554c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "31fdcf9f-805f-4b07-a725-f78f51e98aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a515f9fc-255f-432f-a86d-de16ff7e50ef",
        "cursor": {
          "ref": "08cf4eeb-d9c0-4d0d-935e-f032626501ad",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e0643ba-4e76-497f-9c1d-c34981cef742"
        },
        "item": {
          "id": "a515f9fc-255f-432f-a86d-de16ff7e50ef",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be7d671f-dbd5-412a-809f-a3c1e5d35c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63178b4f-4543-4750-b0f1-4c2988ca9935",
        "cursor": {
          "ref": "0388a64f-49be-4a84-ad6e-621643c6a30d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c7751002-1e20-4c89-921a-05a5b8d86cb1"
        },
        "item": {
          "id": "63178b4f-4543-4750-b0f1-4c2988ca9935",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0c30f4a6-834b-440e-801c-5ff0728b387b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531c6498-b9b8-44e2-a086-b0dc547ca250",
        "cursor": {
          "ref": "a16d3af7-0287-4919-88c2-411023484fc3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fd305977-b27f-481a-a404-4ea29ed46066"
        },
        "item": {
          "id": "531c6498-b9b8-44e2-a086-b0dc547ca250",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e81b21a5-9cc9-4ff4-b764-f1f41abe5019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab0d28a-6d8d-442b-8bd3-e25ab270cb61",
        "cursor": {
          "ref": "439e6348-e6fe-4b32-83c0-3322a6791966",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1ae77e5-0907-44bf-9fda-fa55ae850976"
        },
        "item": {
          "id": "3ab0d28a-6d8d-442b-8bd3-e25ab270cb61",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "18417d49-ee19-40da-81a8-35fb7ff58915",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6b5700-da77-4af2-b986-61842f98bf37",
        "cursor": {
          "ref": "db83213e-ea9b-4885-be4c-5c45a12e172c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d79ba947-6825-43d8-916a-bc71908ed20b"
        },
        "item": {
          "id": "ab6b5700-da77-4af2-b986-61842f98bf37",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b7b621ae-d861-4b92-a9e0-b408f4e83da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc10346c-a937-4ee5-947b-3dbffbb4bd38",
        "cursor": {
          "ref": "794ad152-0bad-44a9-8db7-5ca0cec066d6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "93629803-efd3-456d-b449-a51cc7dc0a77"
        },
        "item": {
          "id": "cc10346c-a937-4ee5-947b-3dbffbb4bd38",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ba17e62c-b288-4eac-98d7-90909b43c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92cbbea-d51d-4782-91f7-cfcc63b44904",
        "cursor": {
          "ref": "ff16642a-33ba-44fd-b863-346e0fbdfec4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1059a35b-2424-4cec-b7b0-146716e09999"
        },
        "item": {
          "id": "e92cbbea-d51d-4782-91f7-cfcc63b44904",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b261d0bc-fec1-4088-a528-20c58b30bc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2c3b96-3942-48bb-829b-12a48cfa4157",
        "cursor": {
          "ref": "f703b66d-3b4a-458e-8606-cb964ce79fcc",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0c7b58a-837e-41fc-929b-1bc5ed2ead88"
        },
        "item": {
          "id": "db2c3b96-3942-48bb-829b-12a48cfa4157",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "006dcb1a-8dd1-41a8-9101-ab20b95157ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35bb660-8c81-4e77-9dc8-1fac2a75f9c0",
        "cursor": {
          "ref": "eb90004a-b2a1-46e9-a574-d23cbca57107",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c734a207-5286-419a-bf28-9b61ffaa9e79"
        },
        "item": {
          "id": "b35bb660-8c81-4e77-9dc8-1fac2a75f9c0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ffd0e48a-27b0-455a-995c-b6f8d29342dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7d2a47-5215-4bbf-bd15-e983a8919ad2",
        "cursor": {
          "ref": "baa5e654-b3b6-4a29-b166-93593ad0d031",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7436e2e9-14e4-424b-b331-5ba57a9fd547"
        },
        "item": {
          "id": "8b7d2a47-5215-4bbf-bd15-e983a8919ad2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ffa2229d-ee5d-4d28-9f17-959c4178bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c87cb2c-059b-463e-ad86-9a4df31084ea",
        "cursor": {
          "ref": "b9869cf9-9ad5-48dd-a075-092166d9ef18",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5814a52d-b563-4203-a722-c4e00efbf2d8"
        },
        "item": {
          "id": "4c87cb2c-059b-463e-ad86-9a4df31084ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0204de18-b133-4dcb-96c4-25c6ed091185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4329d3a8-76df-4f86-b1c4-7cb6b573422b",
        "cursor": {
          "ref": "862cf958-8697-4c4f-8c42-7fe9a44f2329",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cdbb1e2c-a810-4d5b-a99e-727da8d1ca4b"
        },
        "item": {
          "id": "4329d3a8-76df-4f86-b1c4-7cb6b573422b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "95adbf29-30cf-49c6-aec6-e30a3f658088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016a994d-75a5-4e00-8079-59437b21f613",
        "cursor": {
          "ref": "0b3ac0ec-63da-4d51-bf69-416798bf0aa8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "398a2b98-e1dc-4ddc-a34e-c19516467721"
        },
        "item": {
          "id": "016a994d-75a5-4e00-8079-59437b21f613",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5e7663ac-0bab-4022-aae9-4f3162b9474b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0cd0c-b6d0-4a41-b270-ad641733beee",
        "cursor": {
          "ref": "cd23f5c1-ab9c-44b3-b28b-2b799a20b2ad",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1449d3d0-5f11-4f10-bf4b-9716f82b6d2f"
        },
        "item": {
          "id": "add0cd0c-b6d0-4a41-b270-ad641733beee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0481a023-46c9-419f-a165-a180659db435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdbbfa5-276b-4384-ba6c-fc7ff9a28cea",
        "cursor": {
          "ref": "4752f0c9-ac75-4f3c-a726-5996c9faea77",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "eaa42f18-0633-43a8-ae3e-631a10e18929"
        },
        "item": {
          "id": "dcdbbfa5-276b-4384-ba6c-fc7ff9a28cea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7d2a799d-4276-459e-96c1-cfe48a008373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791dc76b-1044-4dbd-8760-4fc8fe5a96b0",
        "cursor": {
          "ref": "173960c6-4a41-46f3-9a5c-fc067587f7d6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4a4aefe0-57e9-44da-90ea-ac118040b323"
        },
        "item": {
          "id": "791dc76b-1044-4dbd-8760-4fc8fe5a96b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b099efb-7fe3-4f9d-ad3a-92b5b5e2d953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d4c401-97ba-4f1d-89e2-a5b26205f086",
        "cursor": {
          "ref": "ccd45800-8a63-4508-aac2-475c5e6817c9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cded9838-0b38-43e5-8120-980a1968862a"
        },
        "item": {
          "id": "b9d4c401-97ba-4f1d-89e2-a5b26205f086",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dea3a861-727a-4d0b-9ed0-f872df806bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b613adf-2cff-460b-bd1f-66caed284455",
        "cursor": {
          "ref": "3a0c0d59-5be0-4c5e-931b-6fb39ba91005",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2d5366ed-a771-430a-9095-0c54efa71e23"
        },
        "item": {
          "id": "8b613adf-2cff-460b-bd1f-66caed284455",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "68a6bef8-df6c-4d51-a39f-3d56c5516ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa937287-86e6-4dd1-ae13-e342feb520c0",
        "cursor": {
          "ref": "caa86c70-8244-47fd-a78e-4b433e51ecc9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c6acf39b-3064-4f49-aa29-abe6cab432f5"
        },
        "item": {
          "id": "aa937287-86e6-4dd1-ae13-e342feb520c0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "03b03435-2443-4172-b5e1-69d94412120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8104fb06-3251-4982-8729-23795890413f",
        "cursor": {
          "ref": "688c81be-acd0-4676-9249-d7b652036ef7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3454076c-a6dd-4110-8f65-ed4df2db8c11"
        },
        "item": {
          "id": "8104fb06-3251-4982-8729-23795890413f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3328b7b5-60db-46f5-a88b-27fb4cd6b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da862c2-e574-4865-9f84-b9d3151958d7",
        "cursor": {
          "ref": "82565f7c-98fe-4aee-9d97-594ba2c9e07c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bd6ab41d-5498-47ae-bfa5-86298a0712fb"
        },
        "item": {
          "id": "1da862c2-e574-4865-9f84-b9d3151958d7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f4968bae-9a21-4ab7-ac06-b7895ddbb75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a408edfd-fff8-4c79-9989-ba4866412863",
        "cursor": {
          "ref": "8690d0b8-b61d-4779-9822-7c9000a56fd4",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c19a554f-a514-429e-9134-6b9f5b4fff65"
        },
        "item": {
          "id": "a408edfd-fff8-4c79-9989-ba4866412863",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3d73ccf1-f5c8-4f16-a037-05fbda25dbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9deb3f-31f1-460a-91e7-10026b9fe828",
        "cursor": {
          "ref": "2e2d98b0-eeff-4c7f-a6dd-d6a3b1a76923",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6840248b-940b-4d24-9d94-613118f4aedc"
        },
        "item": {
          "id": "7f9deb3f-31f1-460a-91e7-10026b9fe828",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8c3d42d0-ecb6-4ac8-8d25-b22ff9e63ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05723872-9f51-4f19-925b-b79a7b408697",
        "cursor": {
          "ref": "5818757a-0546-4b1c-96b7-d84ca0ced03a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5016d028-3023-4206-833d-c84bd2c4f647"
        },
        "item": {
          "id": "05723872-9f51-4f19-925b-b79a7b408697",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "250bb6e0-4cfd-4d19-8816-dd84f5757bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5591a2f7-7cbd-4c85-957a-8bc0c38815c7",
        "cursor": {
          "ref": "fe9547bf-e6c7-43b5-8f9c-4caaa096c509",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c71dfe93-2ad6-478b-b46f-cc2d57c78be6"
        },
        "item": {
          "id": "5591a2f7-7cbd-4c85-957a-8bc0c38815c7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "85f6e081-8557-4226-aec1-42a67e74d13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369c4069-9492-4afd-a737-4f4040b464c5",
        "cursor": {
          "ref": "957dda9c-8c47-4e99-8de4-dc84f19f161d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e6021c9a-8fec-4a8c-a0b4-143861c18594"
        },
        "item": {
          "id": "369c4069-9492-4afd-a737-4f4040b464c5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6bafdec7-faa3-47b9-8328-401e245d09e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2cdc7b-4e52-4c36-9c4d-d750ef24e9a1",
        "cursor": {
          "ref": "aa7b4bfc-f937-4a01-a30f-414e6318cecd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2412effb-1ef2-4284-9267-537fbe0b5c0e"
        },
        "item": {
          "id": "0b2cdc7b-4e52-4c36-9c4d-d750ef24e9a1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2c9c306f-71cf-42e8-ab88-e02a29a4928a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0e4c4-1503-4fc9-b49d-19c411e5f111",
        "cursor": {
          "ref": "75eafd1c-f7de-4e8b-bb7b-bdeb1e5507c0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91ee5dfa-fbee-46a2-8380-2446ed000f58"
        },
        "item": {
          "id": "c7e0e4c4-1503-4fc9-b49d-19c411e5f111",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b042b7d5-f42a-4de7-a81f-1af32e0ef8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bebb476-9bed-49a1-b82e-02231dadd83b",
        "cursor": {
          "ref": "fabc847a-61a1-4b26-ad0d-1214ef3ac639",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "42ef8578-5e2a-467d-83c4-9a3574b73e5f"
        },
        "item": {
          "id": "6bebb476-9bed-49a1-b82e-02231dadd83b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ba2f3aa2-cf7a-42e7-abdd-75532f149608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b54167-0771-48f7-9d51-be05b48aee10",
        "cursor": {
          "ref": "a66b62c0-bead-4e16-97b0-c79a451d5698",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6d1c96a7-6262-4f94-a4f1-891516c36c59"
        },
        "item": {
          "id": "41b54167-0771-48f7-9d51-be05b48aee10",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e6363fcc-e0e1-4458-8320-6ab13c7033e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc848cb-a0a3-4503-ac9d-5ab29cad717c",
        "cursor": {
          "ref": "79347457-8df3-4f7e-8d41-5fa3f297cfaf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dcf6ebfc-54bc-4d68-b4d4-03031382b480"
        },
        "item": {
          "id": "fcc848cb-a0a3-4503-ac9d-5ab29cad717c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5df65258-9316-4201-9e0c-c6f811bf235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31b687e-9102-4384-8092-a38c942c8767",
        "cursor": {
          "ref": "9b6c1601-9c8a-4042-b6a8-58033aa56f5b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dd55a968-d3fd-4a6d-bc94-9edb45fbbc70"
        },
        "item": {
          "id": "b31b687e-9102-4384-8092-a38c942c8767",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d044b660-c01a-493f-b0b9-b1de6f9f11a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f87840a-bfbc-4da4-a9d5-68d55c55f3e2",
        "cursor": {
          "ref": "a70eeb6a-1283-48a2-83ea-13fe2833dd82",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "de0e25bd-893b-48e4-8dbc-4244e75967fc"
        },
        "item": {
          "id": "1f87840a-bfbc-4da4-a9d5-68d55c55f3e2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30b50545-3bce-4f07-83b1-9570dbf5e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df68af02-c3b8-490a-9f21-0ff092963b2c",
        "cursor": {
          "ref": "a482c27b-23a8-48f1-a13a-34fda72a2713",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3bace6ec-9307-4f7c-8b6b-d1f13564e652"
        },
        "item": {
          "id": "df68af02-c3b8-490a-9f21-0ff092963b2c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5b56c3f8-917d-4ab6-b017-1f93f11aa46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760189ed-a228-4f10-8d52-01c16caad750",
        "cursor": {
          "ref": "ccac5900-ca0e-4831-ae29-261c4e021ba6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "133c3933-5ef6-4195-8369-ca300f63808a"
        },
        "item": {
          "id": "760189ed-a228-4f10-8d52-01c16caad750",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f5c4863d-5d9c-4d40-b2cf-d5461cdf8b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27ddbfc-6b63-49ee-b008-45b021675d9c",
        "cursor": {
          "ref": "6067001f-d669-4601-886f-8cbf18864f94",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7414666-e4ef-4d03-ac28-1917dd182552"
        },
        "item": {
          "id": "d27ddbfc-6b63-49ee-b008-45b021675d9c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba0ee3e4-4bda-4610-872f-486bb8ef6387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d111b9-2758-4c7c-9cc6-a7ad613f8b95",
        "cursor": {
          "ref": "f0dfb08d-987b-4f22-b667-eefa766ed215",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8a251ffb-ba69-4d94-93d0-aa4742137f26"
        },
        "item": {
          "id": "08d111b9-2758-4c7c-9cc6-a7ad613f8b95",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95247d57-74e2-40d2-a9d1-0fff65a91789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894c2f9-f33a-4809-a857-40c5240a2d63",
        "cursor": {
          "ref": "d67fe940-4086-4b57-81b8-19c903a18039",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be215255-e99c-44a0-8edf-13eb8f5cd801"
        },
        "item": {
          "id": "a894c2f9-f33a-4809-a857-40c5240a2d63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d51abae-26d8-4b78-b387-eaa18c9d7101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9dc909-be3b-44bf-9062-92db3ff99426",
        "cursor": {
          "ref": "b581b287-1ebb-4dfc-8194-c233b7df73c0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9293d9a9-554e-4e60-8bdc-6723f20633b3"
        },
        "item": {
          "id": "1d9dc909-be3b-44bf-9062-92db3ff99426",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c026c9a-e08b-4c43-8e75-89ba4fbb00be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d012f8d-5a2f-40d7-adfe-887468e94a57",
        "cursor": {
          "ref": "e8216672-cbae-41a8-8cdd-69d721b371fd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9c8474a0-b21d-40e6-be40-1f173c0cde0b"
        },
        "item": {
          "id": "2d012f8d-5a2f-40d7-adfe-887468e94a57",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "08c295e8-3bf2-468e-9586-1d84d12b0723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad78611-803a-46a4-a3a7-6120f3e2e5b3",
        "cursor": {
          "ref": "3022ecad-134e-4618-827a-0b6122abb7a0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a6839784-5a7f-4516-a851-b5b4bf2278e4"
        },
        "item": {
          "id": "fad78611-803a-46a4-a3a7-6120f3e2e5b3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4f1da955-4851-4b79-9a75-8655b488b553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fcbe99-0b7f-44fe-a457-014e4c18ce86",
        "cursor": {
          "ref": "def1972a-d0dd-4676-91e6-2b65627041ad",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8c6cfdb7-b753-47e1-bc9d-a5ee9db34d66"
        },
        "item": {
          "id": "d8fcbe99-0b7f-44fe-a457-014e4c18ce86",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f5288a43-2dce-4c98-b076-4196a14fb576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d722b6d3-dc0d-4167-bfb3-d329be6bd4e0",
        "cursor": {
          "ref": "b419ab28-f3f3-489a-b05b-5daf52f589ef",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8dcf19ef-f631-4ab9-9fac-6330b00cfda1"
        },
        "item": {
          "id": "d722b6d3-dc0d-4167-bfb3-d329be6bd4e0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64d39fe9-4d4c-42d0-bb7f-fb1017a165d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28dbe48-75da-4187-809c-31004c6136d2",
        "cursor": {
          "ref": "6a3180a7-a942-4022-9293-0b4f7af8c896",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cfb4c9ad-c294-49b5-8a31-2458f065393f"
        },
        "item": {
          "id": "d28dbe48-75da-4187-809c-31004c6136d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "31fd7eee-7aa7-41bc-bd75-12039c7452e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7258162c-a26b-4e53-bb8d-8e460a6f811c",
        "cursor": {
          "ref": "e451899c-1139-4817-bdae-17dd9dc9240e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ff77e039-eb6a-415e-8685-fbefd9a11325"
        },
        "item": {
          "id": "7258162c-a26b-4e53-bb8d-8e460a6f811c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b3349577-4b24-4541-b520-3df2bc807956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d16ae83-ebb6-46e6-b9a2-d6ae2c1d8a94",
        "cursor": {
          "ref": "d0417b82-d8ff-45a5-b472-6a683606000b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8205f93c-4bc8-4d90-a08f-91a1c13990f8"
        },
        "item": {
          "id": "2d16ae83-ebb6-46e6-b9a2-d6ae2c1d8a94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f24c6919-ced3-41b6-a5d1-d4dd8110c98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a5a192-086c-4c12-8c36-6ce92339c88d",
        "cursor": {
          "ref": "a11c66ba-2be8-4125-bfe0-49a40981f264",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45ad090f-bacf-472a-9ec7-fb00c07a62fd"
        },
        "item": {
          "id": "98a5a192-086c-4c12-8c36-6ce92339c88d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af8370d2-1e5e-4987-98d2-e17de4caeb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8795a223-0b8c-4b5e-bd47-74b4b733809d",
        "cursor": {
          "ref": "e361c083-4b31-47f9-b5fd-fc7c048f9687",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2cfe747d-b4fd-48ee-a801-8d21748ff149"
        },
        "item": {
          "id": "8795a223-0b8c-4b5e-bd47-74b4b733809d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "799f47e6-bf7d-46b1-badf-1c470be0d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca935a6-9cbe-442d-bb3e-8e8177c6add2",
        "cursor": {
          "ref": "918b9aa6-26e4-4fd3-b82a-b0e234d75da3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1215636e-1337-46c8-9146-1d51489f8ed0"
        },
        "item": {
          "id": "5ca935a6-9cbe-442d-bb3e-8e8177c6add2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72b7bdb0-a9d6-45e4-9fd2-aaffc0d8f670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c911ed38-cfca-4f6a-95e3-39c5eae13dbd",
        "cursor": {
          "ref": "9a160166-69e6-4cc3-b5d0-a80415145ca9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "533d32e1-8b4d-4cc7-a0ce-15a28302eaa7"
        },
        "item": {
          "id": "c911ed38-cfca-4f6a-95e3-39c5eae13dbd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3c3eabcf-f78e-4962-8cc7-d49f7bcd69d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31eb13f-97da-4ee7-b1a4-eecd3cf08af6",
        "cursor": {
          "ref": "a6cb4acb-a9ec-43c6-b925-29d294c8006d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1876c5a2-49e1-4bec-8396-2a1d4858e07d"
        },
        "item": {
          "id": "e31eb13f-97da-4ee7-b1a4-eecd3cf08af6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "401c71dd-3459-4e8a-b672-5232722bfbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613fe9c-e0cc-4dc3-ae5d-8d2bc2e828c4",
        "cursor": {
          "ref": "675c1806-3a28-4a54-b3a1-7a385cae9ea3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fada0eb5-6562-4fea-a4a2-8949a62a98e4"
        },
        "item": {
          "id": "8613fe9c-e0cc-4dc3-ae5d-8d2bc2e828c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e6f7fd4e-be5e-42fe-9179-ac91ec0735a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2772f72-2e48-4ac3-8fe7-7e8cf8241cc6",
        "cursor": {
          "ref": "61cf8171-3fb3-460b-956f-6fff9e9b4ec8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4235761d-76b8-4b50-9df6-677f65a56041"
        },
        "item": {
          "id": "a2772f72-2e48-4ac3-8fe7-7e8cf8241cc6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7dfd1c0e-1e9d-4d08-bc7b-807b7f2cce97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa82546-7601-44e1-a3f6-9b60b3ad29b0",
        "cursor": {
          "ref": "d7a276f6-ad8c-48cc-99c8-7360e7e03073",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "708eebae-a939-4771-9723-84c5e09a4f99"
        },
        "item": {
          "id": "9aa82546-7601-44e1-a3f6-9b60b3ad29b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cfc97865-8cb4-4112-9ab7-5b80301799df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f7a26-a098-44b4-97bd-0a562805f99c",
        "cursor": {
          "ref": "beb0e47d-579c-4931-9ed9-5e8a86f57d45",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2c05a43a-ea98-4ee1-8e04-b3f1ec0a3975"
        },
        "item": {
          "id": "475f7a26-a098-44b4-97bd-0a562805f99c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e1b6bb32-ef09-4a51-b55a-d46c64c8b233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f0651d-8107-4197-a508-b82fef9829f9",
        "cursor": {
          "ref": "78a640b4-eec6-4545-a8fe-b8b51926a839",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5f08cd5-0d11-48b2-8d9a-594d351c9b27"
        },
        "item": {
          "id": "82f0651d-8107-4197-a508-b82fef9829f9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c13e3d99-92c2-4a9e-8d98-0d2802315b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832d20cf-66fa-40fe-9f77-36264d841952",
        "cursor": {
          "ref": "00494100-a66f-474a-b735-d8dd9e99d123",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "73398f4b-9b6e-4479-8d76-f6c879ea24cf"
        },
        "item": {
          "id": "832d20cf-66fa-40fe-9f77-36264d841952",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "876394b0-1c29-4ca2-ba8a-d96675c294b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7974bd-3b36-40d0-b09e-43f00b0ec935",
        "cursor": {
          "ref": "fcf21b01-5faf-41cd-9e0b-33b564091b57",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "05489a0e-cd7e-408f-aa02-b7d9a08cf9c0"
        },
        "item": {
          "id": "be7974bd-3b36-40d0-b09e-43f00b0ec935",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aeedf754-125e-4645-9d93-ecd705f4c66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa7ea72-cf1f-47bc-8350-bb64d37c4090",
        "cursor": {
          "ref": "820c8d4d-16d0-4242-8026-df3a2c03759d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0393874a-606b-4dc6-b7ff-a4b3bb659b37"
        },
        "item": {
          "id": "efa7ea72-cf1f-47bc-8350-bb64d37c4090",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "043e1dc6-8681-412c-9f49-f108d55e2fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faef7ef-5268-4d0e-b142-8eea48aa1221",
        "cursor": {
          "ref": "957b6e68-f130-433f-a0f1-ee13419531e6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95a98bfd-804c-45d5-9ca8-5b59903f198a"
        },
        "item": {
          "id": "8faef7ef-5268-4d0e-b142-8eea48aa1221",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f915a8e-9cab-4d32-aefa-553767bdf042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5835b81d-85ee-4286-82c5-32cd3c3c058f",
        "cursor": {
          "ref": "9bc23c38-15e8-408a-8ca1-8ce8e79c8f21",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "50bc4fc4-8f72-4461-acef-65fdf67fe273"
        },
        "item": {
          "id": "5835b81d-85ee-4286-82c5-32cd3c3c058f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "38125f93-0588-4449-9a35-01331f9e5fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f0a6a-ceb2-48cb-9098-45a0f7bf3428",
        "cursor": {
          "ref": "1f1d0c96-b305-42ee-b3dc-6e644ad47566",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "004569d0-3ef4-4385-872d-040fc721b1f7"
        },
        "item": {
          "id": "432f0a6a-ceb2-48cb-9098-45a0f7bf3428",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6486bfc4-b102-4396-93bd-226620d1e376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909fa038-0aaf-407e-86a4-cdc939a06fd4",
        "cursor": {
          "ref": "efeda7d7-96c5-415e-8010-d029c1debde5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2f59bf9c-ee7a-4c10-be71-37b9e9d5b5d8"
        },
        "item": {
          "id": "909fa038-0aaf-407e-86a4-cdc939a06fd4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bb68b2eb-616d-4d56-b700-1ee63c835469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7980df-c6fe-4f56-a427-3d6ce5dc46ec",
        "cursor": {
          "ref": "74a3c1b6-1b18-42ab-a714-4094a41e499e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebd01c62-132f-4dbf-b00d-a11d56387536"
        },
        "item": {
          "id": "bc7980df-c6fe-4f56-a427-3d6ce5dc46ec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0797f722-9b83-4d8a-acf0-0d7c5b6cce2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb94a14-9371-4920-a5fc-b077546a9edc",
        "cursor": {
          "ref": "09d56886-e9e3-4bbc-85ef-2ea2f4f1f81c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2bd447ed-d669-4691-be32-99776ec38396"
        },
        "item": {
          "id": "6cb94a14-9371-4920-a5fc-b077546a9edc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b1ed133-a78c-4ffe-b948-e1cb3bbf0440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad99238-48a4-443a-8dff-20ee3bda3ae0",
        "cursor": {
          "ref": "a32dc51c-af55-4d23-9961-775c1b9710a2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d625bf66-7f96-41a1-bb13-5195fbd2b63f"
        },
        "item": {
          "id": "cad99238-48a4-443a-8dff-20ee3bda3ae0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31e03dd5-66e9-45f1-8aff-f4e6efea8895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d49835-203c-4e73-a1a0-0e42b002ffe2",
        "cursor": {
          "ref": "e431182e-5049-4a95-97b7-765b8e2a4be1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e3a73c91-9919-4db5-8a1f-7aef2a9668ab"
        },
        "item": {
          "id": "62d49835-203c-4e73-a1a0-0e42b002ffe2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "102b8edc-d17c-4b40-87ff-173612730803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3123441-f724-4214-9ad9-f95d2b04364c",
        "cursor": {
          "ref": "f8146e7d-f8b1-4dd3-bb61-ce01feec6cea",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "971981f8-ead8-47bc-a51e-b06c01478920"
        },
        "item": {
          "id": "d3123441-f724-4214-9ad9-f95d2b04364c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7a5e043f-843c-4485-8cb0-1d0d9e6ca39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596ac362-89bd-4575-9abb-48df524a83a8",
        "cursor": {
          "ref": "96f030f4-2b5d-437b-90a7-6182cdecf4cd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d7f239c-03bf-4138-b65d-fdf17fede109"
        },
        "item": {
          "id": "596ac362-89bd-4575-9abb-48df524a83a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2ee9328b-baef-4c55-81d1-a2bf14f246f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d25fc-47b6-4c1d-8de3-0d7f80cd1bb7",
        "cursor": {
          "ref": "80fff4e0-a899-4d46-819c-dd1bb485a1c5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4dd6f0a9-2d31-4dfb-998d-4744b3cce382"
        },
        "item": {
          "id": "0c8d25fc-47b6-4c1d-8de3-0d7f80cd1bb7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a32ce33f-dbfd-4f0a-acad-c60848a3bad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb93a0fc-ee20-49e0-9e63-d9187e81660c",
        "cursor": {
          "ref": "806efbad-6d71-4205-9bba-2724eaf5555a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f1b5c23-57e1-4273-841b-30f3e75402f1"
        },
        "item": {
          "id": "fb93a0fc-ee20-49e0-9e63-d9187e81660c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d19e1afe-250c-4e44-b71a-0584d40a452a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f207faf9-926b-48ee-a21f-029d399327a1",
        "cursor": {
          "ref": "3aebd1b7-5b47-41dc-9d19-dfebefc6c8a9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1cf33ab9-f948-4a27-9e1a-52ff7f0362a2"
        },
        "item": {
          "id": "f207faf9-926b-48ee-a21f-029d399327a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39d1eb66-1e69-4e71-ad15-057e28cda370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199f1029-7ce4-46d0-bc33-572a0cc8e81a",
        "cursor": {
          "ref": "0f11e9df-e792-4d48-9f87-6368a4aecff0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12b5a043-c0ce-40a4-b9d6-29d665e161ec"
        },
        "item": {
          "id": "199f1029-7ce4-46d0-bc33-572a0cc8e81a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e55febde-5ea5-42cd-a3ee-c023eea42c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1acc70-9cc2-4bef-a8be-f5caa685b4a3",
        "cursor": {
          "ref": "feaf80fc-84ea-4ff4-9359-ad0ff39e3c36",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f383ccb8-b6ae-4911-ae70-873d86e46e05"
        },
        "item": {
          "id": "9f1acc70-9cc2-4bef-a8be-f5caa685b4a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6f8e9c9b-c910-4734-abe9-94425233b687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0f2d06-d2f1-4658-a9fe-efa8d11532e9",
        "cursor": {
          "ref": "2c2d55b7-a967-4c68-a6d7-119cb7aa530d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1db493e7-e0cc-4c60-b9fb-0e9ee9dcc4de"
        },
        "item": {
          "id": "8e0f2d06-d2f1-4658-a9fe-efa8d11532e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ddb1701-6bdb-4c23-a94b-77763dccf669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7079156f-dd5f-43da-bf1b-de2f3f6ce2d4",
        "cursor": {
          "ref": "240c94b6-117a-44ce-9be3-f53b5a93e6ef",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3ac1cae-7888-4e7f-a4b7-c3d28baaae71"
        },
        "item": {
          "id": "7079156f-dd5f-43da-bf1b-de2f3f6ce2d4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "63faed19-a3ac-4a50-bcd1-3f284f916821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d6cf7f-8595-4305-b200-c36bf36ce8c2",
        "cursor": {
          "ref": "e0d51cf1-a1d9-46cf-9ae8-45a5907197ec",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "479ed6f6-63c0-4a5b-9624-d12508b5976c"
        },
        "item": {
          "id": "78d6cf7f-8595-4305-b200-c36bf36ce8c2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "95f4a26c-63b2-44d3-9439-00c46f84fd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1e333-890c-4317-b9ea-065742678b84",
        "cursor": {
          "ref": "86bbc337-f4f1-4bdd-82bb-602cccd78d5c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7bf655e5-7eb9-43bc-83c2-d0e4db242cf8"
        },
        "item": {
          "id": "abd1e333-890c-4317-b9ea-065742678b84",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8a963851-d222-46c7-9f54-5fbbfd0588ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e186b-1e5c-48a5-b46c-f15842ea5b99",
        "cursor": {
          "ref": "9371665d-8710-45b7-a894-f71342c31bd9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b034e923-d274-43e8-a22b-4d1f890fa37d"
        },
        "item": {
          "id": "fe8e186b-1e5c-48a5-b46c-f15842ea5b99",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81a6450f-ce5e-4660-8acd-7d3bffcb9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f78834-9011-49ef-842c-8d3a1befbf1e",
        "cursor": {
          "ref": "ff53af93-ff62-49bf-bd9b-4d66aa3add30",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c822de37-3ffd-4a04-9feb-c1abe5f503e5"
        },
        "item": {
          "id": "51f78834-9011-49ef-842c-8d3a1befbf1e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "75650a45-eaff-492a-9d83-7984966853a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681af4ac-a4ee-47f2-a42f-2b8a7f4b796d",
        "cursor": {
          "ref": "74b2b5f7-14ca-4185-aa09-2ac3caaba064",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "35425f94-880d-46fe-9c5e-b1cecf0cceee"
        },
        "item": {
          "id": "681af4ac-a4ee-47f2-a42f-2b8a7f4b796d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d60d79bc-9079-48d5-bc5d-560550300dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab4149b-8c51-4b75-a433-94cb912cf2c5",
        "cursor": {
          "ref": "0a441a0d-d447-4300-a7fd-e06e09229390",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cd134e75-f007-4ba6-87c2-9f402fcb24f0"
        },
        "item": {
          "id": "4ab4149b-8c51-4b75-a433-94cb912cf2c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5265d7c4-be4f-4953-9572-06967f822c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8bbd66-d9f7-45d6-8f9f-865f03a0c096",
        "cursor": {
          "ref": "9cd2b7e6-783d-44ab-adb5-489be74be8e1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20454f99-38a7-4205-93ed-65b4a014ddc5"
        },
        "item": {
          "id": "8e8bbd66-d9f7-45d6-8f9f-865f03a0c096",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c3410253-a500-4b71-921a-5d58bb94faec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872b2b5-2fdb-4da4-8608-4fb076978a5b",
        "cursor": {
          "ref": "aa316d2a-f387-4031-88e2-1429ecc62186",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d3d10bcc-42fc-4520-ad27-4daabec69145"
        },
        "item": {
          "id": "3872b2b5-2fdb-4da4-8608-4fb076978a5b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc9f0c79-6fef-4eb9-936b-4b3e207981e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4310bd-ce1b-406a-8cd6-9de5e952d7a0",
        "cursor": {
          "ref": "3af82b2b-8383-4995-b984-1380e4c04337",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9e4bbf4d-4099-4ef5-8f67-73ad64980d99"
        },
        "item": {
          "id": "5f4310bd-ce1b-406a-8cd6-9de5e952d7a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f446c369-a5dc-4d9b-a831-da855541e833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f72735-9610-4807-8e80-aaab7ce48950",
        "cursor": {
          "ref": "f1541ac2-81a6-4444-ae7a-20c660ff0db9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a695b23c-9ed3-4b56-8157-e27a5d391b2b"
        },
        "item": {
          "id": "94f72735-9610-4807-8e80-aaab7ce48950",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c1e289be-bd99-402e-a4a8-742a247956e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8455a0be-a6d3-4fb4-b55f-39f056cb3ad5",
        "cursor": {
          "ref": "c0c9e2a8-9747-4271-8c4f-332013201936",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c8c0f976-1ce6-49f4-8064-db3b6e4d8f94"
        },
        "item": {
          "id": "8455a0be-a6d3-4fb4-b55f-39f056cb3ad5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "85c9c13f-8726-46f4-ba59-80686f4f59f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbad7c4-a2e3-4afa-8785-74169fe32300",
        "cursor": {
          "ref": "6dd77f64-15ce-4e50-9b78-8d5f9b7c537d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8668c7b5-53c6-4514-a1cb-81387be09da2"
        },
        "item": {
          "id": "5fbad7c4-a2e3-4afa-8785-74169fe32300",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dfaaf4be-0330-40ed-9214-f80833cfc9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9f138-19da-4de6-992c-8c1401378eba",
        "cursor": {
          "ref": "d57f64ff-6ace-42a7-9e82-2877db19f4a9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "28154512-7f04-44ca-aae5-6e535cccec6d"
        },
        "item": {
          "id": "74f9f138-19da-4de6-992c-8c1401378eba",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0e5bf310-41e6-4d57-93fb-4e9ddb06284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf9e91-c042-4c09-b12c-db1e39eb491d",
        "cursor": {
          "ref": "294150a5-1c04-45f9-b066-3ba69d759b47",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "969d6d7b-d0db-48a5-9779-e2cfe40dd764"
        },
        "item": {
          "id": "18bf9e91-c042-4c09-b12c-db1e39eb491d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "68612543-80a3-4df0-9ddb-716dc2c006bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b818e7fd-cf40-42af-ac7b-d7b26b2ba9c4",
        "cursor": {
          "ref": "8e002288-2b2c-45c3-b100-af462a5ee88c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cca02687-ee0d-450b-9e74-aeddde1918ad"
        },
        "item": {
          "id": "b818e7fd-cf40-42af-ac7b-d7b26b2ba9c4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2e1c7b11-d592-4639-9639-457a97928118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426e60cb-e382-4daf-bacf-9b7c10f50434",
        "cursor": {
          "ref": "463efc44-f839-43c7-8b88-9ba4cbf0ca08",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3660d5cc-f90d-4ae7-8cf7-8c1b7cf26152"
        },
        "item": {
          "id": "426e60cb-e382-4daf-bacf-9b7c10f50434",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3ecc84fd-0f84-419b-937e-2da707eb6ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e8bcad-e548-4cfe-bbcc-c7b5ac2f6399",
        "cursor": {
          "ref": "42d27226-7b70-4d04-a3e8-ec4bc86d7440",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1dd8754a-067f-49e8-ad7f-aa13a594b346"
        },
        "item": {
          "id": "43e8bcad-e548-4cfe-bbcc-c7b5ac2f6399",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a5ae7d8e-2fe6-455b-b7e3-7f18b900aaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734151d6-e130-4e9f-a91a-3a5c5b0f6cb2",
        "cursor": {
          "ref": "e5e24da3-1437-4727-87f5-7868ff8f5523",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "12f3caa9-c247-4e28-8dfb-32fb7db24d40"
        },
        "item": {
          "id": "734151d6-e130-4e9f-a91a-3a5c5b0f6cb2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55f3bcd3-d9eb-4611-88bf-93341072cb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf533537-3e16-4e2b-9557-c3df7870d0e1",
        "cursor": {
          "ref": "9aef2231-3982-4d95-8ab6-e6cd5471ae10",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "35510078-51b5-4e2d-8a01-ccdfbe5ec196"
        },
        "item": {
          "id": "bf533537-3e16-4e2b-9557-c3df7870d0e1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0532c70-16db-4087-b571-0cbe0a829fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd87bc-e62c-41b1-bc5a-3f42be856298",
        "cursor": {
          "ref": "89f45bae-447a-4310-b3a0-77b248d96b85",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7e20457e-0e1b-4504-af18-dd3fb8088a42"
        },
        "item": {
          "id": "7ddd87bc-e62c-41b1-bc5a-3f42be856298",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b05c2e26-dd7e-4910-bf84-ae5e990296ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9dddd0-50ad-4132-9d4b-c28f439f1d4a",
        "cursor": {
          "ref": "472deb74-1e43-42f2-a6aa-761f99333189",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5b14e358-7d6a-468a-b705-5dc455b7e907"
        },
        "item": {
          "id": "cf9dddd0-50ad-4132-9d4b-c28f439f1d4a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f14fd779-33b3-46ee-aebd-add74edef529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0154e72c-bfb6-42cb-8385-5d1d800bb0e6",
        "cursor": {
          "ref": "42751d31-aa7b-4d1a-929e-d182364a2099",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "be012ff3-6d98-432d-b8bd-fef5115595d4"
        },
        "item": {
          "id": "0154e72c-bfb6-42cb-8385-5d1d800bb0e6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "95d0000e-71de-4a57-b01a-f87042019598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a22592-72df-4154-8e8e-2d32b4e7be32",
        "cursor": {
          "ref": "604e0be6-416d-46ba-8943-7025b6829de6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a0658f78-8f8b-40f5-a26b-4f1ef4a3f404"
        },
        "item": {
          "id": "b0a22592-72df-4154-8e8e-2d32b4e7be32",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8cd8b4bb-2d2e-482b-85d5-0ad7fb267176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa58a7e-4d64-4985-899d-a334d09aec52",
        "cursor": {
          "ref": "e0b8908f-903f-4904-b580-542bd697c6d1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "da6551a3-838c-4aa0-bca0-987e9a3a1e4b"
        },
        "item": {
          "id": "cfa58a7e-4d64-4985-899d-a334d09aec52",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a34353fc-df80-43dc-8ef4-8bc6f0653c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a89b70e-dfbb-4c9f-b3dd-38bad0299945",
        "cursor": {
          "ref": "a7084e21-5df1-47fd-b947-e508fa762efb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ff8b7ce7-8fd2-4253-bf95-6fe701fe1e04"
        },
        "item": {
          "id": "2a89b70e-dfbb-4c9f-b3dd-38bad0299945",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9097d54d-1dc2-4645-883a-ae1f3414a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156768a6-74af-4f94-882f-d3f55dbd4f40",
        "cursor": {
          "ref": "3942f4d3-2b91-41a9-a718-371f5edf66b1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "184393a3-bebd-4d82-b79c-d41a864c3ed4"
        },
        "item": {
          "id": "156768a6-74af-4f94-882f-d3f55dbd4f40",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f78c9960-c9ec-412f-9520-1f0843023a6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8b794-5239-4551-902d-846aa2e1f853",
        "cursor": {
          "ref": "aa009ece-d338-4b67-8fc1-969a10d646b2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4a7a4d3f-e2a1-4347-a400-9387ca48d447"
        },
        "item": {
          "id": "38e8b794-5239-4551-902d-846aa2e1f853",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7f193f3b-de8f-4662-a442-d52728c102f7",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "879032ea-ec3b-4da3-82f2-93a2c8650d42",
        "cursor": {
          "ref": "2ef85d81-c126-4abf-ba1d-570fc5172f75",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e7b0f18f-e539-45a1-9089-2d2f90cdabde"
        },
        "item": {
          "id": "879032ea-ec3b-4da3-82f2-93a2c8650d42",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01146652-f02f-4aaa-ad95-c76ecf87b7f5",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e98519-b903-4e5a-b29f-093122549bc2",
        "cursor": {
          "ref": "da8c16a6-7ee6-4019-9a98-5b0a5b72a557",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "766e23c5-2452-48d3-98e7-e27c1d4ab4cf"
        },
        "item": {
          "id": "86e98519-b903-4e5a-b29f-093122549bc2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1cc38ed7-eb52-40e4-b00c-318e824143a1",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60144db3-a568-41a2-9bbf-b1433b2a2a09",
        "cursor": {
          "ref": "5c27f32d-fcc0-4061-bf33-144701fbad8c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "88f47d65-caf4-465a-acc2-67a0f126d6d5"
        },
        "item": {
          "id": "60144db3-a568-41a2-9bbf-b1433b2a2a09",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60aeb77f-99f2-4425-a774-a12363ddd579",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60144db3-a568-41a2-9bbf-b1433b2a2a09",
        "cursor": {
          "ref": "5c27f32d-fcc0-4061-bf33-144701fbad8c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "88f47d65-caf4-465a-acc2-67a0f126d6d5"
        },
        "item": {
          "id": "60144db3-a568-41a2-9bbf-b1433b2a2a09",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60aeb77f-99f2-4425-a774-a12363ddd579",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1445cc44-f68f-4c83-959f-be5012aea64b",
        "cursor": {
          "ref": "1f987ba3-6164-419f-abda-59a5f4c68da8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dd1bb39b-8e6f-44a2-a981-565f28cede4f"
        },
        "item": {
          "id": "1445cc44-f68f-4c83-959f-be5012aea64b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b41edeab-b4d9-4c96-9b4e-74e7dba9dc7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db71376c-6e74-436f-89b4-8a06ce138c1c",
        "cursor": {
          "ref": "c3fc165c-2bfa-4ede-a35c-a07346f66c7e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2c7e82a0-3657-4d48-98b2-d209458120cb"
        },
        "item": {
          "id": "db71376c-6e74-436f-89b4-8a06ce138c1c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bea99a84-a43d-4ddf-8199-edd42f47cbc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}