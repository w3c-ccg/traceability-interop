{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "96034876-3ba3-4caa-9865-622ef3f94275",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5011680-d1d2-423c-bdde-1596e8ccd8f1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2b409ee-955c-493d-8e0a-da748aee4f8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b0ed364-d6c2-498f-a1ab-90bdeb3d5755"
                }
              }
            ]
          },
          {
            "id": "9698368e-f9f2-4c8f-aa2b-22a96b412b9f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c336fd4-9783-4902-8f4a-d60c726dfbb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3028ecc5-7dfb-41a3-85a8-70713d0b14ac"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0a2881ca-4834-422a-b1ba-4ffd7908edb4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "de388bf5-b08b-497b-86d0-c89d9df784d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41653b39-4c20-4218-92a4-017f5e0d9d19",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eef85f5-f93d-4e8b-99af-2fa28e82db37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05957a55-4dcf-4107-96b2-9c936f99ca50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c12b35ac-c2e0-4e76-8a64-80cc5a48d572",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fe31c4d-06ad-4474-8582-7b2d713f6cf1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f636db78-69bc-4f42-897a-5678b5e56ca3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c10376f4-7481-4bea-a9d3-a9078025ee02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13d33efa-6077-4524-87ea-0fa0bc7fa267",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6f11a444-d9ab-4b15-a1c4-408a2b5ca7cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91f324ae-a7ef-4713-8a86-dbe19574c692",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42e5e211-e22f-4428-94f3-d83a45cb0503"
            }
          }
        ]
      },
      {
        "id": "9c98ad89-6971-4f73-b7ee-9a2bb03b5ee8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "513d430c-aa5a-4fd7-b6c2-046a3fd02560",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3f068bb-c3ad-4aad-91c7-7bb15fdf8c64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9155d989-bf29-4b88-9e94-8834f1bc4c87",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a4a291-6c01-4f4c-ab4f-453ff87c63e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d13afa3-3d3b-485e-bbca-fb9bf0298778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec7647c-a5e7-4bc5-b69e-140753821305",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74583c84-25ab-4795-ba70-494cdbc0c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c99e940f-1a6b-450d-aa9f-9d87c8675a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7add344f-e5a7-4655-b9db-ae9ee49829a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb520195-439f-448a-91af-3c3cf44f9656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fac48363-c741-440e-960d-3617a8bf4025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8c6be81-e50d-42d5-8df2-f6de112189a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6abbca48-a3f6-42f2-8f8c-ec6b9d3a9257",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a3d1f3-481b-4eeb-9a62-f3b4c969dd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d94e4d9-d581-48b3-8841-c69b19de8bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996c1bbd-7191-493b-87fa-30ca4186bd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8f540f-dcd6-4fe3-9dfb-79e4afa919bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b57582cc-dfa8-4b06-81a5-f99578c4451a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02cff8df-b458-409e-9c5f-23a2c9d0ac37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7ecf2d-2396-4d83-8c94-83060f0d9a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c4971766-eb16-4402-9400-c374749b841d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6b4698d-3151-4dd4-9e2d-90dda0f372b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "87ee56fa-cb8a-43d5-b9cd-e48ece3024dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d54fe67-4812-43d1-9424-20cbd051b908",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "344b0dda-f485-4ed5-8bdd-bec50087790a"
            }
          }
        ]
      },
      {
        "id": "1760aff1-a412-4719-98b9-48fc09005f6d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "50c20d4a-b109-4944-b83c-403dbf362bc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91eab467-6e02-4ee1-8f60-11756c702c86",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "be6043ad-657f-45d8-abe9-dce35caad96c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a01f5f-42ca-4fd6-8d67-00adb1d65e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d59d98-f154-4dd3-a706-e22a16686969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0199b36f-345d-447e-a343-1622fdf3fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b762c7cc-24d6-4fcd-9386-98922188efb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5ce6b4-72c2-4aba-a0fe-8f7a6048c7da",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dacd04-0827-4a9f-bbc1-7a76532986ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cf2ddf-a9fe-4e1b-9518-37f305687bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa284f8-f9c0-41fb-b207-487600eca215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f66c3dd2-c1b6-49e1-bccb-3bf163f5c515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d9d6d9-92f8-4309-abef-5c33cdbeeb53",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46a2363-0dd0-419d-9eff-683b7ad69eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6d9a6f-c001-456e-a441-e41f54d0d343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcb9b61-1436-4151-aa79-28c52e1e3a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9622564-fa42-4b39-b57e-84103cf98709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f34252-9235-416b-a000-f9dd2ef44953",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ddd894-1d98-411c-a9d9-d7fa61b79633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d338848-a03e-4a19-81e1-e7f931aa9271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df374b7-71d6-41d9-85dd-8f717a53f040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21a204d-d888-4787-8157-07386fd84fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effbeb14-d358-464c-81ce-c9d673c3c893",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a387d614-8833-4c35-a0d4-db2aaef4b34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa62a91-ee4a-4739-854b-b5b2aaace4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e313a-fce1-4610-b8a8-079292ff4c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20be2232-a4e6-412d-95ab-44696930428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ffd50f-aeec-4479-90ce-4bd5e54c1f05",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a88155-0c5c-40bd-a07c-1903f0d70083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4fdec3-7830-4879-9d18-02e729901b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f3e446-8478-4fef-a688-f688c8e63f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ea95f40-79b4-439f-90a8-40a4cc2f0e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0112d8d6-b1a5-41ca-8143-fc1f23bc9704",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d473fc2e-f48c-411f-95d4-a6c52189a1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2d40ff-957f-425d-b7a3-30914fcb6619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b3e43e-5834-48af-b881-891dda52b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f73e3cc-5aa5-4cd0-aca0-4089d01c0864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf7bac3-b3a1-4d6f-afa8-b26f46c17dc7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154c7339-9fe2-49d9-af43-c27b5de0de4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2932aeb3-3161-4e5d-8c29-6beaea081e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a56be-162c-45f2-a7c7-7457ed0206a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3746bbab-6443-4ef6-af23-616978946b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01355c07-db19-4851-9b50-d65d4bb0bfc2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7765bfd-c614-4d12-961c-a442a3771d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d3869c-20fc-4527-8e5a-1812bb045800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf6b7ec-fb8a-429b-a210-54db779f2cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a80f03f-5def-4f69-adb6-5170633748a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ec5896-7545-4fc9-8367-f11eb7772fb8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf712f7-5edf-44d9-9e84-79e4fc7e606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf95d8a1-ca5b-4159-997d-eafb0bc22bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f3ee18-4cd9-481c-b9a3-c87654fc1edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7af64b6-bf99-4f3a-bc02-cad3b6eca5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ae3d18-f9be-4826-aa31-befb49bd0e87",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987fc60f-4010-4298-bd85-1e3da1095f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086b6454-8168-4c9f-806e-d4d69e7ba3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d855d40a-3fd9-4817-9bc2-b48eaa496b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7cc3438-dd26-4536-af2f-697a284d257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785ddd68-79fc-43e4-be10-7911ea8fbb11",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192dc4f4-4374-469e-ac8a-fca4fa6eb6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb0054e-b83f-4a7d-87b0-aa0ff05b89e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f778a-1353-4f1e-8439-2c4eacc38a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5731024a-5e3f-412c-adf4-1e59e6029ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbc2752-f3b0-48a8-b59d-d19f6facdcf8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfe19eb-d32d-460d-95a0-7a2dd3cd89cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770cb1ab-373c-4b1c-a325-0a30a95b31d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11c5c5a-3d5a-43dd-bedf-ca1edf0f0ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd55d0b-d1c8-47cc-bca9-ad9e155e07bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5461db-0588-4c65-8562-5a20765eefea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a357576-779d-455d-84e9-d034237efecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43ece78-f4d3-48cb-8bd3-df0baf73eba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441f4867-7166-4be8-811f-dc0bfc39198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "417b56b1-7cd0-40a8-95c1-10b1d52db226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98ecb28-7547-4d47-8206-c687a807af4f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248c7a34-aa1d-453c-a091-c281d2b096b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeb971b-2279-46a7-8848-75d6b97fcb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8c510-1ffe-470c-9c2e-65671e006ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c90c13d9-a735-4265-a975-ab6b999a9552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f9284b-23ac-41e4-aff5-fc3a9781dd72",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11e7cb5-122e-4147-98db-f531415f5d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b356c9e-7747-4dbe-bb7a-80fe938c0464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b10ef5-e3f8-44be-8230-197853590376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50fd1b8f-3784-4f9a-9e39-d8eae8a31200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cb32f6-c174-4deb-8f23-25f9021683a6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1902597a-61a5-4907-b375-ad0ee4304e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7343311a-0c33-4d8f-b256-6036fd81f655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49309ad5-8a97-49e6-a4c3-6f20346e42ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d0b288-eea3-45b2-a5ca-636a4a1364d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0652905-6acc-4a34-aca3-89d37058072d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e97b0a-cea4-4405-a62f-3f5ad51bc98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d6003b-3c7f-4e42-aeeb-0c351c449331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef81bb5b-adf0-475a-9eeb-cbb57b91ada0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cc5640-69e9-44ac-b5b6-524ad4c4121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80513957-7249-4caa-b6cc-487b411261a4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26249a3b-7962-487f-9038-cbef06f275dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edaa646-8170-4a77-a414-9875d7d637d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1489cf-91b4-45f6-9e27-cfe50bd5db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbec654-bd99-427b-9b67-06a5a335a5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965baf10-887d-4051-9dac-5c46e9bb37fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b0df3a-c376-4bf8-8993-d66eb080a4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e997fbcc-205d-424e-a7cd-098351b38961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5e502b-7b1e-4002-8a59-d840d175239d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c1ba91-1fb5-460b-948d-37b58be12ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bb6feb-fc78-453c-b532-1f9c9af6727d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195d42a-e11e-44e7-b101-fef099bad942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66aca2f-728f-4411-84dd-69630f4ff3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39b74e-8150-4c61-9f83-62bfbe955bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b6dc0d-390e-4db2-83bf-f4359210fc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dfea08-7330-41c2-a22c-181923c9dea6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f76c52-9bc1-4195-89d6-aab3619e79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138cb27e-1537-4d0f-9b59-9f8323b03fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdbb62d-a6dd-42d9-b52a-2dc214b4dfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "324ed19d-dc25-4fb0-b772-5efac6200d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862a5e7d-e154-4e36-91e9-2370e177a5f1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d481f6c5-913d-408f-b7c4-0ffe825aff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12445499-0f94-4f09-8672-8655e49a9514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1146b6-a17c-44b9-b5ca-df62d789d089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3228de99-1988-44d0-9e25-994e3ec8ae7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7985a9-c03d-419f-802c-8e79269508ed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0649349f-accb-49c0-b1dd-ba3e22422bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d62d02-9cc6-47a9-941c-b377f2146609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e79a70-ed1e-45a4-9e84-61019c1b95d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "533104ab-43ab-4545-a17a-95f37e2d0771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f481201b-b925-4e67-809d-1c153865268f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f9c2a-64cf-48de-852d-bac2ca56e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fafa37-f7c6-4210-ac26-4e218baf89b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b497dc43-c3d0-4e14-bc97-308755687854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c25f72f-28c8-4753-be09-717e469fb44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bbaa29-a23c-4c39-b717-3b98c8fa51f9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffb8c01-09d7-409d-a91b-3daf28ed7f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df74b20c-ada7-40fb-9fba-39778e0b519a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26edef7e-681a-4d1c-8728-6a1465f1a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "826adfae-ef3a-47c7-94f9-61d1f2d34535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f3807-1e24-4d86-be5e-01246f452a93",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ffb081-a48a-44f8-bb3d-799afa7342a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c30290-4cc8-471c-b821-971a2e86a492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f774286-a53e-4f0b-ae00-b605042743a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f956b24a-4469-4f79-971e-8022d232b255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b052651-bac3-4b44-b8dc-c6399f0a0aec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6896a18-9bd3-4cb4-81bb-7d6c1a89eaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2150ec36-69dd-44c4-a72a-cf2f5f07f836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94a080b-4fa8-4b93-8a5c-4e3dd28dcea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d87313-0290-47bb-917d-0e70eb4f289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c04100-544e-4505-aa64-530181904e92",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7bbcb1-abb4-4cee-8c5b-58c1be6e3830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60229469-0792-4b5f-a9ae-365d01d9b754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cffde9-b857-4b07-8a94-e2efe3b45dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "055ef1cb-74d7-4941-b510-e245fa8d9d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1e9b77-c85f-4524-8f77-a1091d956f89",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16ba100-bddd-4949-96e0-aed55e009579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d70f7da-63cf-4766-ade5-4a2f593ab1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fe9e7f-140a-4e7d-9b9e-c201f8e8a472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c67e1db-e352-42ad-8873-fad315041f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9512ce9a-85c7-4651-b1e7-41618d6e0855",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a804f3-6b87-4117-b523-3216612ece02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8079164a-a084-4d0c-a73a-a6d64eca7dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f13b65-dbd4-44cf-bc33-e298e789296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d1bb33-2a79-40da-b5f9-c9ae304c49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ecb57c-07a3-4c28-a0bf-cb8c6c62b50e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d72bf90-0324-42a4-ae30-95eefa6466a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db71beb-5c56-4c14-bf47-a46d523533ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b0646-1fd9-41b3-8456-1573fe5a8872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec75f1ca-617e-4fad-bfa6-26365b231fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e4c909-458d-4f1b-9ba5-5392462db12e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b918bcd-1107-4111-bb09-4c34d89dbc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58841dee-067f-4dbe-8771-c584880b6b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada4ab2f-6f6a-4013-a81b-d14189b93e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d94116c-ab3c-4ae5-96f0-4e8ee9db1a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549a49a9-6b51-404b-97dc-48acd86285e2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d98855-49fb-4d93-8372-b543a914769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4955d-4a5e-47b1-a4dc-d08b13ff0bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec442c6-7e5e-4c6a-81ff-ad402ad1e953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "336a8ba5-31d8-4925-9681-02a9192c3af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace3c0f0-c79c-45bc-849f-acc29bbb42d6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7261646c-35ea-4184-a81c-738447614f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d8dd4-1549-4d4c-a908-b1589fcc4553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ec6d5-2506-43a8-a50c-9195755ae51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7e392556-3910-44a8-9381-bbf864d10a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9dd2e1-cecf-40b6-b132-ee8c84c3be20",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e5fa63-1976-4815-823a-85a412280d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "734ce66e-e544-4a70-8c82-724e7cffbb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9091e439-306e-4d12-bd97-5c646bd98bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ced1665f-4071-434a-83fd-a24ac6ddc02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024173e2-45da-414b-a409-4a87a314b58b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830dac32-15bf-4191-b278-5e37b75c6ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0507bbc-6a1b-4235-b83c-b547af069397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf2cd1a-5b35-4700-b374-7d376c31f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23536d86-cf17-4ab5-a078-235c28ed1e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac78cce5-7d36-44fa-af2c-12876bd38c71",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216bd3ed-72c1-4963-9317-0173aa7ab8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ff9e45-5951-4337-b3a1-f430aeb45f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec82e377-8434-49b0-97fe-5a93cc76d2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "931cc71a-3f05-493e-9d3d-d71f2a01c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5556ea-49a9-439b-913d-404c8214294e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393b971b-9dfb-464c-bd27-9bc45e9722a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4f87be-6ffb-4372-abea-f3952b142648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2cbc5d-8559-4d64-8906-9e7257693588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e30d2be-1aa2-466f-bed2-2962cbdf543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948830d1-9340-4562-8a3f-42d3f3df6d7c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35db73c1-01be-42fb-b73d-122ed924ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cf99a9-8384-4e94-b0dc-617fb2d55a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcbc104-682f-4828-b1f2-f77426c1eb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7644fbf6-5ff7-47e3-bad3-b878795d9c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d68704-866e-4736-960c-26da1c32fb9a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7034764-2f6c-4929-bc09-bda79f8e3f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079b96ad-8861-4f59-9705-a75092f0794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064505d4-16a6-4258-acd0-ec3db026f158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0952b2a-5819-4698-835f-059c8e14ad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73244d96-3fad-4ef3-9556-19a28c29976b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb524bbf-bef3-4510-ab0a-94bf68ab3f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df665298-5f82-47b3-97f8-0b2506277a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9ce6db-bb76-4fc6-9b6b-e2c9c8fe232d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8494ce-6eb0-473e-9e52-ef1400229fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5429bb-4ebf-46fe-9f2c-58e898304b45",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd548cd-d4a6-47d6-9584-166f6419530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e14908-685c-437d-922b-b1687b88fdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbcedcb-5326-44ec-95c7-82ab41b63b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "326d0e86-eb2e-4cdc-a0dc-528fd3be2938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616c4cac-8a57-4680-b8d2-a18ae67fa7b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd8b4cb-9cc3-4343-9ef9-5b7a7f7c92ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8225502-7717-46fc-a78a-8ff8a5ebf38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4328d40f-864a-495c-9eeb-83bd1a8bf566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8332cc-9912-47a8-a851-8b6eb5c2e643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8767d9ed-03b2-4c39-b58e-9d05a6fc276d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc2a2f5-4919-40d8-8c7d-211a244551e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b108e5d7-1b98-4928-bdf3-70919b1111b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23018952-ba06-40aa-bee1-8cc1036ec4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2852f958-520d-49c2-9b6a-2c5d46dcd3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e591f0-87e7-4273-8f6b-e9cff8885fd7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ee8b91-ecbe-4f02-998f-ffbf0de3e90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc190f-7a7c-405a-972e-19f7775dff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb6488c-6972-437a-9bae-4c562852bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "084e566a-fb89-47a9-af0d-1425bbc9f012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00047078-5415-4380-89fd-c9f598f0c8a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b89e9f7-150a-4879-b38e-72744a2515d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aa1405-7bcc-4eea-9f5f-ec8c445a86a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0279957-02f0-4a0e-806c-904761ec19d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5715eba6-385e-484a-8b62-56162737dbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db468ac-e975-4377-9a1d-1b0a6182126b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864c16c-fd68-4dfe-8e90-9b516006043d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b786d092-ff42-44fa-90e2-637411fed7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e86485-fa67-4f9f-98ce-253914efb6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "792ccf05-bf06-42a0-af54-5ffe5ab81d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dd5066-f2cd-4110-b357-d4fbe8721760",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78af1e9e-670b-45b3-9088-08535eef4dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde339c0-9d57-41f6-bac7-616a328a4cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23292dee-bfda-449a-80fd-111a4d546884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f457e61c-6065-46b4-8673-4a3ac2ca8e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc66bbe-d884-4b73-b4d4-20a7e244236a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58478a0-dbc7-44e7-8887-2e738525b00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a943b9a-530a-4bbd-900e-e4206ec0cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc820df8-c394-4659-a460-5e10254013ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d5024-8967-472e-9606-0735b743fdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7151016b-c328-4647-8f0c-cb004c039d41",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9f8f29-c6e8-401f-b60c-19e9528089ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1093f723-df72-43df-ba9d-a8f4ce569c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdc6942-5e69-4426-bab5-cdafbeff01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3661bdf-d13d-4e70-a895-7bf0df7a52c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67db041-55d7-43d3-bd79-e15950bf597a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dd082c-80a8-4d18-b59e-d2bcb87f7f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27922fe8-070d-4e5a-921e-65e095df8d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d711883-e0e5-4fd1-bd90-7c99c2b2424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "320578a2-ef8f-4d3c-916c-f8527a265005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950f0a37-f151-4746-b291-a666af20dbe7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413448aa-6404-4059-9ca9-10474e2143c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee7dd7c-10d1-48ad-b3ac-36aa58bfc6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e3a238-6133-4444-9a39-43c288f5a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6e214c-2703-49bf-9861-c31316affdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06e47db-81ca-4895-b2c1-463b7795337a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b973744-6188-43d4-b116-35104cb867b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e488e35-b288-4576-ac57-0dc5372288c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b5df7-d803-4906-958b-0f087a54c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e582081-b7be-4794-8058-19cddde33367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064ab078-428f-4e35-a89e-e0686054c9f1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7353771-d2df-45bf-ae15-bfdf47419c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea849bfe-e07a-49c4-94ef-f9985f85ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dab5c68-2add-4a00-b7df-c27a86a178d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "770d70a8-c0c7-4a96-b534-f36dd5f6cae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2f861f-fe5c-4374-a57d-df850e70cf08",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed4d394-9c02-46c8-bdab-0334a35994e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4620f62-2620-4a27-9bb8-82cc98586c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246eca10-e4d4-44c5-a290-2289c1fc016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdd9a3d-92c8-40b0-9ed0-f0b0d69c6e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a032dd-4804-4c6e-a751-53e67e91567a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dc3ab6-01c0-4ac2-8d53-19818ed75df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f22419-a91f-473a-9e50-19dc0fde6a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1511f1e9-5df1-4a5b-beb9-542d87eb858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ee853f-d121-4b2c-a653-87d8030e31f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4969486d-0ff0-4713-b463-1abf1afc9557",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76768d2-55a8-49df-8213-3a25da84b9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892d8827-9cfa-4a30-9f5a-e845e89c9781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d599e3-e741-4fd0-b506-d619e79eacce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8b48f1-ef1a-4009-9a42-9a8097496950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91654818-85a3-43d4-97d9-4f71667cde32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a9e7c9-2d55-4319-8cc8-9a7109a37415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d580bc9e-80cb-46df-ab97-56fd40a3fea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ccb064-c854-431d-9032-7dc2ba03e463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "265150de-62cd-4b6d-bd78-cc2d83d383f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c62b8f-3213-42cc-88d6-210ea7b5007a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cec62f-69f0-438f-a084-fc4116b6a9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759cef5b-8821-4156-9789-d6fb3d4ef4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fcbae6-5775-46f7-baee-da2052ed2bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36079472-7289-4e1c-9c3b-32399a63f0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68762048-bb24-4d91-ada1-a9bf699c43eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09eaeb4-1c67-48bc-b5c1-50c4956fc2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479edf33-0a4f-4213-bcf5-329d197492f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19c9fb9-96c7-42ba-b545-96e319ce8072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df0ca663-8523-4b26-85eb-619f817b86d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358b98e2-a23b-4bef-a9aa-37a1e05de866",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ba7dcc-f03e-4175-b1fb-d0d199822fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c888c124-ce95-41e3-a515-01dea79336c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baa89ab-c4bb-4a2c-a1e9-122f61d2a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "005de896-eb5b-474d-9ef4-cd324aba5ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec899816-05e8-46c7-9d13-2b8af8a0063a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c5cdf-e3cc-4d97-8af8-33c2f327a9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d58c4c-a433-4f1f-8a76-36e14fff7cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffd46f9-01e9-4a67-b0f0-1aab8462157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f25430-8e60-4361-a7f4-cac007b32dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf355f-19c4-4034-8870-14922c226a0c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbe946-d2bc-4cf0-8b2a-e8079daeb3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1e4e72-29ff-409f-96c4-8ed41f0884ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa3005-0469-4a21-951c-87f46c7782c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2712b7ac-9068-43bb-be43-95d190206c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef547a49-fb1b-433c-8276-d06ef4767ba9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606e8fa-87c9-47c4-ac32-ea2d7468cd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c38961a-6a3a-4a48-96ba-909d6f510163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a33c30-23d7-4982-93c7-9cca8fed2c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79ac0fc-f856-4c35-b6e3-26d3b416384a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c23bbc6-f117-4029-9ec0-93b6ded64f1d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb0cd4d-c4da-464b-837e-e25f62ce2592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce4cf90-7ba4-4cd1-a1ff-38e6a7ed114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b934830a-a4c9-4e7c-96ea-165378182d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7c6aa2-a7d7-46c3-a9fc-06a3d49e8f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb6e638-1ac8-4967-ba10-25d72db118d6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906e0b70-d548-4659-8ae5-3f7f35a200e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f125e9-0e14-49aa-ba1d-011b2305abc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381828b-3eff-4f98-b42b-cd00c5193017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1669d6b7-3a0f-4c0c-a53c-e3ebdd19fae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823bcea9-86af-41ce-ab6d-fb7247e6f4be",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c51204-0a6a-4191-912b-362fa238a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d644f13-cfca-4a96-9387-60bf114a5dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb61f2a-39aa-41f2-9952-5b931965c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "651a79ef-0f93-4f2d-bcf0-c15f25dc8dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9122e98-2980-4f8a-95ac-88088f82c4f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a6e572-f1cc-49a7-8408-047b1c72c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b91fe5-b90d-4d0d-94c0-0db4d2d20c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785b2fef-2014-4f3a-9ac2-8af72df4514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdd1dee-1ce9-4648-9a95-0c8642067172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b7eb9b-4b30-4b5d-a37e-8ce01dfe73bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc6bde4-ad11-4d4b-b22d-24a703328d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236f2f7a-580e-4d26-a54e-84bdddda78cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b23953-1e03-4c1e-ac8d-d554b840c683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef441c3b-33a1-43eb-a1ac-a0a302c9527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1797ec83-d053-43d0-b2ad-46788f8f0c02",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c2b482-21c6-41d3-97f7-48c0fc18e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db272baa-1ee9-4519-b73f-ab75459afc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5526ac3c-8b02-4273-bc2e-e1171f4c0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f141a2-762a-4281-a536-4a0a7a02cbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34e7fe4-f7cd-46fc-8815-031d85ae07a6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aeb4a9-ef91-49d5-8c76-b5f268adbed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e86f87e-2ee2-4aeb-a7e9-2d5ab389cceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a66fed1-791a-4a97-8473-ebe3a02a8fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ee0333-36d9-495e-bc97-d5bc894a8ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9d68b1-02c4-4a39-a3ae-853552520d2c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff52b9a7-c08b-4a9a-9c64-fe5ecaa1be46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bd532d-8e24-4204-a2ed-eb122b7add58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a7dc99-426b-45b6-ac82-d8b30f4560e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41db73b-81ad-46bb-be1c-ccbaed11647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaf52c7-1308-429f-8c94-a237b55a7b33",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57993b1b-3ef4-45ea-9300-f886f27adc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae709de-e027-4c9f-afac-bc206802d6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10f2abb-25b2-43ef-a85f-f709029c76ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1d32e8-83a6-44ed-b3aa-fee66180b6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf34655a-f51f-46fe-85a8-6741ff45694e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625ab688-2d55-4bdd-9540-49b8bfbcf476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498f6743-a14c-4772-b570-050ef96ca21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96020f7-705b-4437-bcc5-4699eeb35d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d99467-806a-4f8c-8d17-9ff19391eb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe66bd8-244d-4a30-8df8-b6fd9e5736b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aed1173-d379-44f4-9759-c08304881567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c710f3-cae6-433b-b6c7-6680d4585085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8162e88-e3ef-41ec-8d21-b765df64bf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93def518-9a6b-450e-8928-46d2b4f4c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ffde9b-a986-4af6-b5a7-1be59e2cff3a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fa6310-399b-49c7-a292-49c5834940f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7207aabb-bd9b-4255-9b13-29a48dcf8f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd0324e-3dce-4a99-bcf5-826b7df2b582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6f48e-ee34-4ae6-a9d4-d16198d7a838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374faa8a-76a4-4024-929f-39e5238b86e7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf8ecbd-a044-4444-a023-a7b713d1fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd8cdd7-a93e-40b7-97cd-92174bb167ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec27cd-ebe0-4261-93ca-da884ef8a148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "829ad41c-3696-44dd-9bcb-45fe512f3275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2219490e-9b1b-4542-b4e1-b0b3dfb607b7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7991e002-b3d6-4eed-b2a4-b99eef2eb52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2524b0a-0c2a-4187-8a6f-78c3d077d36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef43792-a0ac-403e-8002-d6e2b1070513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f50fb537-9b02-4529-a1a6-98a6c9906094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc23838f-6139-447b-b7c9-729e98193bfd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30427a3-0739-44f5-8c55-e7bc33095235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d5e122-6bb6-44a3-92b2-e1f2fad90105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba1be88-275b-4121-a3cf-af697e37b77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4de35dcf-9b41-422c-b723-b7979264d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa7fa23-00f8-4cae-928a-1c156a4bbcde",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8878673-c581-44ce-87a7-4ac469e0c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0b54d2-0d70-4fc1-9001-ed3fd8fca7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987433b-fb78-4480-9fe3-af63c812fb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3633c29-0583-4956-a746-81556075acbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ffe6ec-6dd6-462b-b8a1-e1928df22569",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc717bc-a5b4-4790-b5c5-cb842fd902f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd0fdb1-591e-4e83-9398-c62f19b8b551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c84db76-7a9f-41b7-97a6-2e543e688c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d770f7-c9ba-453c-ad39-b7d65daa1ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bc2de1-582b-4753-a478-796f39150c38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282f03aa-ebfd-4a42-bd30-7c763d74f6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e39aed-144e-42b9-90f2-b9057c86bcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eb5182-b83c-4f57-973a-d643cdd7bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "204328a7-a040-4932-a9e8-5f5b55448f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aa86d8-b776-45b3-aa07-0f49c1b43f5f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd3525c-ea6b-468b-a021-9b4f62004180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c158d9c-ad48-4b7a-af86-4bac59fc3909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1ebc39-3a54-4b59-b4c5-7431ec8b1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e0df55-b6ac-4450-b4e1-a4d326e61fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff9aa8f-a089-4f52-9bf2-9c12a982ecfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496635e-6007-4ed9-8e1d-6d870949a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284af1a6-2a22-4f44-8618-a50b0ec49af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f7d4bd-f748-445a-a219-db8811e66474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a95b46d4-7591-45fa-be35-da5ffd9ba813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547021d0-5311-4f20-aada-5ce577372ca6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642607ac-de6e-49e6-9731-d9df58851096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee8ef3b-1b94-451f-bb77-772e9faca2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae07dd4-d1ae-42af-8f1a-24df3c5ed772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee85525-1690-487a-a820-ccf6b22977d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649979e7-186f-4a11-9d83-13ba5ac16de2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578d9f7f-87ea-44d4-8133-165632da0ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c28b2b2-1853-4bdc-89ad-462c4ee64789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb987485-c77b-41db-bb04-78bcf5e1d590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1caa4a25-1d33-4f6a-8591-bbfe7b4459b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deee459-115e-49a4-b8df-f2f811ecf7ad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61235d0-b047-460d-8309-a90c7ab48226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0624864d-fa76-426a-b40f-d8f2e519e3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed25980-5a91-4e27-824a-6cc090bffb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "840abe8b-57e4-42a5-a706-5477e874e2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e45d73-6b2c-4e93-a224-a2d5ac319d3b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f2596-3909-43c5-b6f3-125b6e5b094b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a03ef8-be3d-4abf-ae26-e9f711b24ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d6fe7d-d407-4a87-a01c-3a3ed7f7d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a18fa4e0-f773-4f2e-9252-2c5d8b2d205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5113d1-cc53-46e3-91fa-e11c96ded4e4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4915def5-055d-4d5d-ac93-23ad669b53ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebe8ea5-f26e-46e8-8df2-7630ecc684c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2d340-87ea-425c-bd15-769de2d6f172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35fc6b35-76bc-4fda-97af-1ec01fbc6fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e3a37c-3806-4a63-b3c8-46dd662ec1bb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41e18b7-d749-4ecd-a40c-dbd569e3a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4153f8bf-2f0a-46fd-bbe7-2fef0f37779a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35311eb8-5c28-4239-bb55-1a69fea889bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b008f24-11a6-405b-b2da-6091166c2e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ff425f-3e03-4f7a-9bc2-2368d5bbb456",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad84d468-451e-43bd-b23d-e2d4468b9404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed420ac1-8720-4809-a73d-58e5ed5d0491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5103667-56ed-4848-94dc-5cb13bff1d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2c075e-0779-49c2-990a-2c44eb2c8f92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe540615-5ab5-40df-aa21-9d2834dd75c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71801030-95e9-4395-b6ab-55660164328a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1bd88-3f76-4c00-b86e-6082d588ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb76478f-f02d-46e5-8142-373036e6ec1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb29f2af-797e-4306-a07b-8ef4a29af977",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "569a6b69-ec5b-4a0a-b523-cc44da6c9252"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91bb427d-8a05-44a7-b1a2-89e3d70fc521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b922ca7-44ae-4885-b850-5d7ea47b500a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1221dd7f-0a32-4769-bac7-2ab7fdeca27d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a24d04-b4ea-4426-9ced-c18b02ffd51a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84459bd7-dcb0-4edf-ac37-7381b97f8546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2cb2512-8abb-4f96-989f-6e356c8d578f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a2ae67a-fc61-4676-bf51-62ff4b7459c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d74ea7ca-f54a-4f26-8e3a-e05858a2aab4"
                }
              }
            ]
          },
          {
            "id": "e9972ba3-4679-478e-bfbf-e0bc14a51a1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0047ad90-0f2f-4851-901c-dfcd4d80096f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "28829dd7-65f7-45ff-b8b1-2478cda8befe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7f698b-c95b-4448-9c2a-ac00bb33f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efa7fbe9-4354-4304-825e-2cc2188a8459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70d5eb5-00a2-4fcd-ba23-c649ab60acf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b919baa-58ad-4577-b64c-35b642e018cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2323702-e916-42ee-a68d-c920572d04cc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26d73355-ab26-4be4-89b3-6fa48bfc0788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c9acee3-6aab-430d-b59d-aa28a75250ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53a0e31b-6dea-4b07-8757-3f60a196b212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "684a3d86-c35c-421c-93de-e49a34e901da"
                    }
                  }
                ]
              },
              {
                "id": "a1490282-8a4e-402f-b124-d3e886c4a6f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c5765a1-bb54-4c53-b946-550e795b69bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88c47abb-7995-49c5-8dcd-0333e7ec2fa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b022ad91-be6b-4489-bbc1-f988ccb34db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2de8bf90-b337-4ea1-a8c6-bce11231bfb3"
                    }
                  }
                ]
              },
              {
                "id": "10376ac6-70c6-476c-95aa-392dc934ac3f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13cee9e2-f466-46d5-b066-818f73d3953d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "360e4b36-e857-4917-beb6-a31710cfdcec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ab921e9-12a6-4f08-bf36-c87e718beb4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed468a3f-7ca9-4828-954f-c4f40050905c"
                    }
                  }
                ]
              },
              {
                "id": "a99e6e69-8954-4d8d-9866-28b65803e04d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4409cfde-512c-4f09-87f4-224d96452dfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e12532a-37b2-437a-9de6-4bcd977ee189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "785ae802-152f-47d4-94fb-ce965a2d7e25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c114b6e4-3b57-4014-8657-5b41baa6e3f6"
                    }
                  }
                ]
              },
              {
                "id": "ddc6ac8e-f9c9-437e-bd21-f31d2fece875",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52f950af-ef9a-4124-9885-f816c0b2bd93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0cb8fa8-3955-44a5-9b97-3d8fe0f70782"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84378e33-ded3-4fba-a25d-721fdecadae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1a6ef70f-9888-416e-b0dc-74ce37ad6a1b"
                    }
                  }
                ]
              },
              {
                "id": "b2b60cf4-3c54-4138-817e-679077a6f5d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03134b96-5cea-4ab2-b0bf-fc0c62a4853a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f316964e-1fa7-48e5-9fde-7f38d9e55a45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7ecaf17-a90b-4870-8b33-0d8bedb64c7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "491e4e49-481b-4083-8d65-c5c577b4ba9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8c1ffe3-4488-44b2-b560-233c1475fa9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8a33205-8b22-4b14-bc09-aca45e399fbf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c35173d-1470-452c-a806-bd026ad35f0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8c1aab2-5f91-4e8c-9c2e-3217d7751e46"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6d5f30c-6cfb-46c7-a915-9e857a8b10ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "846fa0e3-0188-4548-bf3d-b1607c38a1b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d34d072-91f7-43b1-a5ae-67c20bb2a74d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cf0fe19-c02b-4bac-9bdf-34a34127c90c"
            }
          }
        ]
      },
      {
        "id": "45b4c06d-14e4-463d-bb2e-b692609a7952",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1c08d6db-4fa9-4802-94bb-98d8a294d4a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e1f0ff7-8fdf-4819-b007-ae44afbef251",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ffaf44c-9ccc-435a-aced-aefff6259ddd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db4f847-fd16-45f2-ae3e-e428b2255b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51332c5-b4d1-40d8-b16e-4fe886839aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2200b99-4c6e-4cf8-80af-4bf76ced3009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc14110-a3b3-4109-9a37-1c342825a7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdafa43-1f14-4e0e-b8fa-a04e3858fe5f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac4045b-5f95-4a61-874f-42fcba94c60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c275af2d-7689-4e08-8245-ce06c6755025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910bd19f-2c74-4eb9-af34-51682279b2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ce78ae-fe89-4c15-b3ca-17389e7aaeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ce9fbc-3cc0-47e3-ba86-3386d029a1d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b221c-3a1b-44e0-9626-8382194300a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f08bfa-fd1d-4537-8bfd-b01eaba5a115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7238df-c838-459a-991c-18c0dddd74d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9d16da-4617-40a7-a6fe-1426e0fdc1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f65aa4-0dcf-45ba-8367-9f65099eda44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c46724-63c7-4098-b13a-c039ae0b2728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfeb846-4a02-490d-8253-06aee15008dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906a0190-7c86-459d-8d84-67f07b8c5b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21c1361-c55d-418f-965b-5ae5e6849224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5860b0-689a-42f0-a890-062308b112f4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68e7b20-77fc-4265-8a8b-5e5e71acd530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6c2c07-064a-4442-afd5-770f17be584a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cc63b9-fd6f-4f56-9929-5aabe151cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d116a6a5-1b78-4dbd-b142-418444b15793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20a443d-b864-4a59-ac55-b9196cdc74d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20aacac-0cef-4ed0-91d5-acb6805e820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35e19a7-0c71-44dd-b66d-816c70db600c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9667afef-abb7-4243-8bfa-20dd97004ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f11f4f66-10a9-4edd-9b1f-76794c630a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a7c870-38f4-4411-93d8-d44deae31acb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbddd4d-671e-47e0-bfcc-7d8d6647108a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb866b2-213c-4dc0-8748-1f4df05d60b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21c8d22-45a6-49b6-91c3-cd5236aacfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05458b02-ab8d-4d75-bc79-8f9d5fd9f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244ca637-5a2e-4664-814f-ab5d7aec003a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e89df-ce23-4e94-85fc-9e18b1e51578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c60c5eb-403f-4649-a1dd-59f8576c8050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41fff4f-4b77-4955-baae-cd8bc63a44a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38794d82-17e4-4064-9b07-73b6b73a8de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71704201-42cb-4443-ad25-df0327684cf9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b14016-de61-46e8-8065-6395b9b95582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45ae315-0ccb-4b68-8675-fe78c179fb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a0790-bea8-499a-ab7a-43fe4afda5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "226ce289-c640-46c0-be37-539ee056e30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f06a88-6a82-43e3-94ba-e1b28abadb94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8d651f-48c0-4bdf-9e81-64a54a2f5ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3459e7c-d530-42a4-886d-55031ce2f3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2875db55-5528-4ef8-95cc-2b3521bc27a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b37898-e543-4949-9716-f0d94bc45622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a2b329-571c-4ee3-8c49-0e37d66169f9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d54f0-9681-4034-82b0-39fc4a18e07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b70f8ef-b582-4415-aca5-975384a7b0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadcc035-38d8-47da-b006-e989a0eef883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0383206b-2c35-4761-a425-b2d9ef63d564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2f1eec-701c-4c5f-a884-74dd31b02995",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4bb682-d30d-4fc0-a1c5-83aa85caecd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e54795-100c-4c6f-a92a-3a1500696b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c087e-ee23-4bb3-9330-28ee6b772b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf0644c-16b8-4c37-a9c9-8152d0ed9386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e15f9e4-6a88-4820-8996-b14255008f4b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e1692-3b76-4cd3-bfcf-8e442f2d6c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669c86c-2034-43f0-9329-5fe456a18ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf48984-9463-4897-8ff3-a2a52d1c7beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d3b03a-525e-477c-bfd7-5154d831564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1856989-1be5-4d6f-b02d-6f1928710c42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41d848-6a7b-437e-be7b-0030f837eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffccdd5a-6bd4-4018-a696-be39badb9398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ea2f9c-b624-46c0-8220-3cbc7ab941ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f667169d-205d-48d5-95a2-b4462e2c907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e7edb7-2817-48e7-baf0-1391ed8b5c94",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca62eafb-fcd7-4b7d-b62b-672cd0084549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629caaca-0a5e-416b-9417-162d35d5b057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9c9421-0522-4ace-b82b-fb33e10e6165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a87d5c4-b5fb-45c9-98f2-1619b09a311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6ecc21-4164-4999-b5f5-5d222a736ec1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56abdff8-bc07-4685-8c44-d90f0aee0644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6898f90-54ef-4fa7-be25-025c1ca93b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af255338-d90f-49af-a004-d1cd2a865b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "105f8fec-f7cf-4ce7-9127-0fde215884a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c227f089-ee3a-470c-a0cc-b88ea557dc3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8977dc6-e188-4a7c-8608-12483aed6aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9354fc69-9a47-443d-bd24-5b9d12e134b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b98c60-6b56-431c-b53a-c6db03b3a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "792ee700-c0e0-4232-a66a-167f0f12db88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e77885c-e5c2-4824-b847-c52df526afd9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5ea4b0-7759-4e3c-a79a-da6f927b6581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933b66a9-00cd-4bdd-b2d0-fc5476351ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dce3de-5ee6-496a-b22b-54b556215d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "561507ec-fa68-44a8-bf6d-8649bb6eccc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44adf328-0a6c-4877-8c4f-9e572b4d13c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef47b42c-b438-4ad6-be48-91e0c2bbf5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52fde17-fe1c-4e87-b83e-bf1082bb5947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5e2209-4ec0-4897-b77f-0c8080e687f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dab5705-a422-4a25-bb5f-b954b88eda78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0cfa46-8024-498f-8d23-c494c4b29bfd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f282d58-910f-47d2-904e-abb1bc253ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf149d94-e59b-4a46-ad3e-544258686925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1296a5-7d37-4e86-9181-4c02b5683fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "616a501a-aeef-4a78-a618-69e60d412252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42099c88-7bc8-4074-95b3-e195513f33bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4464123c-4939-465e-860b-3d99a7da78f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edbdb33-9125-4364-b3fa-d6eb4ecc8c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aa4d08-e2cc-415d-9e0e-9e761b151665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd1b6f7-8f7c-485c-ab06-e73caad84a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b29fbd-2b8c-4267-8cca-389dcf904cfa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0632e9-d835-4787-b365-615c3bbb6392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f27df2d-636e-4c90-86a5-c364a092eca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f692a17-d68a-429b-844c-7b6b8fdc5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ff693c-c141-4a7a-b2e4-5f9e91b4c24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c9d46-dc63-45b7-b7ad-5a161ce87d81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8952b18-2009-4c45-b816-c244ca2c5918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbac101-cc43-4e79-a4a2-61011925efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac68353-5383-4feb-b16b-09a4748322f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6927366-0498-43de-aa12-dc63851607d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3df437c-3bc0-4ed8-bbfb-7f6d11c78d7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b716fc9b-c010-4f4a-8a23-4c5d21dffe02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbb12b0-4646-4844-b9d2-5ff73280e980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e1e547-38f5-44df-88dd-79c853428ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed709537-1a34-4f37-8e36-f09c87228bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383c706-3d9c-4006-97d7-1fdb53440dae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fed55-e46f-4b3a-957e-def2631738aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3df33ae-98b1-4e66-9971-b9ec43fe0f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463213f2-bb39-49d8-84e8-b89a21e613ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6546b0-b52e-499e-b592-b69995c69588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ea21e-efe1-4618-8d40-64ed6d6a15e2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941ea72-b9ff-450b-bbbc-c01291347b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40967ab-cb45-4f48-9cc8-796c77436e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74007836-f793-43df-9c25-d5379658903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "630789c7-a030-4fb6-9ef5-4a6490b20ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eae1eb5-d403-4589-9eb7-2b6647c4e6b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0c25f-a900-4c39-b118-347d2fa20229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db91d9f4-f08a-43b1-9d83-82f4c86b8058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4371df2b-be78-4b50-b7a0-fc0960a6c1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67f268e-329c-42fa-af8a-706fc10df166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f60cb3-6c84-4f6f-a70f-0ff3cf741f3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59170881-19ca-43f0-b515-c2664ab72506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5860b7a5-805e-4b7a-b2bd-2515349a858f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df4347-2522-4836-a804-730867fa9050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3800680e-4bdb-47e5-b43f-a5839c02fa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28448033-d365-4831-ab4f-7026074239e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1b6a7-dcaf-4406-987f-009eb89dc138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f126cf26-e852-47da-abb8-cc445dcb60b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1662a68c-bd4d-4c64-b97b-105bb872caac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6edb86-f8f4-404a-bb6b-a2bb809b8949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65145838-df1e-4177-a124-51db9de54e1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc091584-b77f-46f0-82eb-232d19a6d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbeb0c25-17f3-470a-9329-664f0913df41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8e6c48-7828-48d9-a377-2ea4eef89d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e6999e-17ff-4aa7-a322-ca2165ba785e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90168ad5-15a7-42a4-b310-1aa324239595",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aafc29-9c25-4da4-9c7f-8f94909530bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c2abef-1259-4ef3-955b-e310970bf4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db5f602-2283-44c0-a303-dfcb982d8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15abbfc-5313-4de4-b4f4-615cad8f3327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f757a6-e3b9-48fd-8b9d-68e5fe7b42d4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba24730-187f-4c47-b392-b04a1690a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212f7131-b139-4302-87dc-6b4ffe2ae20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0cc5c-6028-4aa7-bf95-48a016734d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03be986b-abd5-4eba-b19a-39d51611e542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e80763-efa5-4904-b976-a993a55820d1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6dcb1d-28a1-42f5-939f-6115748c6e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4208c14e-7ce5-4d79-ba27-c61c91a4756a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e0599d-7737-48fa-99c3-c5fa7eed22ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d84a546-944a-4a28-bae9-dbc45fc0e8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84624ad3-d9b8-4074-88fa-962cd63349b5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d848f21-b40c-4d1d-a3f4-b8d9f124405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a39379-9b69-4b7a-a185-0da9518f75bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e36b2-ca11-4cc4-a439-91e9ff041b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf468e1-d690-415d-85f4-c85905bd7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d23734-a958-4e4d-ac9b-c5441416d9a5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d357b722-185e-4dcb-a7a2-c92075ae4120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e0ce52-b36b-4699-a79b-e2206de280d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f821673b-52db-4a56-8d08-23b2ce197989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c67d50-ae09-446d-8530-ca8678552c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e5ef6-b501-45ab-87c0-9a328f0d08ad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d3e1c-2f70-4239-8f7b-171b90097aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b6bddc-9755-4bc5-ba6c-bca344cebcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b384e87-3f18-437e-8fd4-dc5993d1f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d123c879-616d-489b-b96c-ddc4fefae7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0594991-ae5d-44e8-b4db-d42c750d04e0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40475cf-773a-4331-b6b5-a1c31f8a497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e4efbe-d7b9-4b7b-81db-3973febfc4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d5c65-5f47-41f8-9ceb-72331c61105a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae93b822-1ccd-405d-8d2f-4f03b8b58711"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5196754c-daa0-472d-acad-f45c3414eba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb7279fb-512e-4dc5-9341-8f484fd98049",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f014fb13-a1b7-4116-88bc-c25fb6bea9ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1922730b-b9b7-45b5-a2e4-f38c10eaf212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da12e48e-5a3d-4193-9c7b-20729dc4e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4700046b-c2ea-442d-ae4d-ebda781c0a23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b05fa2-2014-413e-a624-46c20f37808c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "befd1c6f-55d5-4260-b4ee-d0c1446df06f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f81b7bb-b5c0-4ee3-9d00-35190ea6befa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b09ce2b8-a23b-452c-8143-18619e7a25a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a79d0291-4d2f-4350-a370-63414cdcb310",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "703b8115-3262-4867-bed9-a4e1f1b4f42b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c0ed650-dd36-4007-9673-39d809a22fc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86ae601e-ed15-49c9-88f0-f7d72713cb29"
            }
          }
        ]
      },
      {
        "id": "8fd9cc75-926f-490c-a425-aaa8e45fd2cb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "50543988-32d7-430a-afbd-5a5a1b4fba37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62e0321b-e57a-47bb-820a-88a4fbe690d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17bd95d8-ba67-4faf-9a71-f10fdecd11e0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843b5b61-5b54-4fb4-820c-331e7ae5a253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3addc1fd-ec66-42df-a6db-6499b78cea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ad45e2-a009-4066-8ea1-742eab73963d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98398815-c67c-4054-900b-fe56ab48cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8988f709-e1c3-44da-8c8d-6db6a14fb991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4419815-9505-4b85-bcf6-f525a260b76b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e55f9-9fb2-426b-a963-1b060054b798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51726030-e28d-4842-837e-f128214ee5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301c881-5f76-46b1-b1b2-0c489994a826",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf50041-8aac-4f5b-aa1f-e6e839e9a3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7e8b3b-07b6-406c-a694-c24403338657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dac75a-3f64-472f-96b3-377f0cf698ec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0b3b21-c790-4a44-b3a7-50843045e957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99406de-6f22-47de-a081-93c6fed1709f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a7a25-ff40-4d22-88bb-16447deed4c8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8f557-7ca8-4cdb-86b7-6e11cc0a7cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ff47ec-00e7-4df1-825a-fed7babc5dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39e31f-d8d5-42c7-86a5-03e1465c5736",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6334fb63-7c04-4a47-9f73-c85b8215d223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbb50b0-edde-41ea-a616-d8c4fba627e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a92df96-d4eb-4363-997d-7e72ff0d3af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc42d0cc-e301-4cd7-af28-6c205eb4edd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e3180-7150-421f-8223-bcc939728a86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f980cfa3-aa25-4b22-a045-c26c8ffc21f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8838ac-2830-4dd0-b756-87881fd220c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36562888-c560-416d-9c00-795721a0a107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c7df4-1388-4575-8cfa-afe94edbbf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7faf7c2-ddf3-4f08-ba47-b1b4cc3febac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97eb6de-c103-4fc0-8720-9a8239e50972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5afc79d-00f1-48ad-b739-0022099d3cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c981e-fa2f-4634-824f-958baccc50ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7433aae-ce01-468f-b840-0f11dcb2f5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbcbf3e-cc54-4c6b-a9c9-ca24ec8aaa51",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8494ef9e-8964-42a5-b2d8-4894e9a79efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eef03fa-3cc6-47cf-a838-ef1fa6390db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac413ed7-b120-4400-bc68-796f05f0d2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38511a15-fd66-447b-85ac-a9e76844581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f66e9c-0082-42d8-ace5-dcbd5e662377",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f668777-ddcc-4562-8151-9f44a5f74e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08451f9-9adc-495b-a0b6-fd859666e9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358089aa-de15-45bd-be8f-542ab61218cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d348c5-daff-4e5f-83aa-348422ecc954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f625e5c8-b933-42a6-8503-0504779e9703",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0d74a7-0729-4789-a020-ecfbb74934d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649575ef-5a34-4d71-ba41-3c5859be87a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b725d141-d8c8-46b2-9ce7-386df827e4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c33f91f-33b7-4be3-bab8-e9421ced5223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4eacc3-ef54-4dd7-a6bc-9ada76cf2493",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4ed0f5-3acf-426f-9b21-de7cf5965553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0301e7eb-0212-42b2-ab06-dd76a58898c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6708b7ff-f265-4c52-baf7-6336371e2e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6320d396-1793-480c-b3dc-e77d643b23dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb739144-5937-455f-ae9d-8f193b8fd7e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbd265e-8cd0-49dc-aaac-9c2388f0bf46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6a047d-6a03-4f6a-bfec-6908e757d9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ec9e1a-0a26-4f95-9d12-a68a79d79c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d795764c-b6c0-4436-8bf2-ef7a17dd4422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de7ae67-f5b0-428f-b49d-9c00c929926e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae84fc4-77a8-44f4-9f57-dba2de06c0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d6061f-0529-426c-ae37-6e03749040eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49983fb-6364-45a3-9f38-1f91e658150b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b04ace-f2af-4d58-8e8e-c017829a795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1948afc7-dd39-4885-8e06-50fbd30ae4a1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d06ef8-3e94-4c36-8bc6-bd3dc943292a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c1028e-574d-4943-ba50-e03c9d6b3a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e66847-ca45-4e59-9f1a-954b02f1b5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc95bc4-35c4-4871-b110-a46845f43c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39edb313-d0bc-4011-b6be-f75e283b449a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf9204-fa15-4c65-b85f-5b0c27d54f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ac07b6-c83d-4bd9-a865-5a70e9b89a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c522c9-1e37-45e3-bba8-4b9c4a3862a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d9d35-00aa-4fb8-b6c9-92a730381066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5062d7-ad74-46bd-a2ed-58288c9df2a1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7c74cf-cbba-4635-bd8b-69e4a589dab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cec757-a04e-4973-aa3d-45640c1b0fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f059f52-2fc1-4896-9abb-88518fdf61bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14f53c9-aa6b-4e5c-b090-03e1b61d817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98567b15-bbba-44fa-8b63-bc45bd17d994",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f495cef-efcd-4cb4-9443-960c927d1649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5608287-ea85-447d-a8dd-168554262af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bb4d8e-a3fc-419b-917c-ef7b221fb25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d9663c-6f42-4a5a-89b4-adb80547f62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79adf916-675f-49d7-9218-051ab89caab0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea374c76-7b5d-4cf0-b905-5daae1f56db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d30c512-f288-46c8-b8e7-60a7f08ab042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd437a5e-4755-4377-a6cb-43ab603b4580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df6e5a3-5088-4d79-92b5-7cd944e92e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c6e8fe-391f-4638-847b-dab21eec8d2f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe4bf1-05d4-4d55-ba4e-79b9763052d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5de4d42-2f79-443d-9f2e-0bd075426390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb926d9-7d77-434d-bffd-b709d5a08f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcb9a59-0b9d-4226-ba61-d178aa62c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e029318e-3e85-4be3-a151-de9f47f1f168",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad57b7c6-c312-4104-94cf-3e80e1873cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba30577e-d20d-4612-9875-9e0332b71aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4803cda2-1263-4a8c-9dae-cd981fdd53c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999ae369-0137-407c-8450-df3dd3afe4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9523034a-eb1a-4805-bc69-cc008fc216c1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff40ca8-1c2b-4a16-9b47-78f03039c31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7fcafb-3d84-4316-9396-e7054e81f1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18331304-3f87-464b-929c-73592b5f26f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4467ce0b-0bba-4e22-9ffe-aab2d9ccdcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2dde88-53cf-4d9d-9e15-60c683c8cdfd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f00f9-c7b7-4fa7-b298-06ee5fd4135c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9705db-69a5-415a-b95b-c8963c0846fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd9bbcc-0111-42ef-8c81-4576f131f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6512108d-e70a-4d32-b091-3962fe90d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aca27a3-25af-4c1f-a07d-324bf0e6e448",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6833c03a-8a80-4f8f-8feb-e61ccd889133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b76431-b624-403b-8a59-e57e55ee7b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb292fb1-d1ea-4490-a57c-9c3cd1c81641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca7e7ae-fac8-4be6-bea3-277446485f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf41871-d826-46a1-b66d-02bd426f8f32",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7716be4-a3d9-407c-93df-d534fe4c041e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95034006-185d-479b-8a35-2e65bfd0bd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c047b085-4f77-43e2-8fbf-339d19b30dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0849f8e7-e8dd-48d0-b00a-65a312da1a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b7fdf6-3482-4f83-92ca-810ca34a165c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263650e6-5ac6-4c7f-90cd-4d2779959831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8acd6647-cb4c-46bc-976d-c88dcd34cd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6001564-a6dc-401f-a559-a56bfd3345ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5865d419-ff95-40d2-90b7-bc06f783d607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f88e31-be09-4f82-95de-8c386a292c12",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f97643-e864-494a-a5bd-723d1cdf955a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7144be9a-eb61-4493-8525-4f159aa09694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dd9c8c-e088-4f8b-9246-dae67be0d529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a10ded6-64ec-44ce-9e69-fac13f699c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff60e6c-cbc2-40e7-bf4d-d14633736df2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e36be75-e313-4359-ac6e-98a7f603a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4461c30-8cf6-471f-b159-d59d6b5aefde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23f7465-a00b-4b52-8a2b-7f80b1420f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fff380-a26a-47d9-a0d6-af1a1e21526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43917393-0999-4c27-abf8-ecc2ed16f698",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a508b2-3a05-4523-9e7d-24b16293de30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7815c4-534a-40c2-ba05-8cff2c4e1a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd580b-add1-4472-abd1-f9c86208f6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238410f2-b7ad-4e48-85f3-4ed1c01f42d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005af3b-238f-4d0c-b2fe-a380ae04da72",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd71f13-7777-4659-b61d-50dcd04caa49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5334e7d-11aa-4a8d-a541-00f95b5bfec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e626444-37fd-48ee-8ced-c26ca39de688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b6e188-2fdf-41da-b93f-3cbfd3552d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f140a03-6539-4edd-b92c-c43d638d7906",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823dc870-5325-41b4-9845-880042cb2b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f18c80-bb1b-4a04-b635-7b7a163d85e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f65794-41cd-4add-a7ac-29c977c01dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08edf5d-953b-49d6-a647-157591c4bc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bee397-5aef-4d9d-bc51-85024932553a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c17e5b0-c796-4ea3-8bb5-9deb9075e32e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82931bdc-3b16-4fd8-be00-d42bdc904f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ac22e-2d8b-4fa0-bd45-b834cb529800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d562b4de-17f2-490c-9a27-eb36e3724d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1063587d-0874-4c56-9a6a-d48ce3ddf6d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51962dfa-f2ec-4ada-b7c2-922a2c74370a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4b9633-ae2c-494b-a1e2-da5950da508d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536409a-c4db-45bb-a2da-66bcf6846502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14c9c3e-d6e6-4b07-b322-e8d424468055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8068eb-ed3c-4005-878a-09bf9af93ac4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12da9c13-bfc5-454b-ac43-3bc7a91b369b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be800030-bb53-45dd-bd6a-166f79d25ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b923dc1-f8b1-457b-bd34-7c04ae683a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb9bcff-7a42-4fac-9e76-fac5c268a871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3723010-06ab-4fc0-808f-6bb5308dcde6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19002749-c147-4641-a33f-8629788bc508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaef19ea-5bf3-4e21-a647-584dc906c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adb1462-c0d8-4a74-bb40-46e479e40d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcd3220-2bd8-48ce-9d8b-73fc5cd0598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d99c2ed-4756-4d14-b4c5-dffb469de76a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b636edf-047e-4dce-adec-45b7da7e350a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3880e7d0-888a-4cd8-8cce-a634a7be305d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca337ebc-ddd5-4e56-abdd-7c4772b9b7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6aebe5-3000-4c5c-b498-65517f7a0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e377c9f-1d1c-43d0-9ab1-8cd823f9b637",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb77cb7-99cc-42e8-bf14-224d52aad9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3842e5-e18b-4322-bf78-f3c8d922cdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683255c5-10f5-46e3-8a9c-c5c1e9c34663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655713d5-b663-4d84-8bc7-eb2605c201b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff06c6f-e489-4bc1-a92b-22d3891ba8e5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecdd473-0fa3-4586-826b-6f6924d528cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3796a6-2056-4d50-a293-d5503c1206be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1871802-d796-43fe-95ce-13aba3154e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeae2d9-07af-4518-938a-dab908b1b205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cdc183-7d31-4e19-b524-d1405a9c737f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d4a34b-2f29-4d81-bce1-4b36d27ff339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760fc417-3602-4a0d-a170-5bc3d86da781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55718a8-0b38-4c8b-9f3a-54c6c1b97ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bbc09c-0725-44e0-ae9f-0144b60bd2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c9a278-275e-455b-aa7a-29f11a59ec9a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52400ddc-929c-427b-800e-90b3f32875de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beb7e55-2ccc-4b16-bed6-829dddae7664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451349b-b59d-4cef-bfa2-f631b6e0a141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36492a3e-f969-46ac-bf04-480be79f1a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1658666c-b70a-4089-9b4d-e992a8c9bfb6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b2e6cb-b17a-410f-93d8-82f58c297b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a54036-a9ca-44b4-9c17-17cad6571181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc0e30-b282-4ffb-8de3-fa19a3db78df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8dfdb6-88e5-4d68-87cb-55e1cba07ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17829c0-dc82-4db0-b9d5-6906e4dee3cf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16af19e-28e9-48fd-ad62-8cb372e4fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e270bf-5d63-452d-8613-8b3dd283031a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe66aaa-a686-4189-8dbb-a90f98ab65cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ce4624-ba4a-40c8-875e-e96499e2f7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c75f10-cf83-4880-b022-8abcb241ed13",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4e4459-52e1-470d-b2e3-10fbd8f51452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11ec53a-b6d4-4a26-ba9c-7f923e8c2a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572497d9-b1d4-4a70-87b8-73da0d0235dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d2b496-f8f7-48b0-94b0-9ea8f3e2b85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d797b4e-7866-4a0f-9236-002740385cf8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c8b2fd-bab7-4fb7-9192-9aced9bc3494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2960ad-195e-416f-bb59-54a5e45d43a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163398b5-57ae-4434-a205-33d2902c3283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ae1676-d75c-4ef0-abf7-58e221b8f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afd116b-1393-48c1-8149-c947aa8e827e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aef0ee-88a6-45b3-92ce-1918a7669f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780b2d1d-0c9a-41a0-bda9-3a40684bf303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9f4562-0e63-434c-8a47-e488a245c140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af1dae7-6bfd-41f2-b1de-e7297d1c576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ef3a0-956b-4dfc-be9c-8661a4160eab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0060a0-e610-422d-972a-8279ab2e820c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991cc21a-92c5-4a13-aeab-7cda48326148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b8833c-e5e7-417a-9a7a-9fe51ac0da05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea30da42-1040-4a76-ab83-aae1ec56d02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a1e6d-e803-4f6c-8ac3-4dc8c92255ce",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d1aaa-1e06-445b-871c-423a8c2b44f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5683578-4629-4961-b9b7-4074fd4cbcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506b430a-a0fe-4732-acc3-71cdb13c6603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65b929e-cb77-4250-afcd-d1f86082b5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2dfa12-4d61-46d0-9b46-e6440a7e79dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9e9a71-5fd1-48a7-8599-502993a342fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a134d4d6-61dc-4cc7-a0c4-3e729494edb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a71f238-63ac-4db3-abe6-27f250a71c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51920531-594d-4659-bd15-12c0403edc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372a92c7-3093-4e2d-b99e-4a8d385ca09c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a919bdc-18d3-4bb9-8001-ba13afbc982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9de9e20-481f-4be9-b984-17813321b450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375b54f5-1d7c-432d-9568-f59b924c639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36954a5c-0807-49ec-87f4-5fa557163bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc60511-0408-4ae9-9df4-7c0393daf414",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c19e0d-9a5f-42fb-8797-7fd1a3b43a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cc3124-ea8f-42b3-8c4f-f43eff3fc6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a765448-da2e-4091-9ba2-94fd775a7adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba0f310-3acc-4dbc-9b2b-803068a98c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a32a13-65d4-47f6-894f-3b8a0e318aaf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56734b63-685b-4183-a769-19c846f6b381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee222bf-fd5f-454c-924e-2cbc2c7d0bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890530fc-714b-4adc-8917-a708692d4672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110bf4fd-2fa1-4b60-ba4c-0d152f36bb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64412a48-ee63-447f-ad68-510190239966",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51318cbc-5140-4360-99d3-4a7a14c718dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2554fa03-5199-42b4-8bdc-31d4181396be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d64093-8451-411e-804a-dcccf1b3adac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bf9eed-e285-446a-8aa4-2cf1c68cf142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f35dd-5ce3-4b51-8cee-cefea11aed09",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092266b5-bd0a-4837-b806-2cbf30ff79cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28154537-2993-40d4-9df7-478f65e9091a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f8ff01-4694-404b-a7f5-78f86ed6ce88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d8c929-1db2-4985-8aa4-10c21b63635a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf6d007-eae3-4302-84e9-273d19062c36",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3026f8-e4a1-46ec-8e0f-b0fd92aabe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df921fe1-896b-4440-8704-9731b274eefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9710b-b814-4d4a-ac20-b50c0f14c2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a30175-8ba3-492f-a81c-fdfa43e7d984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ce385c-1386-4648-b768-a5d8edc75b34",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f00d9ce-6b21-4035-9a61-2ad0035a5de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1303d06-84b9-4b8c-88c2-838779b34b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e329b-33c5-4f5f-9a0b-f2ca20953e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afceb37f-d8fe-4040-b54e-fe8c8d850a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597d1f8e-1389-4aac-8581-3580e6e278dc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c36ae91-c1fb-4035-aee7-03cf2cb6699f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a94908-4efc-4d30-bc15-037025b169ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc7378b-b275-4e69-8fd2-5e972d32cd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ccf8aa-d8ae-4a80-8ce5-2feb6b16db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4475866f-fe5c-4713-8c32-c353454f6b7d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4470bb-0149-42b4-99a5-6a5b58611e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84abb40-42be-4bc3-b079-7caa3f3dd476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5667b53a-b3a5-43f9-ae73-361705cee95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85971dd-a684-4cc8-ae26-3b1b88174d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bdcfe7-e175-479d-ae84-b7ecc0f77f23",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283065c-ec6c-4c0c-b811-fdafeb27d41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3809b2dc-60fa-4e1a-aa43-4af812935986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567fd870-4efe-4fd9-8dfd-7eb2937c3905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf0f27d-3823-47b2-87a4-67791f8fe66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa1f028-0b96-4f10-bd67-11a2122c2d8f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70a7f56-8968-4da7-8198-0b128d01c979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c1e8d5-7ca0-46d6-8d6d-be1b276e59ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d6f1b5-a8a7-4751-bc69-7c9d5a1c4496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed1cd9c-de56-49c3-83ee-5338fd64e0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53322035-4302-4ca3-ab01-ffc06f89e594",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de1a1c4-471b-47bb-80d0-287fdbd38ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5dcf6c-5a85-4fd9-ac10-6c54bb5a9e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c3e04c-6280-4756-a184-6ce2f261fb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97e8bc7-1612-4017-a01c-a642688bde5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0307ff5b-4161-4426-8b31-c69cdc71dac0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe586da9-f33e-442b-bd45-eda6db143692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb6ef88-1f8d-45a0-b5d5-52ef12963a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eabf85b-8924-4336-9f60-44658862540f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3cdc85-cb9b-4453-9db2-78f4af1e9d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2fd6dc-8b08-446d-889f-3d0d0bda210b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8337cc86-7f1f-4025-844b-fa484f1483fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20940dbf-6c50-47cb-b0c1-e92b837cfab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ed8339-494b-4414-85b9-a6989f42f41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceac24d6-5170-436a-8915-972a02c77198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e599b4a4-2a09-4ced-ba40-702ab336e47e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5044445b-9209-4649-ad06-b359da309912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6cf2860-8edb-4859-839c-6e24cd860d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d9c07d-5bcf-4b56-8e9b-1e0a7143250e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c697b3b-910e-4eb1-86b5-7aa47f8fa195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67983ac5-d24e-4524-8a44-d932ceff4e5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55acdfe9-78a1-4c1f-883f-177a8f01dddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34baa4a-ba8b-4ef7-9fbb-1255ae6b022f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c64b791-c874-407a-8417-57ce6d1d4931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d357d3b-00a9-4ed1-81d5-8445ee1f5453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad117554-a8d7-4d00-b860-372a0a25e5ba",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b1882a-b3d2-41b4-b601-03caf30f243b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bafb08e-fa87-4726-b6de-aada2c086d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e534d-a83c-48a2-9fec-9d85a8054b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06673090-2199-49a8-97c1-392543e2aa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3774d2a-a97b-4ecd-951d-5d459870ed1f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4331b1-4831-4186-ad45-e61a182af628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188b2fd1-c249-45c0-85af-4b3d7ae32b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b44226c-6991-48fd-9bd8-690562ce301f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4391f6e6-2a37-4300-8d57-154ab015bcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfbe976-b9a2-4d5b-9752-7524b8f301ca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea87234d-9c08-45c2-b2f9-9892bd5192a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ed2f0a-8ff8-41a4-8a8c-314fc179adc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4dc0c4-3c0e-467c-acfa-f46eb7dc6153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc42ff-0684-448f-9c19-e2cf58085c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ec4721-1693-4f53-9b75-2a14816d908a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b08e6-11c6-4cc2-8bec-ac3a36873cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6a7b9d-e38a-4bee-8b32-bcb9bcf6f067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7b4089-8521-4992-80bb-63096794f7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f679f327-2a92-4fde-b710-5b9a19ee5ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae16b64-ca04-4344-9fb0-51c18364d6cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a11261-244e-40ad-a40c-761fce723f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474f5b2e-2ba1-42ca-a2b7-4271b8a3e1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243af041-37e2-4e6a-a90b-1a05c067789f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22347e83-c5b4-4c9b-9485-f2c8d4e8a34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05630fa-bda5-4705-b567-5e7739aafc4c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bc0c90-1023-48ce-b5de-582f05800f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe088ad5-b48d-4222-a256-a95ff8fe4260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c198b9-1526-4b57-b11b-d80bbb9dd33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00514de0-6794-452f-81c2-96745e96c24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27623df2-b6af-4635-ba90-04d3bb7874be",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2459c0-033a-4c47-9830-7de96a231bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8149566c-9413-4cd4-91f9-d7360590fb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1581a95a-1fd9-4d26-8dc5-92a6a43bbc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bea5cd8-bbb3-49e3-83cd-cba064b78ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b1e00c-0761-4a1e-95f8-b64801a0923a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431cb394-7a4c-4ac0-b602-1044bc3a5aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c00a334-2411-4f4f-946e-a4a40af7db5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf24fcf4-62f3-4168-8785-dd03a6e8a66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea045cf6-16ff-4a77-8950-672625b897f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e2de9c-b78f-4403-8f18-cc7d6888ae28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ba9aab-9ad2-4d03-8e90-9acf88bba5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190fd8fa-8a6b-4ae5-9bfb-edcb906e2784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc111bc6-00d0-4133-9d64-9f76ffd2d57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad06fb8-8136-49ed-876f-4ead98e5c08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de1b88b-2de3-4b0c-ab50-23fbc5b859f5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec4465c-8bbd-4003-91ae-8d8b4dd6a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85797a9-72ef-468a-afca-020f22863aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ebae4a-d86d-4196-85d4-6910d528a0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8841f-a8ee-43b4-ac7a-057232166f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adea6d4-08d3-45e6-abed-2a8f17b285a2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf28c8-7689-4b26-bb71-783084d56718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962c2c1b-c36b-445c-94e9-7931cf9e6f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1018b35f-4cc6-4943-96a2-572107c104e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a067ec-b3b3-410a-9dc4-a609bfbd0fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2716b82f-5d9e-40b1-80e3-c0175a104056",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47da82a3-f23b-46d2-84bf-a50b7ed85e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57133792-3e9f-421e-9f84-7a799185a581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651b66af-9ad9-432f-a974-77c19dade69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8563df2d-dc1c-49a8-bdd5-240e1cb02911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0005f7f-8308-41be-ab8f-c2b473cf25dd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab318167-cd11-4f97-9682-c7f6cb191b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc117e28-5cac-44df-bf54-096c2126dd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf16f52-8f71-4b11-af57-d7e53b02ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834f34c5-4188-4859-8aae-4ff6c79c610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d68dd-f2e9-4cfc-88d6-d2da22318b3c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a29198-c028-4ba9-9bb8-e90df5ef0528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e366826-13d4-4116-9fd7-439fadc4a486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76383b0a-7aa8-4205-a761-979fe815b291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e646a174-ddd8-4828-a80a-8af438c98b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3056347-6f98-4d4a-a26b-73d5ab0e92b6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd3da5c-08fe-4a2f-8e5f-abc2afd789b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7248ca72-df6c-4c48-89d0-6f7737836cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a0c6b6-ad6a-4aa1-88c2-48f7d50d1a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119ee536-26cc-42e9-a94d-b87c79a2ac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff17e537-6afa-4d2a-8276-fd20400ff932",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed908a-a628-40a7-bdca-65e12700f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f987fed-b6fc-4676-afa8-cc615add6c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9181f42b-f768-43dc-925f-fd45d3c3b93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad91fb5-105a-465c-8405-e2af01c5f15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcfa269-03de-42d3-8af8-6fd814bf97ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f59bfb-d448-4bab-a761-f419eff97892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a294f84-d215-4540-af8c-c8e9b45ac708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7182ecb3-28d7-4841-b63d-df62cecd9a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac697a4-9e44-474f-b324-15689bcd557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d72671-5e51-48ab-b6b3-f374d0b67fb6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23a889e-6b03-426f-b63f-ad6f005a5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efbcc5e-e06a-4e80-982f-51d08b08a9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7e6f6b-b46b-49e2-928c-d634dcc07d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd15e1f-5cec-481a-8ddb-a6d42c4286fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bbe8e7-3c95-4231-8351-5b5ebe57825b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02596a44-d3ed-4c02-825d-18edbd3b9dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9c3783-8bcb-4a7b-99f4-41af8462cdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14f8045-c721-4655-aba0-7da12e69a422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c42a10-f23e-4469-b465-209794c31871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6428b50d-3daa-41d3-b628-239c5fbd626c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3256714f-a2cf-47a7-8c29-26cf5b25fc65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc5e0be-bd67-4b98-9340-febac96c3d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83cae80-203f-4415-a26c-666a6cc5005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d159954-3cd8-4a95-970b-25794b725d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06be4bce-1767-450e-996e-e6d9cddad14f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0e442e-9cf5-4b62-ad87-78fdb5c8250c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236e4400-04cb-4508-85c8-a2325c4dea31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c2ea20-11e4-4302-a526-716b850fc829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b83fe28-6e24-43fe-bff8-16302f988368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc447cb0-f1b4-4cfa-9af3-45d85800db7a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce59f388-eda2-49ba-9b20-2070a1f35817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e432d3b6-71cc-4c34-87ec-0c4b51c50630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc5e6d1-37de-47da-80e9-bf8ccfdf6df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e8c8cc-242f-41b7-a6b6-916b69f9a39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210e509f-b2a2-4157-a233-a728421e319f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13218bc-828c-4e3d-814c-d751e72ed79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d065ab1-8da3-4f4e-88ec-11d6cc6f54f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe907c3c-e87d-4332-838f-b493a2ac95b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f428bbed-66a9-4267-aaff-951e31452fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff3d54a-0d9e-4083-8696-68c6a9e14920",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e9455-915d-4e8b-9a7e-3753079ea72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7f542a-097d-4f75-a64c-6cbb52ce3e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcf7c3e-905a-49df-82b3-a10b3999657b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e42983-ec91-4382-b342-8e1a77900f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e97d4d-7191-4bb6-9c36-3032625b7013",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed24ba04-f61c-49ad-b368-1eb0b6121755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3289cf7-4ec3-4aa9-af6f-7abd1010e99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dab09f-94aa-4e0a-876a-fcb1b5bd18e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe44998-d3b3-4bba-9dcb-037d373f1dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842e181f-e9e2-49b9-9796-a461e2487f6a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f952af47-7922-4740-9460-80a683a6b068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38182b85-2042-4c60-b5de-08f9c4fa1200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2ba0ea-d1fe-435f-94e6-a00a2350f30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3915e16-07ba-4bef-ac5c-ab56f0be5005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a92fc-df10-49dc-9b8b-1ef52d28d6c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff77c3cb-b0f0-4e62-bcaa-8c903d2c95e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e280300f-09f0-4546-b11e-3c0b17fdd6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c6bf8a-4562-4da7-a7cf-18a04bfbbfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ef4623-bcda-4d4e-a185-73ee51cfa4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88886da4-59a2-46d7-88a5-6982514b3fed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6df17e-c29c-4180-9f2a-dda663fdd577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8e95fc-42d4-484b-bf84-84989fe927cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872e796a-8ba7-4076-b5eb-33c9b9040c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15019fbb-bdf5-4d0f-b9bf-473518baaac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af05d71d-92cc-4649-934c-b746e20d5357",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fba2396-534f-4bee-9f4f-9515711e5f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17dfd8aa-e666-4071-a8fe-eb4ecf96803e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c42187-4f34-4fb9-a167-d94b7f7b4805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a840683-5a24-4569-987a-d6237872d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e9132-f53e-44f3-84df-7940937c4502",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2857e6-c339-4400-8fd0-ad75f8585da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e18999-6717-4ca1-9525-cd66f0cfcffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16964ba0-07d6-4cc4-8219-e967bcc0cf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c2907a-9760-4676-9941-c8e542534f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964873fc-4a79-4bd9-8d07-77efb7cb5d8a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2c9fd3-6344-4bd4-b280-b066a981bd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf49fae-595b-4454-be4f-f653da3b0c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca26703d-1f32-472a-9af8-962cd7facf43",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319df3be-1d38-48c2-b476-efb5c979e78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8876f66-52b9-4cce-95ff-a0701c77c1da",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbca1be-895d-46ae-bea3-d4a2cdb078d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c27ef9-006a-42cb-a85a-f0e64fc3ddf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0050651-8b9c-4ce6-93e0-db389fccfa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f86348-8816-4d42-bb6b-0924a68ee62c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6744b087-0a56-4c9d-b4b7-48eb7a78162a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e455571e-2a9f-4297-b146-17d98e22f0dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd9a0d23-37a2-463c-8843-53471180c530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "184a1704-8774-4a78-b191-436e09a01e4a"
                    }
                  }
                ]
              },
              {
                "id": "292e8ddb-38db-42dd-8ac8-f8eb8e52892c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09b9c481-c4d2-42de-9bf9-4b3250dab32c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe4cf45-97ec-44df-a513-3a093f08977e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1141c69-c4f3-4b52-866e-21af04a795db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c88bbc8-1556-45a2-9cda-0b0acd05f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2aa6b7c-75c0-4394-87c7-69634098941d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67f45021-a822-4116-976a-02e32bb37767",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df95359b-0ced-42f4-935a-8d91ffc907da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "440cbb78-2677-4af2-9db6-29f8f63912bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f62ff81e-c3fc-40b1-bb36-71e40ed65aef"
                    }
                  }
                ]
              },
              {
                "id": "46a4b922-b005-4f25-9a31-4fa4d68c2318",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7e9356ec-e62c-4b94-ba0d-3a7237d2566b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e42e29-8795-45b3-aff5-59c237e4187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "be54abe8-8579-482f-90b5-702ccc43ed5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df45b1f-7fe1-4980-b580-979817c8d968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8860b523-a350-4dcb-adbb-54c4505480f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f84f6e3b-0038-4e30-afbe-3afd4b2dd5a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3a553e5-605e-44e3-a842-cb2ff25f1281",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0891d3e9-4551-4844-a129-a76342451e9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "536f578d-7ee8-4753-9cc1-93df6d118475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ae8397-2e43-47d2-be68-bfb7004c300f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7844fe-9cb8-4c2b-a8b0-a5ffbbc2e6bb"
                    }
                  }
                ]
              },
              {
                "id": "268c9bc8-244a-4e21-88af-f03a96bb79c4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98efc4ee-3d77-4bd8-82a5-60852eec287f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e10cfd3b-ee85-41a6-ab63-83abbfbb9427"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ccaa109-ccbe-4255-adff-e690b5a49881",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc7af503-e0a0-4b46-b533-00a70e0933db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc04804b-42db-4c89-821e-952e730ce6c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9dab30f4-24f1-4285-b3a7-658518385a50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8657bfdd-9068-4b26-b639-9950bfb14eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff0982c5-224d-4b1b-b7a7-576ab383a597"
            }
          }
        ]
      },
      {
        "id": "ce3f7202-66ba-47d6-94fd-66b8e9b8a99e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0f5d538f-7e09-4c4e-9bd0-0892cdcac1fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "068a34c2-215c-4614-bc79-3d1b569a806f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c725193-977a-4db5-aac9-6e2e7da73d77",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a731e2e5-43da-48c5-9557-420fb30a0973",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "60d1bf26-e02c-488b-bb58-78c02f8d8479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e08fc5-cd91-4ef9-94d3-3b2855db56a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44ec813f-737a-457f-a116-839c0fe87b39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffabcc22-2a4c-4f80-a179-677af3ce0c69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b63e0ab2-f4a4-4f5c-8d2d-4c88da022820"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b52e9c0-ea46-49f6-963f-21ec814d7ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85494940-e2fa-4cf8-89f7-7752ada144f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77fe7e73-2cfb-4b3d-8cdd-a23855ecdd7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0bad2421-2590-40a2-ae67-7eab5a437494"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5eaba63-0bd7-435c-a031-cd96ab1ac1d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14963d84-3be8-4c95-9304-b0266ff58694"
            }
          }
        ]
      },
      {
        "id": "4f87ee1e-1183-44c4-899c-e1ec5c96543a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a71f0323-7d6b-4147-8a10-a7612c561690",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdd37783-8e7f-44de-aa2f-0ab23eea80a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83b985b0-4309-4a09-8653-2972b7d60983",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43479da2-b684-4e1a-96a5-ca93536e114f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "062146cf-0457-4784-96da-631f1dd3a19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5899dbb-0a6a-40a0-bef4-b8152da6b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6784c1d-9eca-4f81-b905-47473b602700"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e5e488f-c25a-4b16-9d92-ad92d160b393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdd41e5a-4335-47a6-bbdf-169e0d1f0fb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2b43231-ce76-499b-acd4-4d925aac2e30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28a76834-5213-4003-9005-1cd891be6d03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca2e96aa-4982-41dc-a7d2-7906762205ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28e78509-0438-42d4-a8ef-a12b3be527b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe099fcd-43f5-4b7e-8d99-c880b0aac1fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd28ca8e-58af-4a3f-8266-91bd19659f1d"
            }
          }
        ]
      },
      {
        "id": "cc3a9a54-69f1-4fdf-801f-f3b3c1b17939",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1367dbd7-7b27-41d0-add2-a3f2271a7d69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5b90f20-b159-4a6f-90c9-ebe2cd3f0693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5a85daa-7ea9-4b0d-a3d1-66487d1dca98",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91443122-ed73-493c-b3d3-0b48953943b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b835fd0e-b973-432d-9014-83ec6184f93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f361c268-9c8f-4687-8a6e-aba8d037bbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e82fe2a-e249-47bd-9462-284353c837c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f93793a8-9da5-483a-87f7-10d790309bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16d7aed8-7b1f-4aa5-a1cb-a53f571bb0bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f852750-cb64-4a33-ae9d-ff27d8d0fca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe178c59-d533-4c37-88ff-fd15bc3f6922"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b050682-d5fa-4ac5-8ec7-768fa23fe1de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f25448c5-93c7-473f-bbd5-54cce99798eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19483a33-82ec-4278-8e22-25abdc9fa912",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed33832f-a2e3-42ab-8495-10b5950be6a3"
            }
          }
        ]
      },
      {
        "id": "f9ce9910-ae97-4745-8510-19567e2798a7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f64ff04-7841-40f5-8614-aa359aff44a5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d99b508-6051-4bfc-9246-044ffadb2980",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27962412-fe28-4952-b2ad-eca3ad53bee5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5256e7f-3735-4aad-8dd8-f950bcc92f3b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b58f1998-a5ab-45fd-b414-4e22f63e8125",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 681.3690476190478,
      "responseMin": 7,
      "responseMax": 22981,
      "responseSd": 3442.4674570965735,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726966186485,
      "completed": 1726966366835
    },
    "executions": [
      {
        "id": "b5011680-d1d2-423c-bdde-1596e8ccd8f1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a0dffec-99d8-4051-a534-59538b8ba036",
          "httpRequestId": "4de3aec4-713d-4bcf-9e93-066b7f46f9ea"
        },
        "item": {
          "id": "b5011680-d1d2-423c-bdde-1596e8ccd8f1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f5eed864-9e64-4413-a402-c030d8e59249",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "9698368e-f9f2-4c8f-aa2b-22a96b412b9f",
        "cursor": {
          "ref": "e2f7637b-ab8b-4ac6-a695-57c20de53f07",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4557b8ec-1e0e-4a59-a5e3-9a59e38805b1"
        },
        "item": {
          "id": "9698368e-f9f2-4c8f-aa2b-22a96b412b9f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3f708982-6518-4673-a144-ff95e192522f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "41653b39-4c20-4218-92a4-017f5e0d9d19",
        "cursor": {
          "ref": "4743a4a1-e93a-423e-a193-53e924aec394",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e61d94e-72a9-4fbd-9bf4-14cbdcd0e2d3"
        },
        "item": {
          "id": "41653b39-4c20-4218-92a4-017f5e0d9d19",
          "name": "did_json"
        },
        "response": {
          "id": "d1044b77-d660-454b-af5c-2162fdff1d45",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155d989-bf29-4b88-9e94-8834f1bc4c87",
        "cursor": {
          "ref": "55132f61-9c10-45fd-8786-133d61927468",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bd05611-ec52-4c24-a635-f33b98ae21f9"
        },
        "item": {
          "id": "9155d989-bf29-4b88-9e94-8834f1bc4c87",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e3d42ca-3421-4ce2-a823-b98ec704a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2249,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155d989-bf29-4b88-9e94-8834f1bc4c87",
        "cursor": {
          "ref": "55132f61-9c10-45fd-8786-133d61927468",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bd05611-ec52-4c24-a635-f33b98ae21f9"
        },
        "item": {
          "id": "9155d989-bf29-4b88-9e94-8834f1bc4c87",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e3d42ca-3421-4ce2-a823-b98ec704a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2249,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec7647c-a5e7-4bc5-b69e-140753821305",
        "cursor": {
          "ref": "98d39f40-a5cf-4510-a84a-2d73328ba9ae",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3f234a70-8dd0-4248-ac74-bacab76f94cb"
        },
        "item": {
          "id": "dec7647c-a5e7-4bc5-b69e-140753821305",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "85c27e75-b383-48aa-b1ca-434e03e519a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2456,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7add344f-e5a7-4655-b9db-ae9ee49829a8",
        "cursor": {
          "ref": "0ed62fdd-13fb-41cf-a914-affe5668b761",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7a070822-a8e2-438a-bf80-eb993326604f"
        },
        "item": {
          "id": "7add344f-e5a7-4655-b9db-ae9ee49829a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4fb7c20d-a35f-4b05-b505-8672230bfc85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2336,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abbca48-a3f6-42f2-8f8c-ec6b9d3a9257",
        "cursor": {
          "ref": "647e6cbc-203c-494f-8d17-140969641713",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bd8420f5-f87c-493e-bcc4-b9d25c87691f"
        },
        "item": {
          "id": "6abbca48-a3f6-42f2-8f8c-ec6b9d3a9257",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f95fabbb-504a-4ecc-8b24-ae9df1459983",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cff8df-b458-409e-9c5f-23a2c9d0ac37",
        "cursor": {
          "ref": "9c23b9a5-4550-4c6c-9a4c-43c3cb447a13",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "60ee8d34-eb8a-43a9-af3b-fe240aeb9262"
        },
        "item": {
          "id": "02cff8df-b458-409e-9c5f-23a2c9d0ac37",
          "name": "identifiers"
        },
        "response": {
          "id": "20c75e8f-502c-4dec-97c2-56ad8253c9ec",
          "status": "OK",
          "code": 200,
          "responseTime": 2371,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6043ad-657f-45d8-abe9-dce35caad96c",
        "cursor": {
          "ref": "13d77f47-7e02-4c28-bed6-5d97a1c9b0c1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f8bdab44-7a3c-4008-a268-d4314e76b812"
        },
        "item": {
          "id": "be6043ad-657f-45d8-abe9-dce35caad96c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d4d8f96-5418-4142-811b-dd2ca806d49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5ce6b4-72c2-4aba-a0fe-8f7a6048c7da",
        "cursor": {
          "ref": "6b774842-5c12-4e38-b82b-1eada2628013",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7689ad3a-d35e-4b58-85df-a11f38e73f2a"
        },
        "item": {
          "id": "cd5ce6b4-72c2-4aba-a0fe-8f7a6048c7da",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7c094735-85ea-4d32-a97f-1ce02647c98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d9d6d9-92f8-4309-abef-5c33cdbeeb53",
        "cursor": {
          "ref": "5281eb90-619b-4e95-bcc1-f9575129f022",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "16d112d7-ee47-405c-9d18-7d1c6e1847d3"
        },
        "item": {
          "id": "26d9d6d9-92f8-4309-abef-5c33cdbeeb53",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8fbd3625-2ec7-4ea2-91a4-02b626075db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f34252-9235-416b-a000-f9dd2ef44953",
        "cursor": {
          "ref": "3c5278f4-5976-4044-b9b1-4a5db336ad42",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1007a150-ff98-4391-a283-610df4b23a59"
        },
        "item": {
          "id": "a7f34252-9235-416b-a000-f9dd2ef44953",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d0c663f5-6a7d-4eeb-99e3-0fa89a4c8d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effbeb14-d358-464c-81ce-c9d673c3c893",
        "cursor": {
          "ref": "72ee1098-bc48-451d-8c57-7424c461c96c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff72100b-0be4-45d8-86be-a30aa7a45c17"
        },
        "item": {
          "id": "effbeb14-d358-464c-81ce-c9d673c3c893",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b61ff91c-4cce-4ac7-8f1e-3ac74a47ad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ffd50f-aeec-4479-90ce-4bd5e54c1f05",
        "cursor": {
          "ref": "0735a801-46bb-42d0-bd29-d0a3788f7746",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee87ee2e-b2fe-4a74-985e-8b4e3750e9b1"
        },
        "item": {
          "id": "a0ffd50f-aeec-4479-90ce-4bd5e54c1f05",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e327f77c-4e12-4a70-a72b-fdda33b73d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0112d8d6-b1a5-41ca-8143-fc1f23bc9704",
        "cursor": {
          "ref": "546f0e3d-3dbb-4b44-a5fa-df02669ceb7e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "340faef2-f982-4901-879e-6a50eac367bc"
        },
        "item": {
          "id": "0112d8d6-b1a5-41ca-8143-fc1f23bc9704",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3cb0d274-9947-49fc-887e-5010bb84c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf7bac3-b3a1-4d6f-afa8-b26f46c17dc7",
        "cursor": {
          "ref": "618ab872-d94d-4b73-872c-0e4d32b84143",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "910892ec-8ce5-45e1-be7e-c691b2f19620"
        },
        "item": {
          "id": "faf7bac3-b3a1-4d6f-afa8-b26f46c17dc7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "86c54387-f4f2-4daf-984e-168cc57fcba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01355c07-db19-4851-9b50-d65d4bb0bfc2",
        "cursor": {
          "ref": "31eee479-33b2-4e9e-ae6f-64ff65554056",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9d196133-1278-442d-a266-6e5af1fa6e4a"
        },
        "item": {
          "id": "01355c07-db19-4851-9b50-d65d4bb0bfc2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b7baeeb4-fced-44ea-87ad-2b862e46e0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec5896-7545-4fc9-8367-f11eb7772fb8",
        "cursor": {
          "ref": "e80b795c-7739-410a-8a4d-bdd845cd5b8a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9c901274-351e-4edf-ad7f-97a683099d34"
        },
        "item": {
          "id": "a0ec5896-7545-4fc9-8367-f11eb7772fb8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "521055b0-18ae-45a1-b171-0e7a3991adb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ae3d18-f9be-4826-aa31-befb49bd0e87",
        "cursor": {
          "ref": "397ab38b-9faf-430d-82f1-9cda99631ed3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c688c1b8-316a-4125-ad2f-74897c334df5"
        },
        "item": {
          "id": "d5ae3d18-f9be-4826-aa31-befb49bd0e87",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f7c730ea-9f2e-4549-a566-f016bacc08f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785ddd68-79fc-43e4-be10-7911ea8fbb11",
        "cursor": {
          "ref": "2893abd0-c47a-4876-8395-cc4a0a155bd6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d180a6d1-7b0f-4d90-acc7-9f4bab155484"
        },
        "item": {
          "id": "785ddd68-79fc-43e4-be10-7911ea8fbb11",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4d38c17f-7506-4e37-8903-7d8b23f28515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbc2752-f3b0-48a8-b59d-d19f6facdcf8",
        "cursor": {
          "ref": "aff7b09f-d3df-4c17-a079-338f92b83afb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "343b0583-715a-4e63-8f9a-4792871accd5"
        },
        "item": {
          "id": "1dbc2752-f3b0-48a8-b59d-d19f6facdcf8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8c6f9e7a-6ddd-4055-bdca-5d15ae0ffcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5461db-0588-4c65-8562-5a20765eefea",
        "cursor": {
          "ref": "e6cbcd13-dbc9-47cc-9b63-412b513c8e53",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3b9081b8-f4e8-4b61-be0f-af31e53ee89c"
        },
        "item": {
          "id": "1a5461db-0588-4c65-8562-5a20765eefea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c976b7cd-b32c-4f4d-ad8b-df5006da287e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98ecb28-7547-4d47-8206-c687a807af4f",
        "cursor": {
          "ref": "6db3bde5-e5e5-41dd-a7ee-dfa9c4572127",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2cf44a42-1918-4bfb-ac2a-aa0f9d7b4c91"
        },
        "item": {
          "id": "f98ecb28-7547-4d47-8206-c687a807af4f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e676c36e-4cb1-46fa-8830-e92d23d5ea69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f9284b-23ac-41e4-aff5-fc3a9781dd72",
        "cursor": {
          "ref": "d46f2f1a-0b86-47eb-931f-b7b69db2bc9f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44529e0e-9522-44e0-858b-d4d9f15e5e19"
        },
        "item": {
          "id": "c5f9284b-23ac-41e4-aff5-fc3a9781dd72",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51552fc6-1475-4dd0-a0e7-a7d125430704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb32f6-c174-4deb-8f23-25f9021683a6",
        "cursor": {
          "ref": "3c29327e-c0a9-4710-aa5e-7347daf0b8d8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "823305c5-b589-4107-be31-4e5645ee7cef"
        },
        "item": {
          "id": "a8cb32f6-c174-4deb-8f23-25f9021683a6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a721b820-0c0c-45ab-a7ca-15abb35880c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0652905-6acc-4a34-aca3-89d37058072d",
        "cursor": {
          "ref": "7ed9a429-f063-42da-961a-9bf55db4de13",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "88153c64-bbf7-4eef-a157-556b1d1825f0"
        },
        "item": {
          "id": "c0652905-6acc-4a34-aca3-89d37058072d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "31ba1548-f3a6-4773-9241-99a9df4704cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80513957-7249-4caa-b6cc-487b411261a4",
        "cursor": {
          "ref": "b16370d1-397f-47ce-8e0a-7ff0ec612bb4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0c4440f1-94be-43dd-ab75-026b6583f802"
        },
        "item": {
          "id": "80513957-7249-4caa-b6cc-487b411261a4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "97400ec5-e0c6-4a2b-a887-60aee9b986ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965baf10-887d-4051-9dac-5c46e9bb37fa",
        "cursor": {
          "ref": "be7a89bc-b419-4691-bd16-49c6936c0022",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e7c2c247-6c2c-4b25-a8a6-76f2e953f3e9"
        },
        "item": {
          "id": "965baf10-887d-4051-9dac-5c46e9bb37fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "95b00b84-1cd8-4a0b-b457-c33dd23999d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bb6feb-fc78-453c-b532-1f9c9af6727d",
        "cursor": {
          "ref": "736c9ef9-b5d9-4128-aa7b-73ee6f275a10",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "52111110-600d-4c8a-9fc3-dbc24f56d4cb"
        },
        "item": {
          "id": "d1bb6feb-fc78-453c-b532-1f9c9af6727d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "50fcc516-eb03-4349-b849-cd7a60050cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dfea08-7330-41c2-a22c-181923c9dea6",
        "cursor": {
          "ref": "038d31d0-cc72-4e9e-97c9-d1c0d25f04bb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d74e9a7-ff2f-4acd-b8d0-7d084285449c"
        },
        "item": {
          "id": "c3dfea08-7330-41c2-a22c-181923c9dea6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0a79c18-235b-4035-a5eb-e86c27c1ed6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862a5e7d-e154-4e36-91e9-2370e177a5f1",
        "cursor": {
          "ref": "8ad75d4d-1f65-421a-991d-e337aa15f94d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9fc4e1db-a8de-4787-ab91-32a3638e85af"
        },
        "item": {
          "id": "862a5e7d-e154-4e36-91e9-2370e177a5f1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4251625f-573a-4522-9d02-419cd4a952fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7985a9-c03d-419f-802c-8e79269508ed",
        "cursor": {
          "ref": "42acc3e3-32ca-4c31-8aa1-d1de2b763cf9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e295702c-8464-4353-b0bd-8ba3b5772df5"
        },
        "item": {
          "id": "2a7985a9-c03d-419f-802c-8e79269508ed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "19e56d7b-8635-4d32-a4b9-6e965500c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f481201b-b925-4e67-809d-1c153865268f",
        "cursor": {
          "ref": "a95e81d9-847f-4c6b-9372-29ae160839a9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb5645fc-fa3b-4c0d-9750-71b62a575b05"
        },
        "item": {
          "id": "f481201b-b925-4e67-809d-1c153865268f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "88b8639a-b1b9-4bf9-8af4-3033c27ad1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bbaa29-a23c-4c39-b717-3b98c8fa51f9",
        "cursor": {
          "ref": "35967e88-904a-4dae-b8c9-85b957b8c61c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ad6037f6-f87c-4b5e-adc4-e428beed8f8a"
        },
        "item": {
          "id": "73bbaa29-a23c-4c39-b717-3b98c8fa51f9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4be6783-e189-4f6c-b804-bbd850d04a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f3807-1e24-4d86-be5e-01246f452a93",
        "cursor": {
          "ref": "cc4aa2eb-2d2b-42f1-bf9e-4ddf007cea6d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "56ba0f4d-7755-4af3-97fe-592c82df3e6a"
        },
        "item": {
          "id": "eb5f3807-1e24-4d86-be5e-01246f452a93",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1cbbdf43-ba40-40c6-8d24-ce1461c3961f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b052651-bac3-4b44-b8dc-c6399f0a0aec",
        "cursor": {
          "ref": "9f6937b8-2a25-4cf8-a4e9-0864fdf613ad",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e8ffe46a-e8ed-4207-a79a-289f8bb99c57"
        },
        "item": {
          "id": "9b052651-bac3-4b44-b8dc-c6399f0a0aec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2cdd6ef5-7752-423a-b9ca-d32b176d0ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c04100-544e-4505-aa64-530181904e92",
        "cursor": {
          "ref": "365c0e74-371b-4a58-bbf5-293c1c91953f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9be6e116-311e-4a1a-bb8d-76e140bf8cda"
        },
        "item": {
          "id": "92c04100-544e-4505-aa64-530181904e92",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af14f889-9010-40b9-a6f6-23eb349d3971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1e9b77-c85f-4524-8f77-a1091d956f89",
        "cursor": {
          "ref": "45281aff-5705-4e66-b1cc-750b4e520f00",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ec0db98c-f59c-4eb2-92c8-ba67f43330c6"
        },
        "item": {
          "id": "ef1e9b77-c85f-4524-8f77-a1091d956f89",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "653a276a-e5bc-4fe7-afd3-3acc6d72e456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9512ce9a-85c7-4651-b1e7-41618d6e0855",
        "cursor": {
          "ref": "446a496c-0802-4cd8-ab2a-3b0f4f00225c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8b15d70d-3e83-406f-8c57-454de554c835"
        },
        "item": {
          "id": "9512ce9a-85c7-4651-b1e7-41618d6e0855",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7ca0d556-e9dd-48ca-8b5f-ae7b64be8b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ecb57c-07a3-4c28-a0bf-cb8c6c62b50e",
        "cursor": {
          "ref": "fd756901-a15b-4e9d-9b21-a901a774a6ae",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f6f55d18-7323-479c-b110-1d397fa1f237"
        },
        "item": {
          "id": "e9ecb57c-07a3-4c28-a0bf-cb8c6c62b50e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ff95b5f2-fa68-47e8-a967-02386c3c5769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e4c909-458d-4f1b-9ba5-5392462db12e",
        "cursor": {
          "ref": "97e7193f-8e6b-4fb6-916f-8c2868362948",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ec3dc208-c598-459b-938c-b235f30e448c"
        },
        "item": {
          "id": "93e4c909-458d-4f1b-9ba5-5392462db12e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dcd19bc5-fc76-4128-87e9-4c83927a2f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549a49a9-6b51-404b-97dc-48acd86285e2",
        "cursor": {
          "ref": "f3123d82-61a0-4410-848f-16c7f0ae45df",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9cfd6abc-c8bf-4be5-93cd-d441dad21a6a"
        },
        "item": {
          "id": "549a49a9-6b51-404b-97dc-48acd86285e2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9ecda8b9-f9b6-4cca-bed2-7b77f735b273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace3c0f0-c79c-45bc-849f-acc29bbb42d6",
        "cursor": {
          "ref": "1b199ae8-9b81-46cc-aa39-70bb9e902737",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b73e6df2-2aac-4ce6-a53c-51d936b32f54"
        },
        "item": {
          "id": "ace3c0f0-c79c-45bc-849f-acc29bbb42d6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2428b967-660f-4b74-a680-fea28c1084eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9dd2e1-cecf-40b6-b132-ee8c84c3be20",
        "cursor": {
          "ref": "75baf954-c4ef-4430-8503-0dc58e805c3f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4885beb4-1db8-4a1e-ac10-04474b143023"
        },
        "item": {
          "id": "5f9dd2e1-cecf-40b6-b132-ee8c84c3be20",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "19910598-c2d7-45ca-b3ba-eb2d8915777d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024173e2-45da-414b-a409-4a87a314b58b",
        "cursor": {
          "ref": "0c2100e6-9be7-437f-bb5f-8c59a69822b9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fbddb63f-ac47-478f-aefc-3f756adb0a60"
        },
        "item": {
          "id": "024173e2-45da-414b-a409-4a87a314b58b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "efd6690d-1414-4c1e-86cd-0480f171a40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac78cce5-7d36-44fa-af2c-12876bd38c71",
        "cursor": {
          "ref": "47b4c1f9-4231-4cad-8fcf-a7ea37da17ec",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "20a8e16b-742e-4e35-8296-d5a49341af22"
        },
        "item": {
          "id": "ac78cce5-7d36-44fa-af2c-12876bd38c71",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "93302e52-cf01-4c68-a735-ddf37313f5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5556ea-49a9-439b-913d-404c8214294e",
        "cursor": {
          "ref": "b2fd56b1-fbd4-48ef-90a2-2258f56c18b3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b6563a87-f5e2-4e24-85dc-81f050177017"
        },
        "item": {
          "id": "ae5556ea-49a9-439b-913d-404c8214294e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "29a85889-724c-4166-8104-b68d5a618396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948830d1-9340-4562-8a3f-42d3f3df6d7c",
        "cursor": {
          "ref": "e8d8e52e-cdb4-4420-ad2b-021a45c0aed6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6dc521c5-385d-4965-b7a6-6ce16f23b5e0"
        },
        "item": {
          "id": "948830d1-9340-4562-8a3f-42d3f3df6d7c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "93a72ec8-2f98-4e9c-b4da-e8b098a49d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d68704-866e-4736-960c-26da1c32fb9a",
        "cursor": {
          "ref": "2cd9dad0-955c-46a8-a057-cd91d8c64d94",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13b11dd0-4518-472a-bee0-33c2995f605c"
        },
        "item": {
          "id": "78d68704-866e-4736-960c-26da1c32fb9a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2488d763-dd57-4ac6-9af4-366f3c1e4301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73244d96-3fad-4ef3-9556-19a28c29976b",
        "cursor": {
          "ref": "5ddf26a5-9a93-4987-84ca-1993d26add46",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a5f6f81c-853e-471a-b42e-1ad769bef25f"
        },
        "item": {
          "id": "73244d96-3fad-4ef3-9556-19a28c29976b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a49a77fc-7a24-4b39-b396-bdaf800a7338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5429bb-4ebf-46fe-9f2c-58e898304b45",
        "cursor": {
          "ref": "1e457cbe-8585-434d-9b58-d3d4d1f47fa8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e4590262-8438-4c7d-ab59-072cd25c69a1"
        },
        "item": {
          "id": "4c5429bb-4ebf-46fe-9f2c-58e898304b45",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c2fcb778-75c9-4e74-a567-66b5c79cf13e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616c4cac-8a57-4680-b8d2-a18ae67fa7b6",
        "cursor": {
          "ref": "fcd0564f-3680-4bb6-a741-187608471546",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b56ca0db-b0c5-43f4-96e9-ce421277abc5"
        },
        "item": {
          "id": "616c4cac-8a57-4680-b8d2-a18ae67fa7b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fefd5003-c248-4b7d-8212-f81d1833a2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8767d9ed-03b2-4c39-b58e-9d05a6fc276d",
        "cursor": {
          "ref": "4fe59fb6-3974-4684-87b9-cb9e1f5f644a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fa012bd2-285b-4585-98db-beb3a8cbe95c"
        },
        "item": {
          "id": "8767d9ed-03b2-4c39-b58e-9d05a6fc276d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e21c987b-ed46-4424-8741-0cdea3147053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e591f0-87e7-4273-8f6b-e9cff8885fd7",
        "cursor": {
          "ref": "a77bd7f9-0b78-4385-be7b-22d7825e5b70",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b220dca-1007-49b1-ad26-76f3e2ad0e8e"
        },
        "item": {
          "id": "14e591f0-87e7-4273-8f6b-e9cff8885fd7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c8fa25e9-0709-44be-8583-c1e03c688290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00047078-5415-4380-89fd-c9f598f0c8a0",
        "cursor": {
          "ref": "745f4285-4de6-4d34-b71b-8875fdae4cf4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "00513808-7249-4856-9ef4-c7ecfba8f552"
        },
        "item": {
          "id": "00047078-5415-4380-89fd-c9f598f0c8a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "efbc5626-0d5b-4ac6-9a45-7dbfa2d1dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db468ac-e975-4377-9a1d-1b0a6182126b",
        "cursor": {
          "ref": "272e2088-f14b-4d2b-87b6-31e87fe0f7ea",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f7776f42-512f-4a9d-8e70-15622c3b924b"
        },
        "item": {
          "id": "3db468ac-e975-4377-9a1d-1b0a6182126b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0ada29ce-a90f-4514-ace5-76ee805c6c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dd5066-f2cd-4110-b357-d4fbe8721760",
        "cursor": {
          "ref": "5d839ddc-4a24-4c2a-8603-dac7b68e9e9a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9cc66375-1559-4c28-8bbe-670a751b1eaf"
        },
        "item": {
          "id": "c9dd5066-f2cd-4110-b357-d4fbe8721760",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0842c205-5b7f-47da-a035-0b110a2fb47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc66bbe-d884-4b73-b4d4-20a7e244236a",
        "cursor": {
          "ref": "ca41da9c-a298-4a59-9504-345099709a2a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0a2ed359-308f-4ef4-8571-e8807b4badf3"
        },
        "item": {
          "id": "9bc66bbe-d884-4b73-b4d4-20a7e244236a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "005295e3-75e5-49d9-aa7f-7b0202ce5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7151016b-c328-4647-8f0c-cb004c039d41",
        "cursor": {
          "ref": "4dfcd6ed-866e-4bee-aac7-69ab87ed69ac",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "81513308-a185-45a4-a396-70646ef25fc6"
        },
        "item": {
          "id": "7151016b-c328-4647-8f0c-cb004c039d41",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6c4c92c2-d463-4d33-bda0-d32398f2b92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67db041-55d7-43d3-bd79-e15950bf597a",
        "cursor": {
          "ref": "58232a00-0e6c-4a32-addb-7eac4c3f7450",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1f268563-dad1-4168-9811-966dbe14fa20"
        },
        "item": {
          "id": "f67db041-55d7-43d3-bd79-e15950bf597a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "16108066-30ab-46a4-89fe-0e51ee998dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950f0a37-f151-4746-b291-a666af20dbe7",
        "cursor": {
          "ref": "c861996a-0243-4110-b3d3-167471c779e7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1db654b5-1a28-48d7-9c0b-28aca19b2b33"
        },
        "item": {
          "id": "950f0a37-f151-4746-b291-a666af20dbe7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4b698571-f922-4a41-84a6-15540a494a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06e47db-81ca-4895-b2c1-463b7795337a",
        "cursor": {
          "ref": "4e520e9f-31be-484c-9cdd-a1334b2a7f30",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "65d4d664-f126-4e9e-90a2-5cc159be0d27"
        },
        "item": {
          "id": "e06e47db-81ca-4895-b2c1-463b7795337a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2efd4cd4-ac5c-4ae4-894a-7d77fe729c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ab078-428f-4e35-a89e-e0686054c9f1",
        "cursor": {
          "ref": "a3cc7bc2-3c7c-417b-9ff1-7358a4b20345",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d410943-f396-4593-8b3b-3ff50c04a210"
        },
        "item": {
          "id": "064ab078-428f-4e35-a89e-e0686054c9f1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21b07df0-4e6f-402f-9a9e-4b0878597806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2f861f-fe5c-4374-a57d-df850e70cf08",
        "cursor": {
          "ref": "2ff939ed-4555-4017-bb18-76fb78b43a87",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b1a1545-0ff3-453e-9640-6e5909bdbc69"
        },
        "item": {
          "id": "2d2f861f-fe5c-4374-a57d-df850e70cf08",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7c9ce4e1-8f8f-4250-ac2c-36f659706339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a032dd-4804-4c6e-a751-53e67e91567a",
        "cursor": {
          "ref": "6151694d-eeb4-41cb-b42c-1662c68e4934",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "13597f5c-d8c0-495c-9df2-e496ed75e621"
        },
        "item": {
          "id": "36a032dd-4804-4c6e-a751-53e67e91567a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0142e2eb-c0ea-478c-a53e-13bf5455b35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4969486d-0ff0-4713-b463-1abf1afc9557",
        "cursor": {
          "ref": "36186dff-99b6-4a3d-909f-c1f5196714c2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e25b8059-51d5-42f5-966f-6ef11cb772bf"
        },
        "item": {
          "id": "4969486d-0ff0-4713-b463-1abf1afc9557",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "77a1b51e-ddfc-4a6b-8f97-b70a28737c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91654818-85a3-43d4-97d9-4f71667cde32",
        "cursor": {
          "ref": "76824244-6843-4c83-9cc7-2abeb1eda1fa",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e4f6ce2e-757f-468a-a53d-fe6de499665b"
        },
        "item": {
          "id": "91654818-85a3-43d4-97d9-4f71667cde32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "35d69226-bcaa-4152-9173-51fc1b76c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c62b8f-3213-42cc-88d6-210ea7b5007a",
        "cursor": {
          "ref": "8e9c5462-1af4-422e-8a72-066ede77b22f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c14b15f-13f2-49f0-935a-71e12a02e558"
        },
        "item": {
          "id": "20c62b8f-3213-42cc-88d6-210ea7b5007a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "66d68f7d-6733-417e-94b1-1c99fefe72b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68762048-bb24-4d91-ada1-a9bf699c43eb",
        "cursor": {
          "ref": "98a87ded-238d-476f-9462-194a3e15a1f1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c663ba02-8fd7-4472-89ef-1792aa8caa7a"
        },
        "item": {
          "id": "68762048-bb24-4d91-ada1-a9bf699c43eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4296b84c-08f7-4ca1-abdd-2b41de2d9d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358b98e2-a23b-4bef-a9aa-37a1e05de866",
        "cursor": {
          "ref": "f0b577f7-108b-43f3-8e64-b07aa66d38a7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9ea23452-5dd5-4b1e-92af-6e057ab08ac2"
        },
        "item": {
          "id": "358b98e2-a23b-4bef-a9aa-37a1e05de866",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cd5ebfc6-e79d-47c2-875d-a5bb3e8d7cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec899816-05e8-46c7-9d13-2b8af8a0063a",
        "cursor": {
          "ref": "66f03873-898e-4a90-8503-6ea0d56a0403",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "da93618f-62ea-4e9d-8aa2-309f22c9b292"
        },
        "item": {
          "id": "ec899816-05e8-46c7-9d13-2b8af8a0063a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "030003e7-309d-4653-9f3f-e51009b047cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf355f-19c4-4034-8870-14922c226a0c",
        "cursor": {
          "ref": "84068bca-79e9-48a1-80dd-b09b1ea79803",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "064545a0-d66a-43c7-a9b9-7de077742711"
        },
        "item": {
          "id": "6baf355f-19c4-4034-8870-14922c226a0c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "50c77795-0281-4c96-aa12-f45b514eb92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef547a49-fb1b-433c-8276-d06ef4767ba9",
        "cursor": {
          "ref": "68db5e98-a9a0-4e4e-a352-9a259e2b4fe2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cbed6c2b-40ce-42e9-9355-4d90e28aab39"
        },
        "item": {
          "id": "ef547a49-fb1b-433c-8276-d06ef4767ba9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "29e35c65-ded9-4057-afb9-ded2f973507d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c23bbc6-f117-4029-9ec0-93b6ded64f1d",
        "cursor": {
          "ref": "0eb0a821-62b4-42df-a6a1-4037b128eae0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9594a569-6db0-4c6c-be85-fa118b927999"
        },
        "item": {
          "id": "6c23bbc6-f117-4029-9ec0-93b6ded64f1d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "354f29ab-e480-4678-bfde-96ae1128bb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb6e638-1ac8-4967-ba10-25d72db118d6",
        "cursor": {
          "ref": "28fd9f38-12eb-4ae9-a18d-eb670406a898",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ad3d6e92-3eec-4f43-913d-3e74d953fd59"
        },
        "item": {
          "id": "fcb6e638-1ac8-4967-ba10-25d72db118d6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "79ca8834-be4e-446f-b8c4-2efff3fa0263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823bcea9-86af-41ce-ab6d-fb7247e6f4be",
        "cursor": {
          "ref": "9f524066-b536-4b72-be04-65f7d78d1198",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edc4072c-36d7-4ffa-bab9-e54da26bfaf8"
        },
        "item": {
          "id": "823bcea9-86af-41ce-ab6d-fb7247e6f4be",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c246a7f-268b-4dc6-9f2a-8019a8e27df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9122e98-2980-4f8a-95ac-88088f82c4f1",
        "cursor": {
          "ref": "df4b9199-3b84-4761-a98c-8b8c1b7511fb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ef4c85a7-838d-4c9f-9eda-d2b4d2f14324"
        },
        "item": {
          "id": "d9122e98-2980-4f8a-95ac-88088f82c4f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ee6c60ca-a75b-4e39-9a15-18f87924d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b7eb9b-4b30-4b5d-a37e-8ce01dfe73bc",
        "cursor": {
          "ref": "306b93fc-c093-453e-b16a-f1b18ac7ea4d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "455c632b-2e98-4ce0-a538-a8a8a667306c"
        },
        "item": {
          "id": "a2b7eb9b-4b30-4b5d-a37e-8ce01dfe73bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "68d7992e-5554-4976-ab9b-7c0eaddb411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1797ec83-d053-43d0-b2ad-46788f8f0c02",
        "cursor": {
          "ref": "3940df41-aa37-41a2-b807-8efa3e9b91e2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6bb6065a-472e-465a-8c61-09fb4af5de1f"
        },
        "item": {
          "id": "1797ec83-d053-43d0-b2ad-46788f8f0c02",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8c4603e5-6f73-42ae-acf8-80af8d68cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34e7fe4-f7cd-46fc-8815-031d85ae07a6",
        "cursor": {
          "ref": "3cbf6dfa-4607-4ce5-8680-ff16a67cd51d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d881dcb7-202b-4664-9aae-eac07a6e1a49"
        },
        "item": {
          "id": "d34e7fe4-f7cd-46fc-8815-031d85ae07a6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d29b2f7f-e9ca-402f-bbb3-041830e8e67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9d68b1-02c4-4a39-a3ae-853552520d2c",
        "cursor": {
          "ref": "d3861fce-267f-4993-b422-a5ac595cbc91",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "741f2fe8-5fbd-4480-a9ee-856bb1b1790d"
        },
        "item": {
          "id": "5b9d68b1-02c4-4a39-a3ae-853552520d2c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1c6d9619-9348-4a98-90b3-1cd8bfe82847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaf52c7-1308-429f-8c94-a237b55a7b33",
        "cursor": {
          "ref": "7109977b-b1dd-4167-b540-50aaaca882c6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "682d6c2c-7018-4679-bc27-fb79851c49cf"
        },
        "item": {
          "id": "9eaf52c7-1308-429f-8c94-a237b55a7b33",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "42878433-b945-4ed5-9423-30df4181be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf34655a-f51f-46fe-85a8-6741ff45694e",
        "cursor": {
          "ref": "2d6ca1cc-9bb4-4be0-bd61-0589a285eb62",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "83c77a78-2727-4a72-9961-3a3d65ee09e2"
        },
        "item": {
          "id": "cf34655a-f51f-46fe-85a8-6741ff45694e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "95f681ec-d084-49e0-8321-37051375c680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe66bd8-244d-4a30-8df8-b6fd9e5736b6",
        "cursor": {
          "ref": "244c96d9-f2c9-469d-8de1-ac3b7c42f677",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23892486-0bbd-40e0-ab02-8b743c070a9b"
        },
        "item": {
          "id": "ebe66bd8-244d-4a30-8df8-b6fd9e5736b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7df09893-680d-4e83-831c-2530d0946ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ffde9b-a986-4af6-b5a7-1be59e2cff3a",
        "cursor": {
          "ref": "841014f7-158f-40fe-b470-a046fbbf97f6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "71fe8505-a642-46ee-833e-e575bac625b2"
        },
        "item": {
          "id": "01ffde9b-a986-4af6-b5a7-1be59e2cff3a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b301e6f1-235f-4e0c-93ea-96125af8446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374faa8a-76a4-4024-929f-39e5238b86e7",
        "cursor": {
          "ref": "e2ab4aad-531d-4a2f-8592-b1e4d4b38fb9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1dab95e0-df18-4cdb-a364-851f3f95006d"
        },
        "item": {
          "id": "374faa8a-76a4-4024-929f-39e5238b86e7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4aebcb3e-83c3-4e36-a86e-fb5986f6a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2219490e-9b1b-4542-b4e1-b0b3dfb607b7",
        "cursor": {
          "ref": "bba35434-e07d-44df-bdb4-c79ba3ed8ba4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3c25403e-a97f-4a3f-9265-2c5eea382051"
        },
        "item": {
          "id": "2219490e-9b1b-4542-b4e1-b0b3dfb607b7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d9754a12-c1e0-4efd-b23b-f68780bcdade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc23838f-6139-447b-b7c9-729e98193bfd",
        "cursor": {
          "ref": "9db447c0-aa83-4505-9c6c-7b0613033f3f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "db39068c-e183-4bce-a59b-599060da21ae"
        },
        "item": {
          "id": "cc23838f-6139-447b-b7c9-729e98193bfd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "770a5c32-d238-4b4a-900d-dca449fdf81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa7fa23-00f8-4cae-928a-1c156a4bbcde",
        "cursor": {
          "ref": "794e79d1-fef0-4534-bfc3-ba462686e64a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "14c99af0-186f-4991-949d-7c7d7c51af17"
        },
        "item": {
          "id": "baa7fa23-00f8-4cae-928a-1c156a4bbcde",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dc5d5154-8390-406b-ba38-5f4c12f335a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ffe6ec-6dd6-462b-b8a1-e1928df22569",
        "cursor": {
          "ref": "4e6623d3-274a-4d3a-88a8-a1feb1c78d81",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "04e0dd9b-4b80-4bf1-b4d9-aa0e6c9cefc9"
        },
        "item": {
          "id": "93ffe6ec-6dd6-462b-b8a1-e1928df22569",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "69cf3b32-072a-40f3-bc3e-aa977b6350b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bc2de1-582b-4753-a478-796f39150c38",
        "cursor": {
          "ref": "499438ea-a74b-463a-b0e3-7dccc0f0d9e9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b1cf01f3-96f0-4ba7-a90e-0d52da85a104"
        },
        "item": {
          "id": "b0bc2de1-582b-4753-a478-796f39150c38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "85723d7b-5449-4db5-8cce-10c845ad1554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aa86d8-b776-45b3-aa07-0f49c1b43f5f",
        "cursor": {
          "ref": "2d42c591-6a4f-4029-9bde-78962f7c0948",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0a953e97-f8d9-466a-ad6b-39f5a118dbae"
        },
        "item": {
          "id": "42aa86d8-b776-45b3-aa07-0f49c1b43f5f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "10df7a5d-6e89-4484-9cbf-8b655c2988f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff9aa8f-a089-4f52-9bf2-9c12a982ecfd",
        "cursor": {
          "ref": "02402f13-498a-4cdd-818a-a0d76fc2fa71",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55f9b144-3f08-406d-b7bd-caf786a3d875"
        },
        "item": {
          "id": "8ff9aa8f-a089-4f52-9bf2-9c12a982ecfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c0449a94-308c-4237-84b6-6b8ea9909593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547021d0-5311-4f20-aada-5ce577372ca6",
        "cursor": {
          "ref": "8f9a51ab-7e6f-4d50-87a2-4d22be3142d5",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2016f636-5585-4d5e-956b-293ec3a4967b"
        },
        "item": {
          "id": "547021d0-5311-4f20-aada-5ce577372ca6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7da34d10-7aaa-4406-80be-9c1d7622abae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649979e7-186f-4a11-9d83-13ba5ac16de2",
        "cursor": {
          "ref": "ed79943a-7f9c-424a-bb51-88662ce49b4c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4d23476f-4f08-4b17-a465-f06be8eeb6dc"
        },
        "item": {
          "id": "649979e7-186f-4a11-9d83-13ba5ac16de2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "75923500-ed62-44c1-ad5a-dc86eb7a79b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deee459-115e-49a4-b8df-f2f811ecf7ad",
        "cursor": {
          "ref": "e4fa744e-bca0-402d-910f-3dbf50445b93",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e7552177-ee20-46f6-82e5-2ab62d37d056"
        },
        "item": {
          "id": "0deee459-115e-49a4-b8df-f2f811ecf7ad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "baf924fe-0bb5-4095-9f6b-c59433160654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e45d73-6b2c-4e93-a224-a2d5ac319d3b",
        "cursor": {
          "ref": "a40e4edc-5ce1-4eed-8b19-71847c61069a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4701b05-f01d-44a1-a157-99f4f0076014"
        },
        "item": {
          "id": "04e45d73-6b2c-4e93-a224-a2d5ac319d3b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a4b9d3b6-f498-4e00-9dcb-205e0e1086d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5113d1-cc53-46e3-91fa-e11c96ded4e4",
        "cursor": {
          "ref": "ffcae98e-662f-419a-bce3-637b84bc6649",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7c8def51-aefc-4372-9489-cdb1065f1363"
        },
        "item": {
          "id": "9a5113d1-cc53-46e3-91fa-e11c96ded4e4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2ff3b630-ffa5-45d4-b12e-fb36a90a79c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e3a37c-3806-4a63-b3c8-46dd662ec1bb",
        "cursor": {
          "ref": "87760692-1890-45a2-91e8-8f981b6fa8bc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4afe8a75-f3e7-4661-998c-bef6cd9a6ca4"
        },
        "item": {
          "id": "d3e3a37c-3806-4a63-b3c8-46dd662ec1bb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6069d915-b9e4-44ab-8766-a129911d0065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff425f-3e03-4f7a-9bc2-2368d5bbb456",
        "cursor": {
          "ref": "9f1eb8f4-eca8-495d-bcc8-71a35f30096b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4f062f2c-71c4-445f-a95e-1c4654377603"
        },
        "item": {
          "id": "d5ff425f-3e03-4f7a-9bc2-2368d5bbb456",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b3a2c82-bbe0-43ff-97e7-bc966d2787e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71801030-95e9-4395-b6ab-55660164328a",
        "cursor": {
          "ref": "d1ec00e8-145c-4b9e-a901-5664684a1704",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f31e0219-127d-4ec9-88c5-c85a9c7bfb75"
        },
        "item": {
          "id": "71801030-95e9-4395-b6ab-55660164328a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fa0704b9-6225-458e-9a50-486fd88b9b3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28829dd7-65f7-45ff-b8b1-2478cda8befe",
        "cursor": {
          "ref": "eb5b6a3c-0670-4ce1-9e30-0d68c33cd75b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8dd96a85-a54b-4bab-afe6-c35b504c98f5"
        },
        "item": {
          "id": "28829dd7-65f7-45ff-b8b1-2478cda8befe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a76a13d5-4ac5-4ada-bfd7-f5c18dd4ceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f2323702-e916-42ee-a68d-c920572d04cc",
        "cursor": {
          "ref": "fad97797-ec18-4661-ba7e-4db1f6f1c3a6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f8996d41-7c84-44e6-b4cb-afbf60be58a8"
        },
        "item": {
          "id": "f2323702-e916-42ee-a68d-c920572d04cc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5d6d01da-cf77-45ff-9747-851d0365c7b0",
          "status": "Created",
          "code": 201,
          "responseTime": 22936,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1490282-8a4e-402f-b124-d3e886c4a6f6",
        "cursor": {
          "ref": "26288d82-193e-48fd-8fcc-53c2f3857310",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "42474694-0d1d-4220-bb54-ee5c014a4baa"
        },
        "item": {
          "id": "a1490282-8a4e-402f-b124-d3e886c4a6f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2365ee7b-e2e4-4632-a169-c81f66b49360",
          "status": "Created",
          "code": 201,
          "responseTime": 21794,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10376ac6-70c6-476c-95aa-392dc934ac3f",
        "cursor": {
          "ref": "98566958-1364-4acc-a07e-c8a8fae34ae6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f42838ed-bd4b-4993-be96-f8e65dbbbaa5"
        },
        "item": {
          "id": "10376ac6-70c6-476c-95aa-392dc934ac3f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d4d11ab-6fa5-4445-b793-c040bd96c01d",
          "status": "Created",
          "code": 201,
          "responseTime": 22367,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99e6e69-8954-4d8d-9866-28b65803e04d",
        "cursor": {
          "ref": "8f41d9f9-fdb2-421e-b125-4ac30114822c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54c092cb-af48-4fbb-ae4a-4d0bcca15bfa"
        },
        "item": {
          "id": "a99e6e69-8954-4d8d-9866-28b65803e04d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6144203c-c41a-4027-9b06-c5858ca71212",
          "status": "Created",
          "code": 201,
          "responseTime": 22981,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6ac8e-f9c9-437e-bd21-f31d2fece875",
        "cursor": {
          "ref": "32bdb4cd-8580-4ace-87cc-7e7ffc948ca8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba742d3e-dc97-404c-b6b2-73bb25c35367"
        },
        "item": {
          "id": "ddc6ac8e-f9c9-437e-bd21-f31d2fece875",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "33aa69b2-9d98-4f3b-a01c-8baa69080a94",
          "status": "Created",
          "code": 201,
          "responseTime": 22542,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-22T00:51:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-22T00:51:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b2b60cf4-3c54-4138-817e-679077a6f5d8",
        "cursor": {
          "ref": "eb90c812-0151-4ce3-b14e-a1f4c94a7045",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b0e87dd4-7db4-4e21-92da-233637f1d560"
        },
        "item": {
          "id": "b2b60cf4-3c54-4138-817e-679077a6f5d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ca6b1228-5ac7-4d94-a0c0-f813caeed0e7",
          "status": "Created",
          "code": 201,
          "responseTime": 22528,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffaf44c-9ccc-435a-aced-aefff6259ddd",
        "cursor": {
          "ref": "7a10ff33-3975-4d03-a001-9ef7cb3e4ad7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1b7d74b5-d9cc-4ed6-9dea-b05224993674"
        },
        "item": {
          "id": "6ffaf44c-9ccc-435a-aced-aefff6259ddd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "805c99af-a393-42fa-a028-f273ea6cab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdafa43-1f14-4e0e-b8fa-a04e3858fe5f",
        "cursor": {
          "ref": "bf72f2dc-df3a-4b37-8392-290ddeb22011",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3347957a-c3d0-4390-9c5d-03d14b5e3bb8"
        },
        "item": {
          "id": "bcdafa43-1f14-4e0e-b8fa-a04e3858fe5f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8d028903-0f1a-42a7-a0b2-62d663a193ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ce9fbc-3cc0-47e3-ba86-3386d029a1d1",
        "cursor": {
          "ref": "273af0dd-e390-4fc7-8004-7f9499531e8b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59200f84-e356-478a-8a28-267348065837"
        },
        "item": {
          "id": "21ce9fbc-3cc0-47e3-ba86-3386d029a1d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ec47978e-8709-4b92-b5a0-890ee42b9e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f65aa4-0dcf-45ba-8367-9f65099eda44",
        "cursor": {
          "ref": "a32ee553-24ed-4f9b-9816-e7f45ab9df70",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b78c1f9-a766-447e-977d-669f0b12a985"
        },
        "item": {
          "id": "10f65aa4-0dcf-45ba-8367-9f65099eda44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b0782c8d-296d-44dd-af24-7007481ade1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5860b0-689a-42f0-a890-062308b112f4",
        "cursor": {
          "ref": "85fb80cc-f205-4ead-991f-52d185d872bf",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d7a548d-5a1e-4de6-a8b3-6e7a8edaef54"
        },
        "item": {
          "id": "9f5860b0-689a-42f0-a890-062308b112f4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "02a31420-3c76-4cbf-aa0c-d19e3400435a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20a443d-b864-4a59-ac55-b9196cdc74d9",
        "cursor": {
          "ref": "321ae442-e065-4d81-85da-4c53c844eb87",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "893a0169-8807-443d-95cb-5dfac9920f87"
        },
        "item": {
          "id": "f20a443d-b864-4a59-ac55-b9196cdc74d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7be1d2a8-a05d-40ec-928c-bab2f3542ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a7c870-38f4-4411-93d8-d44deae31acb",
        "cursor": {
          "ref": "5987eae7-a1b3-4d3b-a3f6-729eec54d87e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b66094bd-98fa-40a3-9971-f453a2f666de"
        },
        "item": {
          "id": "b4a7c870-38f4-4411-93d8-d44deae31acb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "65104bb9-c304-4016-a0cb-99f82174e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244ca637-5a2e-4664-814f-ab5d7aec003a",
        "cursor": {
          "ref": "16002b4b-1cd0-493a-a614-4d8f98159b0a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "35a23711-740c-46ba-a0f0-686c0f58c420"
        },
        "item": {
          "id": "244ca637-5a2e-4664-814f-ab5d7aec003a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f180a9e6-93ae-402c-b848-bac4a86696ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71704201-42cb-4443-ad25-df0327684cf9",
        "cursor": {
          "ref": "bc4aac63-cc17-4b9c-ae8e-bb746d7772d4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5a3fb611-f5cb-4c9d-ac2f-f999506cb3cf"
        },
        "item": {
          "id": "71704201-42cb-4443-ad25-df0327684cf9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2850640f-f7f5-4ebe-89e9-ec36b5853078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f06a88-6a82-43e3-94ba-e1b28abadb94",
        "cursor": {
          "ref": "358e5e68-44aa-4c67-9d88-8a5026bc0e29",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a6449457-bb59-41e5-a926-150e882e5292"
        },
        "item": {
          "id": "26f06a88-6a82-43e3-94ba-e1b28abadb94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "00b5eda0-742a-4cd0-bf70-def9cc8b16d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a2b329-571c-4ee3-8c49-0e37d66169f9",
        "cursor": {
          "ref": "eebd96b3-6872-4cb7-a74e-df47bb2ba2f7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1380dc3-d870-4eca-919f-554a50b0ed6e"
        },
        "item": {
          "id": "f4a2b329-571c-4ee3-8c49-0e37d66169f9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db2dcf59-84d1-4075-a773-af66ba9f30b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2f1eec-701c-4c5f-a884-74dd31b02995",
        "cursor": {
          "ref": "8dd494eb-8c0f-43d2-a65a-2e9a32c72684",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2edcf070-3fa3-43b1-a71f-be1d22cd7bdc"
        },
        "item": {
          "id": "7a2f1eec-701c-4c5f-a884-74dd31b02995",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b79cb8a8-7b26-46ec-b542-592992d5ad60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e15f9e4-6a88-4820-8996-b14255008f4b",
        "cursor": {
          "ref": "6d264624-b4f6-4925-bfc6-6e82fb857ca6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "236a45ee-a235-4fed-99ba-878074997025"
        },
        "item": {
          "id": "6e15f9e4-6a88-4820-8996-b14255008f4b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d991d653-b747-47a6-8140-7b15b4f76f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1856989-1be5-4d6f-b02d-6f1928710c42",
        "cursor": {
          "ref": "fa63ac7c-52c0-462f-98c8-91db65190fcc",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e0c97618-f777-4225-9e00-2f681f49edbe"
        },
        "item": {
          "id": "f1856989-1be5-4d6f-b02d-6f1928710c42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a27fff92-fb81-4899-bb28-a593a43bdae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e7edb7-2817-48e7-baf0-1391ed8b5c94",
        "cursor": {
          "ref": "c2f4f71a-9b60-40e8-9951-d6e167d0f994",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0184aebc-1fd8-4cb0-905c-a73a872b47bd"
        },
        "item": {
          "id": "23e7edb7-2817-48e7-baf0-1391ed8b5c94",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6be4f705-7c13-4cef-846e-27d0bad07b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6ecc21-4164-4999-b5f5-5d222a736ec1",
        "cursor": {
          "ref": "0e468f76-7255-4e40-814f-60bf239a481f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d0f26d2f-84ed-433c-9109-79b78e7e0cab"
        },
        "item": {
          "id": "6c6ecc21-4164-4999-b5f5-5d222a736ec1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3c6681e5-c79c-4689-a68b-2462208c6fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227f089-ee3a-470c-a0cc-b88ea557dc3d",
        "cursor": {
          "ref": "ee3a9e3d-1a54-4251-b171-8f9df86a1e08",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "40d0f176-1745-4721-be6a-1a8309abff7b"
        },
        "item": {
          "id": "c227f089-ee3a-470c-a0cc-b88ea557dc3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f8c0673e-8986-4c6b-aa8a-ba66830db93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e77885c-e5c2-4824-b847-c52df526afd9",
        "cursor": {
          "ref": "9ec454e6-ab7a-42ab-8967-98a967aa57a5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fb2853ea-38a9-4688-894f-ca94d09f2e3b"
        },
        "item": {
          "id": "1e77885c-e5c2-4824-b847-c52df526afd9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "901117e3-fc44-4e99-b257-4b00ab752969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44adf328-0a6c-4877-8c4f-9e572b4d13c8",
        "cursor": {
          "ref": "4155666c-089b-4024-8db4-b0efdfe9fb34",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9d6c423-0657-4f37-a553-233eff3950c5"
        },
        "item": {
          "id": "44adf328-0a6c-4877-8c4f-9e572b4d13c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81e08e66-0bc9-405e-93e3-622d633d7948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0cfa46-8024-498f-8d23-c494c4b29bfd",
        "cursor": {
          "ref": "b632d405-d940-4e3e-9e1b-c6327bdd5a23",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2c5a7274-bda7-4385-96f4-27d8c62fc076"
        },
        "item": {
          "id": "2b0cfa46-8024-498f-8d23-c494c4b29bfd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d24db7d4-ff82-4733-8979-2b95f63706a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42099c88-7bc8-4074-95b3-e195513f33bf",
        "cursor": {
          "ref": "389f0c6c-220d-48d6-9bf5-f07dd772e894",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57266201-6ec3-4913-a929-f3b93604fda5"
        },
        "item": {
          "id": "42099c88-7bc8-4074-95b3-e195513f33bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a77b9661-d399-4942-9f7a-ec915e082a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b29fbd-2b8c-4267-8cca-389dcf904cfa",
        "cursor": {
          "ref": "09a14f07-ed8d-470a-a9b7-96b38f47521f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e4bdd12-841c-4b24-b37d-3a1f14c8d335"
        },
        "item": {
          "id": "39b29fbd-2b8c-4267-8cca-389dcf904cfa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78e7857d-1bd0-47b0-b69a-9fface09a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c9d46-dc63-45b7-b7ad-5a161ce87d81",
        "cursor": {
          "ref": "83bc3df2-cb0f-4e2c-8603-036cecd09495",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "954e4a7d-c0e2-49e8-a516-5846aeb69922"
        },
        "item": {
          "id": "f86c9d46-dc63-45b7-b7ad-5a161ce87d81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "809beedf-b27a-4317-bf85-147f0b82ca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3df437c-3bc0-4ed8-bbfb-7f6d11c78d7d",
        "cursor": {
          "ref": "64353f7a-c4fd-46f3-baab-25aecdfcb70d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1cf2bd12-118e-4b0b-bd0d-cacdb662ef57"
        },
        "item": {
          "id": "b3df437c-3bc0-4ed8-bbfb-7f6d11c78d7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abe4130b-3bfb-4eac-b99f-25ac2be93fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383c706-3d9c-4006-97d7-1fdb53440dae",
        "cursor": {
          "ref": "1ad932f3-d5aa-4f08-9e6b-d49962901453",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aa21e123-f114-4110-b556-f18a36dc15a8"
        },
        "item": {
          "id": "f383c706-3d9c-4006-97d7-1fdb53440dae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "395b34d7-4253-4718-967d-1afa7a5a8b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ea21e-efe1-4618-8d40-64ed6d6a15e2",
        "cursor": {
          "ref": "9001ea0d-63ae-4f93-a319-fb31de12f809",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5a0251e0-5cf9-47ce-87db-a6a2b839beef"
        },
        "item": {
          "id": "e09ea21e-efe1-4618-8d40-64ed6d6a15e2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bbacd68b-59a7-4b61-8b8f-7e8fa422294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eae1eb5-d403-4589-9eb7-2b6647c4e6b2",
        "cursor": {
          "ref": "328d9763-8f62-4b67-9ff4-8ca33e4d88ce",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aa2b6553-1fe9-4fc8-9cd7-d59400fd1d2a"
        },
        "item": {
          "id": "2eae1eb5-d403-4589-9eb7-2b6647c4e6b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "65b3e5c3-2148-4872-8caf-13da1d765ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f60cb3-6c84-4f6f-a70f-0ff3cf741f3a",
        "cursor": {
          "ref": "95f3535f-8844-49ea-9522-632f0146e86b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7e80cb2a-f745-468a-8a91-4d78cdca8e1e"
        },
        "item": {
          "id": "82f60cb3-6c84-4f6f-a70f-0ff3cf741f3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cea41f64-ab63-4cdc-bc6c-9ea0ebb429f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28448033-d365-4831-ab4f-7026074239e7",
        "cursor": {
          "ref": "bd8c6867-8d7f-4061-8026-21066d02a713",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "625afcf6-fc81-4953-9b75-dd5cbcbb9606"
        },
        "item": {
          "id": "28448033-d365-4831-ab4f-7026074239e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7159c87a-6c6f-4593-a5f1-da0752a54246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65145838-df1e-4177-a124-51db9de54e1a",
        "cursor": {
          "ref": "239d1384-a4d0-49b3-ab73-1ad307d0aeec",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8542d5a1-e77d-4c39-a4f5-4ed01c523a75"
        },
        "item": {
          "id": "65145838-df1e-4177-a124-51db9de54e1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1619b19f-9bdb-4f68-b41f-34dc44ef575b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90168ad5-15a7-42a4-b310-1aa324239595",
        "cursor": {
          "ref": "a7998c68-9f1f-427c-b83e-5e2ebb4a1a2e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7f728a00-0ccd-4937-b676-6e79875f34b9"
        },
        "item": {
          "id": "90168ad5-15a7-42a4-b310-1aa324239595",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5078424d-c995-4253-851d-1197fc9661c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f757a6-e3b9-48fd-8b9d-68e5fe7b42d4",
        "cursor": {
          "ref": "dcef2626-156d-42ba-8106-0d3c9e6e0d73",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a418734a-5277-4883-9123-136d52a87b02"
        },
        "item": {
          "id": "54f757a6-e3b9-48fd-8b9d-68e5fe7b42d4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8a370395-6dc0-424c-8481-ce6fe51639ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e80763-efa5-4904-b976-a993a55820d1",
        "cursor": {
          "ref": "19b0f96d-ce5b-432d-abd4-21386bb1c473",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d320722-e299-4a27-a81c-997cc2ad846c"
        },
        "item": {
          "id": "f5e80763-efa5-4904-b976-a993a55820d1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fb476be2-e93f-4ada-82be-2f47810e4fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84624ad3-d9b8-4074-88fa-962cd63349b5",
        "cursor": {
          "ref": "4943f67b-7930-4906-ad29-b55fa27b77d2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "03ae16d5-64be-4935-8b53-e78d6f53911c"
        },
        "item": {
          "id": "84624ad3-d9b8-4074-88fa-962cd63349b5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "27a730be-64d9-46a3-9ddc-5ff035ca0e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d23734-a958-4e4d-ac9b-c5441416d9a5",
        "cursor": {
          "ref": "8ac32990-bda7-4a7f-9c7f-5477634bb918",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "39f72e50-5ea0-450a-819a-1e3d38e396b6"
        },
        "item": {
          "id": "40d23734-a958-4e4d-ac9b-c5441416d9a5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39473eb2-5a23-4d05-8353-d01c8c959a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e5ef6-b501-45ab-87c0-9a328f0d08ad",
        "cursor": {
          "ref": "de1d6a48-abcb-44e7-9fc8-7fd018d80ff5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a35e8fa-fc2b-4e83-ad0b-c7441df226d4"
        },
        "item": {
          "id": "ae9e5ef6-b501-45ab-87c0-9a328f0d08ad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6c5c1418-78d9-4bec-91c1-dba3ef1fa191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0594991-ae5d-44e8-b4db-d42c750d04e0",
        "cursor": {
          "ref": "45506b39-91c1-4813-b7b0-439a52d4eb77",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eb7f55d0-b799-4816-96db-5ee81cc7c507"
        },
        "item": {
          "id": "d0594991-ae5d-44e8-b4db-d42c750d04e0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c222ae79-66ab-4db4-a60d-8e9a6c3fcd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7279fb-512e-4dc5-9341-8f484fd98049",
        "cursor": {
          "ref": "8f2398da-a58e-47d1-93a1-83aa7ea7e4ac",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cefbb1b2-2add-422c-a3f7-5d4c3678a6f7"
        },
        "item": {
          "id": "eb7279fb-512e-4dc5-9341-8f484fd98049",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe23a787-b956-4037-8bec-ae2cbf09bc26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bd95d8-ba67-4faf-9a71-f10fdecd11e0",
        "cursor": {
          "ref": "d30826b6-ea50-4a9d-984d-855aefe71ec9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d920e81-e09f-4b83-8501-a441e283a87e"
        },
        "item": {
          "id": "17bd95d8-ba67-4faf-9a71-f10fdecd11e0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4381451-5951-435b-9563-215b5e1b0b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ad45e2-a009-4066-8ea1-742eab73963d",
        "cursor": {
          "ref": "3ed27c3b-edb3-450f-bada-ed99e4fe5be1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "75e18dcf-fc64-41b9-a771-47ecd848bc64"
        },
        "item": {
          "id": "c6ad45e2-a009-4066-8ea1-742eab73963d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5b0221e3-42d7-4fb7-ba9c-ef131ccb34d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4419815-9505-4b85-bcf6-f525a260b76b",
        "cursor": {
          "ref": "6db8d6a2-716b-4244-b3e7-21783bde63ec",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ced36390-48d6-475a-8ebf-15203fccbd82"
        },
        "item": {
          "id": "b4419815-9505-4b85-bcf6-f525a260b76b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "900400d4-9e75-4e6f-94fb-44e81ebf08a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301c881-5f76-46b1-b1b2-0c489994a826",
        "cursor": {
          "ref": "0b971c06-faf7-4fcc-b0d9-f5dc53dbe3a4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "caf0cbaf-7d89-4e01-a2b9-ed5c62c40550"
        },
        "item": {
          "id": "c301c881-5f76-46b1-b1b2-0c489994a826",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b437b97-7fe9-4ee6-baef-d630ba0f4484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dac75a-3f64-472f-96b3-377f0cf698ec",
        "cursor": {
          "ref": "fdcd0844-a8ff-405f-9819-4c498a6e4470",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83236f4b-5d37-4e0a-82bc-3c09fcf367e3"
        },
        "item": {
          "id": "78dac75a-3f64-472f-96b3-377f0cf698ec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4928fd36-5e66-4192-949e-3ab835972bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a7a25-ff40-4d22-88bb-16447deed4c8",
        "cursor": {
          "ref": "7f630b32-64b9-4b86-ab40-4732cb2c0250",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5447182c-1741-40c4-b6a7-b7274ba4b349"
        },
        "item": {
          "id": "5f0a7a25-ff40-4d22-88bb-16447deed4c8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "095eb0b6-d596-4e60-88af-fc18a02e2ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39e31f-d8d5-42c7-86a5-03e1465c5736",
        "cursor": {
          "ref": "37dcd50c-7717-4803-b373-3bb644b010c8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "66a12b3c-8707-451e-902c-8a791db62cf5"
        },
        "item": {
          "id": "fb39e31f-d8d5-42c7-86a5-03e1465c5736",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "78906181-4cdf-407c-8a1a-80ee5055c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e3180-7150-421f-8223-bcc939728a86",
        "cursor": {
          "ref": "381a95d7-ec49-45ac-bceb-958e7937c885",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aeb0830c-7e1b-4b81-8ee1-631f5b71ae2a"
        },
        "item": {
          "id": "3a9e3180-7150-421f-8223-bcc939728a86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ab8a9ed-cd80-4d37-9a7f-280d1cdd6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7faf7c2-ddf3-4f08-ba47-b1b4cc3febac",
        "cursor": {
          "ref": "be50739e-19ae-445f-8dcd-ef54504ded63",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98fcf517-3ef8-4a29-ab15-b21681bfd215"
        },
        "item": {
          "id": "d7faf7c2-ddf3-4f08-ba47-b1b4cc3febac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0aac5c3b-dde1-40c4-b1e0-628478497ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbcbf3e-cc54-4c6b-a9c9-ca24ec8aaa51",
        "cursor": {
          "ref": "692b574a-2141-4ae5-99ff-5f363acfaea5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fea0a1b0-beab-4f86-9cfe-af8731378b9a"
        },
        "item": {
          "id": "ebbcbf3e-cc54-4c6b-a9c9-ca24ec8aaa51",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d128b453-7f68-49c9-b832-3dbd14a6c20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f66e9c-0082-42d8-ace5-dcbd5e662377",
        "cursor": {
          "ref": "bd6043cc-74ec-468f-965f-d1296236c795",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "496bb4ff-336a-4196-a482-3a7c5d6f7a6d"
        },
        "item": {
          "id": "f1f66e9c-0082-42d8-ace5-dcbd5e662377",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d679867-5c64-4e11-92c7-2413af66d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f625e5c8-b933-42a6-8503-0504779e9703",
        "cursor": {
          "ref": "cde60c42-c5c1-438e-8941-2de25536c94e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a4de2007-bb82-4e67-ae31-4227189cbec0"
        },
        "item": {
          "id": "f625e5c8-b933-42a6-8503-0504779e9703",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eb2d63a8-41f8-4341-b590-a76b08276efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4eacc3-ef54-4dd7-a6bc-9ada76cf2493",
        "cursor": {
          "ref": "a28b9982-9157-461b-a38d-ecccbb99ea06",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "055948cc-5c71-4bef-bcee-f9c571f2f9b2"
        },
        "item": {
          "id": "5e4eacc3-ef54-4dd7-a6bc-9ada76cf2493",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3f7caa59-35bd-4409-862e-87537e1c1191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb739144-5937-455f-ae9d-8f193b8fd7e7",
        "cursor": {
          "ref": "f974f96e-a436-4386-82a9-4d8174db5d92",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5366fec8-b3ac-4273-8590-475407e65347"
        },
        "item": {
          "id": "bb739144-5937-455f-ae9d-8f193b8fd7e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "85fc798c-efde-4a6d-be5f-08e8e8b8991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de7ae67-f5b0-428f-b49d-9c00c929926e",
        "cursor": {
          "ref": "c2226a9c-c177-48f2-9444-056130720ed0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f54957d9-a96a-4d81-be6f-2d4d1be9de9d"
        },
        "item": {
          "id": "1de7ae67-f5b0-428f-b49d-9c00c929926e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f1575a39-0d42-419c-83f7-72471c172229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1948afc7-dd39-4885-8e06-50fbd30ae4a1",
        "cursor": {
          "ref": "428f2571-066e-4edf-ac3a-f6ef5ba493dd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "831632f4-aa61-4b2a-817c-3c1608b87c57"
        },
        "item": {
          "id": "1948afc7-dd39-4885-8e06-50fbd30ae4a1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5bdd4edb-66b2-4742-90b2-a691e30dba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39edb313-d0bc-4011-b6be-f75e283b449a",
        "cursor": {
          "ref": "adf7db7a-272c-4143-a02d-e4f63051f6a1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "28f2b1ad-ce7c-4714-9882-76068e62ff34"
        },
        "item": {
          "id": "39edb313-d0bc-4011-b6be-f75e283b449a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a941fa23-7814-4438-988a-999ec47c2b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5062d7-ad74-46bd-a2ed-58288c9df2a1",
        "cursor": {
          "ref": "44c547b5-66f4-40d6-a0ab-1f3674c7b324",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2737f509-9590-4e0e-875d-27f73bed526f"
        },
        "item": {
          "id": "2a5062d7-ad74-46bd-a2ed-58288c9df2a1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6483eb9d-0b77-43bb-b6a1-40ae121bd825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98567b15-bbba-44fa-8b63-bc45bd17d994",
        "cursor": {
          "ref": "a842c09b-9a84-4f77-bcd3-cc9085d9d7c0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9e5a1228-f12d-4394-a303-5c764838d5fd"
        },
        "item": {
          "id": "98567b15-bbba-44fa-8b63-bc45bd17d994",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df2cee7e-8951-4277-b949-874b76d0aa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79adf916-675f-49d7-9218-051ab89caab0",
        "cursor": {
          "ref": "a3f136b3-c18e-4b47-9cdb-0ed9667ff2fc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b74732b-be6d-4c4d-b601-274ebf304cc2"
        },
        "item": {
          "id": "79adf916-675f-49d7-9218-051ab89caab0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "60cd6548-3e2e-4309-9c6a-e7a2a04b75b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c6e8fe-391f-4638-847b-dab21eec8d2f",
        "cursor": {
          "ref": "55d4981c-8aa5-4ab2-b4f2-07d98c697d82",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7014c26-9c7e-4565-94d3-ea967a9f934d"
        },
        "item": {
          "id": "49c6e8fe-391f-4638-847b-dab21eec8d2f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c8d16386-23bb-46a9-afa8-cb9db92107a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e029318e-3e85-4be3-a151-de9f47f1f168",
        "cursor": {
          "ref": "814d3055-937e-446d-922f-452e32c54ac9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2b495ac0-e53f-4503-b56c-9361be770d78"
        },
        "item": {
          "id": "e029318e-3e85-4be3-a151-de9f47f1f168",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f9773ab1-a05f-467e-8bce-429fb6e866db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9523034a-eb1a-4805-bc69-cc008fc216c1",
        "cursor": {
          "ref": "7ff68444-900d-4f6d-94cb-1369b34a695f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "465c9b79-d8ef-4468-9956-67571eddb0db"
        },
        "item": {
          "id": "9523034a-eb1a-4805-bc69-cc008fc216c1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e84b0f2d-24ce-4dd4-a445-9bb4f13a9141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2dde88-53cf-4d9d-9e15-60c683c8cdfd",
        "cursor": {
          "ref": "a9689fd0-2b74-43f6-8630-c0bda96f9a48",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "422ddfb0-5bd7-4b7e-a387-b2b3b8e62ca8"
        },
        "item": {
          "id": "fe2dde88-53cf-4d9d-9e15-60c683c8cdfd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5481773c-49d8-4f4c-a954-eed0a704541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aca27a3-25af-4c1f-a07d-324bf0e6e448",
        "cursor": {
          "ref": "f59cb064-02a3-4369-95d3-ca1370b916a1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3154e082-bd26-4097-be9c-e57b79320828"
        },
        "item": {
          "id": "0aca27a3-25af-4c1f-a07d-324bf0e6e448",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f04f51de-2351-4729-baae-64e060d24866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf41871-d826-46a1-b66d-02bd426f8f32",
        "cursor": {
          "ref": "252327eb-8309-4d2c-982a-3a5dcb8ec1d5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "86de7346-6b3c-456c-900f-763f7eceaebd"
        },
        "item": {
          "id": "7bf41871-d826-46a1-b66d-02bd426f8f32",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "62779973-1e7c-47b6-8eb0-a02ebf9aabb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b7fdf6-3482-4f83-92ca-810ca34a165c",
        "cursor": {
          "ref": "13dcbeb8-120b-446e-aaab-46e20d9af428",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62246154-45f6-4092-93bb-a2effff5a832"
        },
        "item": {
          "id": "83b7fdf6-3482-4f83-92ca-810ca34a165c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "20d93ed5-0262-4488-8a1a-b048c9150992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f88e31-be09-4f82-95de-8c386a292c12",
        "cursor": {
          "ref": "17bb1aae-e6ec-4f60-9e3e-32354a39044d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2966cd0e-fc54-4dd8-a933-85da370bd960"
        },
        "item": {
          "id": "f2f88e31-be09-4f82-95de-8c386a292c12",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "013ef369-9cbd-4dc8-b5cb-f41503b344d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff60e6c-cbc2-40e7-bf4d-d14633736df2",
        "cursor": {
          "ref": "e247142e-1da7-4f78-9e5b-f94971c79583",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3509b14c-3c92-4055-8247-03c6aedbc039"
        },
        "item": {
          "id": "3ff60e6c-cbc2-40e7-bf4d-d14633736df2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "641b4bc9-b242-4818-9459-4bd8de736f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43917393-0999-4c27-abf8-ecc2ed16f698",
        "cursor": {
          "ref": "52ab7b04-cf3d-4362-b856-9b87de6bc404",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ae1fc983-ec12-4c17-907e-33e18a2b2f37"
        },
        "item": {
          "id": "43917393-0999-4c27-abf8-ecc2ed16f698",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6a7b0af-b9d5-4fcd-af44-8621990eed25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005af3b-238f-4d0c-b2fe-a380ae04da72",
        "cursor": {
          "ref": "b9be0ba3-797c-4704-9dee-c6c2f7deb2c1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "64d8d7a9-e14b-4444-80c8-c76faa1b562c"
        },
        "item": {
          "id": "1005af3b-238f-4d0c-b2fe-a380ae04da72",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "70fb2545-eb9a-4dbe-8ffc-ea6e768c7dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f140a03-6539-4edd-b92c-c43d638d7906",
        "cursor": {
          "ref": "5ad5f92b-77e3-432b-bd34-94e3f02cc0df",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04002d07-dc4b-449b-8340-be283b3405f6"
        },
        "item": {
          "id": "4f140a03-6539-4edd-b92c-c43d638d7906",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3b39c878-41af-4c8a-a00d-fc70cc754bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bee397-5aef-4d9d-bc51-85024932553a",
        "cursor": {
          "ref": "e9499130-d0ce-4f4d-a2a4-c71aee309f3a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b9b545e8-ea40-4e0d-9e97-7b89d7fed542"
        },
        "item": {
          "id": "69bee397-5aef-4d9d-bc51-85024932553a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2274d15-cf76-464a-8b12-36b52341dc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1063587d-0874-4c56-9a6a-d48ce3ddf6d4",
        "cursor": {
          "ref": "fe1144e8-6606-42e7-9fc5-0125fcc94fea",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c735bf1d-e491-4dfa-955b-e50e9d17a2ee"
        },
        "item": {
          "id": "1063587d-0874-4c56-9a6a-d48ce3ddf6d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9b745411-c3f9-48b8-8492-57f73feb93f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8068eb-ed3c-4005-878a-09bf9af93ac4",
        "cursor": {
          "ref": "4472e045-ddee-4154-aa66-bcbed60816c0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4e859ebe-87ba-4495-b79a-279ebdf20a69"
        },
        "item": {
          "id": "ee8068eb-ed3c-4005-878a-09bf9af93ac4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "51339cba-aecc-4494-aad1-3107e614aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3723010-06ab-4fc0-808f-6bb5308dcde6",
        "cursor": {
          "ref": "d53acf31-4efc-49e6-912e-5fc0ed7cc83e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "461c3fc4-1545-47fc-8e3f-3a5cfda5cde0"
        },
        "item": {
          "id": "c3723010-06ab-4fc0-808f-6bb5308dcde6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5ae1ba90-2fc7-4e82-9e2b-ebabb9d6413d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d99c2ed-4756-4d14-b4c5-dffb469de76a",
        "cursor": {
          "ref": "fd842572-42c0-4a2c-b2e7-d2bd7aa3b88f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "56c9ffc6-a777-423d-ace5-e941922cea78"
        },
        "item": {
          "id": "8d99c2ed-4756-4d14-b4c5-dffb469de76a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cce04f8b-4946-4dac-98db-e74f1d71ec9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e377c9f-1d1c-43d0-9ab1-8cd823f9b637",
        "cursor": {
          "ref": "1445bc9d-ba13-4eed-b00b-fd158c5e1d76",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e53a8c2b-3f0a-4ed4-b0f1-655f8beef428"
        },
        "item": {
          "id": "7e377c9f-1d1c-43d0-9ab1-8cd823f9b637",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e86913f4-7251-417f-8915-85e3593ef824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff06c6f-e489-4bc1-a92b-22d3891ba8e5",
        "cursor": {
          "ref": "33070afd-933e-4c99-a2bc-2d06e7233905",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "488bafea-7930-4b6a-9c2c-fbe90fcf588f"
        },
        "item": {
          "id": "aff06c6f-e489-4bc1-a92b-22d3891ba8e5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1930dd7f-552b-4acc-b18a-8cb74f990716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cdc183-7d31-4e19-b524-d1405a9c737f",
        "cursor": {
          "ref": "7a32048b-75d8-4201-abc1-3d05a6a99ffb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "df7b1de9-5d1a-42a0-a527-e95c9d8b241f"
        },
        "item": {
          "id": "59cdc183-7d31-4e19-b524-d1405a9c737f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a5af8137-2f8c-473e-969a-3c45c0195f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c9a278-275e-455b-aa7a-29f11a59ec9a",
        "cursor": {
          "ref": "4f6c5151-a121-417d-98ae-5d4d85404cb1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c470da11-848e-4b07-b188-a616f237a72b"
        },
        "item": {
          "id": "73c9a278-275e-455b-aa7a-29f11a59ec9a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "69a7bc83-a392-4a36-8262-acc3d62ad8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1658666c-b70a-4089-9b4d-e992a8c9bfb6",
        "cursor": {
          "ref": "5f4fdae1-0a29-4ad7-800a-9fb6e6fa93a7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4c3ff099-61c9-4c84-8b92-527a8752b4a5"
        },
        "item": {
          "id": "1658666c-b70a-4089-9b4d-e992a8c9bfb6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d24de011-e512-4be7-b52b-a4e05a60a8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17829c0-dc82-4db0-b9d5-6906e4dee3cf",
        "cursor": {
          "ref": "d7779026-64fe-448b-83cd-b6bea4030a84",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fb62106a-e7b9-458f-a8ad-fbacd29e6565"
        },
        "item": {
          "id": "c17829c0-dc82-4db0-b9d5-6906e4dee3cf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fcc1bf42-78ff-4c97-85d6-5ee944f498fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c75f10-cf83-4880-b022-8abcb241ed13",
        "cursor": {
          "ref": "9f5bc668-3871-44ff-aefb-acca6189b36b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5b44f4b6-a360-4937-8b6b-2b2467acc58c"
        },
        "item": {
          "id": "e1c75f10-cf83-4880-b022-8abcb241ed13",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a761d21-b5ae-428b-8cce-2456ffb2020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d797b4e-7866-4a0f-9236-002740385cf8",
        "cursor": {
          "ref": "895104bf-9234-4a04-9693-4be4b926aa0b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7e2f2cc1-2761-472c-9332-ad20b663a2a7"
        },
        "item": {
          "id": "0d797b4e-7866-4a0f-9236-002740385cf8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f138e08b-3d87-4a8a-8db1-e6e76d763462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afd116b-1393-48c1-8149-c947aa8e827e",
        "cursor": {
          "ref": "afd61174-2c34-4a0b-b569-159c82365fda",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "042e73bd-a3d9-4be9-bd57-cd026782c104"
        },
        "item": {
          "id": "9afd116b-1393-48c1-8149-c947aa8e827e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6a0d6c02-df45-4c3d-90d8-c5059997b69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ef3a0-956b-4dfc-be9c-8661a4160eab",
        "cursor": {
          "ref": "ed9daee0-da2c-4f0a-9c90-7505f6fd603d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dd7eb8ca-3658-4041-9b39-e58174e7cf7b"
        },
        "item": {
          "id": "fe7ef3a0-956b-4dfc-be9c-8661a4160eab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "145ff63e-dbbf-43ec-af7e-2327b5d4cd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a1e6d-e803-4f6c-8ac3-4dc8c92255ce",
        "cursor": {
          "ref": "9e211ef5-afaa-48c7-92bd-943b25f8b2f5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c36c012f-c75f-40d7-aa97-8ce535070e85"
        },
        "item": {
          "id": "898a1e6d-e803-4f6c-8ac3-4dc8c92255ce",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "29b702c2-8262-4e49-af38-e3c94d53c627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2dfa12-4d61-46d0-9b46-e6440a7e79dd",
        "cursor": {
          "ref": "8a9fb8c5-5423-465f-ae65-7539aef9c5b5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ece4a63-3190-49f4-842f-8c2fbebde433"
        },
        "item": {
          "id": "da2dfa12-4d61-46d0-9b46-e6440a7e79dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "90e10973-8c23-49ce-bb11-d7321009fe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372a92c7-3093-4e2d-b99e-4a8d385ca09c",
        "cursor": {
          "ref": "ef61321f-e186-4f66-aa62-0ba22f8612c2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c108daa3-ba39-41a6-9456-13e656c98715"
        },
        "item": {
          "id": "372a92c7-3093-4e2d-b99e-4a8d385ca09c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2bb75792-462b-42c1-8924-949ae3fee805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc60511-0408-4ae9-9df4-7c0393daf414",
        "cursor": {
          "ref": "3875671f-c483-4bd1-918f-e83f7f732ded",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "325e5bc7-e748-46ff-9027-db6336800615"
        },
        "item": {
          "id": "2fc60511-0408-4ae9-9df4-7c0393daf414",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7e310c8e-b2e0-43d2-a5ff-7c793ae25c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a32a13-65d4-47f6-894f-3b8a0e318aaf",
        "cursor": {
          "ref": "491b4a36-126b-4e75-a33d-2390d3375ec2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6383f8d6-8de7-4f29-9dd0-0bbe8d4add86"
        },
        "item": {
          "id": "23a32a13-65d4-47f6-894f-3b8a0e318aaf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "09097538-f30e-4e85-a229-df9a5f16b51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64412a48-ee63-447f-ad68-510190239966",
        "cursor": {
          "ref": "5e6a2093-c0b7-4434-a88a-44c3535cf46d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d3861288-7aa5-42a8-a528-d2e90ebf411a"
        },
        "item": {
          "id": "64412a48-ee63-447f-ad68-510190239966",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e99077c5-aee2-409f-866e-7367a842b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f35dd-5ce3-4b51-8cee-cefea11aed09",
        "cursor": {
          "ref": "3f5caea4-8b33-4bdd-91da-3d599dc51061",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad1745c1-5164-44f3-9c50-410efdf42b6a"
        },
        "item": {
          "id": "d48f35dd-5ce3-4b51-8cee-cefea11aed09",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6a0894a2-dcc2-4106-b54d-b365ab21d312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6d007-eae3-4302-84e9-273d19062c36",
        "cursor": {
          "ref": "f0055424-1b30-4c4c-a5f5-c4adbcacdeaa",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "36fa9ec8-4f32-4d40-963e-04993b42b883"
        },
        "item": {
          "id": "bdf6d007-eae3-4302-84e9-273d19062c36",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b10b2d86-a202-4ea3-994b-b936bf3cf15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ce385c-1386-4648-b768-a5d8edc75b34",
        "cursor": {
          "ref": "d83977c4-ce73-40d5-97e0-5b3163f9d29c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ae54b302-7400-4144-b19e-15259093045e"
        },
        "item": {
          "id": "e0ce385c-1386-4648-b768-a5d8edc75b34",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "84a74884-106c-4013-8043-c5473eae4e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597d1f8e-1389-4aac-8581-3580e6e278dc",
        "cursor": {
          "ref": "34b42166-6001-4cea-9288-dec0f47c0cf4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1d0992ac-870c-4323-9211-71c6b683b57a"
        },
        "item": {
          "id": "597d1f8e-1389-4aac-8581-3580e6e278dc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6e18219b-828b-4841-8fda-47df8128be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475866f-fe5c-4713-8c32-c353454f6b7d",
        "cursor": {
          "ref": "ee87339e-b537-480e-8bf8-5b7a4105e470",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cc48f902-5349-42e7-bcd2-22706e416a4c"
        },
        "item": {
          "id": "4475866f-fe5c-4713-8c32-c353454f6b7d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f4878463-b679-4763-9e3b-6558fa702c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bdcfe7-e175-479d-ae84-b7ecc0f77f23",
        "cursor": {
          "ref": "c239cc50-9095-4a55-848d-c3080c748d55",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3c5ba472-93c4-466f-bc6b-e529b9771fb6"
        },
        "item": {
          "id": "98bdcfe7-e175-479d-ae84-b7ecc0f77f23",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6c89a004-a231-4f99-879a-774e40cecaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa1f028-0b96-4f10-bd67-11a2122c2d8f",
        "cursor": {
          "ref": "8e33c0e1-531f-4dfc-9ed8-bce9b3fbd7ec",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e23a8a5b-d625-4dac-beb7-5b25ad780144"
        },
        "item": {
          "id": "8fa1f028-0b96-4f10-bd67-11a2122c2d8f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0297aa51-ebc7-40e4-b58c-f6ca7de6d771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53322035-4302-4ca3-ab01-ffc06f89e594",
        "cursor": {
          "ref": "c39173dd-b5df-4ace-972f-3998779dc3d4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "57f7e390-cc73-4949-ae71-7b063aa7c8c4"
        },
        "item": {
          "id": "53322035-4302-4ca3-ab01-ffc06f89e594",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9d315ea6-e974-4edf-a184-0df9acd0fa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0307ff5b-4161-4426-8b31-c69cdc71dac0",
        "cursor": {
          "ref": "35d4c4d8-931a-485f-8edf-e060e7aaf96b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9291716b-07eb-4f67-96df-6d44804a17d8"
        },
        "item": {
          "id": "0307ff5b-4161-4426-8b31-c69cdc71dac0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "90e9262e-df12-460e-8030-dfd177e60896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2fd6dc-8b08-446d-889f-3d0d0bda210b",
        "cursor": {
          "ref": "6a5f084b-69b5-4f6b-ba39-43a5f6ccb446",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "03c2301d-3681-4586-b75c-9a3bb3c2f480"
        },
        "item": {
          "id": "6e2fd6dc-8b08-446d-889f-3d0d0bda210b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dadad2e0-505d-42d7-8c37-0e489d754a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e599b4a4-2a09-4ced-ba40-702ab336e47e",
        "cursor": {
          "ref": "815171d5-d935-4ee7-ad61-a6664c6166f7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a2c91fb7-53b1-4147-b786-c59c15e22e70"
        },
        "item": {
          "id": "e599b4a4-2a09-4ced-ba40-702ab336e47e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "308bd59c-7e3c-420b-ad2a-1b4339c65988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67983ac5-d24e-4524-8a44-d932ceff4e5c",
        "cursor": {
          "ref": "41ec0e15-8732-42a6-a065-1947bb3faa59",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ab7f426-a4c5-4065-8b5f-e00f3d393406"
        },
        "item": {
          "id": "67983ac5-d24e-4524-8a44-d932ceff4e5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5715a2ed-471a-4706-a856-35e3287ae42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad117554-a8d7-4d00-b860-372a0a25e5ba",
        "cursor": {
          "ref": "244b559b-a770-4cb0-b590-52e975fb63a4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c8f845ed-10f5-4226-8c3b-1b867f21cce4"
        },
        "item": {
          "id": "ad117554-a8d7-4d00-b860-372a0a25e5ba",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "489ed3f5-7517-4525-a176-b137c21d5140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3774d2a-a97b-4ecd-951d-5d459870ed1f",
        "cursor": {
          "ref": "e030e6ed-d7f6-4b3e-b551-4269e66914b1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "949de04d-22b4-4134-baa7-19a050219fdf"
        },
        "item": {
          "id": "b3774d2a-a97b-4ecd-951d-5d459870ed1f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f9c8bb4-8c47-49e6-bb7e-b85dabda7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfbe976-b9a2-4d5b-9752-7524b8f301ca",
        "cursor": {
          "ref": "e5145ea4-c2bc-486c-ae35-46e86c38919f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5148bc79-6a14-41f8-ab75-5a5e33f34af4"
        },
        "item": {
          "id": "4cfbe976-b9a2-4d5b-9752-7524b8f301ca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f99870cd-f55f-496b-bca3-6485b3c49dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ec4721-1693-4f53-9b75-2a14816d908a",
        "cursor": {
          "ref": "fda78925-e773-4217-a2ec-301158e008a4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "982e88b9-4b8f-47e8-9c7f-acab451dfdaf"
        },
        "item": {
          "id": "22ec4721-1693-4f53-9b75-2a14816d908a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "12e5fdd0-56a7-4388-872c-8be9ba4f3cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae16b64-ca04-4344-9fb0-51c18364d6cb",
        "cursor": {
          "ref": "82a72bbd-2d6c-4c1b-97d5-0fc3eb225ad7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "229aaada-1d8c-4c29-b342-2f15df1966be"
        },
        "item": {
          "id": "7ae16b64-ca04-4344-9fb0-51c18364d6cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da382110-0447-447f-824e-d8fac0056862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05630fa-bda5-4705-b567-5e7739aafc4c",
        "cursor": {
          "ref": "fa962102-6424-4569-a8fc-41803070be51",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6d000202-709c-421e-a30c-c4d3e1b7450a"
        },
        "item": {
          "id": "e05630fa-bda5-4705-b567-5e7739aafc4c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3888375-1b84-4c78-ab79-c01013ad793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27623df2-b6af-4635-ba90-04d3bb7874be",
        "cursor": {
          "ref": "a5f45a32-f7e8-42c0-9a79-cf7e6d4e435a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3c0b5910-50b2-45fc-8edf-909ae07db599"
        },
        "item": {
          "id": "27623df2-b6af-4635-ba90-04d3bb7874be",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "783eca2c-a756-48b2-bdb9-ef96478c75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b1e00c-0761-4a1e-95f8-b64801a0923a",
        "cursor": {
          "ref": "73a15815-eb02-44fc-9154-a759c8395bbd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "286c4971-7906-449b-88ee-46efd0d9d2e3"
        },
        "item": {
          "id": "e0b1e00c-0761-4a1e-95f8-b64801a0923a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51a5e37e-6937-4322-9376-4b22ef0c6e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e2de9c-b78f-4403-8f18-cc7d6888ae28",
        "cursor": {
          "ref": "ab0093f9-9011-438e-b7d5-4c6bfee650e9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ea51d755-605d-46d2-9fc7-c142d24d4555"
        },
        "item": {
          "id": "46e2de9c-b78f-4403-8f18-cc7d6888ae28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84cf5a0d-650b-4d26-892c-6434c7094bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de1b88b-2de3-4b0c-ab50-23fbc5b859f5",
        "cursor": {
          "ref": "41fa99cc-36b2-4025-b5f3-c1dc369998af",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4be97548-eb51-46e1-a84e-591234a0b251"
        },
        "item": {
          "id": "7de1b88b-2de3-4b0c-ab50-23fbc5b859f5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fdf9f922-ee40-4582-8947-a3e008dcf765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adea6d4-08d3-45e6-abed-2a8f17b285a2",
        "cursor": {
          "ref": "1f8affdf-e610-40b9-9654-5b9545dabd8a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ede13b11-28c2-43b0-948c-a073da253b0d"
        },
        "item": {
          "id": "2adea6d4-08d3-45e6-abed-2a8f17b285a2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e5e4013-6a0a-4313-9008-40e42b472574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2716b82f-5d9e-40b1-80e3-c0175a104056",
        "cursor": {
          "ref": "cfbda0ea-f1a0-4e5d-a32a-117719ea4ed2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f9eb08d-1d3e-49eb-bc3d-57b609100a2b"
        },
        "item": {
          "id": "2716b82f-5d9e-40b1-80e3-c0175a104056",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07b82352-9622-413d-baa5-669dc47c5617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0005f7f-8308-41be-ab8f-c2b473cf25dd",
        "cursor": {
          "ref": "05cc0293-315f-4b0a-91c2-b54af243af5b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cd0c946b-c881-4857-8713-4018a6c1217e"
        },
        "item": {
          "id": "c0005f7f-8308-41be-ab8f-c2b473cf25dd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6eda35e-88c7-4682-89a8-1259bec666e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d68dd-f2e9-4cfc-88d6-d2da22318b3c",
        "cursor": {
          "ref": "6c1fc0d0-5ca8-4cea-b725-e00a340ee7b4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "22ca39a2-701c-4d41-b118-251702c4fd22"
        },
        "item": {
          "id": "6b8d68dd-f2e9-4cfc-88d6-d2da22318b3c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "214d693a-ca96-4733-8e64-792f1439db2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3056347-6f98-4d4a-a26b-73d5ab0e92b6",
        "cursor": {
          "ref": "85435054-f67b-4ab5-8471-41b9bb33157b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3a90d02c-7a21-4ffe-8ccc-920d878b75f7"
        },
        "item": {
          "id": "d3056347-6f98-4d4a-a26b-73d5ab0e92b6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5720df1e-950c-4671-8f1c-27314e0a2f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff17e537-6afa-4d2a-8276-fd20400ff932",
        "cursor": {
          "ref": "5c9f8986-2fe7-4e4d-ad04-a054d3372b14",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8907d15a-db93-4fe7-ab1e-84d3a7264e03"
        },
        "item": {
          "id": "ff17e537-6afa-4d2a-8276-fd20400ff932",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "14564d03-7c74-4d42-95f7-042b5ccf460a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcfa269-03de-42d3-8af8-6fd814bf97ed",
        "cursor": {
          "ref": "92474f1c-d1d9-49f4-b5c0-83011495b205",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "50f84365-2761-49c3-94e9-55dcbe27b678"
        },
        "item": {
          "id": "8dcfa269-03de-42d3-8af8-6fd814bf97ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9681d274-59ee-4d74-9824-1b7173a018a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d72671-5e51-48ab-b6b3-f374d0b67fb6",
        "cursor": {
          "ref": "7bea8559-5198-49e8-a622-118c1d5423e4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dc20a3f5-9bec-4df7-a133-25beae9bbd2a"
        },
        "item": {
          "id": "94d72671-5e51-48ab-b6b3-f374d0b67fb6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75fe2498-cb9d-412a-adad-360e9e9dd7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bbe8e7-3c95-4231-8351-5b5ebe57825b",
        "cursor": {
          "ref": "72267a3f-1b46-4039-b717-d802ef0a4fb6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "faf75ee7-e335-4573-8180-a7da4141cedb"
        },
        "item": {
          "id": "12bbe8e7-3c95-4231-8351-5b5ebe57825b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6a18c31d-833b-4319-a1c7-b9226464f5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6428b50d-3daa-41d3-b628-239c5fbd626c",
        "cursor": {
          "ref": "1a19d7c1-538e-49ef-9605-adbb2f99d3b7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dd8f6562-748f-46d0-8f20-3fd3b4598db9"
        },
        "item": {
          "id": "6428b50d-3daa-41d3-b628-239c5fbd626c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5c9d7f35-c327-4278-b31d-112968e9d1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06be4bce-1767-450e-996e-e6d9cddad14f",
        "cursor": {
          "ref": "084d2d91-686f-400b-ad7f-6b3d3a51f4cb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "66c7a9e6-c3fa-4422-8ca8-611918450739"
        },
        "item": {
          "id": "06be4bce-1767-450e-996e-e6d9cddad14f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5510abd8-e2bb-4f74-9d57-67917bb433ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc447cb0-f1b4-4cfa-9af3-45d85800db7a",
        "cursor": {
          "ref": "6410a2bd-b290-4f07-8f48-9f9a937d98f8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9cb5a194-d1d0-429f-87c7-b57ef98f31cd"
        },
        "item": {
          "id": "bc447cb0-f1b4-4cfa-9af3-45d85800db7a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6f318c0d-3957-48ae-9a11-3cef6118025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210e509f-b2a2-4157-a233-a728421e319f",
        "cursor": {
          "ref": "52964476-82ef-4ffa-ae03-9c958c98def8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e2865aa6-7ead-49f5-8b81-8b900633d64b"
        },
        "item": {
          "id": "210e509f-b2a2-4157-a233-a728421e319f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a1e89794-3e57-419e-99b3-a1422da6f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff3d54a-0d9e-4083-8696-68c6a9e14920",
        "cursor": {
          "ref": "0463af28-f65a-4794-af29-79c3ea922147",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "337b8db3-9ce8-48ab-b55b-926ed0403d03"
        },
        "item": {
          "id": "aff3d54a-0d9e-4083-8696-68c6a9e14920",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fa15c3bc-81c0-40ab-9ebb-4375434b9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e97d4d-7191-4bb6-9c36-3032625b7013",
        "cursor": {
          "ref": "90ff9c63-eb37-42f6-b4a2-9ef079a8249a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c239cdea-840d-438f-8c07-eadf54ae95e2"
        },
        "item": {
          "id": "d8e97d4d-7191-4bb6-9c36-3032625b7013",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d3cb8583-1ca9-4c4f-a3df-8d2de035303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842e181f-e9e2-49b9-9796-a461e2487f6a",
        "cursor": {
          "ref": "6ee45401-781a-4256-aeb3-0f714eb8a31c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dbf8f087-b596-415c-a890-e481e46b1c55"
        },
        "item": {
          "id": "842e181f-e9e2-49b9-9796-a461e2487f6a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b02cc0d8-6a03-46c7-ae37-63e3881a25b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a92fc-df10-49dc-9b8b-1ef52d28d6c6",
        "cursor": {
          "ref": "902474db-ee53-446b-98d5-9659f8a80f9d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a0c5d273-49e0-4413-a733-b3513c948582"
        },
        "item": {
          "id": "3c3a92fc-df10-49dc-9b8b-1ef52d28d6c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "056059a1-e906-41e2-9289-7e93f1264607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88886da4-59a2-46d7-88a5-6982514b3fed",
        "cursor": {
          "ref": "7a79b503-2ee8-40f7-a7c7-c1de1de981b0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "68452499-0188-4f1a-9a80-234a546bf833"
        },
        "item": {
          "id": "88886da4-59a2-46d7-88a5-6982514b3fed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9342ccb9-ca04-432c-b395-85eba109aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af05d71d-92cc-4649-934c-b746e20d5357",
        "cursor": {
          "ref": "1e547da5-c3c0-44c0-8fbf-f14d0d9fe64f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c74b3f3b-ee94-4b93-acdf-7126b52346a9"
        },
        "item": {
          "id": "af05d71d-92cc-4649-934c-b746e20d5357",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7b3fb53b-016c-4bc5-8357-929d046af9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e9132-f53e-44f3-84df-7940937c4502",
        "cursor": {
          "ref": "be4251ac-e17c-45bb-93b8-e4588461d16e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3ee11ecb-74e0-4228-a3c0-00682c4dc438"
        },
        "item": {
          "id": "347e9132-f53e-44f3-84df-7940937c4502",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "401d5043-6e70-4d6e-a1ce-b32a1c128e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964873fc-4a79-4bd9-8d07-77efb7cb5d8a",
        "cursor": {
          "ref": "84661d37-49f4-4c8e-89ef-a01593d889db",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bff59e35-cb57-428e-85de-e11ee407cb43"
        },
        "item": {
          "id": "964873fc-4a79-4bd9-8d07-77efb7cb5d8a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4a437e2b-d9a5-4242-9b31-aa0d9caa8941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8876f66-52b9-4cce-95ff-a0701c77c1da",
        "cursor": {
          "ref": "e218082a-8f1c-4f35-8f68-45afea17a801",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "44c5a38b-1749-4bce-afc1-6b4ce5cb940d"
        },
        "item": {
          "id": "d8876f66-52b9-4cce-95ff-a0701c77c1da",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52c3e825-42e1-4b62-8294-e535487222bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b9c481-c4d2-42de-9bf9-4b3250dab32c",
        "cursor": {
          "ref": "c5fc6943-d8b7-4ebd-a2bd-622e3f60bb4c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1d8b2860-e287-4667-9d45-4e00b4d327d0"
        },
        "item": {
          "id": "09b9c481-c4d2-42de-9bf9-4b3250dab32c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a3189337-edfd-44f3-a7a4-d7286c0ac34a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9356ec-e62c-4b94-ba0d-3a7237d2566b",
        "cursor": {
          "ref": "6651bd3c-6005-447a-9909-256266acc702",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ca1fb54c-08f4-4588-8809-c01e96f12a64"
        },
        "item": {
          "id": "7e9356ec-e62c-4b94-ba0d-3a7237d2566b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "874d8360-2c2b-4914-b7dc-f46d2a8ec5d9",
          "status": "OK",
          "code": 200,
          "responseTime": 2354,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a553e5-605e-44e3-a842-cb2ff25f1281",
        "cursor": {
          "ref": "d4450bac-463a-4396-8918-3838a590d211",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "306a9ddb-10a5-40f3-b2b9-1aac6ae7fc5f"
        },
        "item": {
          "id": "c3a553e5-605e-44e3-a842-cb2ff25f1281",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f3926105-8202-45a1-8645-0f123030f706",
          "status": "OK",
          "code": 200,
          "responseTime": 4212,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "268c9bc8-244a-4e21-88af-f03a96bb79c4",
        "cursor": {
          "ref": "494d10fe-a36d-4ed4-90b2-ab1df6125be6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "76047c7d-e8da-4683-b5ae-19b047630041"
        },
        "item": {
          "id": "268c9bc8-244a-4e21-88af-f03a96bb79c4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5d516799-b691-40b6-914e-53460c57e18c",
          "status": "OK",
          "code": 200,
          "responseTime": 3364,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c725193-977a-4db5-aac9-6e2e7da73d77",
        "cursor": {
          "ref": "296df9e6-0d21-4120-a88b-1206e4b14d7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f955fd84-e457-41eb-99ca-12476a5ca727"
        },
        "item": {
          "id": "6c725193-977a-4db5-aac9-6e2e7da73d77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4a8c27e-17ce-4516-a6c2-d0fd77dc5286",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c725193-977a-4db5-aac9-6e2e7da73d77",
        "cursor": {
          "ref": "296df9e6-0d21-4120-a88b-1206e4b14d7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f955fd84-e457-41eb-99ca-12476a5ca727"
        },
        "item": {
          "id": "6c725193-977a-4db5-aac9-6e2e7da73d77",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4a8c27e-17ce-4516-a6c2-d0fd77dc5286",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b985b0-4309-4a09-8653-2972b7d60983",
        "cursor": {
          "ref": "bfdbc591-746b-4164-bc82-c6dd9161a067",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "eec7558b-3e6f-4363-a1f8-4664b683cf82"
        },
        "item": {
          "id": "83b985b0-4309-4a09-8653-2972b7d60983",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "43e0cada-fe32-44bb-8dfe-be1178d2550e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a85daa-7ea9-4b0d-a3d1-66487d1dca98",
        "cursor": {
          "ref": "b604cfc6-ed71-4e3c-b4e4-0e4e5590aea8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13819f19-65ef-4ad4-bd5c-b0ed79d6bff0"
        },
        "item": {
          "id": "b5a85daa-7ea9-4b0d-a3d1-66487d1dca98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b43cc6d5-232b-4a11-9f0a-da963892cc9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}