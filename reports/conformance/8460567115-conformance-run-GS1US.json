{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d995012-bcbe-4afc-97e5-6d8d91c82626",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cbc3e0ab-973b-420a-8a5a-d13f2d10d563",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78049921-2cfe-4772-95e5-decf20e5e47c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "445f326e-b7a8-46ff-81ba-eceddfd88f02"
                }
              }
            ]
          },
          {
            "id": "1838e14b-a3d0-46e6-8566-43c4975c4018",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddc9fc22-f25e-48e1-8cea-18eca8690015",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9fc5933-329e-4ac7-ad71-6c19caa646bc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4a02cb0c-7a2b-4240-8bc7-dd57bf8ed111",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ee16f866-26d5-4dba-89ec-5c0c5ce8f75d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a5034ce-0210-4c9c-a84a-6d6e6f835831",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b82984d-071c-421e-96ef-d6c6828bb681",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d9dc69d-3ef4-4000-a780-91704e893963"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04fa1593-1088-425e-8bdf-c6660af82ed7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7683a32-5f53-48f7-a767-3b03c39bd016"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2f1d1f3-dbdc-479e-8218-45c16f3c2d41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f211c473-068a-49a5-a2f1-1631d9f6f145"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfcc1cd3-f0a7-4977-8888-461efaa04762",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78db80ac-e0db-4dd2-86ee-41191c267945"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "337d04f7-55f6-4976-a3d8-ae70d3bdd340",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de2c7c1f-cf90-480b-a808-a6e7bfebd92a"
            }
          }
        ]
      },
      {
        "id": "8de9e254-a834-426c-98a1-cb4992d2ae85",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5828b8af-3e39-4202-8112-2fe17ccce5ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3c2f997-bd10-4e14-9ea9-db37f9a2a0df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8eeae23-1eae-4c5a-adfd-8755ecbc2ea6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f775b-a2a3-4834-82da-de1dd943e0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1f7946d-bf34-46ac-83a4-39e2cec41194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177ea7d8-5fd2-452f-9653-ce9bc3db7184",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c2cad8-66e0-4302-8598-4be4673086a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a802442-c632-4780-97ae-5cae214511c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b219c5-79cd-4507-8184-2f865c4b8023",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebb9ee-4e9e-4473-9bb0-d0f11451c9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a107f3f8-1e24-416c-bd8e-8481b3ea03ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d71ff97-5c9e-4e28-939b-f8a5960b9ec4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d11347c6-7b73-4465-9bda-ab3f850bf6ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e62a72e-6f84-426b-9b8e-7a2b869f81ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e325685e-30fa-47a9-957e-2751eba6aba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed56771-0c06-4c73-bfb1-c262c5cf5af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52556d89-5ce1-47a9-b547-3dd5370c04bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba2e03a3-ce8f-4c94-8c56-f08bce508ad8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49e707d8-342e-4c86-8ef4-45e9d9d4917b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36dc805c-e57a-4828-a5f0-072efb3e5c24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db053fa6-fe2f-4af0-911c-559d1f7b9f8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be27fa91-48bf-4ef3-a36c-7d3fdb73170d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe47b5d1-4808-444d-8417-327ac1d490c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f801462-fa97-4ec2-a780-80b6f62f63d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc48703c-7945-4748-996f-0164f56941a4"
            }
          }
        ]
      },
      {
        "id": "5da56f8e-d00f-4f0d-ab2b-52b9af6e4805",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d782426b-9192-4a1c-a05f-40238bed996b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5effd79d-1bef-4f45-b7a3-692de545506f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9cbd5e8e-38d7-4b6b-92f0-bcf035841e9b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cf11fd-46f5-44ca-8214-72cf054800bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ff094c-8060-4b45-af24-8e2419d66930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd35f27-edf5-4e88-8b9f-8d727e8c7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c7afe2-040a-4ab5-aa03-cbce729ff035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228d5fe7-3a17-44d4-bc29-1c5fd786f7b4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c8af1-c8d6-4546-81d9-832db317321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9785fb-5c45-48f5-8075-174cc27cc7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baf7e73-47a3-43bd-b39f-e5085fa57796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6babc847-803a-4441-a30a-ae0476d59be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1a1ae3-d71e-4410-86bd-0e3ea8c7ae52",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0586f9-e0d1-44e6-8e46-34409b7f97ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd8114f-c362-43d8-bd24-1529bfc7e7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc123b-fdb4-4150-9515-1cc7c0cdde9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad7b8c5-a8d2-4a3c-aaef-d5ae195633bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bf260c-4748-4225-9838-05fd49108458",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f229c3a4-185c-41d6-b947-f07642674564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1eda79-1669-45e7-8b82-ed27363e4831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e95713-5b2a-4308-bce9-c33537b6e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d00307-97c9-446d-a1a6-cdbd84a4fd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21bc979-6b1c-4627-a4d0-85c0beed3062",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0420b0b6-d148-4e5b-80d1-cffa9d5f78a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910689e0-6d3c-479b-a126-cb708e91518d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c36e87-d91e-4821-9ece-26c2edf340c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0016ef1-fde9-40d1-964b-5f70846e6c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551f72be-2671-4fe0-8166-fc87ddccc37a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9724d278-f8b2-4543-aefb-76f540a6102f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d1dd87-2e88-40dd-9e27-b86c966d3fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be9fb64-92b7-4ebf-aecf-20b444859214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9798ae95-2bf4-4449-aa33-c43b6f9b5ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5947b5bf-dea4-4fd2-91d0-0ae90f1b1b53",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3839f5-1599-49f7-829d-4904956b93dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ae5ccb-4c4c-4b39-84ac-83a645b565e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695cc1cf-31b3-4b6a-a113-fae280f75a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2580cb9-60ca-423b-9f6f-c2727f432170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03b1925-f596-4132-9aea-4655495d4a75",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8007d967-77b5-46b5-8fb0-ef62b538bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd83dbef-5aee-47a4-a3a5-f4ac670559bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49696a11-22c1-44ec-80a2-f84b63c1ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a834b07-5cd7-4143-8070-dbdd0a6e6df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdff426-3744-4f8c-9e4b-3d0957b725fe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f1ea7e-fa62-4b07-9d19-f3e4fbf3f810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8318ce-f511-48d8-b29e-a16104280d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30330f2c-374a-4f1a-896e-e70eb2213923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490697e6-41e6-47b2-aba7-2c7798143f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf91384-78f4-447e-9085-c579c49d15e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923f9a9c-5ea8-45a0-a855-39b901ac8fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668af094-1509-4221-80b4-550e3ab1ec8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0642dd96-4c13-4108-ae0c-422a54aee1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72ff38ad-43f4-480e-ad1c-4ee26efe0bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5d2e26-2c34-42e9-850a-624cd827b832",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159594b8-43cf-422c-afc1-d3b1204dae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddbc106-7361-40fb-ac6a-6a2501d0b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68bddaa-5d65-4d8a-b9ab-dc9dbcb335a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "699382d6-0ea3-48d2-873f-29d196fd23b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44e385-8c33-4e5c-a530-4b55da9d743c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b779b84f-c3ca-4c5f-acf6-d3a73fa39681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b74c925-08d5-4fc2-8d1f-63de3d8eb7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7268ab-78d1-46fc-a373-e12f2f83d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "948a532d-22df-4ca7-8faa-cea6168a1447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ba5ba-ee11-4017-a0bf-df7265e3a24d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e6ef29-5eb2-437c-9df0-eaa7c3b546dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfffed82-1f9e-4eb2-867a-2ab67fbc32fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8665ca69-b903-495a-a447-7fd4ac8964f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a2eccd-6660-4be6-9094-0de62d95c028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc178aa-ff59-4ceb-9a9c-f928268d1fef",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a594b61-65db-49aa-a0eb-14a461866378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cdf02c-06b8-4b5c-8613-fce44f042508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6111a85d-3851-4f53-9ecf-62bdf69bc2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c001fd-b65e-49b5-bcff-ad6734c9dd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b7112-280f-4f57-817b-dde2f0dd355a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3191520-404f-4be8-bb98-cc29f18427f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2947d118-e4d9-48a0-a4d5-eeee1ff2c5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f4b439-dae7-4fc8-904c-62143527fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62bae2d1-7742-479b-b290-c8b66a795154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ecb064-deae-4092-b926-838d48538b0b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290b8393-8191-4c79-90a9-e46a4de26ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2a12de-3502-4014-8f85-06d859ee8914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0cd658-a110-4159-921e-cba4a0d27616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb658b3f-367d-4ec2-a227-01a4ec2a1167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712dc4e4-bd0f-4422-98a9-f47ab3e97309",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad9c6bb-6496-47e4-9a4d-929c3e6723f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8005841b-d4b3-4267-bdb6-b3693bc87719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f41b59-3c60-4476-afcc-6103dbbc92f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f338832b-c032-4838-b192-97b9f5765ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a87dec1-3afb-41c5-b155-d68c45547c75",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fc1b38-7d39-44fb-9535-4714f869787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8003194-2d0b-4145-afd0-7a014476b11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0260242f-6beb-48a7-b3d5-4e17f4fbf5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "435415f4-3ce0-4246-806b-f20345a700a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a328d83-034c-47cc-b35d-3bf755f616d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a17e4ca-c93d-4e4b-89ab-935f442b6b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee879e56-1e5b-4e6a-8904-f450262e0001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0971893d-9fc5-47d2-b0d3-7e169fc53e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4823061f-fee4-4c86-bdee-b768a1caf666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dfdb8b-cc7a-4b60-a8dd-962646016e31",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b83fc0-639c-467c-9936-430269323a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b000da-1b3e-4da3-819f-1da47df4ff8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8030683-1b34-4de9-bdaf-e5f9c53b52c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98140cf5-353e-4b15-a427-d5f64b0bdbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad69091-5897-4eae-ac78-88e7a957f0e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa3556e-bee9-42c4-9dd3-2a4053f023c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f37f0f-c482-4281-bd5f-b1bc19b31914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958f9739-4523-4c64-b9a0-b8fa77d30209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0ede10-4123-49db-97c5-b6363f58246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b26308-91c1-4aea-a755-2e96faa346f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a7a879-3bdb-476b-809e-c67a43fefaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc51b60a-4f63-4682-960a-ee4e547c2809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e3f53b-30d4-4af8-9c63-0e48bd6c30bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5a9376-6600-4dc0-b2d8-b2d63ca2b732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4369890-4167-4c3d-a8e4-3c928e4de137",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb32e69-c4aa-4286-b6ab-d032534d0142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb6359e-93c0-4a99-a009-d4961ddf9d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2754457b-f9cc-4e8d-a2da-247eb1d44b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67acbb7a-7740-44ed-a6c5-4faab9e609ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2babedf6-79ce-469d-b277-561f7d15a611",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c0b36-8269-48ce-b26f-a1871e1b035a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269508aa-9aa0-4c77-939c-b46388ec2834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e06384-8c78-44ed-859b-fca76ebb63b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0666fbc1-ae53-42e6-beb3-daf430a45e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd1e008-dc66-4075-a0fa-fef2f777efd0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a790d5-294e-48ca-ae8e-01e018ac939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9584299-6722-4df3-82e8-84023b0e43c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52121ef5-a279-4f4e-8db9-59759430923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a861412-1d00-481e-805b-224bdc6e1f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9be5c9-8916-4602-8f31-3b2d85d5c926",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955aa0d4-e90b-4b76-bb94-d74b5250682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb03266-4b23-4c03-bacb-2aa85a592591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad12c8fc-7922-4b07-9005-39d421c43d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddab0a11-9bf9-4a7d-8036-ed2e25a64126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e65d3d4-ef22-434f-851a-4da66565789d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b2b735-1074-4b84-90b6-82359f445974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc6aaa6-ecdc-43d7-8b88-ea7fe9a6f505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c597975-0f76-4e10-93df-e031346bafaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2ee674-70c0-422f-ba46-7f46594b2a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62139712-881f-4d4d-82c3-892175827337",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95af3a00-a0ed-4764-8e44-39a955f3f6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f02f143-dc55-451a-a720-df81926664cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d777630-f689-48fa-a476-6017ff9cd38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b525f00-f0f3-486b-9a00-04978d97254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7ec330-a65e-4790-8065-51e518ccf689",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddeb2e2-2beb-4e5c-814e-1fbe38428b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803e27f9-a8f5-4756-a675-0d8429334914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06369c7e-da60-42f9-9b96-4a312778761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2007d9-4c57-4f53-9234-7a1992e9a31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c067b0-a4a8-4475-9c15-118935c3166e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c0f9ef-09ff-48c2-80eb-c1d43a5fd003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9dfd17-6b37-43a9-a1e6-ea8e459a3eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fac283-4018-4bf2-b361-3d5c5038b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7de7a2-d470-418c-8292-7ee9b58d9c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974eb075-a9d3-414e-a442-81e36150d5a5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f64011-5101-47b0-89fb-58d0ec2ffcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad5725f-de53-487d-b2a7-781faf8a4e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcaf750-0030-4093-895a-8795b7748195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b591d51f-6fdc-43f6-9535-c4987ce58c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767cd232-73f5-404c-96b6-7880fa88cca4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b5007d-d038-40dc-993f-cb7bf5141ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f074a6d8-72cc-489e-bee4-8ab1bc80678d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966c78b1-9f0a-44a9-aa03-6351f508f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdbcd76-8eb4-4d89-a156-31fc670086a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef40241-43b3-4e73-8f5b-0db5af4d4ce2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b07c61-cb82-4e37-9c0d-3865d013a517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f97b6ee-7d54-45fc-99aa-82988128cbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df68513-ec8b-42b7-affd-405012afe418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70666da5-243a-4724-96f5-62bd64a27413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c980ed-ecff-42ef-a48a-89c1e7f3ee9c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d543993-2ecb-4477-8074-329b94625166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6902901-2aef-4e3a-94cd-d499e902fa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534c8fc8-19d1-4c91-bf58-0d5935ad9193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db058c5-f2a2-44e1-b598-ec3a00fc240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7390d-1ef0-4d71-a7fd-68588673b50a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b17eac-405c-48d6-ae97-eda177c50247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93be03f-1031-4a4b-ab4b-ccb6e1dc4e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5098e0-375c-40f7-aa68-48d99619186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9e94bace-02e8-4c57-8dc6-31b06c157644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ae3e6a-b8c8-4f35-be15-0185d4dba750",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf884ec-2d88-41d8-a63e-96d0953b1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4af5c40d-ca58-4e25-ac37-ade389f56dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6f522b-7aa1-42bc-a22d-665282a7d348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3546c9ad-6800-4ea4-92e1-0ae966a5c08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c78f4-0a29-4b11-8122-aee262b168ab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdcb83c-3b48-4fda-9bec-4f78738dde7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc533368-31ee-461d-924b-7d625764f92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9b7f40-d26f-4698-b88c-9d45bd001117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2244c1e-ce1d-4920-9acd-11184e99185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd89f0e-5888-4e2d-b52f-d1c36078f329",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ebc97e-b5fe-418d-bf2b-3914f1e7e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc970ef4-048c-4faa-9239-7f4e5b807411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b1542a-265a-4906-b873-d60ef2022783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7db1602-6aa4-4370-9872-ae27a2e6f0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1cd70-4fb1-4a40-946b-199ac8eada6d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc19f9c-0b97-4a51-b868-cb20c0c5ec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ea377d-da62-4d44-b17b-f6306dd992e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f137633b-58bb-4486-9d9b-6bbfc5adc6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a1d09-1fb9-4d45-9012-fadf6fde3a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c38fe-012b-498f-b93b-bd9d39345285",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a354dc8-9a11-4ddf-81cf-acdca59155d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb58da5-2eae-4260-a8f3-a7d883c94ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443f680f-d060-47d1-9080-4883050615fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4939e6b3-1dc6-4e60-aa6f-cafa1fbdd477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8af3c3-b513-495d-a068-250818112cfc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9312f489-7805-4da4-87ee-21b500cfb07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0515fd-45bb-4c1e-b51a-a457b3dbec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b5bb8-643d-441e-b1a7-825324d235c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b17d2d-e6ff-401e-80ec-7e2b3285d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73be5b4-c182-4af1-abdc-cbdf55203d76",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe9ccca-d92a-4f84-8d1a-cdc8d360abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf15189-b008-4d2a-ad80-03918c7ed1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b00059-3284-4040-a37d-50067b2c6304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8c93f6-22e2-4b46-9a26-98b47971aff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ab376d-a1e3-496a-9b82-8937adf94e9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3237dd9e-2655-4825-9777-8e91bd1677ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b6aae8-7692-4511-b95a-8cb40f6733df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d741616-6bd0-4e58-95a2-3f54189b77fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbfcf5a-a92f-4615-be4d-226fb4e24303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76b3d5e-15e2-4ab0-8748-c1f25f968b7b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf9e44e-2ad0-44af-922d-9783a02efbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0844e437-3283-4849-be57-b4d160a6f7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceb3f1d-6438-47ef-b223-ab7e8eea6c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "735517b9-e971-4243-9187-5938e632bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba806424-12dd-44db-900f-abb0b4a915cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bb1bef-3f9d-4dd2-b500-516fcbbdb95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18735401-e600-4ffd-bcdd-c07056fa0280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ece3600-e670-4fce-95b7-3727b7bc7e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32886949-3397-474a-b70f-c0a92f38d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c518599-c6c7-4544-82e1-07a536623ed5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd703a2e-9dca-4bd2-99b0-31f7c0e987bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9addb63d-522c-4c50-aa11-040a6f9f6383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5992234-6ace-4494-a3a5-55a13491b070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c193d5bf-ad66-4ab0-8327-a7a290a18a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bf9735-80c4-4fba-b7c0-da29d9d3794c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2d7934-c3fe-4efc-a86d-db61a6fd668f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a27b51-10f2-431f-bbea-c23f9849e4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a09f6e-5688-4742-8582-ad7dc40000d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bd888b-f3f4-42df-9614-97deb747e56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd22d47-3916-4f68-8909-7090201a60fa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c5417d-37a5-4bd6-a23d-4ed405cfb75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb17cbb-e70a-4b91-8dc2-110410537002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a116b31f-cf4e-45d0-9922-d3605477cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a990a4-8ed9-4cfb-b6a5-21150ef8e734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c2effa-85a1-4011-b454-04c925c42d27",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2bb13e-43fb-4f09-b89b-088deea89f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2331a2d0-67bb-4ad4-be26-70a41a13b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab28fe-39ec-42fd-92e8-24ca9de51e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6136b152-f8cd-4060-bb6f-482523def38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79436d39-833f-4172-8176-5aa6c513c669",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf6f130-bdf0-45cd-808e-1b2d896a7a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb5951d-ebb2-4f90-aaa1-86bd499eb338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e806d1e-4e74-4140-8d2f-c1ccadb74810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0db2d0-4028-4747-a27a-c3361c73c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbdcaaa-dca2-4a6e-8ed9-d32c191d1794",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84751edc-6ce4-4d23-bf45-d0dde0c454b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fd3003-7e96-4fbb-b8cf-2fe8a9848d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc39a2e-82ae-40e7-aa43-ffd97a7243f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d41b64-4264-4353-84af-ba8a4fe5d4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f77279c-b35a-4d6e-9967-dfc88381e633",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38dfe16-3540-41f3-b9a5-778313cf8f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfc1293-7c7d-4c24-be2e-f9e6f55b3377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60571846-c072-4cc5-9bf9-4f0993471e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cf09ab-6e51-49bc-9283-f5ea70c4655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd47af39-f8c4-40cf-a277-820600ff015e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe49c3-277d-4a01-b241-a65a646c93af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cf2964-f277-4352-9fc8-283c25e93d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cc9afe-762b-42bd-945d-0bb1461f3fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c82779-e4ab-4b06-9af2-f95cbc00e4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a2b722-c17c-44fc-a4ac-08855834b77d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ac15c8-1c8d-46fc-b0ad-bab3f8d20850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1307b7-2c1e-4681-b1d7-9dfca05afb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c44dfc0-95bc-42ed-9f33-893c460e62f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee17399e-d403-45de-a589-c2e8a8417aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65931c62-52c9-4937-93bc-5a8147c7f039",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519aeb00-a7a6-4f1c-8845-fa19bcba33d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41811f7-f34e-41b2-8dbe-d4269ac6f003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068e66af-3b33-468d-8083-7b62247dfdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ab049d-bfd6-49a0-852a-73ffb5a8882c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c62aa8a-fe22-4c50-9c52-687d811216e1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f723cc24-e248-4bd6-95bc-3501554295ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187453d-f2ad-4228-8ed5-07b1a55527ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e220b15b-1c37-4f69-9db3-5a557f2fa6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "82708d1f-baf6-4599-830a-4af7e304a72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1364ab-b64c-44cb-bfa0-10af9e4f94f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9682d7c1-3943-4f69-8323-4e457e1035da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2dde7c-3f71-4d4d-9e18-f5abe5498fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e65eb3-2ab3-4189-943b-27e4553c19d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8b2b48-cab2-4aec-a951-582fbf094dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d127ad00-ef5f-4589-8a79-93efd31a687e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816455d-a139-4646-9c8a-e80f7641caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113527c7-9320-4b00-9cc7-09c3605050d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9245c189-ca32-46be-9a21-e8da027deda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33ddd158-0266-4fd4-bc6e-80c6fae05161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b692752d-04db-42dd-96a1-f12897673252",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3d7db2-5ab9-4568-b4f8-3722a1a59bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38d3df1-9d19-4ebd-882b-f9ef323c87af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165771ed-30f7-49a7-8a8b-3299620be5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f6148e-ef6e-4b07-9840-80cc37f01b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260d3d3b-8c08-4d25-81a3-84bc6a8c238e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53ea859-f7e8-4a96-8698-f969ff412c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e728696e-8a23-4d6b-96bc-69ea5471060a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2404681-ddfb-4d8b-aa71-836ded56b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68785d0b-5ea1-459f-a0d3-9e26508fe17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf6b3ca-a2d8-4073-a954-ff68f3302d42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45644127-3d7b-4160-97eb-3d9e2360f3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281e9f1b-501b-41e1-af7b-e6198b3349f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4055b2a7-ea3e-4059-ad47-bb749df3f2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4877bbb-2ee7-44bd-ba56-a8338598fa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86e614-2e09-4a77-b089-d54ede625d4c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e87fdd-5591-4bf5-bc06-f65e3b8359d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829e2c95-5b54-4744-a2e8-cfc4d9612116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388c1f53-4cd4-4dc5-8afe-3183b4ea1daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f82c74-52f1-4e21-a677-fed033b5e0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc04a6b-36d9-48de-8266-e942f7c7be4e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf39e01-7bd1-447c-9063-a914f3d74d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c10b02-0406-465f-9b2e-8c24284e3dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485445a8-38d4-4b57-9ba6-f240b2134c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e58e2475-969d-4da8-abab-ccd674851345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a3330-279b-457c-b548-4c41a073388b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3935a536-cb16-4b17-ab6f-5375701f61cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c759a4c-50ad-4e06-9b5b-d68b69e1d3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69979de-eea4-43f4-808b-98011789c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b467010-7441-4b77-82b3-c69105e65656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0b4a76-62bf-4b2d-aa22-6ec22e8f3eea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9075a2bf-e10c-475b-a516-c554bd9dae18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469264c8-d20e-473e-b59a-e57f87367729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5810b47-822f-4fb0-b82d-87423777e2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63fd9537-8be9-49d4-92da-f25f11a4cfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417e5fe8-ae37-4dd3-a25c-d12de3b8324c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa29d79-958b-4ac4-8d21-baaf6e6e6f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf954f2a-6d81-47d3-bf00-9d8c748fd5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2658be2b-f89f-4f0b-8b07-064396c533ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7aa6fb-b1d2-456a-84ac-8ad239029a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f5860-842a-4372-bc4c-ce5dae8814b2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a3c095-2480-450f-8023-9f43ed3d5513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6f31fb-2b41-46db-b533-0e18b6a3053c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22e85e0-d621-4f9e-94c8-10315750d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7936631d-2b16-467f-9f0b-faf2563a79b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09096281-2a8b-4d89-8a5a-c8a77a1f6661",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927da81c-3079-4310-a40b-db03bf9441d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e22af9c-abb5-45bb-a6ed-af67653a3053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aae5071-6d60-4c6b-9e91-d7ba709b83e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da2df1c-6c64-4e32-b546-8d64767e4d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae5e3f-b5d7-4fa1-8af4-d80b0af26d8d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77426a1b-54b5-4a56-acc7-106e06bd2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b900224-99d3-44ba-8eee-13d8d23fc0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245f24bd-21ed-4f47-8ef5-970e724a9fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f7b7f3-192f-4ad7-8ca2-5b454ba45be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abf949d-48fe-4e7a-bc18-0cbc96f2aeda",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc85c6-17cb-4f34-9cdd-0917ba16da05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4ab88f-635a-4676-9372-4dea475fa699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d574c7ab-0a6f-4559-8900-5f5840fd415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "109528c0-ae79-4c8a-b440-6e094bdc6851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2fe83d-9a53-4027-86fa-f9f84b5ba5ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2542b7b9-0b89-4c7e-af1c-e9a5a77613df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c62aac8-ad1b-4b80-a1da-f880a811c221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ecc56b-cd52-413f-b072-253a70053236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebff022-87e6-4c2e-a7d3-a9b53fe670fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ca24bd-be7c-4ba6-b7fe-287ba8ecedf6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d167dc11-ed5a-498f-a5e7-73ea6aee9f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c39be7-c255-4341-b885-f11a22a878dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9045d6-20d7-49ee-a1d1-2685f5b9eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "890faf71-40e7-47ae-bfa6-454dc7899480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c32ad53-dc48-45e5-a89c-f827416c05cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddac45a6-8512-4d62-bc9d-d377be4fd8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db806d4e-ae76-4348-9133-fe3c97f56316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c0ad43-96b1-45b5-a4c6-7c053b588e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a04feda3-754a-4ff9-b1bc-aa9a7b909fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f271d18a-450b-431d-89cc-ce42f6903010",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f34419-eac7-4f7a-a7f4-438430746afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401381af-7708-478b-9847-f14bbd257d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416951d3-2fa8-472c-b1fc-a3754a21fc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "851c42eb-4ebe-40eb-8c6f-3f00fbeb335e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ac7eb1-ce97-4d0d-945e-c53719eefc74",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5766025d-3fde-4e90-8c55-d0a3b5ebb3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d4212b-0baf-4dbb-8ca6-a53253661ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122a724-3b22-4949-baf0-7465343905ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c907e646-92b6-4b5e-96d2-be1ad92d6c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d307bdb-45d9-4a1c-b9fc-fa502e921437",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982db4aa-367f-43d6-8c79-078d1887a577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b5c5fd-803f-45fe-95df-19decb134558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8799e5-30ca-4095-b320-010424b2b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d167b1a-3ca2-4f07-aa0b-e45d884782ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c29992-22a1-427a-93fc-e88655fe0ae9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe01224e-9467-4b31-a036-2081b627d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3e9a29-0e29-4511-96a8-281e61c02c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cf76b7-fce3-4f67-8520-8f59e13e891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2b6682-9f7b-4701-9cc8-6c79af2e33ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2ac1da-64ac-4723-8859-bafe4cf0a084",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4c40fa-09ab-42d3-9dd3-46b0024c4a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901b340f-d736-4748-ade3-33f6c7a29066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5176385-2202-4cab-a40d-18fd5628273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe6ec53-a0bc-4885-82f4-122356f5955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438184ef-76ad-498d-81fe-71cb3d12c644",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68234f18-064e-454d-87d2-9314ab4eb9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd3f207-3aee-4e59-8f5f-6b184a1083ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6948ab04-3fe6-4cb7-83e8-7a54b7edd767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1114972-16f4-4711-8051-5c8448ff070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca72b3b-6c1f-4129-a903-1bb8294326ca",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e574d-8af2-49e5-90bb-cfb321b9b083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d067f9-1753-4ab2-aa70-9a283d839ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67490ef6-4747-4c37-ba8d-ac3670b9b357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6c6b7c-d40b-4228-9e1b-efe566aa1b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07da379-2b3c-4e5e-93d5-e2264979c6d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af07e77-c3ff-4048-a1b2-eb94903af3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe7c4c5-4799-4a03-9f9a-9296b0a88e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70485d9a-b993-4508-b1c3-c8eb09f159ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1beaab-cad1-4d68-be44-1ea399fa5fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ed78d2-40a2-414d-ad5c-44ad298adf0e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487b29d7-28f9-40e0-b0fe-88216fa9756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0467da-1065-48c6-a54a-78157e2d94aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce34e22f-e7a7-47a6-9106-6f26d9bf7baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d4a87e-bdb7-44b9-af19-044f608c7a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1200a8e2-bb2e-4468-9b8a-1f2fdb5a8223",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681dcef9-b713-4f0a-a6cf-5e295e04218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab76085-f3ca-4a21-9066-ef0c4ecb78b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b737666b-1ddb-4fb4-97af-02aee8f14a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8d6bdf-f4e9-4f7b-bfb5-0457f1bab4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29ee8f2-ce80-42da-8fee-92152c686c59",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee747586-3190-4267-a60c-f01d8b84e821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eedbf0-2b0d-45ba-aba2-919d6bf98ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64d0126-6ca3-478a-898a-b173ec9ca189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62506f78-bfbe-488f-9da5-ef7eca00d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4276d843-dc61-44e3-b85d-472d35f45c42",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f19d94-f63e-46ea-be3f-751a6c02f330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bf9545-6f30-4643-a5a8-ce48a4cc90f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08382fe6-771c-48d3-b622-a7fb46941ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11cbc686-b76d-4da4-b797-137747810525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2f5b02-8fbc-4992-b103-52263d1e0bc6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071eeff6-d47c-41e4-8062-f0bef758adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a328e9-d799-4b44-8f2a-25ce8b3f1797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f7ba9-2394-473b-b571-2ca2c29b37ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "290cf049-dfe1-4ad8-9a7e-66a63f4ec914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59109c8-8da4-4b33-bd81-4fa5ae48495f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8c40ef-7494-42c5-91bc-4f078de2ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265c8907-1456-4733-af23-f9fdc673d0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b7a125-7b2d-45e7-addc-6d72cbbacb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "debabb19-5db9-4409-9bc2-08429d9a2fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86107e2-7db4-4643-9a5b-e333548ab469",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c9391b-b804-4e6b-b89b-da6b85ea95fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f9c9c1-5caa-4370-bd20-2583ec0d318d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeaf4c6-49c3-4fe2-a373-cbee9f9b0778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5259af27-40ad-43cf-bbd1-4306f316690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3829fdf-9f2d-42f2-9319-8f407c23a195",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1e88d-d679-4313-aff8-b45d92c3db64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178ffcc9-90de-465a-9a4a-92069bebcd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474cb0ea-e95e-43d6-827d-a43f3f0e3738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e592e71f-4b88-441a-8ed4-7e8616fd8e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eccabc-1fad-4f2e-88c2-c9ee7c8d2d8b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45340908-4526-472d-acf6-34b8bb3d511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1d520b-a3f4-4dfe-8f6e-601998e5141f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e16a1d-9f8b-4e73-b194-0a0b5e5739db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf1498f-8925-4e6d-af6b-2ad925787595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83307cda-6282-4ebe-abfb-ab37fad4b43f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acb0a62-4d8d-487a-a66c-769ddbee3b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0b45c3-94fa-4bcc-9f66-b0159989df06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1f5091-5a58-4296-bb29-b2f81f2389ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd78606-f463-40f9-831a-5ef6285b014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f1842b-cb31-4a7c-be55-4b0e97a6b140",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728425e2-eb33-4526-be39-9056b7fac6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b8a3b9da-c79b-49ee-a400-e4aeea64a9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46aca3d-7784-4331-a492-023286a8f751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "168401ef-87ea-4da4-9fce-370ddd72ef02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64762392-9909-4666-ac4d-357018422a17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00457381-a9e3-4502-9a55-49b3685eccdb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d974ca9c-edb0-41a6-bda8-180305d08737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e22cc73-5c0d-4ce2-815b-bdede3869faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc16810-d58c-41a9-9655-597bc2273044",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ec4a0d-a1fa-4ec7-9a78-31b9d5b0b2c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11bebec1-e06d-48b8-8883-47a9ae401c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7c9c790-aa82-4db1-8d16-e9d5e8d1b742"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e7800e3-52e3-4caa-a05f-ac44fd7b32c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce6d7568-a40e-4fb0-b5b7-16c22a8741d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6105566d-db39-4cac-ada1-efe39eeba610",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25533867-2c58-46c4-8036-07b628590489"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5d1e919-3af4-4475-89fd-f565fa1ce0ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9123853-181b-4205-a6e8-61bef9204965"
                }
              }
            ]
          },
          {
            "id": "567e5eac-2e45-4f42-9a0d-5185e4ecf191",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47c9ff96-054c-499e-acc6-af3106774a18",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a9e5b9b4-73c3-42de-8bed-7b22d843f572",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fbf29f-a5cc-424b-b175-380c956072ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b367df8-9efb-440e-98be-34466f5a3393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8fa5c8-4dbf-4f1b-acc3-78c0de780e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfb79db-4fc2-48c4-97ee-583abf1647c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e686fa35-3f87-46f7-a1f5-a1d520481805",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ac7fa7-e22e-47b1-aa34-42c8e56078fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7913749b-fb36-4912-823c-d5798639d51c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6e5cde-1e02-4439-b0b7-cd951af72daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19d5c359-5977-4b7d-956d-289d3cb145fe"
                    }
                  }
                ]
              },
              {
                "id": "6360bcde-d679-44a3-9520-0e61f0d4d07b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22da29c2-9d5d-406a-9bc5-e98d4fcbacf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58123b01-d82b-42d9-a4d0-e33231f7edc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a323d4c-f4ef-459e-9552-238718b75fc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d258c48-3cdf-48c4-a75e-baa78184cce2"
                    }
                  }
                ]
              },
              {
                "id": "555b4e73-8d5f-42e8-8e66-d97b56c659d5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f1f064-7871-41a5-8e9e-aeab53cd2677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19866852-4ba9-4847-9ecf-54e0ba6bdba4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb831b9d-7308-4118-9b76-c2c3c06da0d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4edd6ba0-f762-4d0c-913c-763071f8dce8"
                    }
                  }
                ]
              },
              {
                "id": "93593eea-9061-4da1-9e1e-d441bdff7555",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d0d3a60-9fd4-4a3e-a9f4-b994f87bdd94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eeeca15b-d379-426e-9bbf-0cf702542e47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81810804-8414-4735-882a-9a251191b067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c2f1a050-2e34-4161-b490-5330758d04c3"
                    }
                  }
                ]
              },
              {
                "id": "10e95390-781c-445e-a3fa-a6ff2bfd6078",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f79b989c-9cfa-432c-82e4-c6d0d57755b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94992a32-381f-451e-8737-800b7f394c10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a60d3a85-244b-4e09-b955-524d454a1315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "568635cd-af0c-4a84-82d7-83d7463d8b20"
                    }
                  }
                ]
              },
              {
                "id": "4f305d9a-669b-47c2-9fda-4d5a30a73b98",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "329852a1-0f8b-4137-b6e6-7c15ec1db4e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a02dacb-2f13-4418-a5f1-e94f299b7018"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed8eb7c6-def1-4f2b-9fd8-55c8d6ea6401",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a43b3b8-2733-44a8-9efa-bfc05d1a65ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "550e2ead-621d-4e00-9edc-a6fe7a684c8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe689346-5362-48b6-bd0e-10e3a287fabc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "488efc2e-e22c-4412-a347-619123c9562c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e14cd9f-0e21-4162-983f-2b34c69daaf0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab2c0fe8-9af0-4317-b75f-5f7cbba0316d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "de11d8f6-3eab-42fb-b012-bd8e5d51fa64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d0e00ac-a272-4972-8252-71b868d42e09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c54d52f0-7f6b-429c-95b5-e64deebf4dc7"
            }
          }
        ]
      },
      {
        "id": "49e180f7-6e57-46f0-ba63-d02d77ca02a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "95249149-e623-4166-b6ab-cb0ab68d564c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3582fdce-f84b-492c-ad6f-90b97b19910b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d546eb94-77a9-43a2-8bcc-35cb5d752cc1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508eac9c-805a-4a6d-bce9-ae466553565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f340a96e-274a-4da1-92d5-c8dcf6fbf57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19e1b80-5752-44c7-abc6-242e8fd9fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "16973a88-6fda-45a2-a6ae-8b6c22d0dad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab18f4-9bb2-4290-96d0-5c86d2924094",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf1501a-c549-4713-8f0e-bef77db3d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a4f791-43df-4ea4-8bb6-a4e7449fa5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76ae40a-3f31-49e1-b53e-65b211b8002d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95af3ba3-276d-4586-8de2-8a38274891ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10ecabd-041f-4516-9dc3-b3f5d022e7b7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a59f12f-e200-4a37-ad4b-35cbc701afd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b9ad5-d3bf-4cf6-9fbe-a3a5ac6e8b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8916efe8-c9ab-4c00-81a6-4eb8e1b86f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d633c7-2c20-4cdf-9ede-5cc215fd6b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8288e7ae-a20e-4dfe-b4f5-705cbcabc685",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13f1ef1-1e90-411a-8258-42d48d606b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8942e9dd-29e7-4f28-917d-b7926e7bbc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664a4e42-d969-48a7-b568-5ce7c23972e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d42fc95-f6d2-46bd-a227-c4f788d547f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88a8919-0f00-48a6-abdd-b5a78e12d552",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502dc6ef-2475-49a7-aad1-4b34de9a1cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d4b948-0d6b-4597-894b-ceac956484bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae6a19c-ef4c-4e48-987f-2a5905d53e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12112274-1c85-467c-9a11-2f740799bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2f2387-4c07-4424-b1c7-957fd67fbced",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aff7e3b-1440-4434-ae25-f7a3373ddb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087b2f97-bb68-431c-9ede-518ec490b801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e531deed-21c5-42c7-a287-845191a2cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff16bee-125b-4f40-86ab-300a1d4a38ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ce0d3a-60b1-4ece-89cc-7d4ac9981645",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ae5cf8-2e9a-41d8-91bc-be6f94f00216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a55e5e-7c6b-403d-bb87-32feeb6e6c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f974d87d-42c0-4b85-9759-2cc173415e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "85fc0980-f1ef-46a0-802d-8dbf47ee1a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9601ea-8321-4e13-89aa-5a71807fa3c5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea63b3e-85fb-4c53-8a63-6bd35e5643e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d1e774-94f8-4790-bb2d-a304eeaaf570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6070710a-eb91-4c34-b6b5-5459cb136c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d7a09f-a4c8-4cf3-b88a-c6ca1c7a3084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134a5589-1631-4bda-b001-8969159433b1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1294a566-4814-4188-917a-db272b96c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e294e53-22ff-4e3c-9037-51882906bb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9584286-5be5-49f1-a2ff-6b29134d6714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66005ffc-871b-4134-9346-973f1cdd9e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad889d0f-b993-40e5-bbe3-222bfb40b655",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5cef20-39c5-4be9-a3cc-55820016357e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae02db7d-747c-48c9-9157-677decdb5720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b51a87-dcc4-4540-85ea-b6d5156569eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94d9fa9-3dd0-4bdd-8af8-0c62496f05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22cb0b2-b638-4688-afc1-2658580638d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf925a36-22f4-4828-b2bb-196ac9e3531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34232620-85be-4a8f-a17c-627d7bb262f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f276c-f05b-455f-ab6f-e6331bf59c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d54385-c559-4a6d-8f76-d2abfcd26ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7f7a8b-6ede-4eb2-b503-a3e201c7a39e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775b366e-f3c9-4401-b62f-b2ed859159ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b031d534-7e1a-454f-af4b-1a5d0bb69cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af17cf5-0839-4c4a-8037-80c5bfaed8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f53eae57-3843-4dc8-bd1f-5d228f142e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d70224c-1f66-4dcb-9a79-45353f45804c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1067eb81-6292-4710-a20c-9589c0f4183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc4395a-e602-4329-a64c-afe71e79cccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc5ba5-16d4-48ad-893a-a64849d60ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef126e7c-4722-4f86-9409-76b60a7cc8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0e5715-44d1-4014-896a-5245ab2dcecb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc736e-366c-483f-8931-629da3f0c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d60a301-0622-456f-be98-b48d834702c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba3a24-9fc2-4ebd-8e1b-8f948ad00c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80eef21-ff9e-4096-9bef-f240e95a19cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c89bdb9-6f4f-464f-82b3-e29fa923af21",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd86c0f4-3a17-47ce-8f1a-74d4736194d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e99a91-fa14-4e5a-8896-508d8c2a98c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43dd176-8db5-4ea0-8837-7cb0eee7931e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7c738b-8167-4549-bd91-ffc0b5db7715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98f47c1-5b46-4456-b950-ee42b8c6b3d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e448c675-9b7a-4059-bd81-488610a0278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1893296a-27c5-483e-8428-650eeb61fb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0864ba2-3880-495d-818d-cf82f9b87e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c548d1c1-2888-4792-a3f2-0d6c151e94bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c172841-970e-46bd-a27d-fd02e97a04ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5e0058-d19e-46fd-bc35-55d4428a1940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e0eec0-7e17-41d7-a04c-5ddc2fca5788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1fe30a-bc3e-434b-9c8f-84767ffe7e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c9418-6a92-4523-92d0-89620a4fc44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf6d134-80a8-4b8a-978a-6f6722f3112e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cba9d4d-5370-4a64-b4d8-d4900190067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96006f2f-8620-42f3-8c40-c07f660acd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b36d08-265a-4407-8919-2bfafef4521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cca9966-5f5c-4baf-800c-a91737689d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c261f3-6096-4fba-92d4-f83a0f1147df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce42ba6-e30b-48da-b4af-c2819ed12b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c710b5-f7a5-4b68-b897-edd557d10e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6779edf9-3768-4028-8f21-8b02f1936279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60c8906-07df-4445-9d7a-e92e0b14857b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443e9fd7-1da2-4875-ad71-e848c5993263",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280412bf-bb19-4339-81c0-7b74925665e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98863f64-40ad-469c-a137-06cddfbd8731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0daf2-09de-4698-8a2a-303affa0cc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04004ef7-6727-459c-9cf7-5be9490672a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631038b7-cb3f-4dcd-86aa-73e52941c518",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c14893-e04d-4359-974b-d472c4281390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235595ac-b7a9-446f-862b-586ec4d8d198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d360e-2d11-4bc2-aad1-c69808b0ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2856f2c0-3ad5-4f62-a15f-4ad7205e5b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4f1dd6-f766-4108-9925-c7e954a77b5e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7436c3-9021-48cf-87f3-6b3f72407b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76066b30-c5ff-4ea0-a10b-344e58844b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfafd633-a6ab-4da5-bfa3-86d9bed66530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17e726d-1e2a-4fc6-928e-784f8b6de9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2bc435-7a0b-466d-a12d-b5a94defca0d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b20ed8-e116-4984-a909-be17078f6c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6a41bc-a273-470d-a90c-5f456e8ec0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125b375c-cf28-43c1-9e8f-19c2791b3b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7372930-7db7-4a18-90a1-0af46f0bda5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd50c143-5418-422b-a61e-ecfc77f8cff5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764233a5-7a3a-4315-8f9c-03b523d55f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7181ddd1-38c1-49bd-9126-de3c57ef0003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89b2c8b-929a-44d4-9bd7-f031d814ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f7b11a-8781-47b1-8568-80c6ef23cba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53456ed4-5c79-4880-8a16-3ba42736bc47",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a172816-ca4b-44a6-8307-28ee88f2ae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b711a1f8-174c-4241-9dce-211f2dcddbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2bf27f-46e8-4710-85cd-450a8231c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f59db28-49ff-458e-b8d2-560fba9186ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26eb6f3-e43b-4646-9b01-1e320843e7ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f39c48f-08cc-4f03-a429-848d451be14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8f69e5-726a-4817-91a0-a4c5832b172e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d84a61b-4a67-4297-b72e-8eef19f5ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dd619f-2243-456f-9b1c-67cd35f166d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4302f5d-86e8-4e2a-b6f9-60db36acf688",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bb65d-6bd3-4fc7-afe7-39b6d1eb1303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f26cb8-543b-4011-a4be-ec0d5cfd65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb4d22-e0c6-490b-afe3-8bc94c45a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd27fd51-21ff-4c26-a0eb-cfac562bf67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871c8c9d-76b6-4507-9228-5dddc00064ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d24feb-bfe3-4201-95ce-0dcbad2cb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f34a603-efb2-4ab2-a8cc-91d4b06309f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b044aab-c6ed-45ac-8756-25407598b6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04205478-be32-44ee-81fc-a5fac0968d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c14fe7-3d5f-4424-8d17-cbe3d9a963c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83de57-2275-43ac-a754-146388fd2aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79cfdc4-fb48-4fbb-91b3-3e7fbc597dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfbff55-a915-4047-b966-39daac6a63ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a880662-17bf-4899-b087-39102786c98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10280061-2ddb-46b1-b776-2cd495cb7d57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be1c6d-dca3-4406-ad4d-71fe179e14a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3411ebbe-393e-4374-ab4b-50fa0d0404b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2842b12-9a68-4fd1-bdb4-7a43eca6ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57983f2d-0ba5-4359-939a-fbe5af8ad0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baa5fc1-c622-4585-b3ed-05c57c5fea83",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebee2d40-44c1-4219-8263-7b5bf683e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7d9884-dd6e-4bb6-a99b-0e17363e3a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd26c19-f84c-4b2b-a860-264e2e9ed98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f886c9-7245-4c73-9e44-2acc1c03c75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aa7ecd-7324-4502-a03e-e80bd963d272",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e6315b-1c6c-4c07-b2f6-67200c9006cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23c930a-8c44-4497-950f-7056fde5a589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d597008-c3be-491f-9503-e78beacb2cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54c183f-fa0a-4ff5-94f7-f86b85600c8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "057a8f33-edc3-4f40-b26a-d283993ed92c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8854a729-5430-4010-a438-cdf4a321d9f8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c9a16-686c-4138-862f-172fb63bc553",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "421c0e5f-cc95-4cde-b3d3-238a3963778b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50ec9b4-6bf7-4cda-8406-1d0f40d15c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "889fe6e6-1af1-42a5-b8fe-a1d518ecbede"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3c3ca90-c0ab-43f5-9cfe-f7fcaf642d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dbdf7ea-f015-4958-93a8-2f4f904c8e37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6206a291-797d-4727-a630-7e1e517b54da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66088d65-84d6-484f-ac6c-c87116910610"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2db2bb7-1ba2-482b-997d-2ad8d3e2204a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f124075d-7e41-4eab-b70c-011ad8fd5134"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f49a3932-175f-4916-9fde-2b4d50ef7e27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d99e6d2b-bcb8-4e89-95f9-c9a2eb37c201"
            }
          }
        ]
      },
      {
        "id": "122e9207-30fd-490b-a542-5c4b75158663",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d6528e91-7f82-476a-9791-632f7c8c1338",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baecbafd-e03d-4620-9e1f-ee69a0ca7c91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d246f0fc-5386-4763-9a17-2d59e040609b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80e3289-c996-4a1c-af16-132c82c49933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b032f3-5317-4693-b56e-c63a1e27fd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1785b67d-2f82-4bc0-9a12-1d2e89f51dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9897bead-c0e1-4dbc-ba92-19166bc555f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75864e3-b3d0-4229-b2bb-b19dd9c2f834",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d3dc67-9c1c-49b8-8c01-45fc26e8eaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb9d6a2-2a14-4240-b513-d1f035e9fe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4110bad6-8789-45cb-af58-e4906babca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5e2204-deb5-432a-98cc-3166ce474154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e55c62-e72d-41d7-b077-d1d10c9878ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd490e-e521-40ba-9252-208a55c74e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29db0f0-5a44-4478-9fe5-c2def28bfdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4ce542-ebfd-487e-8bb2-a86c78c1027c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e7a848-bcbb-4338-a064-07c71918848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f1460-7f97-4ab5-a3a7-fb41e341e132",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de129601-55fe-4eac-8d83-dac8b3f969e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dd0d33-cfe8-4746-8a8d-004ca71914bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d091dbf8-6cc6-4946-bc09-cb120ff304c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e6605a-6104-4911-afc3-d7689f6ba75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f14ed3-4f68-49c6-bbc5-0ec3499c6443",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa8be24-c000-4f0c-8c6c-15980a7b3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69d3806-1129-4b22-ac19-874568e6503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5620a31-41b0-4a29-af60-77acea34a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b51a71-c565-4051-be09-fac7e4eaa1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569fa77f-4049-452f-a80e-11bc92de5240",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5613a5-e28a-4f5f-b0f1-91a661d53384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd15f49-f75c-49e0-9d18-1fd493cdb0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0243dde6-536b-40ff-a3e4-a2d1f7ffc243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4622e101-4a8d-4592-baa2-8d42c64238f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd372750-1585-4f1d-95cc-c99f0b58d2f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bc1b47-0667-4ef6-9e25-69e417c97b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c81a3a4-e93a-47bb-9130-7e90fa9bb683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1b0dd2-0632-4a7e-8647-aaf377bb6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce26455-ef2d-4b22-bfda-e94006b824a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68814c19-ab22-4e36-83fb-6c81498e5064",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1765f608-45bb-48e8-a29c-362e6c7bbacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d87486-65c8-40c9-b06f-49f653c4014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11059aee-2c17-45a1-9d9a-3a756c2a6432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ce1e8a-8f58-42ab-add6-2dd9deecf8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e75b64-592e-4eb6-bc08-d0e31f04100d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0dc8f1-ce60-4e32-a52d-931fececa8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60b6529-5739-43cf-a1d6-b2753dbabc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ef32da-d9b0-4a50-903e-7b862d9f34a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0dbb36-9c1c-4a92-a3aa-699baf8420db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30477a6b-2852-4dae-84fb-fb7bbaf527db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac7c587-f115-47ef-a239-83f57d73c22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667b19be-a218-4e05-b9eb-ea1fd5ef2864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281836d0-723b-4816-adce-1d48223084f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86536c3-79df-4fd2-8753-440255fc0735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eb3797-184a-4648-8969-a33e3a28486a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d70849-f5cb-447c-a78e-53484d8582d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aaed31d-0a52-49b0-abcd-43945dc1ce53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd9d9dd-263d-49a2-9a47-2f8bb71871be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5eee0b29-fe7c-41d4-b19e-f12b9986ed73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195b041-e313-4366-9eb8-b5c3b027f88c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2534646-7c8e-4f59-b24b-c35ae68b3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29f852b-b5d2-46b5-95aa-c514eb208550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7dd91a-ddc1-4e31-afa1-3b00eef85073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b686663-11fe-4205-86a6-440bdab9bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ee61f-2781-44c3-8475-1bd60df129cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e0f1a-0d30-4c77-b144-bb68d551a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa65992-ce44-4c89-9bc2-33a4313c6583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7107a70-ef83-47a2-bb47-1a3ebbf84c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7598f674-dab0-41e7-a05e-cd7d4d1384b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672e1d2-460b-4e18-8f74-1887123462f4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b40bbde-9619-4317-b5c1-de650a18528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e97bf4-a501-486d-a237-334c0c5cf6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5c37b9-2f99-4a15-8258-bd9f6d677a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "75998cec-3388-4f33-8382-c9c0903dca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13337942-e074-4668-a28a-b7b82a63b8ff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e639d5-e700-4cda-a560-4588334f4315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b335fb-9607-4779-a177-4bc2d4006c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ea56d8-ebe2-4b58-a960-e236175c7c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccf6d6f-875e-4210-aab8-a470d96a4aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdf1162-7c0f-4d47-9e82-ef9d495a8a2b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d074da-6bec-4444-9bc4-df2e6f14e1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da761f9a-0b97-4473-bef3-ea28c2dff57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fc1c8f-3569-4e7f-965e-6a24e5e0be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56111c05-5e3f-4d41-b59c-ee5f5db21eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befb9194-b151-41a6-8751-abea523a1be4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91149741-c0cf-445d-b24f-5ec7124d232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b4b902-1d70-4ca2-bfa0-08c98ef6591f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646c4a70-55b0-4c65-a091-32efc6ed0d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea027cd3-34fd-4140-b3d1-43cb3091feff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb43ba7-0bb3-48e2-8709-94869ed9cf1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03ce5a9-91b5-49b3-85a9-7028cc76bc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574367eb-62f8-4cda-a2db-bd8968d52905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d77219-cb73-4ba5-8613-61793b8d5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e68c86d-985e-446a-aa5a-ff35a1567670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfdaf54-eef7-4c32-9dca-6ef26c302ddb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce153d0-69a5-4663-ad34-161ec91a21f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a293e88d-6a26-49ed-8b05-0c6ca9c71703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cae53a-aa75-429f-8a50-65e243c91fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfa0809-78a6-450b-be8e-3fadfd601ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25d6580-6f38-4f23-8ddd-d9cbde844fec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abb2ebb-e3ac-4ada-952e-21ce5535a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b4023c-9add-4016-b292-71e7e1cfc78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f428a3cc-236f-404d-83e5-7e50524e35ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c92112d-e9a5-4dcc-8e6c-048d16b2821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c688423-545d-4eec-b19e-c815e9039d4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a59c19-3cd5-4aad-88d4-e5b976adf96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6711a9-add1-4f51-91f0-460e82287b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee0cec2-857b-4ada-a0a3-081600a6fe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b276337-532c-40ee-991c-8521a9360901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06cffb9-a8b0-43fa-8a7d-3272ea14f0d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e225bf1-380d-4ab6-b543-765b90d72529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36b8755-b3c5-4903-8e57-6ebbb57f03f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a8e5bf-b4f5-4c6b-b4f2-4cbf0dc3f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ab6340-0976-4842-9539-a4164cb7c2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35974405-e8fe-4fb6-95f5-9d32aa4bcdd0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ebea72-478f-4e64-b3e0-becec5f8476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50f0609-830e-4b3a-a0c2-9106588525bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a444e8f-825d-4730-9b2c-d5423e9f2429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0916f9a-84e7-4a99-9d14-bf5243566446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a394ff-4c27-41c6-9f09-2157b02a62f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb8c844-2f2f-4470-a595-2e4ca9c124e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bb866a-db22-4fc5-9e20-79e9d35af3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d03a161-6891-4262-9fc6-a1ac098eeec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6caacd9b-f49e-49ae-ac8b-b8894be9cf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def5bc33-7ce4-4838-8577-2e61ea80378e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34971d82-391e-42ae-b10b-f507549101d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b91d9b-8628-477c-b63b-239ab94b62ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f44088-3e24-406e-bccd-1762a6364ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4765d798-de5d-4ddd-95e0-d5bcf7f03526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3ee6a-c1a5-4f0e-8f71-2d10d1c84723",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37100ef-f295-4d8b-9dbe-a5a0ae421cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c466d81-3e39-48a1-a372-dd72811c45d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce819df4-3662-4ba2-a993-6e20cfb66018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9747c373-cb8c-4558-8c30-be944de52ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc48af2-b1d0-4d15-ba4b-838b10d0f840",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32350528-65fd-464f-8954-99ccad1c2e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f357ce38-c240-4671-ac8d-891fc28890d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b035e952-0682-4311-b1b8-3516691e471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f22f8e4b-b636-4be6-a42c-55509b02258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cd5fe6-ea69-401f-a142-f5786eba16f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24084b5f-4e33-4295-9b15-6ce1e214cbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0541204-778c-4e5e-b9dd-70e2b62964cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673c9d15-b884-41e1-9578-7ea44fe6a81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2f760d-ab99-4514-bcdf-ac16464d1eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc57622-a6e8-492e-8868-8707348c0197",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433676ec-46d9-4794-9c15-2d94bba24f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6507bd66-d122-4d5a-a046-d3db85274107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1895185-20ec-4415-8d15-a9d0e462814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa85174e-129b-44a1-a37b-145cff860141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5de6544-7f5d-41fd-a1f4-f0dab67de732",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ca3ac7-92d6-4e5f-a7ef-d9797420d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c07ac0e-c41a-451e-bcfc-3ef1587fb9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c428da-4335-49ee-acd9-d15773ae6eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86312cc7-f5be-4903-b201-abef73ac94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee898ae-4530-4106-8065-0d4e8922b7a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d735ff9-4fe2-4c8c-b118-ba1c0a333b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdf60d5-7acd-40fe-b5c2-8ebb00afb328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb8d172-a6d3-4f5e-bfc5-3f0a4a57fd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae4f39c-6d5f-45d3-9e26-5b0814d504e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a6c18a-d282-44d5-99e6-7c95e79b0514",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3322d255-8927-4db8-a4f7-c4c331cfaa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1377bb0-db6e-4d6b-be73-d34b5ad68d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0e1e00-3643-4ca7-aa94-a00360681961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbb68d9-fca6-461a-a2c8-1cbe1f33a912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1815d6-8f48-4a50-9620-e5c5b7b63581",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c246d147-5a5a-486e-9e4f-bcab3d2d316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1630e8d-1d0c-4a0e-bcbd-e87be92adabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03656528-d994-48c4-93fb-aacfc5e65478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c2844f-6351-4a98-95c7-3ed8377dee71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01c3486-97aa-49dd-95da-0682af795f3f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4115b150-0d38-442b-9c38-882c61b0fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6a23c-653f-4ba4-8fc2-d6c23df3d68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25d9b10-d5b2-43da-aa68-a425610e87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e230d2e0-8089-4672-b24f-aee7b72e5f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aacffe1-1074-4b9f-8e68-3fed87d04516",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c2ce53-7771-4d3a-9e21-61d45e558ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930d8fde-21db-4f0f-9396-8bed889254e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08731eb1-9f26-4230-9522-ba52a1beba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4988252-6a54-4e7e-9489-7c7a44886d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e89509f-5d25-44e5-b5dc-b79933b734ba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b42fd-8968-4d46-a2f9-cbd900162c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac41121e-c480-4ecf-9f96-be7016f66e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5240c43c-f965-419b-98a2-635084157b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc4b193-1377-4607-8cd7-f08d81f38090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230ae9b2-0c3b-4fbe-b59f-f877ffa11f84",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4ff5a2-9688-4fb0-bc8b-0a685c8c8b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb7916d-e72c-4407-97c2-4b36b7521c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c69e5-8a77-4d6d-8b47-79884e450837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df916279-ff7c-49a9-bbe5-346f790d3154"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "997b1111-dc25-4373-8ef3-29023b4eb461",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64caf837-2d07-4950-9ec4-6e770e659803",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb14f9af-80ee-4859-9bb0-6948c54af43f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "42d6f15b-b9e7-44be-b6e4-3fea3346e814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f4d523-984b-4316-a727-406deadd421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7bf4ba8-ff0a-4dd4-951a-8d004ed8391d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a0bd4c7-4ba9-4e59-855f-2434aad852cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0fbae2d-dcba-4e0b-b691-f92f31a9339d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a0f15d1-486a-4ea6-94e2-4eeb5f512e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc8808ed-bfd6-40ca-9c47-36afc0f2de51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9028756f-7c3f-44e0-b12e-25bc1cf0d0b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f363c8a7-e46b-4fe3-92e6-7e3abd529671"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a3b451b-c689-431c-a77a-ba9d846995cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0562d183-e395-4c5e-9d31-b136851b75c6"
            }
          }
        ]
      },
      {
        "id": "37b8ff05-7af4-4ceb-9fbb-cad3846edb0b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c5db0a7c-1ae6-4ad2-9433-aa921063d1b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2da3d083-1b3b-47a0-9f6d-76073380c475",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75e36faa-793b-4a85-bf91-632409a76f87",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5a3d1f-756c-455f-8c82-db75fc44b3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b28176-353d-4a80-b79e-17786741b86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c63612-09e1-4cf1-8d2c-af1906fe02c8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e7b733-b91e-41a2-91a3-bd5ecbe9d48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0bf18a-55b1-48a1-b6d1-b8a21b3536da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80658604-a9d0-48f1-875e-9a2a6c5f0a2a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf95db49-0ff6-4d66-8dfe-a1bfd999132e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b070959b-13a5-4580-98b5-7fe8282ca439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d48a1d7-f6d0-4d66-b0aa-4b11d8acc3fe",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e8ce49-bc0e-4152-8ce3-7deb24485abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252f948c-7237-434a-8480-2d3bb4eb7950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2440e-3a5f-40ed-a5b5-89fa46564410",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f72cbd-2df8-4590-bf1a-14d669edfdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008810aa-f3e3-47b9-9e03-8489ab269c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e0df9-aa70-4d8e-8066-3a44323ac6b4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cbf9f8-46e7-42d2-b4c2-1c0cdbf25b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000ae816-5eca-4684-aad1-c222f09a7b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7a8573-b56f-495e-a19a-7fde172df819",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca5c01c-2fa0-4fa0-a568-29f6f18c006b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3cdc82-9aa7-4e20-8ccc-27fdb5464827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43674a2-4c7f-42fb-8af0-094cdd1153b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0e694c-8654-474c-8638-97012ad825e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9755921-f17c-47dd-a68b-9ffb67cd2c6f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f3e45b-9717-4196-8193-d95ea5eadc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077ba912-6ce8-4f40-a554-8e5474a9f09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdf9096-7952-4953-b392-3ef2ce9ac6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c39d08-d06b-4781-82c1-e3718a04c4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6299e6-989c-49b1-9829-f7bf246a30cf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556fcec4-d92f-4b6e-9078-15f082b5a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e1d608-a4a1-41d3-8918-2aec77efbc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab91fe29-1334-4910-bd46-dadcf325b00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49979b04-5cac-43d9-ae9e-2499d3732246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15311a7b-5508-4b32-b979-f2d54631adc8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926e3bd4-b78b-4d18-8402-456dd46f93ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63c1d35e-226d-4900-a886-1f686f83ba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de7f4f4-1602-41ca-9254-ca4c2716801e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab24720-ada6-4a78-8dc7-c72c00797f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ad913a-4e22-4c93-97ab-957f95ad2023",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67503805-022b-4787-88ba-889a8d0e7492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5720b9-c552-4665-95b3-71e479f730d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44af5b94-9d8f-4a4f-9819-547a3bae28b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cb3317-e0f0-4f82-920a-91139d55353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4d19bf-b7a8-4cc9-81a0-ec2d725791e8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2097daa4-15b4-4006-97f3-95c05c362dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2d6ae2-2586-46d4-b0cf-911575de9666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7461aeda-360d-4ded-b304-90bb8b742ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fd2f1e-911d-4c9d-97bd-b7cbaa147ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2605ef1-dc0e-48ce-8a7d-23de79f957d9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc2245b-6d5b-4fce-9ab7-b30cd375df43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de9fbfc-dd73-44c4-b2fe-b6bab36750ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9593a60a-e52d-4f78-bf57-997f727bd4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dee569-d08f-4528-91f5-e37d410dee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0de27cf-e503-4414-bd78-f9ce3e867f1f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beb89c4-b152-4c9f-93cb-3f267afe400b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "182fbd30-6b52-4999-9959-b10f889298ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e40f4ed-12d2-45a9-88a9-daed90e501bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee2cf18-3576-4fb7-a26a-f6874bd717f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc802b76-dac6-4b90-ac2d-49ecd70f336b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d286cc95-5de7-4330-ad04-440348b4bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58105e3b-ddb3-47ae-9643-d9f4e18ef4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b32b934-ac6e-4c76-942a-95b8bbe7db38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2821f272-0aec-4fd1-b374-854cc88295a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ebba72-5628-4f56-84e3-4938788ca0eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d922ae-851b-452a-aed1-40737455a150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8bc316-8adf-47b0-92f3-d2306a5d75d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985d919e-7b9a-47b0-bef6-da3b2baee962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4539dc64-e726-42ee-a50e-a0e42d957d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c28bc4-facc-4e0e-87d8-c5c98e21f774",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89afea35-cde4-4f88-883c-73ef2f7a5e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e79420f-e63d-40df-b238-20cd9325bb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6726a756-0653-43cf-b08e-9290a2055e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9719e86d-679a-4adc-bf95-3d4fbb377034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f4329b-9e21-4cf8-8443-76240b0e09e6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca8ec0-5c96-4c30-8b41-10b99654622b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93708ffd-57e1-4808-ba0b-72c810250101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c09ab5-f464-45e4-8679-b59fff961d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a204b184-b882-4c96-9dc9-5dbbc6a1c03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1fa439-c30c-4ccd-bed7-fcbd4581ba97",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f75cbb-9712-46c0-a9fc-b466996cd55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2588fb-fcc0-4542-b1a3-22ed4f3ca8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2f3a18-8386-45b8-9505-d379da0b43c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739010cc-4b10-4b89-b7c7-75b2ff832abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ba354-cc57-4c7b-b5db-5341c37e816e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703cd9c0-eaf3-42d0-81c9-1d2642c0c3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066669ce-8a1d-4270-a5a5-50951f62c33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177413e7-98e0-4251-8069-6a8d175804ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c969c268-26a2-4ee9-8d10-8eb956c62d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1947b5-20f1-49cb-94e3-051bcf20793c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b167d78e-d0c5-4660-8369-474395a48955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36497012-888e-45b7-83cd-8b98dd29c8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674009a6-be2f-4e13-9c9f-ad042dd9563f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa1d503-ebc7-44ce-aa71-958219313bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bed904-d69c-4eea-b7f7-ab30ee733ad2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f512c71-7083-4ca4-8247-bb912a5ba7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd01a78f-6ca3-4b43-9c0f-838ba810e809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebac1e91-ba9a-4086-9f64-d230a74f3e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffa42f4-0fda-40ad-aac3-762fd91cdec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79341dc2-31e2-43e0-9fbe-d7a5fb3dfeee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345a5837-41b4-4914-bedb-04dffdcf4ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8783c2a-896e-4fc4-b9c3-e3b25b43820f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d350fec9-1bee-42a2-860c-dde6b11c46ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b08b5df-df30-43cf-891e-b6029ba46f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d716454-3747-47b4-9df0-96e659cef380",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d562755-c7e5-4dec-91cb-3408ce9b387a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b238136-bab2-4a89-8e20-5d8c0e89a0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8018537-ec90-4f0e-854a-a0962bdf7293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b354a492-3b65-4f38-b28a-cb152f0e0303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6efa638-e7d1-4b01-915a-807f3c915863",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce75bb1f-bb3e-4943-96c0-d091d94d8ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2784dd47-6466-4608-9a9f-308a6db84468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc98d3-a48b-4f3a-8cce-a43245044226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343a05ee-c106-48ee-affb-3dc6c26dd536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2a8216-fccc-4ebe-a019-b66e10493fd7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbce2c4-94eb-4722-ac63-a4ff4502ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a00717-47dd-48ad-bd5e-683257b12481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a44702e-3d20-459c-89ee-162e870dad1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906d174b-eaf9-42f0-9e50-ebac768e4c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3762b54-c9e8-45a7-b06c-fc5873847b9f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e5939-4981-4ed2-85d0-e2993b27bda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71188ae3-87cf-44ba-b501-1be8b610c6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be573898-e31e-45e4-b2da-f8f4b900507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccbabb0-e7e9-420a-899f-29661811e15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09313777-375d-4e7b-811b-c6d20651b95f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cba4c27-ad85-468e-884f-c0739452e872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e484469-df68-46f9-b22a-a10a45fbf5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80544e91-2561-43de-a835-fe613f1586b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b80fe5c-f396-469d-ba07-da90b7edb350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d216917-c60a-49fa-a7a0-a494a90521d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c48375-870b-400a-b7ad-83a80fb4d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e61c4d-8717-44b3-b9b0-03e5954c1d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46780342-0a58-426c-891a-307641ab8ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f7d207-a563-4e7f-97ca-a27407d2c9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad72e2-0852-4bad-a964-64549630d3ee",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd997ae4-1d03-4c08-baea-807359bb9ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08714064-c7f5-498d-894c-9773243fee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417f102-0ada-41eb-b652-7ad10510716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3daea5-7a60-4455-8511-0a3f8280860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a08745-b42b-47c7-9a60-93209b96115d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c128b2-ad3f-4e57-90aa-b71d6d8fd506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c419b78-ce60-4700-889f-94b190621495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f4c11e-822f-4fd5-a42b-bffd256f17cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd5dbe1-41b9-4553-b16d-9cb7c67283a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b0b1f0-1e41-4ca6-8f08-edab0ee44e6b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac7522a-058c-409c-aa16-51dd5c67f411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696e70d2-985a-4eaf-a844-ad8c5f53fa60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d166592-7a87-4d89-b7f1-148fef6d1301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e927c43c-ed26-40ed-a166-d894fd6699b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d169788-d386-4643-8525-026a1b1515fe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079e25c8-739e-4381-8cb6-feddedeb43ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc13f80-bb8f-47d3-948d-8969fde6d6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822ffcfb-1c30-44f9-b2bd-a2e86b36b1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a644b2a-ed08-4212-a5dd-a75070819da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f07af-d0db-4309-b38d-8e8cb0f1bfd2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcbbfd7-5f7b-4526-ba7e-f49b37395272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "627f8f3d-e5e1-4ac9-8f01-29cf7432f390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134ac050-f12f-4188-a0e6-2047f57cdcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988210b8-3dc0-40cc-9580-b421272e305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd7169-ab3e-4523-880a-aa191b0d819b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bc4e5-ecc8-49dc-a67b-688b8ba90d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5c2f03-b0b0-49b5-a13d-82d91367128b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54604be-c475-4ecb-ae2f-4185eb553a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f682b21-2d9e-4543-9b25-3769e0ac106e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb62a96-d5ac-465b-9146-b55ae1d640c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9a1551-b39e-4023-9b23-bb7bde27d0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eab7a0c-278e-41a0-ae40-a548c9d6e7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49711de4-d2e3-4bed-a14b-41dac2a7a66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d431e86a-e636-4a8a-9299-34470b1a4444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e381a8-0431-4819-93e2-5d4477037ead",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f690f3b-9521-4429-af2b-66d98ba54f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e2314e-e1d8-4a34-8ea0-b0c0c3516c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c4f79a-2f44-46f1-8f83-ea7094952efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74073e6-19b7-499d-907c-08f534cec8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49d8ab-296c-46ca-b5ef-fd1625747e58",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb71a53-aa7a-4d21-9054-3594e2d7d61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d90447-90d1-4c1e-8342-3d2867b4cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e875191-be94-4ec6-92e7-e3f02eb92118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaeb347-ade3-434d-8493-357bfc58f384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d157100d-03ad-474c-b9b5-ae51e53bdd6c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a5e448-226f-4984-98e8-1d4357842824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed26010b-8285-48a9-a399-50acca0d878d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f871b686-5c74-44fd-8044-4adfbfed559d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6338814-dfcd-4f80-99e2-4e9bcc3877a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f3877-d03f-4a33-b43d-140b04df1453",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9345b97-7521-4fa9-b1ef-56f2ce0b770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e47da-56cd-449e-b7c8-89d92c727ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b23f64-4b8c-4d4d-9de2-ca47a53ba080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2f3965-f349-46e2-ae0c-9eb2e0d035cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07915cda-6483-4255-a243-f9beaece4966",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8040c46-5e79-45cc-a0cd-e30eb7121c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390de42b-67af-4e6d-b213-d74441e709a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73cfa8c-bdda-4021-8ad6-a274e215a1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ae9db2-a01c-4f80-91c0-7a73b04fef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fe8d2a-e575-4b45-8348-db54e4940031",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b1861-9223-4f36-badd-b0938f8ed743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3dce0c-3c70-4aae-a1c1-4a024a694037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8eaa32-0a40-4efc-9d84-ccc40f787582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1b62c9-ec6e-49ee-84fb-137a6f20e409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af96c65-f1ee-4613-ad6a-540f63a3ee2a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd51a633-75cf-429c-ad76-17272501c95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56b46e2-47f7-4b14-860f-4735288ac98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8911911d-129a-422a-9b96-6659ed796b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb4c545-5dcd-4e6c-b924-aaa904611f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec26b12a-b356-4535-bf4b-b1ad471d5627",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d48575f-1423-448e-8a50-b09d63d1567e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf674c7-eca6-4fb4-b8ed-46fa56276d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700e5217-eed5-4cc7-a598-422acc0674db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c464aeaf-fc5e-4e1e-b787-b3acb5daec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbec375-cf01-4aab-9127-6bac833dc95a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80a9c32-36b3-4a4e-9535-f5e8131991e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8b1e94-a65e-4c72-b6d0-d1b69c2ba0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daf5b4b-fb56-4e3b-a239-074b91d7da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738768f3-8ab8-415f-8d4e-54d3680f806b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653ed592-9b4f-4bb3-80b5-357454229b4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d82e199-7fb4-4085-9a50-89c2252099a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a196eb-bbee-48e3-a45f-d8b28d204534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0208bf08-2ba0-4b9d-b489-c09f35aa577c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ccd3a2-72d4-4f18-8084-a5b49aa7a327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc02c607-7861-43d6-aaf4-b4d065332a44",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa75c74b-cfb4-4644-bad7-e23be9978cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974d0538-0dd1-4d45-a884-e1436c990e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d1a809-ec3d-43b3-8af0-ffa9b575f6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0061ed65-f69a-442b-a31c-c742ba470856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7aeee5-d0ba-43b4-a5b2-d83135ebc67f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2ffa2-eacc-461f-a82c-2068d84957f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595f64ed-a328-4550-bd3a-23493ab22f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886ff11-a46f-4387-a224-27bd6e6d51cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818c1089-9887-4737-9acd-c6f236c7b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45c0762-bbd0-4ffc-8531-7c800919b08f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c30e5f-9c7d-4329-a265-a6e0f752d94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cba504-d72a-4217-baba-3cd096494312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14245d3-f32d-4051-af8b-c9693edbd91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54962291-36dc-48e8-b97c-b5c12afd0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb0f0c-01b2-40e0-9c39-3f211e862658",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dc9ba7-fbb7-4cf0-abff-e8a8dd34eb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15e4398-b942-4af0-b727-f5c6a4ab7a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c16867a-0398-4baf-a876-a077b1cbe6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbedcc5-1a0f-40da-a99f-4d1549a6a021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed54b4a-17ba-4957-9568-85b96847c631",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3545a402-f347-4715-adfa-475eff3deea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0be532-e693-4a99-88be-b335b3f3e9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f95eea-3ac0-43d4-9b06-e2d4db182045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22d505f-2d2c-4d14-8360-0faa6b47cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76a26ac-5873-4112-9a49-67b3fda7c69b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469d170d-10b5-4b77-9425-17ecdf7ee958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2bf65a-46bf-4474-bd3d-3996e3cbcc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bef54e-ee75-4d41-9c79-9a3eab875620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dacac6b-6f77-4727-9075-589c104a6443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0181c33-6a9a-4e95-a191-669f60892b17",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bca41c-1498-4c44-9d55-8178392b0cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71410e2-52c6-4cb9-a3bb-be118c09b514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59527e7-d572-4a60-ad93-3e19b7e6eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcea0167-b37d-4b44-8a23-338d13bb8f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99642c45-4011-4e51-9a77-352cbd675d06",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d0577d-fcf8-498f-92c2-d062651a48ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbc028b-f9ea-4559-b7cd-4f6ceb04eebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee996b-ab95-467e-b88b-c7ccc50f5faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8abc46-7b69-4891-9f49-f26264261e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296b528b-57ae-46f9-8890-5ef136ca5f40",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced7c4e-0130-42fe-a574-3ebbf12c1728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fdcb50-4edf-4491-80ee-f00c19cede2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b3e69f-9817-450e-85ee-45e2233c05f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20d0b0b-5d60-48c8-bbdf-b758c0a86f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda6ea7-4103-4289-8b8f-36cc8f61c2b9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9069e1ff-72e8-4494-b7da-f7ab9174cbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d678a88-68c0-4224-9f2c-874f7f731793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed53daec-1d9a-4307-8cb7-42ca080c9b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c585a953-beb4-4563-bccd-50525b0c6737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05abdfed-f617-40dc-9584-90ff026a76b6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e743dd8b-a8f2-4008-8093-b8000a0d627f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c3b76c-00f4-4aa3-9c10-c4a9f9ac7095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cec679b-8332-4909-bb96-2ddd74379e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c10915-a469-410a-90ba-76bacc2df9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe656ff9-0a8e-4c33-aacd-787cd598775b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a379dd85-9f82-47ea-a36a-ac0c234c965e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c8a035-2360-406e-b67b-172828c3f7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c864c-f6f3-4ad0-9fe6-06c14390d674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece8e231-e79b-402c-953d-b48f67157e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98473c97-822d-4ca8-8450-f717bd3e7982",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04443599-87ab-4561-803c-f45bf2605afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854b0111-3a0e-42ed-8653-ce34b279948d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20353bbd-528f-43a8-8c4f-1fdf95bbe0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac64dd6-799f-48d4-97ef-fc5c003de53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6005bb-335f-4c81-b947-01127cc33c5c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e5b38-0788-4f86-ad68-835211f71fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30fa6ba-4bcc-4187-9d34-be923ce265c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e5afae-64f4-4d3f-b12c-123e485665d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbfdcaf-31f9-4d7f-b306-351daf0e93d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88015b8f-a9c2-4209-8ab8-8507c13986a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0884471-a294-469e-94fa-cf83e4a70c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58105d75-533d-406d-a7f3-9ada1a2a3af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fd6e37-ebd7-4a42-9a01-2f719f66d956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c74e14-6083-4a7b-adac-6cd71810b153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a543021-4557-46cb-b182-7951bfa043ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520105e-6e0a-4597-b369-acbbcc908cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4b7d61-4958-41e5-8702-0bf96aa4d13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22978ba2-0383-4094-8bd7-e3a82695fb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db71f502-bfa4-404d-b683-a0dac762ab45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b96ad6-b787-43d2-9eb0-74266e29a953",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cba85f-ccdd-4a8e-88f7-47f8764ae324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c69d86-719e-47ff-8627-003ab7c08060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d8966f-0e48-40f3-a9bf-9bfd51bff383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eeedb9a-d757-492e-9bef-e67854189aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b699f4d5-ea99-4e72-9c3d-5957f70b5ae5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e355e-b0c7-4128-8881-539a9710b145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012d7a95-4494-4606-bda3-f4a6476d5434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e2920d-3aa4-424a-ae89-174e7dcde2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a216254b-4e57-49cd-88b6-03d5799a8a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79e918f-2e5e-463f-9a8f-4950e9271a03",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aee1fe9-ddfc-4618-b804-0e8a1b255b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f14f0a-6ad3-426c-8829-8693ff115a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c17ae5-3e6e-4c47-860c-d2d2ea6f9f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bf7a09-43a2-4ab2-8c47-ded749c8d281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5894dce-c4c4-44f9-b06a-1d977bb69ebd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5fcd23-d2e1-4d13-9bc1-50c8755c0601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9e5a07-a240-4465-9301-d9d97b466b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bcdd62-20d0-4ba8-9a05-74fb44d69ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df383d6-f86e-490c-a068-11fd5f7a1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17669caf-b1c1-49a0-a159-4ed1fd719b6d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb35a4c-4f34-4a04-96a3-745fb80cc4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5f6d3f-50ad-4d03-92dc-b6365a33794d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d7e0c-d64a-4582-a12a-590a3dedda31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27e0238-f388-4505-9e6f-550caa7f45d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf1b240-885f-424b-8b51-3189180b722c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698842cf-460e-4018-9342-56aa80349b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5b7202-c039-47cc-a013-62f135362011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7582f7-b193-428e-a039-88e082b032a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3256a7-c895-48f3-a8f6-8b61f2c89348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33e5dad-e90e-4f4a-a6bf-cc8beb1093d0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08b04bf-6eed-4819-a6e0-d83cb0107abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ee3702-c1ab-445a-aad0-5a1ef725d311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad3a302-d827-4bf6-8a1b-2e1b58c7b68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fa1703-7cfe-49aa-9e1b-cb30cca74206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c30e0-cbb4-43a6-8276-d38c043caa47",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa4c599-04d2-4362-9912-ea870ffd9761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b706c1d-268a-413a-9561-a11a570c5a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa34c708-491e-426e-b966-105770b35474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76184fea-a576-463d-a65c-5b70571d11ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c86bc6a-a6c4-4312-8629-02f04e4e33c1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062fa305-b1f3-429b-b1b8-4e89b3a9eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c9ad20-b1d2-4eb7-9eb7-195cd2100f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3220d2-620b-48f4-b3be-7ebe092f74e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25c62be-5e89-4aff-8320-fc0dafdba7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e143737-8611-4bf6-8333-c0bab77edf58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc601467-0d60-4a7d-886f-a62385d9503f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e426af-0923-4813-ba3f-a5f96a67d994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fea737-9566-4697-9a9f-136627948e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281e0576-ba61-4126-b2b8-55ff5675ba8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aabf3f0-e219-4932-8735-488f1640691b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb320e-ff0a-4339-aa7e-382747b9cfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d215faea-a4b2-4d59-8b67-917c49d1a1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e4bc8a-70f1-49a6-823a-861450ebe95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bfb7bf-3280-450a-b70c-03c5f290fa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff53b43-186c-43cb-b441-f39b48910bf8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4beda-2e0f-4ef9-86c2-d6749dd58742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c05fa8-2b43-4fab-87cd-ab8675f51e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bad918-55b4-4862-9386-f6129404768e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07a4074-1aa2-4a75-9def-0adecc1ae899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47152e34-ed13-4199-ba82-27fbca0a1dba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676a92d-cdb3-42fe-99e3-b55b6b32b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfe45b7-45c5-4bf5-a140-74940514b25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa8537-7687-47b9-b05f-5e505a1c191c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0cd847-8674-4f05-9079-d24952d86982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2893c1-feab-4f24-bd6b-16c464344d3b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b03415-dc61-456e-b490-9e4d73e082e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c9df92-6630-46f3-ad75-4c997a3dd68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aad10b-d244-43b6-82e2-e55d28686ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cbb514-5f45-44a6-a7d8-5c2f352f8e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfcf65d-ae19-4040-b1ba-4af0cae58fcc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829081b3-b5c0-4ef3-98a9-23bf902b05d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6110b76b-d3b7-41e9-84d5-57ab7fd59252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad932eeb-5dab-4dc8-9f7e-27df705258eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145cb6d7-971f-46f5-965b-2cbe8b951767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e26add-f8a3-4e96-b710-8aa932c83056",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20267f63-fe02-4e88-9816-49097e00f66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f714e6-cd56-48e8-a917-690116cbe360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde4e50a-f42a-45e8-883f-d8302c79f637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73107aa6-21d0-428d-86d5-b116ef34672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b234819-78bb-4bf9-b09f-fa76d8e7920c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab266c7f-1ef9-4519-8a44-c924ebcf180e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a679c78-33ca-4c91-bdcd-0e2292aae90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57982d48-5eb7-4254-8e5a-8b47a3b68876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12fa033-a8f6-425e-a09b-f4d8be16c433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2f03f7-ad62-4306-84e9-6a084b6eebd9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b8b71-3213-4b80-a62f-344774814c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab34a696-8d11-4f6b-90d3-840e81cce6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8a7281-ee54-4880-83ad-d1cd1e346484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9471b7-69f1-4fad-aceb-9985b5a32d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e5fd50-c797-45bf-a7b8-cfb3354b8a7e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5414d701-61c9-4d19-808d-874e80a2b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba5ab1f-7dbc-4bf5-96d4-24f17ea45eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df89b9-6849-4cf6-9152-eb56e84d8df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec0b3ce-a514-43a8-a973-591f7f470645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd45837-28bc-46ec-b957-e3c48131e9b8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3bf320-060b-4f80-97b8-19794e23d1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6748d89a-331e-4602-a168-e5ae80264041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a12d7-c3f8-4e94-a37e-f7183c3f812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ccda9-0611-40a3-ae24-c5d0c8c3af78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680f8b5a-e53b-43d3-8b98-b41ff4fbdf13",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3365a356-63f3-4eff-ae9a-f08fb0a338fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f741a94c-b7f1-4681-ba4a-04e0bfb601e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189b45ba-06d9-4bf5-a956-31fc2dd5185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018839a9-d4ee-4bca-aa0c-b7505daf35f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3f83a1-1d5e-466b-835a-ac1f16addbbd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c4fe1b-0746-4eac-ab04-090790f17be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02afd05b-74e2-47d5-97c2-4af024d1eae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a410d1a0-510f-406e-90c1-add55cfb6873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d0a3f6-1170-444f-9d45-fab8b1da24b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e0be9b-103b-4786-9209-93b803b12dc3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e401c1bd-4926-42ad-9c69-c7fd2582f46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9bee90-470b-40b5-b5c2-f6f95ab6e473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8848c0-5de0-429c-b7ec-7ee67b28abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9506c8f0-9620-46ca-96b2-a42420832f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ba7fff-4544-46dd-b5e0-2fd8616669aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c7e525-c6e0-418c-a5e5-17b8cc4dd374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d007495d-9645-42a5-8b88-3b61a1a70f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4109ba3a-9420-4a2a-be4b-3d9fc7198d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea00ab9e-a7ae-4de5-baae-2527f065a072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e975554-c6ec-4da4-b9a5-0329fa0f9846",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d6ab6-65dc-404c-9e32-5fed60c98f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada8e711-9f3e-438c-89d0-9adc1cd1810a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13809e59-1e8d-4165-8f3e-37ca75e877c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa10373b-28b6-447b-b685-95b2e4211247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a541b534-8d09-46f8-be3a-8ddf50d369a3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e2f49-6dd8-43ca-9277-061e3a815419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bd2f4f-acfa-4b81-ba68-e2598177f92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2abc132-8399-4d1b-9b9f-1f66b76acacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06f9fbd-4e6b-4f8d-a14d-6bf97aaac974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8bce10-0ea8-4853-9b73-bba90dbc5d7d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15157be9-959b-4a9d-9532-29f5fe284aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b507e7-5f60-4dbd-83b4-b5484b23a4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050fda5c-6afb-4a10-82c1-d5fd0b6aab76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f912555-8336-4917-a44f-5a0947660d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8bee28-5fb6-4a7e-86d2-f460b9681614",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fabd0a-8ffe-4bdd-8989-8b2a9a05c312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de77e077-5b60-49c6-aa92-942cf9af52ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e275c79-d163-406b-b705-49e6c4d957dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f54ac-8ae5-421b-a0b9-ed6b8fdc52ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce64d49-c047-4084-8510-3ed2c2dd389c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40622c1-1d24-4754-9226-4d679f047fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94fb2c5-e000-40f5-9921-ed90d6ff3a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67e12d3-1c5e-4f31-b6c1-43b0493ed68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a084fd4-02ce-4e43-9737-204c09808c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1537ceeb-6fb9-4739-99f3-7a20263ac5e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750e0205-9207-4b92-b60f-075e64c2585c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f27586-e28d-428f-9023-d629027b5576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0daab-e4fb-4d62-9465-e8238a3bfe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa0b82b-61f8-4209-9818-859c589302ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f484f799-bf91-418d-9447-a9c62055c052",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c2b65d-4447-463a-837d-e65ebeebf64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5306f3-6583-4b6b-85f5-f6f7094b184d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb301eb-67a6-4372-b295-e0339f0e308b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf65ed06-2f30-40bf-9122-b23c0118beca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827b730d-307f-43a1-a43c-a61160b9bd5e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b868706-a45b-4d05-809b-542c2056da4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb4f0ed-eb0d-49b7-af20-17574bbd3874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3dd0c0-d58d-41bd-974b-78afc14c35e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbed68fb-67aa-49f7-a81a-d335e87b259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662a4187-4fdd-4137-a156-f1dc2ba83e6a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9810096c-33b5-40a1-bdbc-242c59ab3dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250a7f3f-ba88-4a65-9e3e-73a89cebe1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea07fc21-baaf-48ed-a3a1-734d0162efcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08887215-c7f5-4bdd-9136-f6585548638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fc1f1b-9133-4d23-ad73-8e435e86694b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2619b029-4801-4602-aaa9-bba3c7555a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256deaeb-2624-4d17-ac97-9d59f285a19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b8d3eb-d0bb-4fe6-9773-3b425f389935",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94fdefa-be86-4604-822d-8b6e15ac125a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3ab78c-ef76-4ee5-9e6c-dbf84d411fe5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61426abd-3153-4395-a7d4-0178bb2c68eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc409b2-2ae6-4264-99e3-5738002b5f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef205df8-e987-4cc6-8252-c76bd8f5a96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b61895c-c7c1-4750-8e46-86382f98c145"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c06af1b-537f-4fe5-8240-f7e74fed0672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f731c0-7c35-41f0-b582-aadebcefdf11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcbdc2d8-de12-4fb0-9d85-d9dea678a0b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2a84217-4d10-43fd-8005-90e060a654a0"
                    }
                  }
                ]
              },
              {
                "id": "a62db919-6f10-4df3-80a4-e49b05946080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3176001e-19e6-47c7-95f4-61c7fa7bb9aa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c291b9c8-7b93-49ff-a24e-995063e88828",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "496af877-113a-4c05-a720-55f6c1e25859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095bf471-2e0e-403b-aeba-95ffe4b25d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d6d45e-78b8-4da0-88de-590f2a1363eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d35767bb-69bd-4d7f-9b78-6b7e71b8f9bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0f02129-dece-492b-bcff-b4e0e22835e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6dc8cce-6354-4aa3-ab16-f0c8bc357ac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "472fa862-d39e-45d7-8fa4-85d2882449d0"
                    }
                  }
                ]
              },
              {
                "id": "1cbc0231-9e5b-40c9-a6e2-33decb9f7da5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9e63dd01-5dc1-4298-b87c-97ecc2cdaebe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c260d6ed-8339-4e40-a510-8e2a028e90c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9f690b7d-f066-4052-b90b-0f51836bb18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9430dbc-11ea-4654-8a27-05ea336bf89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf51d21-0656-46d1-9df3-e43874e9e670"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c463dd30-c92a-454e-af96-b2a2a45123e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30587d22-04ce-4776-a1ce-c966d1ce2224",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a88c2e-7cb8-479e-8796-70a2f9368e47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e8215296-965b-48cb-8c71-9209b85f9c7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2cb201f-638f-48eb-a826-077c819ddc09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc24e5c8-a6e6-4a4c-b041-48d869bccbf7"
                    }
                  }
                ]
              },
              {
                "id": "f544b4f3-f0c4-4384-b47e-dd28f0140cd6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc1e678d-baff-499c-9931-68f821bfdc86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cff1ace0-49da-41aa-a3ec-27ac0fbba9b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0dc405c-fb80-46f9-b44b-2e70e0a27912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86767573-28e1-4c11-8289-46bceaa8c5d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cb456ea-e39b-4296-bf21-c9e0bf8b0a69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "35ac968c-c30b-4a29-9b98-93f181c57adb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ab8f845-acfd-401c-888a-7c50f2420689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "490907d7-ed46-4946-bc06-0ec7284299f6"
            }
          }
        ]
      },
      {
        "id": "7abebe24-6a05-49e8-a445-0ddffe6841ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "74334266-f102-471c-8991-e5ba80e46904",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9a09eb4-460c-4fe3-b45a-aca289a38372",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29d86358-023b-4a15-9f99-9ca175407877",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e509578-207f-46c8-b75d-f43fada5da01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "24944b4c-a6e8-46bb-b021-f494c5ce40d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585fcc97-93c5-45e2-ab5a-a0733b29ea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fd110e2-8af2-4919-9f0b-09246cd5c670"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "381f58d5-6df7-45a1-a72b-b178bb60fb65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0032eead-0e20-4ad5-866e-de20f745c14f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e3e7ca6-7bf8-423e-92fc-4c27f045a838",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c34e102a-ecbe-4cd9-b4cd-7cf9a4572963"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4f2ccb-0de0-4c28-9059-b57fb3015785",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "81551e7f-d768-46ea-b498-f7075e1af4db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc280e6c-8728-4d08-8eb9-ba7863ee2642",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d9c0c7a-8148-49c7-aa03-dbc3737c9842"
            }
          }
        ]
      },
      {
        "id": "48555c34-e558-4157-a9ce-0c4eff0f2b0d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a8f91bb-b63e-48e8-9b2a-85452e33737e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65ded96a-970e-4475-99fd-b77dc5979711",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9cda2f5-c498-438a-a458-5330c309a1c6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d25f5a9-306f-43f6-b9b8-7deb7f481b4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07953bd8-82f6-4d2e-ba12-9b3ff08f6678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11449972-dcd8-4ee0-8547-d34a76eef9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4c888a4-10c2-45e8-8e37-90a32a6fb8b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7e00352-1153-4e5c-a3d0-d6fa83664944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3f57381-7944-4996-bbe0-39d4bfb8656b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e276481d-f178-4c6a-ad18-701aacb3424f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c36ff2c5-b758-4f37-bf5c-8716c5b18ed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e2c9c61-fc77-4bba-b80b-c9ae95620870",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88ba0bcd-2035-4949-b894-19f2dfc7831e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c4a1952-9a61-47a5-bd28-749a0a4cb760",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94656edd-99bc-488a-8ff4-f14a67b887e6"
            }
          }
        ]
      },
      {
        "id": "0e646013-7efc-4fe5-b244-84d28164ed60",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc247f04-33c8-4618-b6e3-65afdfc97b83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b9370d8-af93-4501-a195-33f9895767a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7564557f-eab5-4d55-904f-439f2dc0f101",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1b622d-8d20-4bb6-a9b0-1c325ba91220",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77909f0e-90c6-4315-9e18-9df2da5529b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298ada7b-100c-481a-b3be-0c076d2c6187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40caa7a6-fa47-400a-ada2-f4b12c38ffd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10c1c419-1741-49b3-82b5-b68cc70258bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9ed8fb7-e42e-4867-bac0-79455c4a3f9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a94f5bc-be8b-485e-a408-a7c321fe0e0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c7ae3af-b93c-4001-a851-1f9204473c30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d5bb320-8252-4d21-b8bb-d37902e3b4ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c96d64d-f9a5-456d-853e-c4e6f12855d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f88ee5-425c-4a07-899c-771543a83c12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65cfd80f-7a0a-4f8e-a756-f1abba5ed669"
            }
          }
        ]
      },
      {
        "id": "c121e049-7c4e-428c-a99a-447d32e485de",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92432c7b-5fbc-4cfb-8924-4aeb2c569c88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aa07147-03de-4eb1-86b3-e3226c347b9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e87f9676-eb24-48eb-9c46-ad6e4639fd37",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6a66aa2-ce1e-4b99-b25b-fa361bb2c1a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a0ee448-fd47-42a5-a2db-1db00c8a7ba9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 76.30877192982456,
      "responseMin": 4,
      "responseMax": 7925,
      "responseSd": 533.4041646870687,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711586060537,
      "completed": 1711586091405
    },
    "executions": [
      {
        "id": "cbc3e0ab-973b-420a-8a5a-d13f2d10d563",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab25132b-664a-40ff-8b66-a6d0d426081b",
          "httpRequestId": "9ddccaa4-25d2-4769-aa4d-31b911aba45e"
        },
        "item": {
          "id": "cbc3e0ab-973b-420a-8a5a-d13f2d10d563",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f04de51c-c47f-492f-b5d9-014eee6cba0d",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "1838e14b-a3d0-46e6-8566-43c4975c4018",
        "cursor": {
          "ref": "d5f2a818-fb9d-4826-bbb5-23b00cccdd03",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5fee4d2-b74a-45c5-8230-766ec739b615"
        },
        "item": {
          "id": "1838e14b-a3d0-46e6-8566-43c4975c4018",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b8a58d3b-30ef-4375-8fab-3c348e7dac62",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6a5034ce-0210-4c9c-a84a-6d6e6f835831",
        "cursor": {
          "ref": "573b060e-d4a3-47bb-a832-022a64660d98",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d996a2b8-1a22-4dbf-bbd4-b24917c318e8"
        },
        "item": {
          "id": "6a5034ce-0210-4c9c-a84a-6d6e6f835831",
          "name": "did_json"
        },
        "response": {
          "id": "9b8eb49e-afc4-44a2-87ca-08dc4aef9649",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eeae23-1eae-4c5a-adfd-8755ecbc2ea6",
        "cursor": {
          "ref": "15d1c545-d161-4c53-b547-9b9e8b9e7737",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4189323d-2992-44da-be7f-0630a8f3cffa"
        },
        "item": {
          "id": "c8eeae23-1eae-4c5a-adfd-8755ecbc2ea6",
          "name": "did:invalid"
        },
        "response": {
          "id": "00512169-39ca-48f6-8697-e213e08e3402",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8eeae23-1eae-4c5a-adfd-8755ecbc2ea6",
        "cursor": {
          "ref": "15d1c545-d161-4c53-b547-9b9e8b9e7737",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4189323d-2992-44da-be7f-0630a8f3cffa"
        },
        "item": {
          "id": "c8eeae23-1eae-4c5a-adfd-8755ecbc2ea6",
          "name": "did:invalid"
        },
        "response": {
          "id": "00512169-39ca-48f6-8697-e213e08e3402",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177ea7d8-5fd2-452f-9653-ce9bc3db7184",
        "cursor": {
          "ref": "5c6e382b-e453-4205-ba8f-7b107bc237a8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "993b59e4-5b73-4e10-a41f-27303432f550"
        },
        "item": {
          "id": "177ea7d8-5fd2-452f-9653-ce9bc3db7184",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f284b6f0-d840-4629-a76c-039803dcbbb3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b219c5-79cd-4507-8184-2f865c4b8023",
        "cursor": {
          "ref": "9565034a-8b3b-4ea2-8731-85672a2dd527",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8f0be565-8243-40ac-a3bc-8bfe7d335a00"
        },
        "item": {
          "id": "56b219c5-79cd-4507-8184-2f865c4b8023",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5a7c9530-6b88-4de0-9a91-50c01850bd11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11347c6-7b73-4465-9bda-ab3f850bf6ea",
        "cursor": {
          "ref": "20de805e-690f-4642-a157-538f9257e958",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a61d9630-d147-4777-9295-2669126c58d0"
        },
        "item": {
          "id": "d11347c6-7b73-4465-9bda-ab3f850bf6ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "00843602-17ce-4fae-aa9a-bfd057273daf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e707d8-342e-4c86-8ef4-45e9d9d4917b",
        "cursor": {
          "ref": "6ae6a2da-6c68-488b-8ff5-e7975d4319fe",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3309d53d-4706-4feb-8893-9a7ad8a2849f"
        },
        "item": {
          "id": "49e707d8-342e-4c86-8ef4-45e9d9d4917b",
          "name": "identifiers"
        },
        "response": {
          "id": "2e528a73-6d31-4d07-af78-2878aa65a261",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbd5e8e-38d7-4b6b-92f0-bcf035841e9b",
        "cursor": {
          "ref": "bdc96f9e-ab9d-41e5-baaa-c24f6e432853",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70cd0b6f-a374-4f87-a5bf-2a4add86ef4d"
        },
        "item": {
          "id": "9cbd5e8e-38d7-4b6b-92f0-bcf035841e9b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c2b9b32-b8d8-4115-8c58-24843544e156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228d5fe7-3a17-44d4-bc29-1c5fd786f7b4",
        "cursor": {
          "ref": "2238f84f-d50c-4ccc-93f4-2bb5e6039e18",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fea7bbe3-5a0b-444e-8f96-77fd84db4634"
        },
        "item": {
          "id": "228d5fe7-3a17-44d4-bc29-1c5fd786f7b4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "06732ca9-84c7-4660-b161-d202b2af10e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a1ae3-d71e-4410-86bd-0e3ea8c7ae52",
        "cursor": {
          "ref": "a392463b-77be-4ec9-b766-eb1485156d81",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d244cee5-9943-4c41-9b0d-7c1552d2a49e"
        },
        "item": {
          "id": "1e1a1ae3-d71e-4410-86bd-0e3ea8c7ae52",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c71092f3-f094-4c2f-bd02-57a1f3ce9f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bf260c-4748-4225-9838-05fd49108458",
        "cursor": {
          "ref": "cb84260c-0303-4615-b62a-a5d793874781",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5717c372-f691-4ee2-b065-9254612829b9"
        },
        "item": {
          "id": "95bf260c-4748-4225-9838-05fd49108458",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0374e0c-fd90-4574-b685-193636091a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21bc979-6b1c-4627-a4d0-85c0beed3062",
        "cursor": {
          "ref": "6b0bb383-d26a-4a6f-8c46-1f55f2221664",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dd104f79-0f43-42c5-8f51-69789288c0d6"
        },
        "item": {
          "id": "b21bc979-6b1c-4627-a4d0-85c0beed3062",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b24f96d2-04dd-4b18-ae6f-1ee00e9c8fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551f72be-2671-4fe0-8166-fc87ddccc37a",
        "cursor": {
          "ref": "0b05fc65-da39-45e5-b3a3-7005f2397a19",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f09d8a31-9bb6-45ea-af06-13860dd51816"
        },
        "item": {
          "id": "551f72be-2671-4fe0-8166-fc87ddccc37a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "caadf2e9-9a17-4d46-b83e-a58986d0f7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5947b5bf-dea4-4fd2-91d0-0ae90f1b1b53",
        "cursor": {
          "ref": "e70f8a2b-d0be-41e8-a12b-f46e1a881f8d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa3adc10-5d68-46f8-b141-d51bc86801f6"
        },
        "item": {
          "id": "5947b5bf-dea4-4fd2-91d0-0ae90f1b1b53",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f47a0d2a-56bc-40c1-bfd2-685af0c82573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03b1925-f596-4132-9aea-4655495d4a75",
        "cursor": {
          "ref": "41c6555b-5b61-414d-8245-9545b7da355c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "09917d71-c58b-4167-a139-edf5097ab758"
        },
        "item": {
          "id": "f03b1925-f596-4132-9aea-4655495d4a75",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a01f460-a697-4652-8d91-43ddd01818cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdff426-3744-4f8c-9e4b-3d0957b725fe",
        "cursor": {
          "ref": "760f0255-fbc0-4157-8e7f-3486aad10b94",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0d24eb4-07ef-4000-b0a8-21ffcf5093ca"
        },
        "item": {
          "id": "fbdff426-3744-4f8c-9e4b-3d0957b725fe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cbcd41a7-36d1-4329-8344-b648db79607b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf91384-78f4-447e-9085-c579c49d15e7",
        "cursor": {
          "ref": "bd5b2ddb-de9c-4d9d-a9c8-ba6452127bc8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7e0587f-5408-42ea-b5e3-3b7b14f0c24a"
        },
        "item": {
          "id": "eaf91384-78f4-447e-9085-c579c49d15e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "59d81a94-4376-43bb-8c2b-2bb3ebf69565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5d2e26-2c34-42e9-850a-624cd827b832",
        "cursor": {
          "ref": "ea097927-a14a-44b9-a963-236053c456e2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "96d39f23-927a-4df0-a201-436f1380ea19"
        },
        "item": {
          "id": "9d5d2e26-2c34-42e9-850a-624cd827b832",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2c43d648-5c27-4b5f-88db-193b9c187b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44e385-8c33-4e5c-a530-4b55da9d743c",
        "cursor": {
          "ref": "496d9f77-6000-4244-b0b2-357469204f9c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "13ebeb5d-1280-4e3b-99b6-ebfe0d8328da"
        },
        "item": {
          "id": "2a44e385-8c33-4e5c-a530-4b55da9d743c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8649272a-f26d-4723-a9d0-99c0be903519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ba5ba-ee11-4017-a0bf-df7265e3a24d",
        "cursor": {
          "ref": "4de57147-db04-458d-bef2-7fe4073422b7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "257ea02e-1030-401d-beb1-5cb3bf4381b8"
        },
        "item": {
          "id": "705ba5ba-ee11-4017-a0bf-df7265e3a24d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "31fd7abe-97c2-458b-9a3d-841da328e14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc178aa-ff59-4ceb-9a9c-f928268d1fef",
        "cursor": {
          "ref": "bc189765-9643-4d80-9130-ecc46fca4712",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb96ff5f-b585-4d7d-a602-c605ef9a428c"
        },
        "item": {
          "id": "ffc178aa-ff59-4ceb-9a9c-f928268d1fef",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "77eed89a-9bab-4a3b-8937-3184082b5a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b7112-280f-4f57-817b-dde2f0dd355a",
        "cursor": {
          "ref": "cbf36a8b-3b45-4118-b310-0f272ef04bd2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3980b0e-112b-4084-a0d1-10b4dce9e976"
        },
        "item": {
          "id": "595b7112-280f-4f57-817b-dde2f0dd355a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9f5f927c-df41-493f-8084-009e146b89be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ecb064-deae-4092-b926-838d48538b0b",
        "cursor": {
          "ref": "ece768cd-eac7-4009-b21f-7bee13af5c91",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64d05bc2-162b-44c1-b0fe-72c984197f62"
        },
        "item": {
          "id": "79ecb064-deae-4092-b926-838d48538b0b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2baba74a-707e-4218-91ba-703928bfa398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712dc4e4-bd0f-4422-98a9-f47ab3e97309",
        "cursor": {
          "ref": "923dfce8-bf2c-4c6d-8f49-38b1e0b7f0ee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e307500d-4034-482f-8323-a0808f21ca4c"
        },
        "item": {
          "id": "712dc4e4-bd0f-4422-98a9-f47ab3e97309",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f553813-ad7a-46e0-8cfd-854cb5b3532d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a87dec1-3afb-41c5-b155-d68c45547c75",
        "cursor": {
          "ref": "da6eff7b-dbd9-4ad5-9043-73570dd3257e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "10a92512-a82f-4b0e-b9fe-a01a6fcb6bfe"
        },
        "item": {
          "id": "3a87dec1-3afb-41c5-b155-d68c45547c75",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2605f1b7-97a6-4f6a-b5fc-4444163f093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a328d83-034c-47cc-b35d-3bf755f616d0",
        "cursor": {
          "ref": "1524582c-450a-4058-974f-1185432f09a4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "230cab5f-e969-4211-bc73-2809c3a582b7"
        },
        "item": {
          "id": "4a328d83-034c-47cc-b35d-3bf755f616d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fe3673a8-36da-41dc-9bf9-60561e06b3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dfdb8b-cc7a-4b60-a8dd-962646016e31",
        "cursor": {
          "ref": "ddca491b-06d1-4315-ad7b-a34c1f0dfa18",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "93a94d81-b67e-4a69-9967-3757ea95eab1"
        },
        "item": {
          "id": "78dfdb8b-cc7a-4b60-a8dd-962646016e31",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "53d611e9-a3e1-44c4-a659-4ccaecc43d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad69091-5897-4eae-ac78-88e7a957f0e1",
        "cursor": {
          "ref": "0f51111b-6c3e-43cb-bda6-265524dedc1a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b5ca8e43-b23e-49c5-a103-de1119584209"
        },
        "item": {
          "id": "2ad69091-5897-4eae-ac78-88e7a957f0e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "457335a9-2f97-43bd-bfa9-238d6b927456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b26308-91c1-4aea-a755-2e96faa346f0",
        "cursor": {
          "ref": "f391a000-5f29-48ba-90d9-deb330f4cef7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d5f6bc79-1d60-422c-9a4b-180b3ce5d5e5"
        },
        "item": {
          "id": "a2b26308-91c1-4aea-a755-2e96faa346f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3833dc6d-4410-4059-a565-959fb96943f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4369890-4167-4c3d-a8e4-3c928e4de137",
        "cursor": {
          "ref": "8aef7d1b-04b3-4131-bcb3-6dab453becc3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b3439ec2-3210-4a3e-9d50-0ca36456224d"
        },
        "item": {
          "id": "f4369890-4167-4c3d-a8e4-3c928e4de137",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "28b0df87-33cb-48d8-a1b4-3c0a0601e679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2babedf6-79ce-469d-b277-561f7d15a611",
        "cursor": {
          "ref": "c13aa5f4-2b96-470a-a200-7c5546bfa94b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "126f5609-d5d2-43a7-bc9e-819039469ec1"
        },
        "item": {
          "id": "2babedf6-79ce-469d-b277-561f7d15a611",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4e08cf39-9cb3-43ac-848a-0403ccd6acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd1e008-dc66-4075-a0fa-fef2f777efd0",
        "cursor": {
          "ref": "0fcaafbd-8930-4bdd-b785-98203890cdd4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "909a26f0-06ea-4427-bbc2-c05dabb10409"
        },
        "item": {
          "id": "fbd1e008-dc66-4075-a0fa-fef2f777efd0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5788ee1-8276-4647-80d9-3ce95c61fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9be5c9-8916-4602-8f31-3b2d85d5c926",
        "cursor": {
          "ref": "5fa7902b-a593-4e8b-8779-c408abec3e27",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7460f479-581c-4295-bf73-776c3f0ab3cf"
        },
        "item": {
          "id": "ed9be5c9-8916-4602-8f31-3b2d85d5c926",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "78dc01ab-7a59-4dca-b3db-90d28449ff8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e65d3d4-ef22-434f-851a-4da66565789d",
        "cursor": {
          "ref": "18c4cefa-ddaa-404e-9fb6-a7f01bc2fc1f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "36d55775-8acd-438a-9918-9f5abdf78032"
        },
        "item": {
          "id": "9e65d3d4-ef22-434f-851a-4da66565789d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b3c6d6a0-92a6-4ce9-869f-9f88e45fc4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62139712-881f-4d4d-82c3-892175827337",
        "cursor": {
          "ref": "150adb69-3fb3-4e05-9dc9-61e135d7e9f5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1a17bf70-a628-4968-8575-70036ede23f9"
        },
        "item": {
          "id": "62139712-881f-4d4d-82c3-892175827337",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cdb3026a-a2cd-4da2-8768-e92ba48e5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7ec330-a65e-4790-8065-51e518ccf689",
        "cursor": {
          "ref": "dedaa274-df9e-48b3-bec5-7cbd0361cf1f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "824f6151-9c5d-4dde-91fc-eee9c6bed2bb"
        },
        "item": {
          "id": "5c7ec330-a65e-4790-8065-51e518ccf689",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e1a57ed0-71a2-400a-a135-b4903c413578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c067b0-a4a8-4475-9c15-118935c3166e",
        "cursor": {
          "ref": "faaf1d41-f03e-4c6d-8a76-22889c566e13",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "99b78cbf-be98-4098-8699-e8c71de7cfaf"
        },
        "item": {
          "id": "01c067b0-a4a8-4475-9c15-118935c3166e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d35faaed-2362-4476-9426-fb1c88a44831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974eb075-a9d3-414e-a442-81e36150d5a5",
        "cursor": {
          "ref": "da3f30e0-c012-4cac-86ad-555fcc010344",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "341125e1-4c46-4c8e-98a9-dd224213909c"
        },
        "item": {
          "id": "974eb075-a9d3-414e-a442-81e36150d5a5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a603e3a6-88fb-4c58-8579-75f1b2d68dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767cd232-73f5-404c-96b6-7880fa88cca4",
        "cursor": {
          "ref": "7ccc4022-2607-4a2d-a319-6b45d696cbd5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "733dd188-3517-4ab1-832a-e4dc8727df37"
        },
        "item": {
          "id": "767cd232-73f5-404c-96b6-7880fa88cca4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "521bfda5-1da6-4704-9a45-9a74c3715c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef40241-43b3-4e73-8f5b-0db5af4d4ce2",
        "cursor": {
          "ref": "689a9c2c-890c-40c9-ae4a-65c9d65c2b02",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41edad6e-397f-4e96-9dcf-45ff73369693"
        },
        "item": {
          "id": "0ef40241-43b3-4e73-8f5b-0db5af4d4ce2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1a5978a-c4ac-48cb-a05f-387dd967905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c980ed-ecff-42ef-a48a-89c1e7f3ee9c",
        "cursor": {
          "ref": "56aa1054-37e2-4cab-a3a6-9f4273ac688e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2bb5471a-54bb-4596-88a0-ef33bccf3228"
        },
        "item": {
          "id": "a5c980ed-ecff-42ef-a48a-89c1e7f3ee9c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "170cc584-6903-4b4b-b83a-27f71e5f8ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7390d-1ef0-4d71-a7fd-68588673b50a",
        "cursor": {
          "ref": "f9f3245a-1430-4ac6-9f7f-d7a3e6c83a9d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a4c436e-ad58-4377-b441-473ad645e1eb"
        },
        "item": {
          "id": "7eb7390d-1ef0-4d71-a7fd-68588673b50a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "491e59e5-34ee-4b60-97ab-96e50840e54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ae3e6a-b8c8-4f35-be15-0185d4dba750",
        "cursor": {
          "ref": "ab6df9ba-6fbf-47e2-bd2c-a7f2208f9b1f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cece0776-0e20-441a-8c81-9210c74a6cbf"
        },
        "item": {
          "id": "54ae3e6a-b8c8-4f35-be15-0185d4dba750",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e486fc1c-0a43-4c09-910b-3c48a895b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c78f4-0a29-4b11-8122-aee262b168ab",
        "cursor": {
          "ref": "df668f08-5128-4462-8fb6-4435b8696dba",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "99fb88e6-d711-4559-8fda-9af4d53be895"
        },
        "item": {
          "id": "0f0c78f4-0a29-4b11-8122-aee262b168ab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "25fe8691-c135-49df-b7ec-6978d6767b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd89f0e-5888-4e2d-b52f-d1c36078f329",
        "cursor": {
          "ref": "6be2e7b3-60a6-4c72-92c7-e2c8f25c86f2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8053d538-4976-4a6e-8b73-1a0e82086768"
        },
        "item": {
          "id": "2dd89f0e-5888-4e2d-b52f-d1c36078f329",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "62c04cb6-2612-4172-a7eb-9cfc61d77775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1cd70-4fb1-4a40-946b-199ac8eada6d",
        "cursor": {
          "ref": "c3bfbb9b-39f0-4d23-bf9c-c07b30369fda",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5063e710-3b6e-43f1-918d-442242f65eed"
        },
        "item": {
          "id": "d3f1cd70-4fb1-4a40-946b-199ac8eada6d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1a239511-774b-403a-ab1f-9dea8d5e631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c38fe-012b-498f-b93b-bd9d39345285",
        "cursor": {
          "ref": "ce8921bb-e94d-4574-ac2c-eec03ea002ea",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7cddd687-db44-472d-ace7-3ea1eb39a4fa"
        },
        "item": {
          "id": "e19c38fe-012b-498f-b93b-bd9d39345285",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eb6759ef-4505-4eab-9834-4a8c23de7b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8af3c3-b513-495d-a068-250818112cfc",
        "cursor": {
          "ref": "6f0176d7-4f5d-4a97-aa1b-3dc2f9d682ba",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "527711f9-a9ab-4999-b8f5-adc8d3311155"
        },
        "item": {
          "id": "0e8af3c3-b513-495d-a068-250818112cfc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e61fc2e5-abb6-4ba8-8daf-3b27250a5d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73be5b4-c182-4af1-abdc-cbdf55203d76",
        "cursor": {
          "ref": "a2109451-d6f1-416b-bf98-eb0659c734de",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e67d040e-88f2-4e19-b945-be49c874cf9f"
        },
        "item": {
          "id": "e73be5b4-c182-4af1-abdc-cbdf55203d76",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "04c7e03a-6af9-46c4-9558-5a5a7e5c3308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab376d-a1e3-496a-9b82-8937adf94e9f",
        "cursor": {
          "ref": "f106cea5-a93d-487e-8385-a1dd7f191978",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ad874585-b27d-42a8-adaf-e3510e8ec1c6"
        },
        "item": {
          "id": "f8ab376d-a1e3-496a-9b82-8937adf94e9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8f9bb8b2-f083-4f74-aab3-1565da28703a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76b3d5e-15e2-4ab0-8748-c1f25f968b7b",
        "cursor": {
          "ref": "a0671e7a-8c6b-4a0d-8c50-09fb29cd8f9b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "49c06ec0-082a-46b5-bba6-7128997f5ed3"
        },
        "item": {
          "id": "a76b3d5e-15e2-4ab0-8748-c1f25f968b7b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d605e974-19b4-4810-9a41-53a336c5b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba806424-12dd-44db-900f-abb0b4a915cd",
        "cursor": {
          "ref": "fda9eba7-36a1-4f9c-9eab-7b3e7b0881c2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8c86776f-d5f2-49ec-9a6a-364fc33cd3cc"
        },
        "item": {
          "id": "ba806424-12dd-44db-900f-abb0b4a915cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28d8968a-e2fb-4a72-94ec-7b9b2e069a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c518599-c6c7-4544-82e1-07a536623ed5",
        "cursor": {
          "ref": "d2f0de2c-f2df-43ec-83f7-4faa6af06892",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a2094d4-ef2f-4755-a244-e0f85415de9f"
        },
        "item": {
          "id": "4c518599-c6c7-4544-82e1-07a536623ed5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "93fc3baf-3410-498a-a750-488e23702133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bf9735-80c4-4fba-b7c0-da29d9d3794c",
        "cursor": {
          "ref": "679f0e4f-7abe-4308-b20d-0553c7a38da0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "528bce3a-9f5a-4683-a6a3-8b5fb7f64b1b"
        },
        "item": {
          "id": "90bf9735-80c4-4fba-b7c0-da29d9d3794c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a86f8db6-f06b-4571-a5e5-adfc5dcbef5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd22d47-3916-4f68-8909-7090201a60fa",
        "cursor": {
          "ref": "d313b91a-0b97-4b54-8555-d3f690ffa49b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65f6ec4c-da20-48fa-8a49-83167f30792a"
        },
        "item": {
          "id": "6cd22d47-3916-4f68-8909-7090201a60fa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7e603265-3a02-45b6-aebb-2222a5ab879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c2effa-85a1-4011-b454-04c925c42d27",
        "cursor": {
          "ref": "cc1a0bea-2533-44e3-9080-bade2554996a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8611997e-67e7-453f-9392-3721db47e2ca"
        },
        "item": {
          "id": "f4c2effa-85a1-4011-b454-04c925c42d27",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f67c765-61fe-4e16-95fa-a9c86dd8bb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79436d39-833f-4172-8176-5aa6c513c669",
        "cursor": {
          "ref": "8f171da4-277c-4e0d-ab2c-2fe90b81b11a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea06adfe-a6b4-40ff-8299-b531aacbcf0a"
        },
        "item": {
          "id": "79436d39-833f-4172-8176-5aa6c513c669",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "019b2359-4e39-496b-b4ff-036d1331fc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbdcaaa-dca2-4a6e-8ed9-d32c191d1794",
        "cursor": {
          "ref": "18ad4806-f1fe-41e3-8479-f439f16197c9",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4abd3ccb-6b0b-44dd-bce5-821b4a295759"
        },
        "item": {
          "id": "fdbdcaaa-dca2-4a6e-8ed9-d32c191d1794",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ee135df1-ca6b-42b3-b97c-74c3ad8f24e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f77279c-b35a-4d6e-9967-dfc88381e633",
        "cursor": {
          "ref": "19826d0a-0b7c-4f4a-88b1-1d751411895a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b1bd5e3c-d879-488d-a6ff-4c43f0d853bb"
        },
        "item": {
          "id": "5f77279c-b35a-4d6e-9967-dfc88381e633",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "76d08f0b-cdfe-4193-93bc-fe7769dc906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd47af39-f8c4-40cf-a277-820600ff015e",
        "cursor": {
          "ref": "46bf21e3-c77b-4805-8279-ce2b10d2b049",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "afbfb1cb-8891-47d1-8f91-380f8cc5c62b"
        },
        "item": {
          "id": "dd47af39-f8c4-40cf-a277-820600ff015e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c3e5d7b5-e05e-4cca-b2e3-11f84c582d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2b722-c17c-44fc-a4ac-08855834b77d",
        "cursor": {
          "ref": "2ec5197d-2549-4d1f-98b9-0960aff2e763",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0216fa0a-4853-4966-bc40-5d658370357b"
        },
        "item": {
          "id": "33a2b722-c17c-44fc-a4ac-08855834b77d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bff5baef-476d-4a57-8d6f-ae6dcd8aea8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65931c62-52c9-4937-93bc-5a8147c7f039",
        "cursor": {
          "ref": "be7e28bf-8e24-4ba4-a536-955b8808e9f2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1e0d469-4b51-4ea4-9303-a02171b4b3d1"
        },
        "item": {
          "id": "65931c62-52c9-4937-93bc-5a8147c7f039",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a5d2b637-a7e9-4b42-bf42-be09da1bd828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c62aa8a-fe22-4c50-9c52-687d811216e1",
        "cursor": {
          "ref": "bf631b68-c644-4418-a55d-18decbeaeabb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "047b0ed2-0b4f-4fe2-a082-5db2230675fc"
        },
        "item": {
          "id": "3c62aa8a-fe22-4c50-9c52-687d811216e1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fde8ecd6-67e3-40cb-bd05-ab181898c4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1364ab-b64c-44cb-bfa0-10af9e4f94f4",
        "cursor": {
          "ref": "9c4e2414-f26e-462d-8427-1d8be6ef51d6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "151076d4-bbca-4f88-9675-04c5f7686d06"
        },
        "item": {
          "id": "ce1364ab-b64c-44cb-bfa0-10af9e4f94f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7d0be400-1a99-4800-b553-948fbcc99f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d127ad00-ef5f-4589-8a79-93efd31a687e",
        "cursor": {
          "ref": "2d34ffdd-f07b-4bd5-acbe-d0ca4ab677aa",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "21dc37f7-4107-44b5-a78b-8c3c6fef6ce4"
        },
        "item": {
          "id": "d127ad00-ef5f-4589-8a79-93efd31a687e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1d43be7-76b4-47ec-bd20-550d1e5b9e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b692752d-04db-42dd-96a1-f12897673252",
        "cursor": {
          "ref": "b285ba5b-b29b-4595-92dc-8455b74c8b9f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1be10e0f-9ee1-467a-a31a-8966ff5d1b4e"
        },
        "item": {
          "id": "b692752d-04db-42dd-96a1-f12897673252",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0a2daa3f-664c-454c-861f-1291d04f0e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260d3d3b-8c08-4d25-81a3-84bc6a8c238e",
        "cursor": {
          "ref": "9c8eff0f-d9b3-4214-8497-5198a2b85f15",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1293bbec-fccc-4ca0-a042-3984ed2a8814"
        },
        "item": {
          "id": "260d3d3b-8c08-4d25-81a3-84bc6a8c238e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9c059d4e-054b-4141-a847-c1c8b9f6335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf6b3ca-a2d8-4073-a954-ff68f3302d42",
        "cursor": {
          "ref": "1b2c19ef-40d9-435f-bba4-2d3697c14ac5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0cbe432a-275f-4285-b0a5-80c0d777e25f"
        },
        "item": {
          "id": "aaf6b3ca-a2d8-4073-a954-ff68f3302d42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6d7e159c-31c1-420d-b5b6-fe22aad63019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86e614-2e09-4a77-b089-d54ede625d4c",
        "cursor": {
          "ref": "bf121257-46f3-4fb3-a412-a22298e93d4d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c0103465-86a8-4763-80c6-e2434efebff6"
        },
        "item": {
          "id": "5c86e614-2e09-4a77-b089-d54ede625d4c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af243387-5dd2-4958-a8b4-f49fc1c3db4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc04a6b-36d9-48de-8266-e942f7c7be4e",
        "cursor": {
          "ref": "02152c49-a731-4ba5-9851-64b7475f119e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b2c327e-499f-4c23-812c-e2c3a89c089e"
        },
        "item": {
          "id": "fdc04a6b-36d9-48de-8266-e942f7c7be4e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd2a6285-e0b6-477f-8b3f-74d26eca74c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a3330-279b-457c-b548-4c41a073388b",
        "cursor": {
          "ref": "e754bb40-4722-4b14-b720-54b193348650",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1246ad39-8bd7-46d2-97da-40bc5ba2127d"
        },
        "item": {
          "id": "649a3330-279b-457c-b548-4c41a073388b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d418fc55-65b3-48fb-b6fb-f9da84ecdaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0b4a76-62bf-4b2d-aa22-6ec22e8f3eea",
        "cursor": {
          "ref": "0cc6cbf1-f223-484a-8334-ccd4a9c7f26d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eab5145e-eead-4b97-bcd6-40abfcac72cf"
        },
        "item": {
          "id": "4c0b4a76-62bf-4b2d-aa22-6ec22e8f3eea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9276f4d2-21d8-488f-87c3-c8993bf00bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417e5fe8-ae37-4dd3-a25c-d12de3b8324c",
        "cursor": {
          "ref": "02ff98c7-fba6-4de8-ac4b-c210bca3ec2d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5b0de737-e497-4c83-afe8-46633a037fda"
        },
        "item": {
          "id": "417e5fe8-ae37-4dd3-a25c-d12de3b8324c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ac275694-0118-434a-8d9a-b8d18c2ac527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f5860-842a-4372-bc4c-ce5dae8814b2",
        "cursor": {
          "ref": "80d0e776-38dd-4371-bb46-e67f54ed0e31",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e01d8eea-e23f-49e5-86dd-a29c273675fd"
        },
        "item": {
          "id": "109f5860-842a-4372-bc4c-ce5dae8814b2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5a768306-f238-44c8-910f-9627d2ef52ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09096281-2a8b-4d89-8a5a-c8a77a1f6661",
        "cursor": {
          "ref": "382911e1-4eef-4417-83dd-63857fb10229",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "553cecdf-9160-4b2c-aef9-41c06cca9f00"
        },
        "item": {
          "id": "09096281-2a8b-4d89-8a5a-c8a77a1f6661",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "53e0d158-02eb-4845-8625-4197b803ef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae5e3f-b5d7-4fa1-8af4-d80b0af26d8d",
        "cursor": {
          "ref": "7c420598-f8e3-4642-ac68-1a663990613f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "04343133-6038-4461-9a37-1d68c9d352d8"
        },
        "item": {
          "id": "82ae5e3f-b5d7-4fa1-8af4-d80b0af26d8d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1960479b-3af9-4050-834e-6ec5a02a516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abf949d-48fe-4e7a-bc18-0cbc96f2aeda",
        "cursor": {
          "ref": "49b0df15-ae04-4d82-9151-f0d2868c7776",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7054eb5c-1bb7-45a4-b20b-f4dac7158d2d"
        },
        "item": {
          "id": "2abf949d-48fe-4e7a-bc18-0cbc96f2aeda",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ce39c3bb-8206-4f51-b379-6852e6fa5f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2fe83d-9a53-4027-86fa-f9f84b5ba5ea",
        "cursor": {
          "ref": "9a27c552-8423-4106-8aba-a65b05ee456b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "39948b52-9119-4ddc-b513-11f8098f9c3d"
        },
        "item": {
          "id": "4c2fe83d-9a53-4027-86fa-f9f84b5ba5ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b2f34556-a16e-4b01-b77c-d2df9ef6fa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ca24bd-be7c-4ba6-b7fe-287ba8ecedf6",
        "cursor": {
          "ref": "0097af9d-b616-4e84-940b-d503c016f718",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "761372c6-412e-4683-951c-18260e332b6a"
        },
        "item": {
          "id": "a4ca24bd-be7c-4ba6-b7fe-287ba8ecedf6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3731e48d-a8a7-4c2d-891c-9563e9f0c9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c32ad53-dc48-45e5-a89c-f827416c05cf",
        "cursor": {
          "ref": "ba762e0c-12b6-4c03-8379-8e7561eebd6f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "79f14095-18cc-4b80-b3dc-f8a0c2b2f8ea"
        },
        "item": {
          "id": "4c32ad53-dc48-45e5-a89c-f827416c05cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f7df47e-ed57-4b31-ae6f-ff34d354dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f271d18a-450b-431d-89cc-ce42f6903010",
        "cursor": {
          "ref": "5aedc4eb-901d-4f31-b8c7-a0a2f6a28ea0",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5f0ac7b-ab25-45c4-8a53-39f689c27bde"
        },
        "item": {
          "id": "f271d18a-450b-431d-89cc-ce42f6903010",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0aa92e6-edd7-4b8b-a0fc-06d01b346db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ac7eb1-ce97-4d0d-945e-c53719eefc74",
        "cursor": {
          "ref": "70a622e1-bb54-4496-bc51-66d35f08d49e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4f6dab8-7902-4200-b915-94049fad879e"
        },
        "item": {
          "id": "79ac7eb1-ce97-4d0d-945e-c53719eefc74",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "17bb6938-8ccb-4afd-a5c3-23b27c261453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d307bdb-45d9-4a1c-b9fc-fa502e921437",
        "cursor": {
          "ref": "a61902ac-98e8-4de9-8f2c-24baaeeb6666",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f8c3b630-4d50-4c4d-9ab3-f988ad4e0050"
        },
        "item": {
          "id": "9d307bdb-45d9-4a1c-b9fc-fa502e921437",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "11dfbe20-9965-4f0f-866a-4d7ed29533f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c29992-22a1-427a-93fc-e88655fe0ae9",
        "cursor": {
          "ref": "77b2979a-378c-4237-8544-224e962c7810",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff93e705-1a7d-4423-a2f3-94bbb64bf5c8"
        },
        "item": {
          "id": "a8c29992-22a1-427a-93fc-e88655fe0ae9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f16210ba-9b83-4289-93e8-8c3de565c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2ac1da-64ac-4723-8859-bafe4cf0a084",
        "cursor": {
          "ref": "022e364b-ef45-4cca-9357-932d43316f1a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c23647d-f779-4073-978c-9dbb7f888cb7"
        },
        "item": {
          "id": "ed2ac1da-64ac-4723-8859-bafe4cf0a084",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de5a8f1a-6b0d-46b0-aa28-89b3a14f6b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438184ef-76ad-498d-81fe-71cb3d12c644",
        "cursor": {
          "ref": "04cadfad-c3c7-4513-bf46-ff001f931e7e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ffbffd13-12a1-4df6-ac83-dbb22dc86cb1"
        },
        "item": {
          "id": "438184ef-76ad-498d-81fe-71cb3d12c644",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2b09ec2b-a5ab-40a4-a18d-5291af37b084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca72b3b-6c1f-4129-a903-1bb8294326ca",
        "cursor": {
          "ref": "85e5d16d-0832-4997-b278-cdafe5aeb113",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a4912bea-5890-4b7e-8a3d-37a1545fc809"
        },
        "item": {
          "id": "3ca72b3b-6c1f-4129-a903-1bb8294326ca",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2970a125-1763-4a30-a168-56b81c3e377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07da379-2b3c-4e5e-93d5-e2264979c6d5",
        "cursor": {
          "ref": "0136e5e1-20d8-4eab-86a9-66274d7d926a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d6b332c3-8a3b-45a2-83ee-bc2ca3580807"
        },
        "item": {
          "id": "a07da379-2b3c-4e5e-93d5-e2264979c6d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "76ada5c3-f866-4fe6-96fb-f0272ef52078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ed78d2-40a2-414d-ad5c-44ad298adf0e",
        "cursor": {
          "ref": "90b208e5-df38-4dd4-b3e1-de72511d3cb3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2617d1ea-db10-46a0-bc5a-794f4b3c622d"
        },
        "item": {
          "id": "d1ed78d2-40a2-414d-ad5c-44ad298adf0e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4ca773f7-ce42-41f1-abd3-f58dbd25dfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1200a8e2-bb2e-4468-9b8a-1f2fdb5a8223",
        "cursor": {
          "ref": "7017f3a4-7915-4917-ba18-0f1e7d9ef958",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "596b2279-fb26-48ca-8535-8664ce2034cf"
        },
        "item": {
          "id": "1200a8e2-bb2e-4468-9b8a-1f2fdb5a8223",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "618d3730-4e64-43e9-a4a4-1ed6512b330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29ee8f2-ce80-42da-8fee-92152c686c59",
        "cursor": {
          "ref": "0146d40d-0b12-4f31-bea4-c44e7ec1729c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ea48c438-5a1b-41de-bd26-7aaae3de6dc5"
        },
        "item": {
          "id": "d29ee8f2-ce80-42da-8fee-92152c686c59",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6bd62c1e-ac6b-46cd-a765-ff4c6c9680bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4276d843-dc61-44e3-b85d-472d35f45c42",
        "cursor": {
          "ref": "2500d10b-7a62-41bf-96d4-8e5cd6f9ea7d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e49be30-3842-4edb-91b5-8dd3f72bdfc5"
        },
        "item": {
          "id": "4276d843-dc61-44e3-b85d-472d35f45c42",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "945c1b12-9390-4992-99cc-66a25f3c3ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2f5b02-8fbc-4992-b103-52263d1e0bc6",
        "cursor": {
          "ref": "cccfcaad-3d6e-40b1-8aee-bd9852e47848",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "774d8a04-19e5-4b99-ada8-af9982da47e1"
        },
        "item": {
          "id": "4d2f5b02-8fbc-4992-b103-52263d1e0bc6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6369f4db-a5fc-4677-8221-cef6d00529c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59109c8-8da4-4b33-bd81-4fa5ae48495f",
        "cursor": {
          "ref": "8565c178-5c2e-4b53-bdce-9f515c2f0781",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7451fd8a-b7e0-46e2-9a2b-272b4c473e12"
        },
        "item": {
          "id": "a59109c8-8da4-4b33-bd81-4fa5ae48495f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8bac6f48-2b74-428a-b9ae-a4bc24006e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86107e2-7db4-4643-9a5b-e333548ab469",
        "cursor": {
          "ref": "4977b58f-3264-40c6-a522-1d3a99d385df",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04bd9ad7-abed-40b3-89e4-da6dcdc3ce58"
        },
        "item": {
          "id": "b86107e2-7db4-4643-9a5b-e333548ab469",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "820cb545-2998-429d-95a7-d45f7e70d20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3829fdf-9f2d-42f2-9319-8f407c23a195",
        "cursor": {
          "ref": "8e6a50a6-6142-4a58-a5f0-19f04d77da9d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "60bd1ea6-c496-4048-b265-2d044de8d4f6"
        },
        "item": {
          "id": "c3829fdf-9f2d-42f2-9319-8f407c23a195",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3684eb0d-f089-43f3-9169-8ad31f3aec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eccabc-1fad-4f2e-88c2-c9ee7c8d2d8b",
        "cursor": {
          "ref": "ef25544c-6f4a-49d4-8207-fb736f6451fc",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94ed6ae3-f175-453b-9ab0-c4525e6182d3"
        },
        "item": {
          "id": "40eccabc-1fad-4f2e-88c2-c9ee7c8d2d8b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cfa7769b-f787-4f2e-be25-3326d0457370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83307cda-6282-4ebe-abfb-ab37fad4b43f",
        "cursor": {
          "ref": "8c1f34ce-96bb-4aca-b498-61407968cdac",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "06be2f9f-3ac4-44aa-a134-fa197e9188b0"
        },
        "item": {
          "id": "83307cda-6282-4ebe-abfb-ab37fad4b43f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a562fcbf-7f7a-49cd-9746-dafbd2193482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f1842b-cb31-4a7c-be55-4b0e97a6b140",
        "cursor": {
          "ref": "837d6d3e-dd46-404e-b7ea-8aee9fefe87c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3f733e15-b135-4faf-98bf-ad8e028250ac"
        },
        "item": {
          "id": "b9f1842b-cb31-4a7c-be55-4b0e97a6b140",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7a89ede-21ad-4408-b9cb-fbe096e5555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00457381-a9e3-4502-9a55-49b3685eccdb",
        "cursor": {
          "ref": "9c52808a-e785-4760-99cb-2792f050d9f9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3da731f1-9fde-46ed-b1cb-29b00afde04a"
        },
        "item": {
          "id": "00457381-a9e3-4502-9a55-49b3685eccdb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9c45e376-cb56-4079-b7e2-2fed56274a6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e5b9b4-73c3-42de-8bed-7b22d843f572",
        "cursor": {
          "ref": "e482c4af-710d-40d1-9125-970d93c434a7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4a5bd042-2d97-4665-b1fc-20d55836a573"
        },
        "item": {
          "id": "a9e5b9b4-73c3-42de-8bed-7b22d843f572",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "643bcebd-cbc1-4033-85a7-81bb03eeb321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e686fa35-3f87-46f7-a1f5-a1d520481805",
        "cursor": {
          "ref": "cc2e8004-c460-48ea-b633-36fd509d920b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b69eaa57-bb08-4d48-8c1f-5206f61861ce"
        },
        "item": {
          "id": "e686fa35-3f87-46f7-a1f5-a1d520481805",
          "name": "credentials_issue"
        },
        "response": {
          "id": "acd6bf0f-276d-4a2c-98e9-4dc9d3a91660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6360bcde-d679-44a3-9520-0e61f0d4d07b",
        "cursor": {
          "ref": "b97b97bc-f48c-4f26-bc53-b34a63319f7e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dc02cd53-26fc-4f4e-a00b-387e49c08cdb"
        },
        "item": {
          "id": "6360bcde-d679-44a3-9520-0e61f0d4d07b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "114d7b6a-77cc-4b5f-bbfc-8c6edd0b8b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "555b4e73-8d5f-42e8-8e66-d97b56c659d5",
        "cursor": {
          "ref": "4b9c9838-f976-4912-b583-e99ddf40b428",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5ca7b033-ce9c-4369-8e69-319dcd4c72bf"
        },
        "item": {
          "id": "555b4e73-8d5f-42e8-8e66-d97b56c659d5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e7f0e3f0-4bad-4134-9c84-544d671db69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "93593eea-9061-4da1-9e1e-d441bdff7555",
        "cursor": {
          "ref": "2988c98b-4e77-46c0-8caf-54f9022ce360",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c41a333f-f73a-4bdb-9ac6-bc7d555584fd"
        },
        "item": {
          "id": "93593eea-9061-4da1-9e1e-d441bdff7555",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f18f0fbe-64ee-4cc7-ac7c-4400f3f7640b",
          "status": "Created",
          "code": 201,
          "responseTime": 7925,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e95390-781c-445e-a3fa-a6ff2bfd6078",
        "cursor": {
          "ref": "a592cb54-f9ed-4b38-926b-1deff7af06c9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3bad0a03-9189-44dd-850d-394164437b99"
        },
        "item": {
          "id": "10e95390-781c-445e-a3fa-a6ff2bfd6078",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d4e90c06-b9e3-4636-b94e-2fa0f4cebaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4f305d9a-669b-47c2-9fda-4d5a30a73b98",
        "cursor": {
          "ref": "e993beea-c090-49db-a46e-5686b58fedd1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2db25f0-f50e-4f5d-9354-6b05ce2e5f47"
        },
        "item": {
          "id": "4f305d9a-669b-47c2-9fda-4d5a30a73b98",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c060c40b-b1a6-4af4-a645-8b92c28f4393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d546eb94-77a9-43a2-8bcc-35cb5d752cc1",
        "cursor": {
          "ref": "b9609638-3ab1-4ffe-8506-aefa36b9fc44",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c682ba11-1594-495a-95e4-5d8eaead1fc2"
        },
        "item": {
          "id": "d546eb94-77a9-43a2-8bcc-35cb5d752cc1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "20cc17f4-bba1-4ea4-980c-5be7b92b5404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab18f4-9bb2-4290-96d0-5c86d2924094",
        "cursor": {
          "ref": "8900fc65-8099-423f-890c-017b97682e65",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5af0f7c7-2177-495e-bb9f-1b9aa3a2a549"
        },
        "item": {
          "id": "f2ab18f4-9bb2-4290-96d0-5c86d2924094",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5e4930e3-6a5b-46af-a649-d11dc654f51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ecabd-041f-4516-9dc3-b3f5d022e7b7",
        "cursor": {
          "ref": "cf02c3e6-c4f2-42e1-bf01-a8447ea8a1ef",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "21167eb8-d0de-40e9-abff-456c7a3287c1"
        },
        "item": {
          "id": "f10ecabd-041f-4516-9dc3-b3f5d022e7b7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "365c50a4-5887-44cf-980b-1c3e55e63f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8288e7ae-a20e-4dfe-b4f5-705cbcabc685",
        "cursor": {
          "ref": "447a025e-beda-4dd4-855b-908985ebf3e7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7fac9053-632c-4b71-8303-d4005903aefe"
        },
        "item": {
          "id": "8288e7ae-a20e-4dfe-b4f5-705cbcabc685",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a2a5274-9a45-4dd1-9b86-4949589763b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88a8919-0f00-48a6-abdd-b5a78e12d552",
        "cursor": {
          "ref": "ed433191-0076-4ef4-a48c-607eb7b1410e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ca256e70-bcf8-4db3-87e5-415b3b7daa15"
        },
        "item": {
          "id": "f88a8919-0f00-48a6-abdd-b5a78e12d552",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4d10a02f-2b93-4362-93a8-8ec56ae34ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2f2387-4c07-4424-b1c7-957fd67fbced",
        "cursor": {
          "ref": "1cfedd3c-6ebc-48a2-9859-94d1d383b2ab",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "880891c0-a48f-4344-ba09-082a1093cefd"
        },
        "item": {
          "id": "ac2f2387-4c07-4424-b1c7-957fd67fbced",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5454dec9-498c-4a1f-9321-6b7f23fb9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ce0d3a-60b1-4ece-89cc-7d4ac9981645",
        "cursor": {
          "ref": "8b04b552-5c68-417d-89c6-50810c014165",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c1240e98-8891-4786-b986-8a7a94a3ad09"
        },
        "item": {
          "id": "31ce0d3a-60b1-4ece-89cc-7d4ac9981645",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7658959d-d371-4971-8d10-4cbad96200bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9601ea-8321-4e13-89aa-5a71807fa3c5",
        "cursor": {
          "ref": "9f0639a1-860e-4c9b-a072-aff314fd0ef2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c833beb6-9937-4e8e-9e5c-9ad097670cd0"
        },
        "item": {
          "id": "ed9601ea-8321-4e13-89aa-5a71807fa3c5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c566f9f9-5294-4620-a288-ef7aa2a661ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134a5589-1631-4bda-b001-8969159433b1",
        "cursor": {
          "ref": "245cb6dd-743d-4c51-865d-9654a7c26076",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "796787fb-bdf9-432d-94f3-0cb495667160"
        },
        "item": {
          "id": "134a5589-1631-4bda-b001-8969159433b1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "074012fa-d731-450e-87dc-6214ac8c24ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad889d0f-b993-40e5-bbe3-222bfb40b655",
        "cursor": {
          "ref": "b9624202-cad4-4d2d-b2ea-4614cba636df",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f92e59d-d182-48dd-a46d-e5191b0565c3"
        },
        "item": {
          "id": "ad889d0f-b993-40e5-bbe3-222bfb40b655",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e80060d2-f93c-49ee-afa1-fd47c8c2ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22cb0b2-b638-4688-afc1-2658580638d3",
        "cursor": {
          "ref": "112427df-e6c0-4d64-865c-be92621931b9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d537aa7a-88de-4433-9d77-d1c3f919466b"
        },
        "item": {
          "id": "a22cb0b2-b638-4688-afc1-2658580638d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8fa4ecc2-8418-4f0b-b268-551da4b015c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7f7a8b-6ede-4eb2-b503-a3e201c7a39e",
        "cursor": {
          "ref": "bf558a1f-b06e-49a1-8e57-229baba24f0b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5715d856-d772-4ef8-9e4c-dad1d8c4468a"
        },
        "item": {
          "id": "fe7f7a8b-6ede-4eb2-b503-a3e201c7a39e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee7ff61b-8aa2-4a25-83dd-967e8e93d3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d70224c-1f66-4dcb-9a79-45353f45804c",
        "cursor": {
          "ref": "39f12a72-4092-440f-a178-42f1288fc77b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a5295bb0-e2be-4605-b622-fff84545b0d4"
        },
        "item": {
          "id": "8d70224c-1f66-4dcb-9a79-45353f45804c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc79b393-547b-48f6-8087-799b6c24bb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0e5715-44d1-4014-896a-5245ab2dcecb",
        "cursor": {
          "ref": "128b0381-8717-4119-b733-164edad18c38",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5d84ee5a-248b-4b50-9d94-a99d0dd51af9"
        },
        "item": {
          "id": "be0e5715-44d1-4014-896a-5245ab2dcecb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea458404-2aaa-418c-bf62-1e5315f680eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c89bdb9-6f4f-464f-82b3-e29fa923af21",
        "cursor": {
          "ref": "9439251c-6aa0-4a07-8136-10dc7787a93a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4548ae80-2eb1-43c6-9563-d4bda1fa5c71"
        },
        "item": {
          "id": "8c89bdb9-6f4f-464f-82b3-e29fa923af21",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b5e1b61e-90ea-49c0-be96-b7cbcb4c0776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98f47c1-5b46-4456-b950-ee42b8c6b3d0",
        "cursor": {
          "ref": "e8316a8a-a7e7-4ac3-a1c4-752de57147bc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bcdbcc78-9e1e-47ce-ba99-91e956e15385"
        },
        "item": {
          "id": "c98f47c1-5b46-4456-b950-ee42b8c6b3d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c46c3674-ceab-4bf7-aeb5-048931cc9062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c172841-970e-46bd-a27d-fd02e97a04ea",
        "cursor": {
          "ref": "489f5af8-a7da-4b8d-a471-b86754bcc532",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2039821c-12a8-49af-91be-39ed734ee323"
        },
        "item": {
          "id": "1c172841-970e-46bd-a27d-fd02e97a04ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d3bc034-1cf5-4963-a020-27374e883201",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ddf6d134-80a8-4b8a-978a-6f6722f3112e",
        "cursor": {
          "ref": "7ae6face-beb3-4095-838b-fefaa9676472",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f2ad990c-4de9-4c1a-ba6c-51d51625155e"
        },
        "item": {
          "id": "ddf6d134-80a8-4b8a-978a-6f6722f3112e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aed81f1f-1b64-48ae-8484-f68b3d68391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c261f3-6096-4fba-92d4-f83a0f1147df",
        "cursor": {
          "ref": "1562e1b3-07ab-4e86-ae98-3b97cf5347d8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "67ad11fc-afd0-47f7-8d5f-0e3af6a09631"
        },
        "item": {
          "id": "03c261f3-6096-4fba-92d4-f83a0f1147df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ecfd2c14-3524-451a-adef-d6e6988194bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443e9fd7-1da2-4875-ad71-e848c5993263",
        "cursor": {
          "ref": "01f0f7f1-e269-4156-8650-a438638dedfc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3cf82e85-2910-460b-988a-09be19f169fb"
        },
        "item": {
          "id": "443e9fd7-1da2-4875-ad71-e848c5993263",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bfd4a2f9-e680-48f3-a1e2-95e8ab5956bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631038b7-cb3f-4dcd-86aa-73e52941c518",
        "cursor": {
          "ref": "5dd54696-ac36-45dc-9b46-e58e4b860c13",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "01a640b7-9cab-4cd5-ad9d-6e203b9ecd11"
        },
        "item": {
          "id": "631038b7-cb3f-4dcd-86aa-73e52941c518",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2d1764f-7ada-4549-81ef-c0260f7f4090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4f1dd6-f766-4108-9925-c7e954a77b5e",
        "cursor": {
          "ref": "4dc246b8-d3d4-407a-a550-76fb681e7ee7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0ad6b9a9-c0af-4d10-9e69-aa6e04a75b2d"
        },
        "item": {
          "id": "7c4f1dd6-f766-4108-9925-c7e954a77b5e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42127cf9-fef1-44d0-8d5f-d92fb89689e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2bc435-7a0b-466d-a12d-b5a94defca0d",
        "cursor": {
          "ref": "0eadd5d4-3152-4742-9695-93d55123a599",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a82b021e-cab0-49b3-b145-50c4df65e2e5"
        },
        "item": {
          "id": "7f2bc435-7a0b-466d-a12d-b5a94defca0d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef199d28-e5bd-432b-8d79-963d5498a91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd50c143-5418-422b-a61e-ecfc77f8cff5",
        "cursor": {
          "ref": "540afd22-9089-49d1-a3a3-01bd2dad1fc8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e09df361-b5b5-4a40-bdb2-6f25a02d23e1"
        },
        "item": {
          "id": "bd50c143-5418-422b-a61e-ecfc77f8cff5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aac1f461-20ac-4ef5-a03e-df967eaf62a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53456ed4-5c79-4880-8a16-3ba42736bc47",
        "cursor": {
          "ref": "b54aec3a-5bd6-4ea5-870b-95ff02755655",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3dfce6a3-47d1-4c23-8405-ca47317dccf4"
        },
        "item": {
          "id": "53456ed4-5c79-4880-8a16-3ba42736bc47",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb5f9cfa-4c30-4090-8875-73151d448ce2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c26eb6f3-e43b-4646-9b01-1e320843e7ba",
        "cursor": {
          "ref": "fd3d5b8a-d5bf-4f7d-b802-4020f57a6ace",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "84e3f8bb-2c90-4c41-9cd7-e9379bbabb96"
        },
        "item": {
          "id": "c26eb6f3-e43b-4646-9b01-1e320843e7ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "971738fe-91eb-4d36-b4cc-8e181b3cc1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4302f5d-86e8-4e2a-b6f9-60db36acf688",
        "cursor": {
          "ref": "e7e004d1-4180-4421-a193-55cc536b56a3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "32a72cbc-b512-402f-8c20-6174fe95cfcf"
        },
        "item": {
          "id": "e4302f5d-86e8-4e2a-b6f9-60db36acf688",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f815f99b-cf65-4c66-998a-8064b1d2d3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871c8c9d-76b6-4507-9228-5dddc00064ba",
        "cursor": {
          "ref": "4998ad1b-91f5-4929-b758-9eb84df3cf6b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5607cbe2-d275-48c0-929e-aa33a84e4e03"
        },
        "item": {
          "id": "871c8c9d-76b6-4507-9228-5dddc00064ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c0867efa-921c-42fa-b5d6-0976f280e157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c14fe7-3d5f-4424-8d17-cbe3d9a963c6",
        "cursor": {
          "ref": "fd67d64c-bc02-451f-b35b-a5a57ad9367f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c8145e5-3a61-4d57-b4f2-e226efdca918"
        },
        "item": {
          "id": "a6c14fe7-3d5f-4424-8d17-cbe3d9a963c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1bdb1d31-3134-406d-a11c-d6013c346ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10280061-2ddb-46b1-b776-2cd495cb7d57",
        "cursor": {
          "ref": "e83be49a-0d9b-4bd7-8e7d-b40e1f9cd5f6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a8a878b1-5f72-4134-976a-18d161ca9385"
        },
        "item": {
          "id": "10280061-2ddb-46b1-b776-2cd495cb7d57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ccf15179-192a-42c9-aa4e-9fd68014560b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baa5fc1-c622-4585-b3ed-05c57c5fea83",
        "cursor": {
          "ref": "fdab0a02-2efd-4cef-84f8-d893efca89a0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4d218e59-0185-48bd-8577-9bd82a4fb494"
        },
        "item": {
          "id": "1baa5fc1-c622-4585-b3ed-05c57c5fea83",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8fcba0e-d6a5-41ff-a2ab-18db28bfabc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aa7ecd-7324-4502-a03e-e80bd963d272",
        "cursor": {
          "ref": "b2aec323-091c-48c1-946d-7317b868b38b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "093f83c8-ff1d-4db4-be1c-e97a447cb140"
        },
        "item": {
          "id": "46aa7ecd-7324-4502-a03e-e80bd963d272",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "db739fe1-87a5-4128-b529-1b00c305e67d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8854a729-5430-4010-a438-cdf4a321d9f8",
        "cursor": {
          "ref": "27f5cce3-7c14-4198-93b1-d51005692ed8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5f875409-e904-401a-9a1d-8e5407b52481"
        },
        "item": {
          "id": "8854a729-5430-4010-a438-cdf4a321d9f8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25b8d066-524e-4fbb-b20f-a1bb74dda10c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d246f0fc-5386-4763-9a17-2d59e040609b",
        "cursor": {
          "ref": "4e81dd53-7cb9-46ef-880b-1295f4bf5882",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b2ab620-4903-47f8-84d2-d3b94d5dd63e"
        },
        "item": {
          "id": "d246f0fc-5386-4763-9a17-2d59e040609b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9391525-3546-4e60-b3b8-2424c0aa0b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75864e3-b3d0-4229-b2bb-b19dd9c2f834",
        "cursor": {
          "ref": "b646c7f6-c04e-4216-8e04-659f7aec62ab",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e4fe1a96-369d-493d-81dc-218686f0fd0f"
        },
        "item": {
          "id": "d75864e3-b3d0-4229-b2bb-b19dd9c2f834",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "19a1d09c-478d-4f8c-baa9-0433539a18e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e55c62-e72d-41d7-b077-d1d10c9878ce",
        "cursor": {
          "ref": "d997bce9-420f-4e43-925b-08a473e99456",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "56d71444-1ad1-4499-bb09-0aad05121b9b"
        },
        "item": {
          "id": "64e55c62-e72d-41d7-b077-d1d10c9878ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ac82a32c-7d43-46b9-8ade-5ef0e37a2d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f1460-7f97-4ab5-a3a7-fb41e341e132",
        "cursor": {
          "ref": "e5445717-9acd-4e99-864a-a6a94ae12052",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0492efd4-249f-43b1-af04-5a5cf80874a0"
        },
        "item": {
          "id": "c65f1460-7f97-4ab5-a3a7-fb41e341e132",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "133ab2ec-bf2a-4ef6-a736-85925c89ca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f14ed3-4f68-49c6-bbc5-0ec3499c6443",
        "cursor": {
          "ref": "88f25a02-d3cc-4492-9225-d09a54280756",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "28a570f7-c734-442e-be03-689efbb547bb"
        },
        "item": {
          "id": "63f14ed3-4f68-49c6-bbc5-0ec3499c6443",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c08d1415-2b3c-4dbd-909e-2596f6241d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569fa77f-4049-452f-a80e-11bc92de5240",
        "cursor": {
          "ref": "e142acb6-99c8-433e-bac0-43d8f168eed5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "29b498fe-a606-4eaa-9b1f-9c12c956bbbe"
        },
        "item": {
          "id": "569fa77f-4049-452f-a80e-11bc92de5240",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "503b7f6c-f629-4f8d-adaa-ab675950d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd372750-1585-4f1d-95cc-c99f0b58d2f3",
        "cursor": {
          "ref": "19f88871-e6d8-48e2-ae2a-8d690631d43e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e3efddb5-50fd-4836-a0bf-fd0a4b13593a"
        },
        "item": {
          "id": "dd372750-1585-4f1d-95cc-c99f0b58d2f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b6b04800-d7f5-4531-b193-a072b62142be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68814c19-ab22-4e36-83fb-6c81498e5064",
        "cursor": {
          "ref": "029362c4-47d0-43bd-8a57-41df0da8a9d3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f9724b25-bbc9-4476-b5a8-aa55810e8d09"
        },
        "item": {
          "id": "68814c19-ab22-4e36-83fb-6c81498e5064",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08316a1e-8905-40cd-bd28-482aafd9105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e75b64-592e-4eb6-bc08-d0e31f04100d",
        "cursor": {
          "ref": "e2c09426-a9e5-400d-a1ee-dc1c16cb05ad",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "52239961-1aa9-429f-9523-fda897876087"
        },
        "item": {
          "id": "65e75b64-592e-4eb6-bc08-d0e31f04100d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3ad7757-8f2c-41ea-9a21-869ef8675621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30477a6b-2852-4dae-84fb-fb7bbaf527db",
        "cursor": {
          "ref": "0e95389d-2435-4257-ad23-ab2a92fe5f5f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fe8829a8-a597-42f8-8a6c-f939618cc1c7"
        },
        "item": {
          "id": "30477a6b-2852-4dae-84fb-fb7bbaf527db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3830a6bc-9a7a-4c37-9a45-fb319378eeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb3797-184a-4648-8969-a33e3a28486a",
        "cursor": {
          "ref": "7cf52840-2c41-4601-a293-6c6cfbf3a63b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d56630df-2430-4425-accf-8f87f44304c3"
        },
        "item": {
          "id": "a3eb3797-184a-4648-8969-a33e3a28486a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "162fae3e-bb32-40a8-a587-d5451b78a942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195b041-e313-4366-9eb8-b5c3b027f88c",
        "cursor": {
          "ref": "9078ccd8-0095-4ce9-a6b3-66cd1be58a96",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0dcb8531-ead2-4ba8-9c1e-14d135bf605e"
        },
        "item": {
          "id": "b195b041-e313-4366-9eb8-b5c3b027f88c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42632a86-e0c5-41a4-add1-9b042b490215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ee61f-2781-44c3-8475-1bd60df129cc",
        "cursor": {
          "ref": "a4d64cca-1264-4149-b7c0-dfe792f4562f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "01542132-a74c-4ab5-be98-52ac14bf6e4d"
        },
        "item": {
          "id": "ba9ee61f-2781-44c3-8475-1bd60df129cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4dabc542-e0b3-436f-8736-7d48839b0d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672e1d2-460b-4e18-8f74-1887123462f4",
        "cursor": {
          "ref": "511901bc-7b0e-4373-9249-ae2da8290686",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ad373183-3034-48ba-ac23-6c3fa33532de"
        },
        "item": {
          "id": "2672e1d2-460b-4e18-8f74-1887123462f4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5dc08ed1-8d83-456d-8c6f-ca5abfca84f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13337942-e074-4668-a28a-b7b82a63b8ff",
        "cursor": {
          "ref": "7d727906-b4d0-441b-a005-999e39c1c05b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "99d69c67-71af-4b3b-a55b-020cad904c27"
        },
        "item": {
          "id": "13337942-e074-4668-a28a-b7b82a63b8ff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e3be85cf-6d16-409c-9362-d5dcf0b2a8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdf1162-7c0f-4d47-9e82-ef9d495a8a2b",
        "cursor": {
          "ref": "1a1d9f72-37e1-44a0-b702-6edd01574ffb",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b4a2402-d28a-47a2-888d-ef2c33f0888b"
        },
        "item": {
          "id": "0fdf1162-7c0f-4d47-9e82-ef9d495a8a2b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c292e64-1e62-49fa-9fd0-793be90b53ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befb9194-b151-41a6-8751-abea523a1be4",
        "cursor": {
          "ref": "28a43764-5699-41ab-ac7a-bf4eaf802879",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "39f7ef95-b892-4150-b055-9fece76ef544"
        },
        "item": {
          "id": "befb9194-b151-41a6-8751-abea523a1be4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f9edc165-6b46-4e21-b3c3-f7d706fff870",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ccb43ba7-0bb3-48e2-8709-94869ed9cf1c",
        "cursor": {
          "ref": "21964697-2c9b-436e-9363-9c7e0b83d22f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c01cf06d-31c8-46c2-a92f-f0cb0eaf53e6"
        },
        "item": {
          "id": "ccb43ba7-0bb3-48e2-8709-94869ed9cf1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ff7fcea-e0f2-4abf-a631-f3076c7dc1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfdaf54-eef7-4c32-9dca-6ef26c302ddb",
        "cursor": {
          "ref": "d24abcba-de39-4cdc-97e7-43ba4bfa5f44",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50802291-78ca-4c9a-82d3-e8de6fa36717"
        },
        "item": {
          "id": "bdfdaf54-eef7-4c32-9dca-6ef26c302ddb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b4add374-5c80-4263-a7c7-1afe5d25a122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25d6580-6f38-4f23-8ddd-d9cbde844fec",
        "cursor": {
          "ref": "afb90043-3b84-4ca8-aa6f-f3ae888641ec",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "835fc77a-d031-48c2-a79a-2dc622f40089"
        },
        "item": {
          "id": "d25d6580-6f38-4f23-8ddd-d9cbde844fec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee44f501-53be-48a1-84d5-2818baa788f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c688423-545d-4eec-b19e-c815e9039d4c",
        "cursor": {
          "ref": "0f6297d9-bc69-4001-8c21-280b2ac3aab0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9715d60e-21db-4328-9fb1-4bcc440e3aed"
        },
        "item": {
          "id": "7c688423-545d-4eec-b19e-c815e9039d4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "35457c81-911a-4959-8a11-80f6c3b5a08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06cffb9-a8b0-43fa-8a7d-3272ea14f0d2",
        "cursor": {
          "ref": "ad980b77-25da-4c2b-bcac-570f52f75d85",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "64591137-d63d-453a-a23e-68bffe1a34d3"
        },
        "item": {
          "id": "c06cffb9-a8b0-43fa-8a7d-3272ea14f0d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a7900d34-e74d-435f-9978-26bf4806cda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35974405-e8fe-4fb6-95f5-9d32aa4bcdd0",
        "cursor": {
          "ref": "91413f64-312c-4f5e-9025-b18abcc13a55",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e98300cf-d944-4eda-81ea-c02173f18195"
        },
        "item": {
          "id": "35974405-e8fe-4fb6-95f5-9d32aa4bcdd0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3de6090e-b253-4c22-b5b7-453a8f077159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a394ff-4c27-41c6-9f09-2157b02a62f8",
        "cursor": {
          "ref": "6a5ff5e3-4980-4284-9c7a-11ab667878fc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6f81c1a7-6d6f-45db-a8b7-8ff21b4c3b43"
        },
        "item": {
          "id": "56a394ff-4c27-41c6-9f09-2157b02a62f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "799d06e2-5d55-4b08-be6c-f0ae39930c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def5bc33-7ce4-4838-8577-2e61ea80378e",
        "cursor": {
          "ref": "86dd60b2-1921-4037-b805-d3ab3481eb48",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aade6e8b-fe3d-4061-b990-a9ae841d91b6"
        },
        "item": {
          "id": "def5bc33-7ce4-4838-8577-2e61ea80378e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4ca48acb-efa5-4e2b-9039-7c0867f37109",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "44c3ee6a-c1a5-4f0e-8f71-2d10d1c84723",
        "cursor": {
          "ref": "51335a49-5dcb-43a3-b046-982a391ca3fc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "702c1384-bea2-4c9e-bf92-9a5b6c89d544"
        },
        "item": {
          "id": "44c3ee6a-c1a5-4f0e-8f71-2d10d1c84723",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce72f797-f133-4cb3-ad4d-2bab18566c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc48af2-b1d0-4d15-ba4b-838b10d0f840",
        "cursor": {
          "ref": "69c55740-6f5c-4375-8217-5e3eb0d6ac89",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fe004231-f1c7-43bd-a242-eb350a3da36e"
        },
        "item": {
          "id": "5dc48af2-b1d0-4d15-ba4b-838b10d0f840",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c22ad0c4-058a-4e6b-b7c9-a099edcce361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cd5fe6-ea69-401f-a142-f5786eba16f7",
        "cursor": {
          "ref": "fbbf0cee-56f1-4dc5-9d81-17f53c40d5b1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d2595fb2-6aee-404c-9419-6815b9a7820f"
        },
        "item": {
          "id": "07cd5fe6-ea69-401f-a142-f5786eba16f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "565b6104-d801-4bf3-a097-c2ca20e1eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc57622-a6e8-492e-8868-8707348c0197",
        "cursor": {
          "ref": "38afb8e1-0200-44b4-aca4-9a1c2fafee09",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8a01534-a532-4dd5-b8e1-d3b52d97dd5c"
        },
        "item": {
          "id": "0bc57622-a6e8-492e-8868-8707348c0197",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "61735a72-ceee-4cbb-82d4-f02146d71f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5de6544-7f5d-41fd-a1f4-f0dab67de732",
        "cursor": {
          "ref": "db758144-c9a9-4640-a5cc-b36a22a3d035",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "249e666a-b269-4c01-8888-2b29ed681dbb"
        },
        "item": {
          "id": "a5de6544-7f5d-41fd-a1f4-f0dab67de732",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cb3c485b-f84c-4338-b07a-b1bf6632012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee898ae-4530-4106-8065-0d4e8922b7a6",
        "cursor": {
          "ref": "f025378d-d106-4904-8aea-100ee0e02cf2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98673923-9602-4a66-b9d8-07e933b4e72a"
        },
        "item": {
          "id": "5ee898ae-4530-4106-8065-0d4e8922b7a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "117f60b7-9e2c-4b9a-a26f-e812d6eb26e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a6c18a-d282-44d5-99e6-7c95e79b0514",
        "cursor": {
          "ref": "3d481f47-f5a7-4dc5-a430-9fad5bfdd469",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b233b55e-efe2-41b6-904a-ec230a45eb5d"
        },
        "item": {
          "id": "45a6c18a-d282-44d5-99e6-7c95e79b0514",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "965130de-5437-4bb7-a62c-9dd075141d16",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "dc1815d6-8f48-4a50-9620-e5c5b7b63581",
        "cursor": {
          "ref": "8950e963-62f2-4c9a-9f1d-93fe0cba2777",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12bc6df1-e949-4771-8efe-7ee816b4178d"
        },
        "item": {
          "id": "dc1815d6-8f48-4a50-9620-e5c5b7b63581",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cd5c9762-3797-46aa-9d54-f1fe1bda657f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a01c3486-97aa-49dd-95da-0682af795f3f",
        "cursor": {
          "ref": "91608673-d633-464b-9d33-db954ae4e470",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "11053cce-54a3-4632-bd65-5aa3d517e445"
        },
        "item": {
          "id": "a01c3486-97aa-49dd-95da-0682af795f3f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "58ec1c97-eb31-478f-9e95-417cfb4a4f5b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "8aacffe1-1074-4b9f-8e68-3fed87d04516",
        "cursor": {
          "ref": "608fe7cd-cc4e-4c29-a752-8c3a2c89bdd1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c399089f-7ec5-4adf-8c4e-a59711826569"
        },
        "item": {
          "id": "8aacffe1-1074-4b9f-8e68-3fed87d04516",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a751cf6c-d194-4a44-8181-4a9c89935669",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "5e89509f-5d25-44e5-b5dc-b79933b734ba",
        "cursor": {
          "ref": "6b063b4e-c726-43b7-80a8-7bd776b7a11c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e99602e6-955e-441a-8b85-a55a9e71d584"
        },
        "item": {
          "id": "5e89509f-5d25-44e5-b5dc-b79933b734ba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ebe7c4cf-c183-4fd5-b030-d23cad6afe34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "230ae9b2-0c3b-4fbe-b59f-f877ffa11f84",
        "cursor": {
          "ref": "44da4fbc-55c3-46a8-9c40-9ff474ca932d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4dd1d245-d44f-4b23-b3f0-da248a8595ac"
        },
        "item": {
          "id": "230ae9b2-0c3b-4fbe-b59f-f877ffa11f84",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d820d2fd-b543-4032-b7e0-8c8973373033",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "64caf837-2d07-4950-9ec4-6e770e659803",
        "cursor": {
          "ref": "766aebf6-1ee8-4f12-b1eb-5a1b3e7c291a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5d0ae7ec-1996-46fa-9e43-a68f631996eb"
        },
        "item": {
          "id": "64caf837-2d07-4950-9ec4-6e770e659803",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2c6bce23-3409-44cb-9414-9f073b88dbaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e36faa-793b-4a85-bf91-632409a76f87",
        "cursor": {
          "ref": "731917c9-0232-47a7-bc55-4f8fb8f5fa31",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a6b8c4b5-85ea-4402-8561-3cc59c05e276"
        },
        "item": {
          "id": "75e36faa-793b-4a85-bf91-632409a76f87",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e5fa199d-f842-4ffb-b21f-2fcc63d12b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c63612-09e1-4cf1-8d2c-af1906fe02c8",
        "cursor": {
          "ref": "1adedb55-1792-46d8-845c-8f2ea1580108",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a1b61dfc-c509-4c97-b804-9cf3ba030dbc"
        },
        "item": {
          "id": "84c63612-09e1-4cf1-8d2c-af1906fe02c8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cf46c139-ef36-4a50-a9c1-571ba68a45b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80658604-a9d0-48f1-875e-9a2a6c5f0a2a",
        "cursor": {
          "ref": "451b3e7a-8479-451d-82d1-7d3dacf030c2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77c45e09-a3f3-479d-9b36-e780e250b626"
        },
        "item": {
          "id": "80658604-a9d0-48f1-875e-9a2a6c5f0a2a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e3d77330-b556-4d17-b48f-80a2c2aba602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d48a1d7-f6d0-4d66-b0aa-4b11d8acc3fe",
        "cursor": {
          "ref": "a31c8ad7-5313-4860-8e62-3d69f82d80e4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "42930fa0-abbc-4b87-996c-598b203f736d"
        },
        "item": {
          "id": "8d48a1d7-f6d0-4d66-b0aa-4b11d8acc3fe",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e1a43326-b932-4de1-ad03-a2ba3ab9cb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2440e-3a5f-40ed-a5b5-89fa46564410",
        "cursor": {
          "ref": "77c690ae-f844-4301-8e43-aafc489658e5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "89288a9c-1320-4349-8fea-5be51692bcf0"
        },
        "item": {
          "id": "04e2440e-3a5f-40ed-a5b5-89fa46564410",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a5d9e71-2218-4ea5-ad10-bd03e744e152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e0df9-aa70-4d8e-8066-3a44323ac6b4",
        "cursor": {
          "ref": "ab69184d-3e97-4fe1-9d69-639a2c785e69",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4d07c115-f290-40c4-b3a0-3805a1da0e09"
        },
        "item": {
          "id": "659e0df9-aa70-4d8e-8066-3a44323ac6b4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "24b57bb5-8823-41b9-b3b1-614a26639572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7a8573-b56f-495e-a19a-7fde172df819",
        "cursor": {
          "ref": "228fc595-ad77-418a-9441-f71820d5dbbe",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2d08b1f6-62a9-4e7a-ae76-2d5350ada4f1"
        },
        "item": {
          "id": "9c7a8573-b56f-495e-a19a-7fde172df819",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f3e94ccf-3440-4bf9-abdc-831f664710d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9755921-f17c-47dd-a68b-9ffb67cd2c6f",
        "cursor": {
          "ref": "333b59d6-55cd-45c7-a586-b2719fb63433",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b3230901-1922-4bda-945b-bb6a6c022922"
        },
        "item": {
          "id": "d9755921-f17c-47dd-a68b-9ffb67cd2c6f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "99030f33-8984-4d6f-8a24-4fffed98462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6299e6-989c-49b1-9829-f7bf246a30cf",
        "cursor": {
          "ref": "c6699510-1822-4164-9bdc-5a4fee4d28ee",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "65a65012-9513-4900-9bd6-b0d867d2ceac"
        },
        "item": {
          "id": "af6299e6-989c-49b1-9829-f7bf246a30cf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b9f80448-e748-432e-bfda-f7227dad8563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15311a7b-5508-4b32-b979-f2d54631adc8",
        "cursor": {
          "ref": "dc0a7ec5-49e0-4324-829e-afa46cfe1ae8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "300f667b-858c-4113-8acf-1eac27f41e78"
        },
        "item": {
          "id": "15311a7b-5508-4b32-b979-f2d54631adc8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7eb86fab-0eee-4b78-b0a0-e4f79572a2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad913a-4e22-4c93-97ab-957f95ad2023",
        "cursor": {
          "ref": "296df433-250f-4279-af37-9e90ae249b6e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4c5e1c0f-1411-4a95-861d-545e5ba85a65"
        },
        "item": {
          "id": "25ad913a-4e22-4c93-97ab-957f95ad2023",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "291fc415-edaa-460d-b0da-ff5f02851e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4d19bf-b7a8-4cc9-81a0-ec2d725791e8",
        "cursor": {
          "ref": "29c742df-4bee-4de1-82bf-55d80b49826f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "69381a14-95a5-44d5-999a-915eb748fc10"
        },
        "item": {
          "id": "4f4d19bf-b7a8-4cc9-81a0-ec2d725791e8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8e84342c-f75a-49dd-a530-e029663d6fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2605ef1-dc0e-48ce-8a7d-23de79f957d9",
        "cursor": {
          "ref": "846e8d00-a463-4f8c-90ad-d472fc25c035",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82d00dad-769b-4b29-b774-baf0c6e8e446"
        },
        "item": {
          "id": "f2605ef1-dc0e-48ce-8a7d-23de79f957d9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f171430d-bf20-401f-bcc3-7536fc18e34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0de27cf-e503-4414-bd78-f9ce3e867f1f",
        "cursor": {
          "ref": "bad6f87a-cb96-4fdc-b4c8-be769429b1d4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8d7630ea-0cb8-4e55-89d0-e925a52cc42a"
        },
        "item": {
          "id": "e0de27cf-e503-4414-bd78-f9ce3e867f1f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "291e252c-72ec-4595-8aef-da132e3de04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc802b76-dac6-4b90-ac2d-49ecd70f336b",
        "cursor": {
          "ref": "2742a94f-09f2-4c81-8aaf-932aa2cd19b3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d5629aee-055e-41b6-a403-f617eb520b9c"
        },
        "item": {
          "id": "cc802b76-dac6-4b90-ac2d-49ecd70f336b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d4ab129a-2d51-451b-a6bc-84b66c7af064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ebba72-5628-4f56-84e3-4938788ca0eb",
        "cursor": {
          "ref": "1ee0bf17-d874-4e48-9e3f-c626ede2c6d3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e07881ad-9e55-4557-b017-02fa90bc69ec"
        },
        "item": {
          "id": "b5ebba72-5628-4f56-84e3-4938788ca0eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "901aefd6-f709-4805-996d-dd9d682120af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c28bc4-facc-4e0e-87d8-c5c98e21f774",
        "cursor": {
          "ref": "fd35e7f5-0748-456b-9bc3-61b89a078d74",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4d492023-cac3-4385-a275-899e09623048"
        },
        "item": {
          "id": "69c28bc4-facc-4e0e-87d8-c5c98e21f774",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9db29e94-0555-4964-80d0-966cb32f9f5c",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "19f4329b-9e21-4cf8-8443-76240b0e09e6",
        "cursor": {
          "ref": "22d5c97f-3621-4397-80ca-2f41a1b63292",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9183d01c-8b5d-483f-9fea-7c3d1b2dc42b"
        },
        "item": {
          "id": "19f4329b-9e21-4cf8-8443-76240b0e09e6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "11c897be-3b5f-4420-b313-68ab6bd5f6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1fa439-c30c-4ccd-bed7-fcbd4581ba97",
        "cursor": {
          "ref": "2f745739-18d1-4042-becc-0646729d729e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7d8fd74f-ec9d-4e27-a8df-4cc93956d65d"
        },
        "item": {
          "id": "3a1fa439-c30c-4ccd-bed7-fcbd4581ba97",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a9e3aa7e-1397-47a4-a32a-629f777236f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ba354-cc57-4c7b-b5db-5341c37e816e",
        "cursor": {
          "ref": "c6e23061-001a-4661-98d7-d81b7059c4df",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4727c097-594a-41d5-b3e5-9c783ca9c89e"
        },
        "item": {
          "id": "966ba354-cc57-4c7b-b5db-5341c37e816e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "00caf58c-cdc7-4eaf-9376-c447488b3b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1947b5-20f1-49cb-94e3-051bcf20793c",
        "cursor": {
          "ref": "3b6a4bac-9ab8-4092-9aff-33f5fbe70d87",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3f008858-d991-49a6-8228-a487f895ea07"
        },
        "item": {
          "id": "3e1947b5-20f1-49cb-94e3-051bcf20793c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99bddaf0-3db8-46f1-bb22-c23faa915092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bed904-d69c-4eea-b7f7-ab30ee733ad2",
        "cursor": {
          "ref": "fe38ac8e-3c75-465b-bb8a-d4921a86d1c7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "25df3908-f614-4d15-b749-d32bc7471181"
        },
        "item": {
          "id": "d0bed904-d69c-4eea-b7f7-ab30ee733ad2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fcc46579-5ca6-4efa-a12e-458b779951ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79341dc2-31e2-43e0-9fbe-d7a5fb3dfeee",
        "cursor": {
          "ref": "633df509-fd3f-4c5a-bd9c-8364d90a661b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "15ed4d43-6cfb-4855-965a-4e74f89ffee1"
        },
        "item": {
          "id": "79341dc2-31e2-43e0-9fbe-d7a5fb3dfeee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53b20f51-fa0a-43e6-b148-a1ee500f97a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d716454-3747-47b4-9df0-96e659cef380",
        "cursor": {
          "ref": "17b8cd41-28c2-43ae-b19e-ebd351d76921",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b0323fda-c476-4711-b43c-ab52dd35589e"
        },
        "item": {
          "id": "2d716454-3747-47b4-9df0-96e659cef380",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9c754868-17a5-4be0-b29c-0624351b6297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6efa638-e7d1-4b01-915a-807f3c915863",
        "cursor": {
          "ref": "2110b181-42ed-4591-a1a9-d992d2e53776",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "69094520-a0af-40e1-ba41-5430fa2554d9"
        },
        "item": {
          "id": "b6efa638-e7d1-4b01-915a-807f3c915863",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "97727d59-fd45-4997-b4fa-7c504b3bd0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2a8216-fccc-4ebe-a019-b66e10493fd7",
        "cursor": {
          "ref": "c7c2659f-5166-4d06-8134-a85505704885",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d7d36572-1803-4d41-9b36-2d9e96f99377"
        },
        "item": {
          "id": "8d2a8216-fccc-4ebe-a019-b66e10493fd7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c621eccf-7f19-4d59-a064-607a9f8b1480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3762b54-c9e8-45a7-b06c-fc5873847b9f",
        "cursor": {
          "ref": "892a59d7-abb3-495c-8fb7-20c8266afb2e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "252f1711-522e-44d9-9c97-385f57d9a719"
        },
        "item": {
          "id": "e3762b54-c9e8-45a7-b06c-fc5873847b9f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7e73512f-4e85-4a22-8fa4-d0b54e4e4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09313777-375d-4e7b-811b-c6d20651b95f",
        "cursor": {
          "ref": "853f2b2f-0835-4d09-9b49-91c75d9742c6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "963104f7-098b-4d29-804c-a4920e72fccf"
        },
        "item": {
          "id": "09313777-375d-4e7b-811b-c6d20651b95f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dd55f2e1-94ae-4d7e-97a9-5a3995b5f53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d216917-c60a-49fa-a7a0-a494a90521d4",
        "cursor": {
          "ref": "0821983d-0d37-481a-848b-af810a311119",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "324ed0a0-4ec2-4796-81b0-2cf8fcad8bdd"
        },
        "item": {
          "id": "5d216917-c60a-49fa-a7a0-a494a90521d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "648cd7e7-285f-442f-9f34-29d735ee1d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad72e2-0852-4bad-a964-64549630d3ee",
        "cursor": {
          "ref": "f760382f-1acd-440c-96bb-378d51ca60cd",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9eae7f01-7d4a-4847-92ac-195196392dff"
        },
        "item": {
          "id": "17ad72e2-0852-4bad-a964-64549630d3ee",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "712578c9-506d-4cb3-9e56-43a81945934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a08745-b42b-47c7-9a60-93209b96115d",
        "cursor": {
          "ref": "887970d1-13d1-400d-9582-679427cc8e1e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0540b866-f743-465e-8584-8268ab321ce0"
        },
        "item": {
          "id": "38a08745-b42b-47c7-9a60-93209b96115d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8ee8353f-64e6-445e-9172-9642e8d013ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b0b1f0-1e41-4ca6-8f08-edab0ee44e6b",
        "cursor": {
          "ref": "b0cfa2f3-814b-400e-ba7f-e2fb89910e90",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fdc9715f-bf23-43d8-809a-bb5053e79d58"
        },
        "item": {
          "id": "60b0b1f0-1e41-4ca6-8f08-edab0ee44e6b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "69764eb2-865a-4ed1-8de6-5bf9f8ffcd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d169788-d386-4643-8525-026a1b1515fe",
        "cursor": {
          "ref": "0d3b9b2c-3c74-450e-a170-fe8ee3fa54c2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "daa3f933-640b-4d54-920c-6b57db433a68"
        },
        "item": {
          "id": "0d169788-d386-4643-8525-026a1b1515fe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8f8f9beb-5609-4e04-8b75-14e8b2f6c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f07af-d0db-4309-b38d-8e8cb0f1bfd2",
        "cursor": {
          "ref": "c49e1573-c997-46aa-a72f-f99009d8da58",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6259863c-2ab5-4ebf-9ba0-0a4686e9db95"
        },
        "item": {
          "id": "0d0f07af-d0db-4309-b38d-8e8cb0f1bfd2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c0ef0f2-b965-4de2-87a4-2973fae8adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd7169-ab3e-4523-880a-aa191b0d819b",
        "cursor": {
          "ref": "c58aa83e-97e8-4bd5-a89e-764c71cfc4db",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a5961652-3506-43a1-b1b1-4a145e5dd711"
        },
        "item": {
          "id": "d5bd7169-ab3e-4523-880a-aa191b0d819b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e47513dd-e2e2-4b54-822b-c61b3f047d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb62a96-d5ac-465b-9146-b55ae1d640c4",
        "cursor": {
          "ref": "8a2677dd-8fc3-4ca4-b06d-a82ab00e8d63",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "40f9bceb-59d7-48db-aab8-33623221523c"
        },
        "item": {
          "id": "4fb62a96-d5ac-465b-9146-b55ae1d640c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7ce114c2-c2be-4588-ba0d-ff4432bb0b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e381a8-0431-4819-93e2-5d4477037ead",
        "cursor": {
          "ref": "39661440-9774-483e-86db-a32ab790c8ac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac69325a-77b5-4780-b263-e07d071f1733"
        },
        "item": {
          "id": "d4e381a8-0431-4819-93e2-5d4477037ead",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15463da5-d614-454a-a8c9-8a77ba529a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49d8ab-296c-46ca-b5ef-fd1625747e58",
        "cursor": {
          "ref": "3d3e0061-f44b-4c6a-88bb-964ec06f1fa3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "586a46db-16ce-43b7-8c0f-dfee91f3998f"
        },
        "item": {
          "id": "8b49d8ab-296c-46ca-b5ef-fd1625747e58",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1ea5bde9-072d-4996-a911-d280c870bd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d157100d-03ad-474c-b9b5-ae51e53bdd6c",
        "cursor": {
          "ref": "fd6748ac-61a7-4e0e-95fe-78c67c6ed0fd",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a06f15cf-e8a0-4293-9c3a-f11f590705be"
        },
        "item": {
          "id": "d157100d-03ad-474c-b9b5-ae51e53bdd6c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b8d9f78f-e893-4f4a-9069-e09cc90fd7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f3877-d03f-4a33-b43d-140b04df1453",
        "cursor": {
          "ref": "9715cfd7-d9e4-4734-8c5f-99f5a7852f71",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04f6d946-3f68-46bf-88e1-e766f542f03f"
        },
        "item": {
          "id": "4b8f3877-d03f-4a33-b43d-140b04df1453",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dd009ed6-e0f5-4571-99d8-a9ce33633bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07915cda-6483-4255-a243-f9beaece4966",
        "cursor": {
          "ref": "8ae4fcb4-df57-4e28-acc9-e0bed8bb543c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d37c874-6c09-4aac-a827-6352fa797149"
        },
        "item": {
          "id": "07915cda-6483-4255-a243-f9beaece4966",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30fc47a9-ad68-49ce-8c60-0c592948fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fe8d2a-e575-4b45-8348-db54e4940031",
        "cursor": {
          "ref": "09b5d78d-39a4-41ac-95e8-2a9e5c1c8896",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d7f1dabd-90b8-4a20-bfbb-07c4ae73e86f"
        },
        "item": {
          "id": "73fe8d2a-e575-4b45-8348-db54e4940031",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "360336f1-d25a-4713-846e-d8cbf05de8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af96c65-f1ee-4613-ad6a-540f63a3ee2a",
        "cursor": {
          "ref": "ce1c7f82-64cb-4db5-891b-b9ff75366054",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "73f89343-775d-47bb-a5e9-7184a465cb39"
        },
        "item": {
          "id": "3af96c65-f1ee-4613-ad6a-540f63a3ee2a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e6715869-c159-4de4-9b5e-eec63d76f392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec26b12a-b356-4535-bf4b-b1ad471d5627",
        "cursor": {
          "ref": "af1cccad-94e2-4caf-98d9-74d36051dadf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4296f058-1bcb-4858-a7f4-0e1e31852a2e"
        },
        "item": {
          "id": "ec26b12a-b356-4535-bf4b-b1ad471d5627",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82746a27-be6c-47be-96e3-13f1f2106214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbec375-cf01-4aab-9127-6bac833dc95a",
        "cursor": {
          "ref": "8ec4686b-c50a-40f8-84ea-0e8a8f6709e1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "38a78e6e-bad5-4c0b-828e-a59db9b18e83"
        },
        "item": {
          "id": "acbec375-cf01-4aab-9127-6bac833dc95a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "87dbd9cc-508a-461d-a927-ef6afe0ee70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653ed592-9b4f-4bb3-80b5-357454229b4b",
        "cursor": {
          "ref": "a33b2163-1f2d-4656-9247-3de84b03d6bb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e44416a-070c-4ad9-8f57-42f8d27a8e73"
        },
        "item": {
          "id": "653ed592-9b4f-4bb3-80b5-357454229b4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99911768-7e4e-4b03-89d0-f2ff13ac358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc02c607-7861-43d6-aaf4-b4d065332a44",
        "cursor": {
          "ref": "877ebd49-32ce-4b41-8bc0-47f00d9dae63",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c3f9817d-875d-4e8d-9fcc-e31c72ff5da8"
        },
        "item": {
          "id": "cc02c607-7861-43d6-aaf4-b4d065332a44",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d240e90d-8636-414c-be60-8fcbb8875182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7aeee5-d0ba-43b4-a5b2-d83135ebc67f",
        "cursor": {
          "ref": "c63bc761-9329-4c28-939c-8917fe0fe54b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8a32ba28-5b1e-4325-985d-2849af6d6f2a"
        },
        "item": {
          "id": "8f7aeee5-d0ba-43b4-a5b2-d83135ebc67f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e1c4e38-8406-4179-8807-74b4399f7590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45c0762-bbd0-4ffc-8531-7c800919b08f",
        "cursor": {
          "ref": "d7bfc10a-70a4-437b-a356-1a0f1f4a05b2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "616dae29-4174-4045-af18-52b8212fb4cd"
        },
        "item": {
          "id": "a45c0762-bbd0-4ffc-8531-7c800919b08f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f4e1758a-e833-435a-97e4-c6e68029c58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb0f0c-01b2-40e0-9c39-3f211e862658",
        "cursor": {
          "ref": "4f76f64d-403f-4010-ae47-1bf6296fbadb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "06a3de31-7197-4298-ba21-7011314979c7"
        },
        "item": {
          "id": "efcb0f0c-01b2-40e0-9c39-3f211e862658",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a827a598-4b3e-4cb0-ba7c-64afb527af5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed54b4a-17ba-4957-9568-85b96847c631",
        "cursor": {
          "ref": "48cfba06-5ec4-40df-a40c-646afea84665",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fbe73e20-517e-4a6c-a55f-0d3bc5a37622"
        },
        "item": {
          "id": "7ed54b4a-17ba-4957-9568-85b96847c631",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3c496b5-1d07-45c5-89f1-47845b160bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76a26ac-5873-4112-9a49-67b3fda7c69b",
        "cursor": {
          "ref": "0dd4b876-30aa-4bc5-bde0-673aacc9a575",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ffdff73b-4a2e-4dbc-bc47-a19c12b56ebe"
        },
        "item": {
          "id": "c76a26ac-5873-4112-9a49-67b3fda7c69b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4ecbeb8b-64c3-4549-b4df-461a54dcbf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0181c33-6a9a-4e95-a191-669f60892b17",
        "cursor": {
          "ref": "1859a760-698d-4918-bba5-78c96e244325",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "88a6f0c9-40e8-48c2-b93c-32de34ad29b3"
        },
        "item": {
          "id": "d0181c33-6a9a-4e95-a191-669f60892b17",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "818989bd-c9e8-4054-a2ea-453a06f0ff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99642c45-4011-4e51-9a77-352cbd675d06",
        "cursor": {
          "ref": "13410d15-0f53-4cc4-9193-c76b9b491975",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "793f173a-d1c8-40ae-bb76-3918b25c891f"
        },
        "item": {
          "id": "99642c45-4011-4e51-9a77-352cbd675d06",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "63a17e2a-bfa2-4471-9a51-4ebc451d3be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296b528b-57ae-46f9-8890-5ef136ca5f40",
        "cursor": {
          "ref": "dc9b3062-8bc2-453e-845c-6ee4899facf1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6fe9afa4-23f1-455e-881e-158c7c874f55"
        },
        "item": {
          "id": "296b528b-57ae-46f9-8890-5ef136ca5f40",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bd5dd1e4-9b2f-4572-aae5-787f641fa842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda6ea7-4103-4289-8b8f-36cc8f61c2b9",
        "cursor": {
          "ref": "72f81ab1-9365-4a60-b67d-9a284669f989",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f57afffb-e40e-40e4-aa4d-10f7a4009711"
        },
        "item": {
          "id": "ffda6ea7-4103-4289-8b8f-36cc8f61c2b9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d4132b25-25f6-44c6-a94b-cc6d5b035d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05abdfed-f617-40dc-9584-90ff026a76b6",
        "cursor": {
          "ref": "58382044-6467-4d8c-8e54-9db0b8cb12f8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d691419c-99eb-4b59-bb54-f013b91aa46f"
        },
        "item": {
          "id": "05abdfed-f617-40dc-9584-90ff026a76b6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "303ced88-a579-498e-a8a8-6fd7adcaaa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe656ff9-0a8e-4c33-aacd-787cd598775b",
        "cursor": {
          "ref": "c7ddcee6-4b6a-414f-89c4-a11e6481c5a8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "575fc97f-81a1-4f01-bacc-6a322cefac0a"
        },
        "item": {
          "id": "fe656ff9-0a8e-4c33-aacd-787cd598775b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "866c1ec9-1f5f-440d-a507-7a11f8413676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98473c97-822d-4ca8-8450-f717bd3e7982",
        "cursor": {
          "ref": "314dffda-2e78-4c3c-a90d-fd200c3a4801",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1ee3038b-2d16-495c-94bf-29ce38c1b323"
        },
        "item": {
          "id": "98473c97-822d-4ca8-8450-f717bd3e7982",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3f010887-18e5-43dc-9016-f869e691c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6005bb-335f-4c81-b947-01127cc33c5c",
        "cursor": {
          "ref": "77e049e3-a57a-4f8d-b8a9-9530e46b0656",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4a69bf1a-ee7d-4e73-a0b7-b46441d6b662"
        },
        "item": {
          "id": "2e6005bb-335f-4c81-b947-01127cc33c5c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "60876089-549c-4d62-84d6-8f0f4f510d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88015b8f-a9c2-4209-8ab8-8507c13986a0",
        "cursor": {
          "ref": "ca3bcc36-8718-411b-bfe5-ef677cab355e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ad8fd2b6-8482-422c-b0ec-03b5216df45c"
        },
        "item": {
          "id": "88015b8f-a9c2-4209-8ab8-8507c13986a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1024206-653b-4ac6-804b-30a06fa07530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a543021-4557-46cb-b182-7951bfa043ee",
        "cursor": {
          "ref": "74ddbe39-11ff-4e43-9a8f-80816bc72007",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8a8e3c52-4fe3-4021-b2c7-ce22fe0f8764"
        },
        "item": {
          "id": "5a543021-4557-46cb-b182-7951bfa043ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "23ae3bbc-093c-4b07-8186-86f985237d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b96ad6-b787-43d2-9eb0-74266e29a953",
        "cursor": {
          "ref": "7c4d9e62-396f-4031-9b4f-f8ccd58c2b06",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f86c653d-5ef0-444f-bc74-225fdefb524f"
        },
        "item": {
          "id": "45b96ad6-b787-43d2-9eb0-74266e29a953",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "47a40ae0-0f95-4b8d-a1d5-eb7c07d22b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b699f4d5-ea99-4e72-9c3d-5957f70b5ae5",
        "cursor": {
          "ref": "85c69fcd-181a-46c0-bdcb-5f1ce93930c3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d6ec287c-344f-4a7a-8a25-850e653130a9"
        },
        "item": {
          "id": "b699f4d5-ea99-4e72-9c3d-5957f70b5ae5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4146550a-845f-4beb-be87-90425e8fe896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79e918f-2e5e-463f-9a8f-4950e9271a03",
        "cursor": {
          "ref": "2f5ae2ad-75f9-447e-8b7d-31583e89ff78",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "89b3226c-a297-4000-9b19-ff300594e5da"
        },
        "item": {
          "id": "e79e918f-2e5e-463f-9a8f-4950e9271a03",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "938ed68a-6d00-4f36-96a4-6a26d6888e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5894dce-c4c4-44f9-b06a-1d977bb69ebd",
        "cursor": {
          "ref": "48f198a7-385e-4ee8-a606-d9a7cf684467",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba9193e2-7f1d-4853-ba38-e4cc945dbf99"
        },
        "item": {
          "id": "a5894dce-c4c4-44f9-b06a-1d977bb69ebd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "395d126d-c0ec-428a-b7b2-ee2623435ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17669caf-b1c1-49a0-a159-4ed1fd719b6d",
        "cursor": {
          "ref": "d6e6a987-426d-47dd-8986-54dc29b6fb91",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "156fa481-9ee5-41d0-9208-e10f96a501c8"
        },
        "item": {
          "id": "17669caf-b1c1-49a0-a159-4ed1fd719b6d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fa1e59c3-c4af-467e-ae83-0a81b56bca19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf1b240-885f-424b-8b51-3189180b722c",
        "cursor": {
          "ref": "c7557d8b-ddcc-43f1-ab27-5646bbd07a6c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "acce4cb7-dc01-4c23-ba0b-ffff868d88ca"
        },
        "item": {
          "id": "1bf1b240-885f-424b-8b51-3189180b722c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "84cdad03-6173-4e57-bb46-046625c27dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33e5dad-e90e-4f4a-a6bf-cc8beb1093d0",
        "cursor": {
          "ref": "1c394c1f-482f-4c2f-8ece-e956ad8755d2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cfb0e00e-a7d6-4ed7-af60-63480a46d506"
        },
        "item": {
          "id": "a33e5dad-e90e-4f4a-a6bf-cc8beb1093d0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f883ad9-a887-422f-828b-c7819bf2b61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c30e0-cbb4-43a6-8276-d38c043caa47",
        "cursor": {
          "ref": "b92bbc43-61ac-4293-a6d8-4c899fec9d8a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b60e32bc-6601-4314-ae05-1f827f5359fa"
        },
        "item": {
          "id": "a32c30e0-cbb4-43a6-8276-d38c043caa47",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2bde128-0ddd-43d1-8392-838f47a412cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c86bc6a-a6c4-4312-8629-02f04e4e33c1",
        "cursor": {
          "ref": "216645a0-182d-443f-ad4b-968b6797c244",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d4eafe56-b349-44ce-87f2-c253e3cdb338"
        },
        "item": {
          "id": "9c86bc6a-a6c4-4312-8629-02f04e4e33c1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f1d51647-369f-41fa-a43f-3e3518e6fba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e143737-8611-4bf6-8333-c0bab77edf58",
        "cursor": {
          "ref": "492d87ca-9236-4b8f-b981-93d51e950f1b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ed61158a-9f3e-4bc0-a169-2d1ee26a1554"
        },
        "item": {
          "id": "3e143737-8611-4bf6-8333-c0bab77edf58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b192ffaf-cb72-4c65-b16a-c2cb2f607663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aabf3f0-e219-4932-8735-488f1640691b",
        "cursor": {
          "ref": "31e10023-197b-462b-ba5c-1308c7a3b546",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d9971eb2-1d11-464f-9131-4af599760c36"
        },
        "item": {
          "id": "0aabf3f0-e219-4932-8735-488f1640691b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5df01def-e99b-4655-bb10-5f2fb1e83a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff53b43-186c-43cb-b441-f39b48910bf8",
        "cursor": {
          "ref": "df631235-d4d2-4369-b5ae-e6e6bd9fc551",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "37f81e7e-40ac-4b8f-b507-977954929f09"
        },
        "item": {
          "id": "7ff53b43-186c-43cb-b441-f39b48910bf8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "21981b3c-9017-4278-ac32-581965335a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47152e34-ed13-4199-ba82-27fbca0a1dba",
        "cursor": {
          "ref": "4076f6fb-e4eb-4cb9-b875-061e6a659868",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e281d57-aebe-44f8-b08d-113bdfc2b75a"
        },
        "item": {
          "id": "47152e34-ed13-4199-ba82-27fbca0a1dba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d0cbe70a-2a01-4e78-899d-c7b1b2e5da2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2893c1-feab-4f24-bd6b-16c464344d3b",
        "cursor": {
          "ref": "914a9bd7-816a-4289-a186-fc57f35c61c7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9c573a57-ae9e-49bd-a0a1-acb9c1b217d6"
        },
        "item": {
          "id": "ed2893c1-feab-4f24-bd6b-16c464344d3b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0bad0e50-f85a-4fe1-8376-c7a0d46a4f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfcf65d-ae19-4040-b1ba-4af0cae58fcc",
        "cursor": {
          "ref": "ce9fd6af-bc79-4230-96e7-0d26542eb5eb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d6311dea-b867-4632-aade-788b8f3837d5"
        },
        "item": {
          "id": "1bfcf65d-ae19-4040-b1ba-4af0cae58fcc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "36ec45f1-59ee-4fdb-b039-da9e4b2c4d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e26add-f8a3-4e96-b710-8aa932c83056",
        "cursor": {
          "ref": "74dcd5c2-852b-4833-a5e6-5538e805deaa",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c07794dc-0f77-46b1-ae73-fbfb1c766c4c"
        },
        "item": {
          "id": "33e26add-f8a3-4e96-b710-8aa932c83056",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "25992723-ce27-4d68-83ba-a9c0bd085d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b234819-78bb-4bf9-b09f-fa76d8e7920c",
        "cursor": {
          "ref": "2ca94b27-7ce6-424d-b29f-819a24227e2b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "94a38193-2cf4-4962-a417-49604afe3225"
        },
        "item": {
          "id": "3b234819-78bb-4bf9-b09f-fa76d8e7920c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "03a0eba1-7371-45e3-94d0-1dc0f86ba685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2f03f7-ad62-4306-84e9-6a084b6eebd9",
        "cursor": {
          "ref": "b7e39b9c-b506-4af6-a925-9dab8a76717a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eef1d3f2-b45e-48ec-8a90-e9ae7616a425"
        },
        "item": {
          "id": "be2f03f7-ad62-4306-84e9-6a084b6eebd9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a7b3344a-f426-48a3-b0e2-c900a9b1d44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e5fd50-c797-45bf-a7b8-cfb3354b8a7e",
        "cursor": {
          "ref": "ceadeea8-25a2-4302-84fa-da443590730f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e143c42c-7202-45d7-84e7-7554a0395785"
        },
        "item": {
          "id": "a4e5fd50-c797-45bf-a7b8-cfb3354b8a7e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2efe34fa-8ed8-4fb1-9e24-fa18089f10b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd45837-28bc-46ec-b957-e3c48131e9b8",
        "cursor": {
          "ref": "e2490ed2-80dd-49c3-9c57-5d84d538c9f0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "860c4cd6-54cd-4af0-9813-fe0ee396c9fa"
        },
        "item": {
          "id": "edd45837-28bc-46ec-b957-e3c48131e9b8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad5ecf4d-301f-4554-8457-4362bd53b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680f8b5a-e53b-43d3-8b98-b41ff4fbdf13",
        "cursor": {
          "ref": "d4a17815-afa0-44e2-b039-01544c2a7037",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0c38c546-34f6-4ab6-b91b-43c125ee2b75"
        },
        "item": {
          "id": "680f8b5a-e53b-43d3-8b98-b41ff4fbdf13",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f9b9732-cb1b-4293-a1d3-258aeee91ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3f83a1-1d5e-466b-835a-ac1f16addbbd",
        "cursor": {
          "ref": "ccdd726d-f865-4cc9-b5f7-000a2dc8bff4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "25ee81c9-186a-4ad9-8b45-a2f67e6cff58"
        },
        "item": {
          "id": "bc3f83a1-1d5e-466b-835a-ac1f16addbbd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "42bf7623-0595-4bcd-91fc-b58713df7741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e0be9b-103b-4786-9209-93b803b12dc3",
        "cursor": {
          "ref": "c0ce092d-2614-4b55-9745-aa6154d01852",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ad5bff39-3929-4644-80bb-159ff4dd91b1"
        },
        "item": {
          "id": "02e0be9b-103b-4786-9209-93b803b12dc3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "af25b362-e34c-454f-b53c-b8128946c325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ba7fff-4544-46dd-b5e0-2fd8616669aa",
        "cursor": {
          "ref": "df55abfe-804d-4183-b43b-8502c1bc8bba",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8a1405a9-77f9-4c6a-b260-252ec6836c4b"
        },
        "item": {
          "id": "b3ba7fff-4544-46dd-b5e0-2fd8616669aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e30d79b-0395-4b54-83db-b3e0cccb28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e975554-c6ec-4da4-b9a5-0329fa0f9846",
        "cursor": {
          "ref": "92aa9d3e-87c7-437c-ba06-49e12289042a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "10776a11-6bfc-4526-a8ae-18477dbcc441"
        },
        "item": {
          "id": "5e975554-c6ec-4da4-b9a5-0329fa0f9846",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "830d5c14-e821-4faa-90d5-2c10ce3dd877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a541b534-8d09-46f8-be3a-8ddf50d369a3",
        "cursor": {
          "ref": "01817464-dafc-4898-a59e-b4f77cf661fc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d7f6f9d6-b5d4-4ec4-ad4f-a239bfc26796"
        },
        "item": {
          "id": "a541b534-8d09-46f8-be3a-8ddf50d369a3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2be77b3-15fe-4422-8bf2-9137fb045d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8bce10-0ea8-4853-9b73-bba90dbc5d7d",
        "cursor": {
          "ref": "459ff145-8fe9-45d0-8cbe-05701858f1e0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9d0e103e-47c8-4ca8-ab59-1f7289e8ffca"
        },
        "item": {
          "id": "2e8bce10-0ea8-4853-9b73-bba90dbc5d7d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "040896d6-d3da-4aed-8a36-7a687bece6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8bee28-5fb6-4a7e-86d2-f460b9681614",
        "cursor": {
          "ref": "3333e507-dc7e-4432-8367-64ab57aea975",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b3cacbfb-3aba-4282-a6ed-a16e914d785e"
        },
        "item": {
          "id": "6e8bee28-5fb6-4a7e-86d2-f460b9681614",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3a2e6d75-1c66-403d-9c66-7d0fd8843eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce64d49-c047-4084-8510-3ed2c2dd389c",
        "cursor": {
          "ref": "ce209044-5a92-42df-8843-52e25da1e19e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "19e4c1a5-ab8d-4e57-bc11-d9c5d2c34747"
        },
        "item": {
          "id": "9ce64d49-c047-4084-8510-3ed2c2dd389c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1980fe1c-1980-44aa-a79c-aa9078ecbb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1537ceeb-6fb9-4739-99f3-7a20263ac5e4",
        "cursor": {
          "ref": "0cea72c5-f179-46ff-9319-9bcada56915b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "825d8754-6465-4b40-853f-41adc34d765f"
        },
        "item": {
          "id": "1537ceeb-6fb9-4739-99f3-7a20263ac5e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "15c9b9f3-4334-44f2-93ee-579b57d42693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f484f799-bf91-418d-9447-a9c62055c052",
        "cursor": {
          "ref": "9f9a00ad-fd6a-4ab9-bc68-80ea34d345f5",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "407aa557-96bd-4de6-ad7f-0541a86c8471"
        },
        "item": {
          "id": "f484f799-bf91-418d-9447-a9c62055c052",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fbb63eae-1c2a-44be-8224-76db2b292f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827b730d-307f-43a1-a43c-a61160b9bd5e",
        "cursor": {
          "ref": "652a9908-372d-486a-b157-868b76abb9b4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d2af7072-c09f-4583-babd-ca8535100f37"
        },
        "item": {
          "id": "827b730d-307f-43a1-a43c-a61160b9bd5e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8fed62e7-5825-4366-870c-70ee4974806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662a4187-4fdd-4137-a156-f1dc2ba83e6a",
        "cursor": {
          "ref": "80b042aa-2a45-423f-98cf-2a74d4abb15e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "72afe2a0-e80c-48ee-9962-1ab82d755f78"
        },
        "item": {
          "id": "662a4187-4fdd-4137-a156-f1dc2ba83e6a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "68e8297c-922f-40e0-ad1c-f3c9b3e8b1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fc1f1b-9133-4d23-ad73-8e435e86694b",
        "cursor": {
          "ref": "d0de7165-66e2-4fb9-80bb-93d146436a2d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "19e57956-05fc-4427-b3e2-9e373e0603e7"
        },
        "item": {
          "id": "25fc1f1b-9133-4d23-ad73-8e435e86694b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "097ee497-744e-4240-86dc-7433c409f161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3ab78c-ef76-4ee5-9e6c-dbf84d411fe5",
        "cursor": {
          "ref": "8a44cecf-dbca-4876-8b74-1687c701bdec",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ea54a358-4391-4569-8bdb-118945d8e5f4"
        },
        "item": {
          "id": "fc3ab78c-ef76-4ee5-9e6c-dbf84d411fe5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5dddd0da-013d-4e48-8084-0ea32c032c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3176001e-19e6-47c7-95f4-61c7fa7bb9aa",
        "cursor": {
          "ref": "c38e76c2-6ed1-4e90-88ae-2b1c74ba2662",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1b31c551-2173-49cb-a806-674d642c12c7"
        },
        "item": {
          "id": "3176001e-19e6-47c7-95f4-61c7fa7bb9aa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "456c56c3-7625-4ff1-ae65-e45fea7bcd14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e63dd01-5dc1-4298-b87c-97ecc2cdaebe",
        "cursor": {
          "ref": "c0f1b22b-b438-477e-acce-5f783ae04a5f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ab4ce678-f3c6-4857-acae-a26eab6e317b"
        },
        "item": {
          "id": "9e63dd01-5dc1-4298-b87c-97ecc2cdaebe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c7867d6-1ade-4d01-8889-01abecfcd965",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "30587d22-04ce-4776-a1ce-c966d1ce2224",
        "cursor": {
          "ref": "2c1f5a5d-7d03-41a2-aa8b-944ac98b8b4d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f3ae688f-987e-4d0e-9cd5-c8cb71ce2257"
        },
        "item": {
          "id": "30587d22-04ce-4776-a1ce-c966d1ce2224",
          "name": "credentials_verify"
        },
        "response": {
          "id": "72b23888-4a89-4683-9cdd-78f8e48b417e",
          "status": "OK",
          "code": 200,
          "responseTime": 3345,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f544b4f3-f0c4-4384-b47e-dd28f0140cd6",
        "cursor": {
          "ref": "77b7eaf5-4091-4fff-b464-eb3f0990f225",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a845ac2e-2566-4768-89f0-8b2c49cea857"
        },
        "item": {
          "id": "f544b4f3-f0c4-4384-b47e-dd28f0140cd6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "24696e57-c469-46f0-99ec-eca4ace14157",
          "status": "OK",
          "code": 200,
          "responseTime": 2599,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d86358-023b-4a15-9f99-9ca175407877",
        "cursor": {
          "ref": "6d448d34-90bd-4da8-bb97-804a76f813a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7d1f503a-19c6-4bf8-9338-309560e45174"
        },
        "item": {
          "id": "29d86358-023b-4a15-9f99-9ca175407877",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c475d358-4ff5-40d9-83f3-faf20834ecad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d86358-023b-4a15-9f99-9ca175407877",
        "cursor": {
          "ref": "6d448d34-90bd-4da8-bb97-804a76f813a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7d1f503a-19c6-4bf8-9338-309560e45174"
        },
        "item": {
          "id": "29d86358-023b-4a15-9f99-9ca175407877",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c475d358-4ff5-40d9-83f3-faf20834ecad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cda2f5-c498-438a-a458-5330c309a1c6",
        "cursor": {
          "ref": "1c9d2530-b1d7-43cb-ac6e-2729c2584872",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cb8a49bb-0f4b-4425-b82c-225a7d0a0f1f"
        },
        "item": {
          "id": "c9cda2f5-c498-438a-a458-5330c309a1c6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e569d1c8-009e-46fa-bc13-091e0265e5be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7564557f-eab5-4d55-904f-439f2dc0f101",
        "cursor": {
          "ref": "afa450d9-391e-4bb7-83af-8921849ad09b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "17b400a4-ef25-4f25-bfb1-bb60d93103fe"
        },
        "item": {
          "id": "7564557f-eab5-4d55-904f-439f2dc0f101",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2a7ab4b-bcd5-4c03-8f22-dc18629a3d5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}