{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "60badf29-41c3-4992-a82c-70ed06f6f4bf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4ca7889a-b194-4aa8-8cb5-3ada6127924c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6c146ff-8f55-46ee-821d-adfbc7798cf8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a127d304-375b-4ed3-8fbd-c5ee7fc74df2"
                }
              }
            ]
          },
          {
            "id": "fef88c96-daca-4770-b835-32f2d502313f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4d0da01-c346-4682-9bc9-d479860069cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c878c447-5b3c-4e5c-abe5-54d09e1ed07d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1672a354-1cfb-4609-a112-02528812449d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "617470b8-c6a2-4f5f-bcdd-106662a46bcb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5954d64c-60fa-4c8e-bdad-fc6d1b2f4174",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8e91ea-1362-4f1a-922f-1f1eb13410d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "920114bc-7dd3-4a58-8077-c9cfd4aeb9be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41c37caf-d4f8-4c00-84b0-336b333eee33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5f17080-ba78-4e6f-b8dc-f485724aab37"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "493b3ba6-7fc4-49a1-af1f-51765667edaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9a34ec2-9258-4055-9008-217632a61221"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e68b42c-4eb5-43d6-8ee4-69a521d99672",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e6ed10a9-4928-4b41-a064-fc5d84c94f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30c1466c-19d2-4264-ab70-da9f0ad95801",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b675b125-606e-4ac8-94dd-7b4e1ca77fe7"
            }
          }
        ]
      },
      {
        "id": "c7075a48-40b1-449d-8ed0-6e2c135bb14b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "813107dc-dc87-4372-b0a5-b5b1e18e95ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebac4918-c7ba-4b72-b062-9b497c4c2137",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0adf49c-81ff-4887-b8e7-f57ee4f60f03",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba393b-372b-432a-96ae-2f559eb5c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5592219-11ed-4e3c-bbba-daba0f79dbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f6f9ae-6d0b-4e5e-a485-aa2bd04fb3c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db589b6-ce79-4a1f-a207-ad62af4f7356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee6f4c88-8988-41aa-acef-90c4063f4457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c7aa6f-3a17-49f1-a396-cf4662d0b5ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab56e3d-0481-4694-87ce-753b1ffaac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3051b7a-9ed7-413b-aabe-4ab88b121173"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f11ec92-1e0d-42d6-a27c-7e7d6cd57788",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9af4a125-fdbe-493e-945b-ee42913cc6b2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c86919f-58ba-4249-8890-4f7504cf49f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c98f86a1-1673-4980-968e-961c40c8c0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d15459-2074-4452-85d9-1111073a079a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4992ce8-6ea6-4544-bb29-9e04291dc2a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c5757d6f-5f11-4fdb-a739-721c1730b101",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8ccf4fa-e046-4155-9c4b-b19e81c79dee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5db4be7-128f-4bc3-b41a-2103c2593483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "66be46af-4a6e-44da-9c22-19dc245fb78e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dc01daa-1d93-4280-ae92-d9c1157a1f13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5091ab96-413c-4a9f-bb07-fafa1d2163d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11286b4c-216a-4c02-9a8b-52230acd34b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91a486d8-c134-4b23-beb0-269e34a394cc"
            }
          }
        ]
      },
      {
        "id": "55a6b655-6e84-45ba-9346-86b24ca2782b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "df8b72da-bea0-48a8-b484-bbbfb396c639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1b35827-a458-4e1b-b3da-046869ef0e4f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9bbe0ea0-2b6e-4348-932f-5fb055cb3d46",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e255bc-fa49-4acb-a3fd-c7d100fe0192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57094356-61dc-4306-aed8-012b00071987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24f382d-2a8d-467c-b9b1-e8b0133f5fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe2b6693-4ca7-475f-ac69-e898aad8d8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55142bff-bd6a-4e8f-b0f2-cacc62f4b17e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20632af9-db6b-4386-80e8-84fc8230311c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e558eb7-4947-4a8b-902e-eea1abf3be1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4343f555-ff2f-4d72-817e-a3dd81fdf584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96b56874-0cbe-46f8-9b94-f881dcd2e960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834e67b4-8b78-4719-aeaf-bc76c267ab19",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f9fec6-5d59-4df8-b47b-27d58335c86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d222b3-f409-432e-b8f7-008b13db866c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b60ae60-1ea7-4344-b958-3f9b038aaeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "144310c2-6267-4542-929b-02a540e84b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3a5584-e1e9-4b0a-b140-6405bbdfe137",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0cec6b-43b0-4218-a775-94b4e27fb31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1a8906-e416-45a0-a523-89cece23be9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85132b4-9e94-4239-a95d-4ca2e1bd81c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6958740c-230c-42af-8758-9dde101b02e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6c4aaf-c2f6-4661-bfcb-a0f9482232fa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c23089-b751-48c7-aae0-1dd10ca79ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b9c256-8ba7-4e00-9b0b-aa3d314780da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf6708c-e5c1-45f3-88a8-f264a8fb47d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ddb10dd-69d6-463f-a44a-eeccdcb3f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227f8c3-2fd6-433f-a86f-8d18da890832",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e21185-e4a9-4cef-9647-203f222406aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc10ff8-c176-408f-9337-85263659605d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9176ad1c-961b-4c65-8bb4-89c8e5f594ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4d82604-b493-47bc-aaee-2d26c87984dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bdb3e4-92fd-4056-981f-589cc0748d89",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6307c4-ecbe-49cd-87f2-a19ba6c48693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abca916-b239-4961-9f7a-3b7a7c864e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c75c6-64ba-461f-8212-c303ce17eaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4139b7b-16f4-4ebb-a24b-8ec7e5ca8855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f73eecc-693c-45b4-8754-46bbc3750069",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a3c987-4465-496f-81d0-80452025631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ae683f-9cde-4f64-8648-cb3146ff15b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fbd6bd-b815-4cdb-ac4d-2c9734923ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2da093a-2d20-41f3-8eaf-1f82d84efdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c433c6-99b9-4a3d-aa6c-81c8780580ea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22ddf4c-455b-4938-90b3-46478f6d80dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef7ec99-58a9-4f58-a168-0af380a48194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe8d8f-b7c8-43a7-b712-405e41928d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15fef33b-2865-4c75-99d5-dff871a7b38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4d934c-5564-4059-9994-d8e9237d2792",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46152460-0507-4f97-9a18-6e895ce08838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecc9f8f-142a-438e-bb82-86877f55ac72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdd7d25-1c4f-4c7e-b2fb-13c4ad738b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55c8f9ab-ab90-474e-9696-84106a209bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a38275d-fc85-42e8-af7d-1aefc22789b0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d0076-3ca1-48c2-b8a6-75be0068abb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa338f31-ef7e-4a3e-97e0-9d5ce089671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3880d825-9c48-4a35-9ebd-bac39b9e9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "997d3063-294d-4a0d-aa00-386190204465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152f322c-9f0f-47fe-aa19-aabf9bd07b8a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a251ad9-1ba1-47eb-851b-3af8465da2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da01d6c-46fa-4b88-827a-a0855217067f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d08db1-c325-4b47-b8d4-297eed28730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09bdbdfd-7adc-4689-9630-d54917945709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287c560-7dc8-4629-a59c-c4b454c20af2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745a374c-ea18-4362-96f7-0f5e16b48d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9785e20a-66be-4339-8ef0-ad6fdcde5416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1170448d-39ab-4e03-9db0-42b630be1424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abcc1768-16b5-48a0-abdd-1148db51a677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e533461-49bd-445d-b3af-d4ce3a16602f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdcc94-c313-4a40-a67f-e0663ab64ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b07ce6a-9c1b-4f1d-a9e0-d180359bb429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0524a808-7512-44ff-979f-26ff02747b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4006b8e8-c1ea-4e41-ad18-74d7dcce0853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22a73b1-0ce4-4c8b-81d9-05e59ae6e53f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8893b29e-63ed-4d13-919f-c4adeec68ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9605a35c-caf1-4525-b8ac-b0f3f670e14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94f862-37d5-407d-a79d-19f06a696549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c18a604e-b2f1-4f76-8e25-959fac744bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd7a7f8-2888-44ec-a711-9ee901407d4a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56635f87-2d0b-4eed-bb98-0e00002f160a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc747029-9e57-4be0-9e1f-b211ab82acb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e539ef6-1b31-43ab-bd22-93d2a9a3df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7694807a-7765-4d48-a85b-8f8e5f136716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544dc72e-4ab8-439a-abbb-d6611477e844",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2c0ad-d0d2-4bd3-b61f-0bcf2f61f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f67fbee-3b76-4618-8394-573b0af5dc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ae581f-8f43-4c45-9a08-aff7da0bb9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133253da-d687-4b2a-a1f8-6dcf138c236a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be667949-ecfa-46ff-b637-150605507f60",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b40a07f-32bf-4cc6-8686-9bd8ace3d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f5cc73-c18f-465a-847d-089277e8c9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad9e11a-c3fd-4edb-81dc-6eaee5d36676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d3ff53-b9bb-4b11-b89c-d3c12c3720ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e449184-00e7-4c66-ab27-463ec39d3362",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86de4fdd-3e1f-4cee-957a-434470bb28bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd2d243-7cbf-458d-8697-f4205404cfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d3f312-a2ff-49aa-b33e-8aa911fe48dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4392f22-a392-4e7a-a1a7-00d367677180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8895e31-dca3-4736-860c-66574bd17d1d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8208fb40-fefa-49ba-8de2-616bec642260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6de6db-d710-47ac-a42b-c4c41d844b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ed1f4-e608-4d37-a713-81ed45f6ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01085779-5084-4d35-9b81-10ddc2be107e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca9e6b9-7af8-4e51-9fc3-02de9bf55eb0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d74371-0505-44a7-89d7-de7438303aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2519b9-074e-4ad9-8b2a-38c25a9e9e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0080c8d3-7a53-4bdc-bc60-8516a1da1315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5edbf998-6910-4aa0-9ac5-4f9439bf18d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973b5ed6-f075-4212-aef8-8f4557072df8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6d9645-fed4-4c56-a0c4-5e1529123df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2247889-4f7e-44ba-86d8-bb07bacad86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790edcd5-df83-4785-8b28-e9464d6b901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1bd32d-3183-4abe-9f21-60a2d8e268ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edddad3-e3d1-4aa6-b333-c6659650f419",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8504b0-084a-4732-9eae-99e3c65db60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b803c6b9-73ab-4bc1-84c2-7a9ddde0fa0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874d00d0-30ed-46d2-8afe-f36cb51eebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0069807f-7208-487f-a31e-f6d3eccd3dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f97d66-88b5-4c9b-b17b-6aa602b96d61",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea80677-16ef-4c02-ba9c-01ce1cc2ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8907333b-83d6-4acb-b056-a7a6e9769ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40485c64-3e5f-4ed4-b908-f13689ac5bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b274a53b-c1f9-4938-a894-ad739f273d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212b5efa-b80b-43c5-aca2-47d39ad7974d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6717a8-4723-41c5-a17e-4ed69047b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48aa10b-cf98-4032-aea8-eb0f6c1025bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd820b-271d-4bb0-947b-e50b02bf08f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f71048-2ba7-4740-b35e-273ba2f004a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f8a88b-bd9f-47c8-865c-da9575ec2b1e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2397af02-38d2-4ac5-977e-72a1e3990921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274074e1-4973-4102-a2b6-82b1d8d4e3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5cc9b5-fd2d-4184-bc4a-098f9aff6166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a7b208-6386-4559-9df2-ce3c74fa6129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c25d72-d429-4f07-b4aa-b1f3d3a72c8e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b31fb4-13d1-43f8-a6c9-9ab518a9f409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46d1268-6206-463e-8c0c-bddf6e0c18de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95942898-efd6-483a-bee1-0d701f944ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5baed5f2-c85b-4ae4-9ff2-6fcb7c4ebf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d50e1e2-9cd7-4459-9cc7-92945a30d3a7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ba227-0055-488b-a5fc-e0defebd9d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a14eae-cf3e-4c19-a17c-2bfeb07eddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56df22b0-c8bd-4c9e-b464-906e2b3d6685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce4c2bc-5a47-4a68-9c3b-62e92e84cc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b33dc86-a8e6-4fd5-b870-c9077283325b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6255817f-b830-4575-afd0-f5f9b53949bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d1dcb0-1640-40e2-9967-95ce7afcaec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c25610-fcfe-482e-8aaf-c8090b8134b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da19eb8c-c045-42f9-875c-bed58375d076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c044284c-198a-4120-bcf4-a7d80aac39b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fade2068-2729-4bef-bd2a-329d698ba776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff152f76-eb1e-47b2-ab37-0a00d9d28810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0693586-8bc0-47b1-8128-c298f4a95522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "17aa8e66-a582-489d-91f8-6b0a07886c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed5a822-03d3-4ee3-b5ea-0bacb4184979",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894938eb-1c15-469c-bced-a831ec1daf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566ee16a-0824-42ba-bb21-02887c9ff641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cf3ad5-7459-493a-bbf3-413bb3aaedeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8ff352-6109-4de5-a057-34d3d5dceb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448126cd-accc-4f3c-938a-0e0e3fb278eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fd3e14-5b7e-4005-815a-204f34c96a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0733b5-085c-4d8e-9080-8911c0e20c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c779616e-c9b7-477f-bd8f-1c09fc89d2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de862be-ddaa-4836-91c7-249e8632f69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d79073-f23f-4259-bba5-77eca73ffa1a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df756e05-a677-4314-95c1-b7846197af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe31f865-a73a-4c8b-8fcc-a1a3e2a32e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19dadbb-fca7-4357-830b-1a722fef1205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb7e6b6-93f5-4922-a6b8-8324176f0e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b126aa4-e778-4e06-bd94-de81acc529e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9edb40f-3302-4c66-a068-db1856dbd933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061ae4f3-bbb8-4133-8987-1c098ca7c8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f17327e-92b6-4ff1-8362-3dab975e3c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca84cdb-c918-4290-b5a0-02831a3d293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252c19f-0b4b-4bcd-8086-cacd1c20fb3c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dd3c46-c3c5-4ad6-88a5-8e7c17036757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5e3896-01f5-45ef-9ea2-390224e780f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b8f0ce-7cb1-4715-b813-a7ad0c89d6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5b188418-4700-4019-9339-232c4f831346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45287fd1-8c05-42c6-b81b-b86e3ae68174",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf5d9da-c2cd-4462-be2d-b8285ca28b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec8ec211-25c4-49f6-97ae-68e61fd11924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527b5e7c-8cab-45cf-a141-77641607ff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce72421f-d593-48d3-9245-4249b43a03d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde97261-09e9-4838-a1a0-9b60cdf20d06",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660778ac-465e-4325-a8ad-f972e0a74c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbad60c1-904b-42b6-926c-c4e29b316466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a8cdd8-a2f8-444d-904d-90029a5e86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9033f700-00a0-4aa9-a616-c5735d7ae845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872fd161-0a11-4677-ab0b-eef4956495d4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c4e6a-33c7-413a-ba54-ced36a27264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a08a833-4d93-4b89-85ba-181be791a5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7f597-42f0-4fbb-b2d2-cbf7b3afcca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2b0d3c-3859-46d5-98c4-9f89b7e50098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010b1fd0-ea60-4b96-b2d6-af0b13f612c3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdc8a79-30a5-4da6-834b-c38ae258f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a331a373-31ed-4b67-b632-50df287792ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d00f1a-0b86-46d1-8d8c-0d4d705f78de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd50c9e-03c9-497f-99b9-850a9233690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2211f31-3169-4345-a675-b7b781a485ce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18f5df-6378-4b6b-a299-58965421c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2f6131-6281-4e52-bd67-83f0236b76ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ae3e5-0fbc-4eef-bb0a-03467d3a6d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d11bbf8-e91a-4fd9-84d8-e238bd6aba24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d4960f-eed8-48f3-993e-9c8492c56f82",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054c54ac-fe24-400b-a058-4c70dc6585aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1efc979-8a5c-4428-9782-58126d952030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e5bac0-6406-4e72-975a-ad2c89f50537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "221007d4-a833-4526-bb52-0a566a3e8768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442cbf8f-8b74-42e3-979a-0e463cde4308",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d8c2dc-11eb-415c-a689-c20960155ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdb940c-c6b5-4242-80eb-7c598d490bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091a006-96bb-48f7-b64d-420fa8d5bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cd939524-1192-4b8b-b9f7-f86daa80d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3744dec-3c2e-4cbe-9285-8b12081d6fc6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892597b5-cd53-408f-af01-b3a76167a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec6d03d-0683-4762-a399-21ea84abba30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923658ba-47f2-43b4-88ea-c2fb7be00fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9c2390-8721-4ab8-8c0e-0906045fcde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af556a29-971d-499b-ac45-9839d83c79d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82174be-7534-4b8e-87b5-c9e7e8abe41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722dc1e4-3ac0-44fe-b5c9-ecf5d1daab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c97e5c5-3985-4281-b481-e1eae5cc47f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5d8be2-6b6d-4dde-ad2c-a5dcc34a744f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4512c7-d231-4852-9677-2f24a507ec8b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd98c34-3981-4385-9b94-7a93482bdae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d09609-2cba-4606-a51d-b9cdaf6f415e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f24eee-ad9e-4a16-97aa-7c6c7ae47394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cec9af6-c70e-4642-9616-84e87d57faf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fc87b2-eeef-416b-a200-b0401cee63ad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6319e358-54c3-4af7-b885-aab88113e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7436321-fc3f-4563-9397-a0e348718e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5368eb52-fe43-44e9-80bb-6bbf475cf68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1251f93-1110-4463-bfb1-ed706d91c0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b65c3e5-16bb-4be5-ba33-c5099955efc5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68bdd5e-54d7-4aeb-8975-3a3ef640b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fc090c-ad14-460f-a96c-b9f79d1e4ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f3980d-b158-48da-b9ed-bdff2426b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39a10fc-b226-4598-8eb1-01b47a9e17d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f796a9-03ff-40b7-b7bd-3b262c78b7ed",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dac067-af31-4009-b977-3864220485cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f808d3b6-f791-4988-b9a2-922a0f202014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d93306-411b-40fb-bc5c-a5dfe6a5fa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca74620-0a6e-45d1-9ffb-669a64556da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab77911-f96a-4a76-9252-c706bb160109",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92544302-9586-45db-803b-9779aaf11e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10696bd-e6cc-438e-8682-2fc52bfece0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458dd6f-aa67-49bb-ab25-80b3dc7e6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73df5930-2f40-45b9-9774-a55fb6acc244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df226bc1-7e9d-4481-83bb-6397c687cca6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a93c55-21c7-4489-b6fc-cc689f2be193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33df19ea-dc46-4872-941a-de66f1d8e082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1642988b-d4db-468a-ad82-51cc4d60c64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fef7f8c-7fd3-486d-aabf-85457b9b5902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf7c5c8-8c63-4ed3-b0a6-5009f811beb0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4971a2-e69a-4610-ad8e-69dde52f790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3994885c-6f15-41e8-9801-8e3f074b0cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e699598-517a-4384-9b02-cb8e6a89875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3d0f9-f874-4006-b26b-568785f4351b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e50b144-70be-4d5a-af1b-2c636e484b5f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5166e6-0f9f-4a11-879e-09bad859d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032d0477-915e-496e-b14f-b6a7f0b441d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae62d634-9f3f-4037-b4de-41bbb0ea2676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac26cc5-8c3e-48a7-a5ac-c0854cb58af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95183f8-892c-4daf-b340-ba67d3739c4b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cef284-3fc7-40b6-8d23-015b2dc36519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e6a148-a540-48b2-ade8-bdbfb80ee8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1160bdb4-4527-46e9-8398-4ce5b8f0bcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf890e88-5ab9-48f0-939a-8c9a3a977e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5be4dc-372f-486a-96ba-153a50e61a6a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e825c2-4a5a-4f92-862a-50e6a1424577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbc02ab-d9e7-43f5-ad97-2bf6d4c6fe56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce1640f-1afb-4c1d-8699-1cd619bb5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a2f6d3-4669-47c6-abfd-acc29abd28d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b352c03-9f74-4f65-8690-05417b170c1f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8f8f8-36ec-4b6a-8b52-c2edd35baeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921d2c44-3c00-4fab-bc47-f0746bec9a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09ef019-a116-4b31-9da2-2955d55f44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "699aa43d-21b9-4dbd-8e0b-00a584d5c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac7677c-989e-4ee5-adae-6aea88e8aab4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c4f70-d75d-4245-b184-b4e420bb8d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe10201-3659-4f43-acca-7274652caaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e16ebb-1d31-42c4-b1a6-a4cbe5a1b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b68894f1-9af0-4723-9801-a5972b6b5cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc926ab5-3b83-4968-8039-2798b46c836e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a5954-40a0-4872-af9b-f1246a371f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c2e5ee-d1de-4689-a0d2-14246c8d56fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb17b5-57f6-457a-9bb8-c804b111f894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda17c14-d32c-4e0b-acfe-54e1aae2016b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a1adfe-4bda-4da1-82d6-c9d529c2596d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11732983-dc4a-468b-8768-5487d2aec8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fa50d6-d06a-4721-bc3e-66ec69267772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac82d8fe-9073-4a17-b95a-47e30ce9ccb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cea990-605f-422d-9965-5cc247802d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71798d96-a901-4ce3-af86-72328ec225e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a8c04e-8f4c-4f05-910d-63b6d96050ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378efa06-8ef3-4513-93fd-4c3f01c94bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fd9751-d973-4581-a839-ce1676c0ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db9dc4c6-fadc-4697-9e80-1bd1b34dd5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caf4b45-cea8-429d-a6a2-24849d3e0383",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c477db0a-ff60-45ac-b64b-cab60eb19cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f536e82-3fe1-4305-b8c1-ff27783497ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eebb926-3d73-4bbe-862a-53fd31ec574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c101951-de75-4c55-8173-056d1dda840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956d81d2-2ce2-4a0b-b571-6941f744fd1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce19175-193e-4295-bbe0-87b196617f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84842be2-ded1-48d1-88e7-b36cea2a7ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3161fe1-9123-4fe6-be0a-16d5cad19ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bc6dcb-ce5b-4ba2-9bc7-17cf6c448770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139fb713-8283-4e27-851e-e248755068ea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ecec2d-9086-4de4-9f7f-eb728b57581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154526e5-7ee9-438f-80b4-1b29ea00188e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5002d926-770a-4d93-b6c9-b8c822bee891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee283329-f70d-454a-b808-0b4578321572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba78456-5505-4ea3-88cc-a161a5226a4f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ceae6f-a7d0-4687-8a7c-cacaffcc547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898aeb4e-c51a-4caf-bd20-f56318e053c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71aa4af-78fb-4252-be51-490f6c4ac268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4d1dfc-8df0-4c9a-a630-0cd0044a61fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815d0377-3b5d-43e9-8118-c6b14ef5acf1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc90daa6-4f42-405a-9235-cc4564229554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1801a606-b234-42f8-a77e-9cb4271e173a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d197eb5e-9408-4ddf-89f2-679bfd997dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c13b68d-29f5-4fb3-b0a0-91d31f4072cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc8819b-55da-491a-ab9b-81bfa76016a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da6bd8f-bf7c-492f-a2df-b53afe8dbcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d672146c-bc14-457d-970d-1189f104fa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358400f-54e4-44c3-81ce-d3358c7381b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1175193-fbe4-4b7d-880e-16ebf0f797b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9715cdc0-c167-4f6a-9a8d-fde2e16a5b57",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57d1b90-390d-4fd4-9e96-0eee9976a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10a0688-a668-4743-b033-da69cd7501e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c164421d-9eca-4ca5-8b2a-a26bf136cd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba3ced5-1a72-4a7a-b556-b62bfdf2c67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea83109-82a3-43ea-bdf5-1247f369b998",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a52a6c-2699-446a-ab19-91ae0caddc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0779c9f8-3f1e-4ad2-b639-c1e2dd9aa674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4fafad-ee48-4a38-846c-b7611b15918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e0b165-ab75-4ab4-8570-2f51fff9e642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8043c3d-1647-4e2d-b871-7d23868c7999",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fd0dbb-8071-4aa4-b261-c0cba35bb380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5001b858-faaa-4bf4-8d87-0033be4441ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594aaed7-74c0-419a-ab36-5491af1ac70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "845834dd-5de2-4b36-954a-69bbbdebcccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826b12ff-0526-4bad-832c-c64067be2cb7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc4eb5a-138a-4768-ba1c-107dfa1ca26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69f1b0f-fe88-43f7-98df-fb6beb281f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c1e4b-68d5-411e-87cf-069cef0be3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0191e341-0b5c-44cd-95ec-d45fd5e770f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ff3358-498d-4b9b-84ab-0018207557ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f0dc62-f2fa-4ca6-973a-97f7435e3a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724da0bf-5922-4fef-89e2-03bc8f2de303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8d758c-54bb-4606-83aa-e1daf3b30bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a024bee8-f1b5-439d-a517-3c45a2452112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00b1185-ed74-4249-ab27-d8846880fadd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4387b25-1b01-4935-b4ea-3abde14fb8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ee6bb3-5be9-4dff-ae85-8a9f813cb7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046b2fdd-7403-4e98-9b2f-c4e90767a608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef26d6de-c5c1-4a0d-a885-e834b3b6ecd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb81b43-0c51-4fc9-9750-741eb904ced2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a87f723-ed20-408d-bad6-8d74e0967081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3c9122-6919-4017-bc9a-da80d57b55e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930bc1f3-8929-48a6-8a73-30a193438e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff11a1cc-fc54-43ab-bdcc-122d782fa1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd4aad3-1c72-4dcc-8c21-5afaa5a1b610",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5cbb97-dd83-412a-8a76-0ad09c874445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080d2d20-2408-4b87-a9ae-d654c7a68cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6dac3f-a7be-4254-9836-b8332b7a98d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee97668c-8d59-49d4-bf16-47b75f2949e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dc2a6b-3e19-4fc3-b9f1-19b802080dec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d7bda5-88b0-498c-a833-d8fa4891b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4359b15-133a-439e-8fe4-0cb670488e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b386da6-8ca3-4e0b-8729-ed397325d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd7fa5-72cc-443a-a29f-b53a60096843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646de421-ad01-4bcf-aedb-540073263a6f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964e5892-7387-4b24-b1df-6ac8ab8fe5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0f8cd-68eb-4e00-ad37-f32648c66dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2318605d-f784-4b8a-92a4-c488343f6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d32232-fae8-4826-941b-e2196ce5c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caad527c-9f2b-411c-a3a0-f23317dc0c0a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c604745-8162-4e44-8b06-1268acf0c854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dd0c25-6c25-4f57-a877-8b75286391aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37e8430-0f04-4d15-8624-e4e5bab22e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1e40c8-f2ba-41bf-b5be-7220c3fab9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b41c08-ef74-447c-9ce3-6d28015bf1d1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c99f2-b400-44dd-b792-bb4feda3cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3850e16-5735-47e1-8dd9-310f9ecffc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a873300-50f7-451f-9e62-04088d374621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d64a82e-86b6-4e1a-bf39-63d3cc785081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bc341e-0576-42b8-922a-410d2568fa44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b5a7d7-4180-4134-8569-855897400e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d095780-c416-46bd-87de-026ac4e5d176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7444cbf1-7ba6-4866-8b55-b46a0391f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d14ae67-6f5d-4f3f-b420-61a53c435db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04492089-8c63-44a1-a5f9-2bb9b1ca0271",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142787dd-7369-4fe8-b0a2-598fe4e3cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cee4e37-6ea7-4765-ada2-18637398338f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e72a9d0-ddad-4f9d-800b-389e44689bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "266b6eda-58e5-41a0-80bb-e1b499e29db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edae9a7-cbd8-4024-85ad-20de98539c66",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f93b14-21fd-4bf6-91db-5cc615d906c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2c1d6d-e91f-4072-8348-471e3cb69126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0265aaf7-df04-4039-8750-8c230cd83875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb68f8b-50d0-4b33-9690-2c39d577c4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b4d904-7cbb-4f67-903a-d3b07f73a849",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8442a978-de86-43b9-8121-494747a81225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423cc75e-676e-4d97-a778-3a693863478a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bda92e5-4aa7-4a13-b4ac-7a9ca4288b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07be7fc-a676-4429-b9ae-a292c678e67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a77ba17-431e-475f-af27-9e3292453a58",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a646b30d-ef0c-488b-bea6-b7e8a104b039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232fa1f0-7b42-4454-9466-1b7fe1d9262c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac093b2-805f-4570-b026-9c2416d3622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf351cb-4bbb-4df0-a8b3-b51139596262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8789703d-6790-4f55-8321-806de32cd07a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348d4db-8a27-4467-83f9-7dcf10774200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c452b6ad-b7ba-4256-9ffb-b9647f23fc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fda48b-8cb1-4940-8ba4-5d0673d9bd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af825387-07ce-4a67-a5bb-1b27ccf729e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9103140-b21c-4f60-ad94-d1b98a2ff71e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b58fa3-039f-4e27-b91d-15448427ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8e6b00-5f21-4e84-b57e-b415fb802178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99f4cc-c786-42b0-841b-e2e3b75e9167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8a5c75-b908-403b-bb69-2ab37b38ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c9e7e0-b95c-4214-8105-a80d28a2ad75",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d82776-f0be-4e76-b900-18235074a9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a016157-0484-4a2c-ba74-7666b3cb297e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0391b-1729-4ef7-8765-2bd92c5f1ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be54ae2b-b859-4216-8dd8-768539d427f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1091f78-76e1-4cbc-82ac-5ccd16488fee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c44ad-117a-4e1a-980c-c80cd9b3413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5fa7bd-7979-4103-a04a-13a2d2a23e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d00066c-e61b-4851-9f56-5cff117772cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a6471e-e352-4114-9780-7ff69544c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcffd52-8f85-486f-a55c-4e59cc13f208",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96e4646-3c6f-4cc2-9d71-7acdd4cadfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e06c28-8d17-41b6-b69b-75d39a832ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f64b99-f8b7-4e22-a49a-f9afe4880b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1609c29-8b19-4c93-a1ee-0f552e0ba98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2386bc35-6f7c-4c49-8c30-5eb3d0cbde20",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71779b75-e305-4d2e-b786-724342b75bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891d587e-e3be-4c3a-b759-d9aadca0f43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca112ca-629f-48cb-9afb-884fc62ee21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca71c933-b3d5-4829-9dfa-7980b1a78327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d8b6da-3a61-4e0f-8197-162dbbd9ceb4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce1ba9-dd58-4409-a9b3-4f6d5102cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fe5cce-8d47-4d24-ab94-469fde1e8dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccaae85-60bd-4d9b-961a-f62b20406a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7060a6f2-3225-488d-9334-1d89756a71b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b34d60-f258-4934-975a-b16521bc0fbd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c00630-f5cd-4e83-a711-85b668d1b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df4b61d-416f-4ae0-98e2-0db73cf964b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc506025-c621-4b25-b27d-ebd4a1c794cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba8925c-dcfd-4a0f-8bfa-206f1c010fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f2f85d-ceb2-44d5-bcf9-1dae1d7247b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e79ff4-7970-4edd-ad63-8e4bf267b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27466e0-3d14-44ff-a66b-fefe8b19e32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564f7df4-3cc8-4ae8-82e4-0715bbcfae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62761484-9144-4191-9a77-327eaaf787db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d54159-d5a3-4997-b937-4ed9e279ea92",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96118ee-5981-4d9a-ab18-ed5b69a77b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2204ba6e-766b-40db-a8d5-a897fa1033c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd0f1e-6a5b-4c36-8fc5-0ef974ef95f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9f76fb-63fd-46f9-892f-aeff81febc1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dae7ee33-5260-4ae2-ac9b-088d8b81ea7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b076be63-cf24-47b7-a46d-b66027d4df7e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce85863-0b05-4237-b40a-eed98effec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "458b4530-a20d-46cc-820f-288f61c65f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc46ec-4ae2-45d4-8898-bff49d1e9475",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "455e4e84-3789-469a-a2c5-cef3adaa83a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40a907c1-f7cd-4f81-86f7-664426eb1331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd752bc8-6284-43ea-bb90-c38034f703d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47ecae22-e57e-4480-9c8b-5a081e611dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e3584ee-239b-4ed0-898e-c19a1dab4c0d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9c66dfe-73a3-4fe5-a758-6fb699b51135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7df839fe-3c61-483e-b276-039a7270854d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60c9a948-48fc-46b0-933e-0bd929babf05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27aec41d-f511-489c-927e-76c9333b05f7"
                }
              }
            ]
          },
          {
            "id": "c41ed585-c2e8-4bac-ab44-57618a9b6d0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd73142c-0c29-4bf7-9a22-76314bc9c3ef",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "23ee074d-de9d-447c-b7aa-a1993cf273b7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7722a2-76c3-4429-88a8-302a4f931c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba7dde31-5906-4258-ba1a-d23bbb33a594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7075f7d2-371f-460a-9bad-ef1cbab4f120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7994cd94-310d-4204-8465-2a055dedcb69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcb47614-ce36-43ec-b7ae-f178984a07c5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c7b951-090d-4c90-8824-a1b38a33d649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "767fa7b6-880c-479b-b098-a076caf75dd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686e3234-0694-409f-8b5f-336fdd32f2d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cea5cb6-7965-4796-b97b-b52bf10e1d92"
                    }
                  }
                ]
              },
              {
                "id": "6ad881af-6547-4211-881b-45b55e2f2763",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce327ca4-e177-46f0-99d5-2cd922aa34cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b11ddb1-cf5f-46c1-8324-6511a1bab37a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a8b8b88-591d-45e3-92c9-787e891057f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3206992a-5876-48fe-a0fa-4e8cdb43b777"
                    }
                  }
                ]
              },
              {
                "id": "e19d6ab0-3bdc-4171-9f74-0e9b8b443329",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeb1e54e-3d67-4762-9d97-947edcc71f8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6d29c4b-0fdf-4798-95c4-90b6b6da60e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "224db560-7264-4f06-bfcb-0c17b3e1cdbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eba9a672-d353-4d32-8570-603d6466f262"
                    }
                  }
                ]
              },
              {
                "id": "293b51b9-910c-4d53-aca2-0f6d12bdceef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa3bec47-e4e1-4c31-9197-044740625eb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dea0f240-cb5a-46a3-8990-197c6c2bbd87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a5c305-6646-409f-965c-20b35c3ef7cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "97e8ff46-26dd-4f35-84f1-d7f2004c3e55"
                    }
                  }
                ]
              },
              {
                "id": "20d13716-610c-48a9-a9f2-067e03e9d50e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c3e3d8-b578-45c2-b9ca-0d2e1d2b0119",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccca50ae-ce6f-4655-8d58-bd9759f4748d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f82c78b1-c5d8-42db-b47a-82f8fbd481ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "77e00e26-9342-47a5-a1f8-d8369319d064"
                    }
                  }
                ]
              },
              {
                "id": "b35fa49d-0543-4625-9550-8b6981e3fa81",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16e09785-8be2-4a74-ad69-723fa79ac75a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "015bf1ee-abdc-4831-a856-9d40d95665ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0c0fd87-ed72-4dd3-8be9-b5b0a24bc1ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5cb63b69-60f5-40fd-94f8-be8a26cf761f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf39c044-3199-455d-b985-97fba0743bd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12a7a1ca-0d2f-43c2-9df1-ed085c938953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "090bf8d8-bf53-4cef-8f0e-c3f243ab0906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d71cdedc-6bcd-42e1-bf1d-97eadaedd85a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8292ae1-3c6b-4551-a832-f8871da7c121",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f8785d2-e88a-4309-a367-ed5d86bf7a60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e888fd9-bbcc-49a7-8ddb-b647b4f8de43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72a0cdb0-42a4-41d7-9dc7-1ccd67634958"
            }
          }
        ]
      },
      {
        "id": "3fa5e721-4d43-4d5c-b0db-d161973acf7d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "453e0365-a26b-43bf-990d-b082a74814ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b06eb1f0-587a-4e87-ab09-95b1604dd68c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e3a8488-dd33-4a5a-ac7d-6856f549385f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c467da1c-5041-4cb2-a291-47c97aa6861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468a3a02-62ea-47e7-b128-741fd818bed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c3635f-11dc-4600-bbda-b07e58e76751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f858709a-bc7c-4880-afb0-01de65bd9c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315f9ed3-eb70-4704-bc2c-a71e76cbebfb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9596b90-3daf-4d1d-971a-eeee3a9e9b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277070e7-8d9c-4f46-a064-9db80cf01163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e22ea5d-5ebd-4839-bea4-94f5b0b60ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d807129-dbc3-47f6-ba75-c7ae4b6fd6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d85c8d-86aa-40aa-9f15-f5b35b41f1c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf3ae07-bc8a-4657-b827-d433d003617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb299e-6b7e-4c7c-8692-34fee9ea286a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a4ab55-60f8-4e6c-8689-ee168a0ea614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9755fd31-533b-4dc6-be8e-8a9cfdc3c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d091bfe3-a33b-44f0-8f2e-1b748de74d8d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2bd94b-df23-4e99-b5bb-9ec1bdbd009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc239149-28cd-47df-96ef-b4edaeb21bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1760ced0-4b51-4ab2-8c0d-e0fa4e949ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b14059-b956-4f7a-8c8e-e04b9e5b82f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185a3f62-6d97-419f-8ac1-e6b269bef435",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd887b-7cb3-4d9f-bfb9-49cce96e766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1307f31-aa92-4c44-83af-32296efff847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eb6ad2-84ca-4ea1-8572-38c68d8d1daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a756f23-3bee-443d-b3fc-dfeceae9f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e84ca-061f-4de7-901b-ddffc51ffb50",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708ffb4f-db04-4727-bf86-ad6cf014b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2257ed6-f3c0-460e-9303-9d3320bdf637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8badd331-66c0-4e78-92b6-ce02028b478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17b31d52-d22b-4431-848d-31a019a643b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049fe7be-8225-4b2d-87a4-35b352fb4ad1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c42a10-8b2c-4793-ba49-908ebeb0e8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7e7cdf-10e1-4129-97ae-ed599956ca69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363647c9-95d8-473f-8c4f-bafa1b588d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b04f05-e2b8-4c10-afcf-0b94253a335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515783da-2189-41e9-a904-4f458ea6c045",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f069381a-75f9-416b-bbc6-23b6cde04136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e9024a-a54b-42f1-be51-42079ab09069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d557a-b2da-4920-ab7c-10546ae69315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf09b166-4778-43f1-8865-d5c2b0ecf4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4330b5-f7c1-4142-affa-1bc5b6319680",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a483a507-e622-4422-9157-cac6d355a18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5bc2bc-c499-42e1-b40f-6e85ec07ee56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e311693e-77ab-4c74-9048-4661fc961fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "647cb6cf-5004-4e5d-8d94-9e474b8031f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731a878a-68e1-4650-b2b0-3ef2462bce79",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618de773-0ee3-45aa-882e-c354a6c63232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5308be19-a48c-4d17-a0d3-a13a0cc60dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73028e9f-0f2d-413f-8bb8-8db85411c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90532fa0-1455-4ceb-ae84-ed2cd392612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999c3eed-2602-4aeb-8eb9-0f03b66d7d7a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4da90c-ab43-43d5-9453-f428880f8102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599a0c31-4153-4d47-a640-232931acf381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397b62ef-4f1b-4eeb-b316-2d4fa7d81165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "03723c46-a1b9-4dfe-b947-2bd30bd29c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031179fa-9993-4c89-ae84-43a30f467c96",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b041c8-7161-4864-b59e-1e57f1e2fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd43904-bcd6-426b-8918-a8f26f900405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699b45c-fd07-4f3b-b2e8-1f4f69eb2e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "666544e7-9485-4e66-8eb9-ffea31b97073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fa2b2e-9bd6-429d-affb-60f6c67f5863",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89098be-5f32-4554-b326-82fc645c4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7354999e-5800-4a06-ac15-e409655ae65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b696737-be10-44bf-8807-859c8ddc39a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d148e2c0-2d24-406b-9f87-a922e482df3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51f2df-35d3-44d6-855f-7854a550ded1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6567148-5a7f-4fa4-8f0a-dc8264882460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d615a929-aadd-4cc7-b666-0bcdc03eab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1385703b-a4c5-4b9e-bb0d-74be5d8df0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22aad6ca-c980-400b-9e17-89632a7522a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1d68c9-e75e-42e2-916c-e8c027c08ba0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508dd5dc-3c0c-4327-874e-1982ce37bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf589cf2-4a27-4d0b-b3d3-e7eee821a9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55a51f2-09f2-4c2c-96c4-0832cee7421e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a697591-8ee8-4011-a54b-7b8b59a6923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf7665c-a131-4b20-8f92-c2f4bcf54928",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb7aca7-d60c-4e8a-9464-2099dbd83b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcd9bc4-54bd-41cc-bdb2-39d608ca9011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded56d7f-c2b7-4d97-8b6c-e7c09ad813f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "13161429-d7a7-44dd-a57a-3b3875eb9227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7bf5cd-4a98-4c32-8c8c-50c56061dfb6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b074c0-351d-45db-ab64-06fa6401d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82902263-bb66-4532-ad93-6633ea817fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580f5d66-909d-4388-a4f3-29568e0bdee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c970e5c-8e69-4721-b25b-ea7adac71e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e891adf-4791-4bd1-9d67-85258045b7e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e19890-9a19-4b90-8d3d-c0e7c29a4217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064e9513-60e9-4dba-a12d-d46531cf41f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d95ae0-cff6-4cbe-8d99-3958365d6887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a215fd-9d22-425e-8cde-0a3ff024d96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bd0ca2-6988-4e38-870a-a123209f28a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d11c5c9-5269-41db-8cbc-e375987da3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f48467-93e0-4df3-b619-5302c9fd5a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de69ce0-d537-4ba8-aaa0-e4ee46611d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f37a57-a37b-4dd5-a0a3-553dfced61f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca92e74c-0aa9-4969-9171-7f0349a4d24b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6091ac-3bdb-45b1-8b5a-3ed3d383833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5271b710-791c-4bf6-bff2-a4efff094ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f9962-d58e-41d3-a25d-ca6e3566de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15521a71-b48c-4057-b0b0-2d4c31a69b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e97e818-8489-4681-b0c2-bed78f6d38d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553d9f5d-7872-4318-937d-0637b1f104c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dfcf2b-4715-42dd-bb51-126658358837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b3f00a-0bea-41cb-92a3-fb0614408ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4954ccb-9367-4caf-bd0f-0e07803b8b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6db29a-a857-420f-83d9-54157d1a1eb2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5bfcf7-4a6e-40c5-896e-6aba478d4c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e544b1-5957-403a-8175-b20d594be7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6f3b3c-46b6-4d20-8cb1-e70a49f944a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bd3453-8a1c-4210-ac3d-0c321bfbf53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf054a4c-5c36-4226-8999-b896edb9b448",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ff2f5-691e-4ee0-b937-d637175cfc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263684c5-504a-4484-b698-c9a193fe6d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7675b0-6ba0-4b2a-b0ae-685a453dcaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31f1a36-8bcb-416e-88d1-d6ee12da6dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5248c1-3636-45f4-a954-e972e01be595",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ae04fc-d8ae-4dff-b045-5f5dd907858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c06efae-5189-4364-b56f-0924a1668337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e2a63a-c0c9-4177-9534-0474c9a40235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5324a8e3-4376-4970-be27-eb12b8eaf262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46bceac-2a27-4804-87e4-a77f8e79af6b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab1853-5c4c-4b3e-bf63-6b69eae0071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683d8257-f7f4-426b-acd1-d23fbf60ca65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0c8bb8-fb27-48c6-8ae8-2cb38420127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f47881-7d3c-4a51-8771-ab81fec29533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5fba44-afb3-4656-bd27-671e0ce21df0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548c2e05-9d7f-4c2d-b38b-59c05ab46ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be838327-b8bf-47ad-ac87-c1a6f04ab275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3433b97b-46bd-402d-b0ff-b89e9f80ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "327c2f81-ed5c-4245-a7c3-480eb344ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8337f57d-5a95-440e-a9a8-1e0b3e7345df",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa083b1d-100d-40b2-bea7-2f04cadbc8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277aa305-a9bc-47a1-b56a-f5d1e581a270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776ecab5-ee5e-4c5a-bc74-079468bcd82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f4f7a4-1142-4309-8124-99beef6a771e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d354711a-4094-46b8-8ad3-6b740869a46f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236a7afd-1e53-4f31-aa2a-cafba6084fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c37e8b9-2cea-4e76-b11b-42c530926195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effc2267-a0af-40d0-a272-de06df3f1abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f352e2-d842-494a-9498-ed77173fad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92578ed3-163c-457b-8968-545068cf1012",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d375c7c-4e6a-4dec-84a5-a655a685b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca46ebbd-feeb-45a3-be47-f9d0a9a08a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c85eb6-1696-4409-8f8f-b475bf91bca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8496a4-ba78-46c9-a06f-76aa20cafeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09a7630-39b7-454c-bf88-7ebf6c70e2c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bfaf4b-7b67-4486-98a0-7d749fad8b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebeeb83-b89b-4122-8f1a-96c5fd19ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b51e95a-24ce-405b-867c-22f3ffe93d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0264cd7f-5b9c-4fba-81bb-b2dafd92541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8742fe40-647e-4b9e-875a-7c088eff0cc7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e7894-a4b1-4610-9755-e8a166682a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f09fbd-e39b-45ce-bf72-89bee1161215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6095cff8-f6bc-4deb-837a-fbcedc4bdb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa805e5c-b0d8-47e3-9823-4e3c5ab53ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75548ec8-2d6b-4e56-914b-4f214ae16434",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c7abad-8f7b-44c8-8395-71c43f2ec93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b8657e-125f-4b01-8e79-7aacaa7aaba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17923199-f8e1-409b-a248-f2b0df717a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34ac237-d7e5-458b-a741-f6f4238cacc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13fb5003-339e-46c0-86ae-f31efef87705",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9be4c865-2bdc-43c0-92d3-6bcc66f3cda3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcfb9fb-c2c0-4378-9fd8-1122992f584b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e689849-3596-44f8-bb9c-a031b5aaa0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f49c33-9c12-4578-adb7-415e878b389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e079fb89-34f2-4478-9df9-8151e0a3839c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10685b1a-c79c-424b-bc19-12ac5a2c4cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "399c87cc-0d5d-47da-98f3-e8164c17553d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d9917ef-e5fa-4eb0-a955-2553705f345d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24904432-6ba2-4c68-89ab-2d298decd2bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9684a0a2-9d9b-4785-b697-1fddebae70b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ceeb37d-2539-4db0-8f27-d2f71cfecf01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34436c97-308b-47be-b055-1e2046751fb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33571b72-a1b2-4421-87d3-79f19ce36431"
            }
          }
        ]
      },
      {
        "id": "11448c38-36cc-40fc-9b03-40cb600d0b88",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b1be39f3-fd94-402b-b543-be8c73b80eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2351200-f0a0-4f16-a00d-45eb0814aeb5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d04c39dc-89c0-4618-b47b-eb7bbe435e06",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad248004-b2d7-446f-a037-e67d6845c01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e64b66-8331-4b85-873e-e8ac19510c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a07109-5c9a-4f27-b1d7-c20d03002d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc6c3e8-5d54-4f81-ae9b-8f0229f3bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff6b9cd-f6e9-4b5c-b34c-63418a61d958",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c2282-4212-4f6a-a560-b494d50b8c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3212a0f-4717-4b63-aa7f-5ca667849314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5ef95f-0f32-46ab-bd78-289061e72cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b831d6a-2d4d-4daf-a734-3d07d87674b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383de336-1d97-4c30-a3ad-ff398d1d3bbf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ce430-346d-4c5d-a15b-5e5545c01d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c9797a-0670-4fca-bb10-edc2403991c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a307948-f185-4f53-ba41-4afd492e626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c53475-eb82-4358-9a10-f1bc1d0b8e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3153a-1ae0-44ba-99d3-f21913709d25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c26781b-6252-40dc-8030-f7cfbea4e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9254e03f-68e0-4c12-a578-776d2b4b3ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffa433d-656d-4d3b-84cf-4c39b9ce2b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0bf82b-0aea-4ff5-aaa5-47096491c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1d5185-c479-4fc6-b36f-6b261d4f66b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e27ee6-2971-4bf1-aeed-ad507314cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8278964a-473b-4785-8aae-89e39f04b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16061811-b9b7-455a-a776-0322be5e4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcad6a0-f236-4d09-aabc-fd8ddd74568a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfda6f7e-620f-4776-85eb-579e78cde2d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e9b4a-aa80-4add-8389-7442446a19b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d193b31-4275-4702-ae36-7e0d84b0f1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000fed04-e3f6-4dc9-8dd7-9c2a4740b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe3d7dc-fa99-4869-9a35-3a4f2144c66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aff28a7-11aa-4f76-8182-1c55f23fb383",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d90a7e-76c2-4fa9-a79e-354479084e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1177df36-dbec-47d9-a902-222f07f68c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec7bfa9-ac73-4706-80e4-3b101c1a47e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f453635c-ff83-4821-8d49-9d1a12a643f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f774810-e78d-4f95-9834-a98f560d5e37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cb0103-8aca-46be-8598-e6e2547453e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15769c86-11dc-438c-b127-0ed5b7ea4a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ea732-a0e1-46b0-8c36-11552762d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf9e2a2-c1b0-4198-b747-b1be960df202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a1f786-e887-4281-9a30-0bbeea73b693",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812333a4-5309-42af-a663-7089144bd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d125c7-472b-4daa-a788-b446ddc1648e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38b268a-ecad-45b8-a1c1-480a8fa985e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f77ccfe-8c4a-4fbb-bc71-faaef5ae6d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeca104-634a-4e1e-8916-f12deb980d11",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87440918-4668-4051-8c83-09b8c7058971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1c9535-48ca-4f43-af7c-be64b403f9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847c739f-f9ef-4d59-b1ed-4b1ce1dd2b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c0fac9-0f3a-4f26-88d3-2b5faf7dd760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ccca07-43cd-4eed-b811-dce184c864fb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4740f520-1b07-4adf-be47-bafd58350ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b26c5b-707e-4456-89de-76886a4b77c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f096ac0f-f734-4d6b-a01e-0d80d271181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd31542-3a74-400a-8e5d-93869211fefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb21bac-a848-40f0-8f1d-2d8af692f150",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975d906-1986-4759-b749-6b55392aa05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e937a14e-7e32-4ef0-a3d1-8f6cb06cccaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89b1b00-006b-4f63-9f17-b896802e54b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21fcdf42-bd0e-434e-936f-e4b5fa6a7fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0f7fbc-7f84-4ec8-8520-54ab0187ab00",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7aa1a-94f1-4c3c-805a-de4bf97be000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab3cb34-5c09-4e65-97ec-633cc9ce674e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c335ab-513f-4cc6-9da5-dcda622233cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bbbc94-25f5-435c-a698-3c6418781304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97593e75-0732-4c39-9278-bb4dcb640fe7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a59f42-8150-40bf-9dd0-3a99db339cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d06a9f-b76a-4639-bfc2-dc87eed73621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcfff58-a0d3-4246-8116-8008dd5b3942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ef2987-7940-41ea-99b1-28726c98c6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e1e790-6152-4c05-bc6d-6f09107aa3d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f600e1f-d87a-4a8b-baf3-bd5ba183545e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f816865d-a19a-4302-84b7-ab57a39508c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6176c38-9cd2-42a6-9722-8fce365cacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "015a2b31-d2d2-433f-a11d-4ed6e9d34aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bc674e-776e-4443-aa8f-f79c65d00bce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c1c860-7ec7-48a0-9c16-0fdbfe32890f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471a7474-29ed-4014-ba4e-d4c36e7af74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8350b2d9-c8f4-4b5e-8bc6-d38e11daa1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ede292-65aa-4059-8cb0-c2e90d900e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee0f1b2-124b-463d-a1af-4d5332f90f1a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460ea0f-589a-49b4-a3f5-d39c4b2ab608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76c60cb-2320-4755-a3e9-5b04b38689e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5853efc1-d813-499a-820f-5f70d0b0a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "364c29dc-83a2-49ad-9ac0-edc81e8cfde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a9abf8-5e66-4f7b-bb50-d733778c9e8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dcea2a-60bc-4e27-84f3-0023c7a08cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdd4244-c7d1-4306-bc8b-d9f1652ea454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f7ff5-663f-4a03-8f25-eb7b13fc0621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e916028-dcbd-45c6-a599-a956d548728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494cc8a8-9475-452d-acff-074920dcc43c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7137f721-fdbf-416d-bdb2-a9293d768746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bc15d0-1f5d-41f6-9b80-855f72db9e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19ebf6-1b7e-45c3-a8e8-03e4b218215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cf3bb5-0307-425d-8051-c748b45e4641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eacfde-36da-4798-ae4b-95bb6c2960c4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4a0baa-e6ca-4e45-82e8-b00f27dcfd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78cd2c7-a7ed-4080-a196-08f1fe78ca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6f6de8-ce50-4791-b1d7-01a627a06a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2a94b7-ad8a-4a29-b6e4-bfe0c90b3ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76446c35-f415-4e23-84a8-15aa4c00d39b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fde84b7-a095-4de4-b250-a7e6677ea061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd674fa3-9772-456e-8317-e4f6c7e64757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475931c5-f67b-4b5f-850f-e32fcc55537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27924a65-08c1-422c-8d22-203d1d399013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c585186-5c80-45e0-9e2e-53be7728d949",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334b18d1-2811-49e4-898b-a4f88a44b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2a9b9b-3584-4cd1-b0f6-0d039634d586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba578805-56af-4040-9780-a186341fe3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99589b7b-eb5f-4be3-9716-d0c29c0e2835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b97a8dc-1f8b-47d0-bb47-8e27fd3dfa91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30686d41-b1b6-49f3-b1db-8ee4e4da842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d32c1d-d45c-4d78-bded-76fd25290a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8362754-bd10-4901-b46d-e9e8f376420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00bff52-3f3e-45da-bc75-d9efe5a6e8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59feb5c3-c09c-4a25-965b-c403ce6cad26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05bbc03-f814-4c2e-afbd-7113edd54504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83092b68-1176-4e88-88c6-00fe17dc6517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d227d23-4ad2-4c64-bb34-354a6cc2b39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54847320-1cc7-4fe6-be5f-2971913552b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6782331c-a383-4af2-b86b-93eef772df95",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ce2335-dbd1-4407-9d30-3c6aff634e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2577dda8-ebdf-4d6d-b077-813dd9c9a818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb707593-bf59-4a84-9be4-361dd9cd02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d85cf77-1206-4016-8d72-6f00e2dac34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460fa8b7-59fb-40ea-bea4-e778acd072fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af9e27a-a117-402a-aaeb-c6e8f1d8d49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30b3650-1157-44d6-be72-46d71e0cd1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b22bf4-2154-4a21-b5d1-b065691c5a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe85ba7c-63e1-477d-9272-35c068bd6499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f18f9ae-9d1e-4e88-a204-de59b790032d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b00062f-1b7f-4e80-beac-1863ecb86cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4856bab-ce4f-4bf2-8297-a248f8a01091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99182e7a-daa1-4a9d-9166-d8a8381e1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86893ccf-a2f7-4a90-9cde-21b263abadbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e55894-e00a-43f5-9ecd-ee6623d944fe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fead20f-d860-44cd-94d6-c5a42d6bd67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bf702e-5e4a-46e5-a196-e6e4be379259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2447570b-4324-441c-82d1-4e1b35f815a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7431995-4e8b-4c03-9475-8cc8dcf97337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e4ba56-fb2e-40a6-8dfd-552cf19403b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d66bc4-cdb0-478c-9996-8fca7bf24a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d0ba13-3e72-49e2-bd17-3ed3d5f04cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fd9fab-9d66-4666-8b0b-29eccb22a420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f7fc85-1bba-4bcc-9be9-5e319df91dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b686fb6f-968a-4bc8-b359-134b3850430b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d82a59-c642-4843-9610-363c624107a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b203c8-3f3a-429d-8e96-27b3f9d43b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11068660-45ad-48f6-8e56-a3030adf5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b9fea7-14c7-4b3f-909f-5c934ab21788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95fc1fb-64f7-4d79-8bf8-29b99ded59fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b49ea46-5252-42d0-a554-e790abf73614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dc3972-2bd6-429f-ac9d-7e8f8e62cc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6d63d-2912-4705-94d6-afa8356d7773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4a4869-1ea9-4eea-83b7-3751516d7180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ad88f7-b14d-4389-950b-da4f3fbbbabc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78ff0b1-4c7c-483b-9679-6af1ca03bc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e5d8b8-bef1-4467-a052-540a8ca41c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fec506-e011-41ea-998e-bafb8a7b672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa58aac3-51e2-41d9-a419-6b48a2361791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa40b5be-c047-435a-b882-6de923017e26",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad789965-27b8-413d-9c5b-d575af7d7de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a148ed4-5920-48c4-9350-088ddce13db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a882611c-c76f-4e9f-9f3c-f3b405de9617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f26e561-5bd7-4c21-a0c0-056070f2bd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d050fa00-28d4-4b56-bc59-396e44ff41ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e1e8d1-3b92-426d-b2f4-c48b2e5e8fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15f5016-4bcb-4001-a52e-22e257bba77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e1c55-f04a-4e5b-997c-4c3c506efd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82faadf1-517a-445b-addb-42661b091f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840a02e1-3f3c-4591-8242-7a6a4bface44",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15d0265-7a22-4105-920a-12bc9923b7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc089be-4e0d-4dd6-85df-450ce918d072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff6bdf-fd47-463e-bedf-a6da78bdd645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d3f2a2-af2c-45bf-83fb-604d2fac283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba50786-dc53-4b1d-a356-718fd10b4a5e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ced521-4833-4ac9-ade8-d5e494cadccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a996e59-ef55-466f-bc60-eab2b9d59ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36790008-001b-48c8-a17c-ecd29d408903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "543a5395-76c2-45cd-9a8e-127bb8073a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1de75a8-79d0-4720-a454-c381dafb27d2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e996d9-8e63-4fb5-8839-d75139e9dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb343c6-45a8-4c92-b596-b23c5722fb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19da289d-46db-45b1-8859-d0de23fe8acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebf3d2e-f3b9-47bc-84f9-a9fa829c728f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1a8d20a-27ff-455b-91c3-eb17238c42ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "987ff2a4-20ce-4008-8bac-d7c107db6326",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ce77a9-a752-4ab8-af65-e3922841cce6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1adf12-5657-40ec-8f82-bbf33d650424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e0062c-8e6d-476f-a307-1e06016fe34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fee55ec-a254-4a5d-8693-552f2fe3daa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba0513b3-2918-4c3c-8fb1-c0b8b5c4ad9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab626ca2-14e4-4972-8cb1-149fe688546e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc419d69-227a-4d96-9e27-acd9592a2fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f0fd3cb-ac39-4a18-83eb-51390c299a9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8196d90-83b1-40b0-a531-9ae91a8d5dfa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "495ef578-0e3d-4c88-9f4d-737d8a0ae2ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03c9e775-c101-412f-ae0d-99ce172b651e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e84d10b-8ecc-4e59-973c-e5970756f84c"
            }
          }
        ]
      },
      {
        "id": "e973760e-4398-4883-a7c1-80e1eec238d0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c274b492-bf8e-4494-9518-69053928da95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9356bc42-1910-4263-afc0-9515bca6ea86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b48c6b73-8ffd-4fd6-ad1e-f324facd96f8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedc5c6e-ebdd-4c2e-9ab2-d9a667bf66fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc3ece4-629f-4a14-87a5-9f6dd2ad9819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfc0ca7-01cb-4ff5-9f17-c305784c1645",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba10159-c895-48da-83df-c56969faa107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a034fe4-7eb1-4b6d-9b87-0eae0dc985ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03d639e-20bc-4a80-bfc4-befffaa9d982",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c5f519-f40d-42a5-bc70-40f8521452bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2404c78c-32ee-4ac4-9fed-3ca8a8ba5636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab72532-7d51-45d1-bb42-ad3e0eca56de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb84010-e72e-492f-b039-b522a48352d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ce32cf-29f6-4429-bbd5-afd306283c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d341a9-caca-49bd-bbc5-c0ffcba23957",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cc9387-4d7d-40ce-bc02-299014200689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c1d668-e47d-4d08-bd19-3a990871653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d975b95-0554-4645-a84f-6fc8bf93cfa2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9cb484-c219-45d2-a1e9-52de98a39dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3219726-5bf9-4dd7-9fa3-515c0580e6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de9cb71-3221-4331-bcec-5fe2822908c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca862ce-43bf-46d9-a2e9-3063ec34c75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82e4140-baa8-473d-8911-090638bd5cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a1448a-8c63-4485-83be-06b1897ce55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ba4e84-9452-4a93-a394-8775cc1dc066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3a995-7329-4de5-8c6d-f175112454f8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714cb87-cbda-457b-98bf-b214a37ba140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7b77e5-b30b-4fe9-9747-5fd30fb8cb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37900ff4-5a45-4821-b8a4-e477b2fd6905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607079ae-8bb2-4daa-8442-8609ea61096a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b18fc49-83bd-4ad0-9cbe-9f801740eae7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fc3c17-3d57-4b61-a4b2-38da295cee4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd7aee8-1a3f-4708-8c76-28ca45027796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffacd937-c3b4-45d3-afe2-6897edd8dca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddf5fb2-fb92-444d-bb4d-ce9df6ff7d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6968320-642d-4ea8-ba27-8807cd1e11e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b43136-3258-4292-a570-f1606503469f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8be6b03-1285-4e1c-85f6-966a2ef024dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bab2bd-5ed2-4cae-8f78-12adfdc1b04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fd19d1-5563-43f2-883b-8d13923e6aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad22dca6-e442-4568-85cb-6380644d598f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e88244b-c434-4fc3-a303-4b849126d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed455ef-4cd5-4c02-b112-0fa329d9cdb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d850c23-d2ec-4f7c-8ca9-d5ab1be66464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f1183-5d9c-42da-9b29-77778f846a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d440a9bd-97c1-4613-af1f-2cfbed912498",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df63c24e-52e0-4014-9da4-1c7d0330fdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a105084-e79c-4de0-9927-a5395d06087c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec38cbf-0440-4274-9ab8-3a0b1b147b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163d2d7a-e36e-4ad4-9a96-78b65e4955d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851e874-e700-41c2-a73a-4a6fe58eb8fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791d3a7d-2c39-459e-93ae-34d79cad9f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba1381a-9eb6-4051-a27b-0bbb682d5ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7632662-4d10-4ee0-bfda-c7224e4c1f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237bb20c-97f2-43a8-9fb9-52c41be884c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c1a940-2986-4a50-b83d-6bcea79ecc51",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b1ecd-c444-4231-ac5b-e08669d44a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1be8c88-dd82-4f8f-a605-45e05f297d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d012fc57-077b-4dd2-b0e2-94576545d3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1e6dba-9ddd-4bf4-8227-435a3741e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9746b1f-a3b4-40c7-b464-415d281e91f1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52eaf7a-3ae8-4547-b822-3475f5e94f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bb6ccf-6d41-4028-b62f-b6a6350e1b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5740a783-9275-4732-b890-c5f1f01b07de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373a6a74-d13d-40b7-b892-468ac597f8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8435c339-6d8b-4ee7-bd7c-d94156195f6b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5153b767-dac7-405d-93bd-a24ede4870ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b59a36-2bdc-4324-b5f0-8a73482c95fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b633c001-9745-4231-a867-f41594800419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5322511-c560-4974-8668-9d121ffe9045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d49e76-f367-43be-9c0d-9dab3db7d73e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a410f16-b610-4f2e-8f47-3b29308c1955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21a65b0-c940-4728-b285-36b2fd8113ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f05d99-edf8-42e6-9c74-beb067d746a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4293003f-e128-49af-838c-abc2d56055bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60106bea-a08c-480d-a3e1-9349bfe24182",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5d4ed3-d970-4600-81c8-988d948fdc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4cf906-aed7-4902-8377-03fc58bf3b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20193a49-7df3-4dfd-ba63-62450082ff80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3725dda-63fb-4ba4-8b2a-3f4430bf23bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70b4632-52b7-4535-94b2-ac42ea7b52ad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65439cc1-2209-4da4-aa32-526aef50497d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3831a11a-d8c8-4bc0-bf15-a4dcdbc1992c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe37c3a-d93a-47d8-81bc-75b8ec5334f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70b2f85-78dd-4b30-b79d-ac88fa0ee245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bff115-517b-4572-a7a7-c33cdd47790f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844a65fc-6813-46e4-929d-539b402b0b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739866aa-c4ca-4ecb-be0d-137acfb4ce4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76412218-61a9-44a6-a3bf-55b8a27028ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d06cccb-4d3d-42f1-bd43-3540db417ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a09072-0b51-4e7c-a9c5-33a5323dac14",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8686472-18b0-4df8-ae5f-2a9eab75758f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa0a07f-7927-448f-b537-7941794d8fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c26652-a731-4155-9b83-1243520301d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eee0a2-a742-4ed5-a937-0fc364783aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c0b0f-0aa9-453e-a69b-f9ff0241c54b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7335d33c-b4ed-429c-8ff4-d1cfe131de2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540b03ba-6e76-48e1-b5f8-948dfb8b09a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0962c8fd-5ce2-4e00-ad5a-60f7fd034c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de1a0e0-4082-425e-b528-bcdef8a6a843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d9e453-95c4-4ec7-906c-83ca5420adac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c901d4e-87ec-46f1-a581-e2f35f04d39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1202abbc-e65d-4ddd-a54a-b8f4c6c65b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4552e40d-f8d0-4e60-bd97-72515d52d28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62f7834-81be-463c-9de5-4bc098a40b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e4f6c-583f-4a23-8a4b-78b56a87b287",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ebf473-c21d-4a1b-9ebf-b0ddb666fb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e17f92f-e0d1-4344-b756-e7ba9aff0034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b633c62-f2c1-409e-9ea6-9279cc2cba34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53483aca-3c48-471f-9b00-6a3159ae72fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588c7c96-3018-4016-be93-48892241c475",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e442de-0ec1-475c-95ad-d9b0a8eeb5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a414a7-0610-421e-bec5-e1572c188236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3bf00e-4f50-4068-b752-5fe57c8de208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063d3551-d534-40c9-9821-91833823c51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f58cfaf-4973-424c-8521-0f52b641e20a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098c93b1-7ec8-46a0-9ee3-c2a2f0da41d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0d0a00-6fd6-4def-928c-3c2903be64fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed93d36-3b20-459d-aa72-beff10a9c6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d9c038-511b-478f-b4cb-c40a70cf45a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadb1697-922a-44af-a755-a21b9ebcf4f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea9827a-dceb-46de-9798-702bacb808cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4ed498-8c36-4b13-9362-aa9a812d4bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f32e1-54fc-4faa-8530-6bf33300b65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b769bc-fa00-4f74-bcda-f9f836a79b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb46268-5f7f-4936-a825-3af01ad8419d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab1dbcd-c7cb-43c6-8593-4c70d20ca6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1f4a55-3f06-4c3d-9ca3-6b2a8d0a379c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a52fe4-a1f6-41d0-ae65-7f346e2ff6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b652891-c8a2-446e-99e5-311bde957aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a124a872-8db7-4592-ac68-64d80a905a24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ce6c45-68b8-4de8-af2c-c836b7990e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0fea68-3d4c-4cf6-9ade-da898e4c8e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d95a489-4dab-44fb-8ce9-50e272c06f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b57946-74ae-4bed-a2c3-f461bac95aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaef3f34-ef71-4fd6-8a46-463a497e7ded",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b954177-8b44-4f7b-893b-e51f5c859c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d388468e-c3a5-4083-86ab-d1fdaf17185d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fed3c7-2c43-4f55-b427-b79fbfe75136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fdcced-2935-4103-a4a8-c21828686480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc412b00-f69a-4627-9399-182f7ea9e4de",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e05fba-02cc-4774-bc53-6596af0c68ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349fd84c-9883-4b90-ac08-eb560d073220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951aaaa5-66e7-4af1-967b-1466594552e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a761c2-c3a5-40c3-ba8c-fd7d6f839472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d5627d-c92f-4adb-81b6-612417756a97",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e49075b-7ded-48a4-9a16-c32b2b0eeb76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "046f1f43-f4b3-4ae5-8c86-ba254d0963b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a3035-250d-4399-b36a-ed419df7622c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1722eca7-2ee4-4f1c-b927-1a9a4c9d8cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b31525-4d06-421d-a1f3-d1c294a9a87d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f997cb9-1857-455b-bd3d-91914271eaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1165920-e6c0-4c83-84d2-2802fe106ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7074b481-900a-4677-8e80-eef166625900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a23522-7cf0-4fdb-8c54-6769c53fb915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7aeb9d-ca0d-40ab-83cf-a4f71f167f10",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274691a-2461-4fd0-9d24-2ae63ed452af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1774736-7a4b-4964-98fd-1b259cf41f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021f5216-e29c-40e2-9aae-bc4e6430a661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6567446-ccee-4722-9e50-9875cd5721e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feb78c7-fdf6-4f15-963d-7fb370bc7ee6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad8038-ac5b-4413-af5c-9a9b5f111169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bcaff8-8eb2-4667-a7cf-47645f020dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3eae8a-6321-4b92-8de8-6993b9ada350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d38623-d339-496c-8bd3-1249685f88e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afd8d06-0f45-4cc4-a888-da51dd8e3cbb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c30870a-2002-4e08-8ff6-1c9d42334e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da8a95b-8021-4b11-a82d-a93fd6ab1de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9930bebe-6208-47c0-94d1-88417d510d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfeb92c-78a1-48f7-bc9f-ef49541a59af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8bd4ac-6ee9-4da5-b63f-26cb9ff0a628",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a59ecd6-cc8c-42e6-8874-634353ce6bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6cf772-2ab6-42fc-87c7-d0a7e3c04860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cf8ec6-93b3-455a-909d-fd6b7c4fa950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aacc0d7-7e2a-4131-a261-072976e08c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd847e6-9c23-4221-99b5-45f47ede7784",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3b0ac5-0afc-47cd-a3e3-cc8cee9b95d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dd2c6a-bcb7-4a8a-96bc-d0282d452dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf37da6-22b0-49be-917d-0ddfc26bc592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2aa1def-fb1f-4577-a443-7fa5e6139e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caf0fab-d98a-4428-8bcd-cdaa68937aa7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be142ba-cf56-4a51-ad97-2abf58161dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0a616-f2f5-4ee0-a7f9-883c782fb24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c304bc6-acc3-45e3-a873-50e5a33b8468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f5ddcf-f3b2-41af-9a94-7984efba3541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef91498-3fd5-4ca0-b872-37aad7fcf124",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e999fc3-8685-47a9-9b7d-f2219d72fc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f3f038-59a3-432b-8da6-c5b520acfb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25c3fd5-5a8e-4372-964b-a3afbe82a357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3e5c3f-b6cd-47c3-93d8-e52c0eb90e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce04e7f-6632-43c9-bbf8-fe9534cf076c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da70cba-8ca9-4e4c-86cf-b50860ba8fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6757b96a-89cf-43fe-a9cd-22ec7d44f213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08697a2b-1fa9-4b81-8fbf-2cedffdc8b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec72bf57-aa08-4af8-849f-7efbbfaf001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d8277c-5196-4478-91a5-ce99dca474e2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fc2e08-9f93-4ec9-9179-213b153624eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760ec217-dd9c-4b16-bbea-e689cded1420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8520f5-30c7-438f-9354-3b668d09126a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840bfb62-50d0-4fd3-be32-96d2c7d1bec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4759a0a5-54e9-447a-9a30-c7215a91ab27",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68b69b3-cb05-4a31-b198-6d0fc7bac14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d8bc2-a0d1-4d42-8087-1e283c16a3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b0249d-6f5c-4d5d-b41e-43e6d13fa0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f4a513-0c8d-4d42-847f-edc7166a3aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aea329d-3ad7-47f8-b583-3c213b4f2b0a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a8479d-96f2-4702-bcd4-b4ce8ca02996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6be518d-3f17-41d2-8166-3df12c8ce679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ca3334-5728-4146-9e6e-4324f3a28a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b336a827-e29a-4cad-8ff8-8269fd6484b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1faf67-1064-4664-8825-f14ec4bf2de6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903c514-f3e1-4bac-8755-838a619806e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9234206a-ddba-4337-874e-0807865d90ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3edcbc-54e4-4d83-829b-0d506fefb395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb27d797-5ded-4359-8162-7b3c52b9e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2330b8f7-531b-49d1-8fbd-99a4dde0cfa7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5295c89-0f7b-488f-80f5-e9e115c757f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38374735-297f-43a4-ba53-c86908f7c063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a908ae2e-8f34-4830-b7c9-c26c978e5a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0534c14-9ca6-434d-a981-7eea4afa64f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f90b65-c9d0-4335-b38b-1667db96f694",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1c7d5b-3c05-448f-93c0-4cd1b7b2f0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd19b49e-5a5e-44c1-9117-dcc5bf9fdf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3ce856-b7e4-4b9b-b971-9d6e2b121d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc972e23-fd22-40d1-9c19-b1a46660661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1335ed03-c46b-4a3c-8d9d-6e319c9f90b9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd31e5c-34d0-446d-a483-a0b8a26e52b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce22194-d84b-4f58-98e2-40b9ae954b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f796197-5d3e-4ba8-98af-2a2928693f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e176395d-6f77-4437-9ac6-12e98b44c530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45116a9-dd27-49bb-b8fa-0b5f7e5d086f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f598fe-520e-47de-b84d-1eb084e62212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f2ea15-d371-4acc-ad7f-d95fb3f6d35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4057bab6-e49d-426d-8d29-c3579433d441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43abf3ac-f164-45b9-ac90-af50643c2e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aed3331-0526-414e-8241-e0015a0b427e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c699dc-e281-484c-a644-5cb52d619758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9988034f-bafb-4f10-985d-936b623db9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3671ce7c-2f1f-4b33-a8bd-cca58a8f1674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0b25c1-c194-4df6-9fa9-f94c471aafe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82297e8-1f27-4e00-a1de-b68d033d1704",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d6ae71-b3da-455f-947c-b8c92defeb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ca3a7a-9387-4c2d-bb46-cfe7fa4ef764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f83bd6f-c5a1-440f-bc44-2a53e2ee4118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d995bf-3242-4dd8-b20e-8047d5ad3ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2283af2-509f-4d54-b7a7-c6b3dd8c8676",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d3d632-114c-4f63-820a-b12c30b1b834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3d9c8b-dfbd-498a-9169-1d476afe573a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940532a0-9b14-413a-88c3-bd76d173fb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09215d07-4ea7-4961-8727-9e56aa4f8f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ff024d-c8f7-4c50-b993-0c9e622cc6ed",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546a66a1-1469-44e1-bdfb-2718e7cba8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d13a09-9005-4318-b9f1-da50842b0f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b975eda-5b6c-4f8c-85bc-a7f88cd4022a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a38111-6e9d-4161-8590-a02aca58a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e86221-896d-4a03-a2d1-e615f3081ead",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b27f133-07f7-4bc8-92ca-4224dde08024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365ba201-4c6d-4ad3-afd0-0104ec516635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2780e5ae-e2b3-4621-bffa-2b580f56c007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a551628-ed7f-4fd1-8ccc-cb489703b136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7141bbb4-ae97-4d79-abce-04cc56a272e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31b7f85-1e89-45b3-90c8-0bbec22d3b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea07d91-6bb4-425e-9661-952c53c420d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5698bfa-d775-4c65-a164-fe368c9de1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64ae549-42fb-48b0-81dc-20527e863020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9eacb5-bef4-41e8-b9e9-34c0d736cf03",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864201bf-436c-4bd4-9d15-6844cdff0392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a60cb59-349b-4d48-bac3-a149a72e6cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ddac01-a041-473b-b62b-3dcfc4394d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f612d1b-4e5f-449f-8c0f-925d0cf83a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7820f9f5-ed30-4936-98db-6a51273f303c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711821b6-317e-434a-8db4-5794ad229f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db993783-50e8-44ca-bdb2-e7605d5e5b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e003a8-1052-4c4c-a009-6fcaa837f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51df2b42-7129-45f3-bd14-35032dd3fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32667e72-27df-44e4-b5f7-eda6a1d0e274",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee1e96b-a09f-45be-911b-510eb7c32972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b13478-393d-47c7-8aa1-3562fdd00a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bb9105-9de8-491b-be95-64841c1737da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92d2e6d-d809-4195-b933-6de6e33d00f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b687267d-6ec0-4f18-a0eb-204e8e70541f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19307bcf-9d0a-4a6d-acc0-7857146a4922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8438fc-42fd-42aa-927e-7bed43613fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89db46a8-4bb1-4367-b945-4f403f997dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465921a6-f469-432e-ac69-d68dcddbca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a136418-2849-4ace-905a-504f5c70c824",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c608953-76f2-4479-bff7-3205400c20db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94701ef8-1587-4e42-9c58-d30c748d5f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8f0374-b635-4ab5-8304-25bdc4958c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08beafe4-2316-41de-b3c3-34d2e462a020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5c2f7b-cf4e-46e2-b879-5abe9aa5b964",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c6a5e-3841-4689-b4b9-b7e04ba02e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96240748-fea3-4914-8e4a-38583ed517f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff3d653-2c53-48d0-8667-6ddb8e661d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02a40eb-0675-4ca0-84d3-8a5ecc85bdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab5a681-b930-4a9b-8601-f92adcffeadc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61acc97c-85b5-4bb3-b6a7-b5ff43695f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073bdf13-ce64-41f3-806e-d64e50e8f785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471619fe-f303-4a34-8d0c-a0c007336c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ba314c-874d-48f0-b24b-a8a79b683f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0de803-2f23-42ba-9cef-473d66b2f322",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eec890-a2ee-438b-99d1-b59b64492bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7328b2-720d-4fb5-8910-bd0f8910485c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddc3a23-cb2f-4c4f-8c32-8441d8029b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaa135d-a127-4097-b056-4eaa88f527cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768c0dd0-9b7b-497d-9553-92d6bdeca80e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a0f625-205e-42a0-a167-c2439b394059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060f08af-ab91-44b9-9608-1e828335cc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc4705f-6cfa-4f5b-99dd-945dac39b531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da926478-4a3b-477b-a034-594a1d8675ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac0f1bb-4312-445c-91ae-1fb4eb5dbdf4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afdbf4a-8789-4887-831e-982664c85684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a079986-89a3-4d56-9050-099ad6e5caf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ae9b7-593a-4874-9ef0-62d1dc11104a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96de0619-21b4-423a-8712-ef4eb0312d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc94a335-8793-4329-b702-ca8a80c1a7db",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10420754-467f-4655-9760-c5ae727a2ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bf5836-2eec-4405-b6f8-3442147e9203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68977933-a7af-403c-a1ba-aec5443b11cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6083fbce-49a5-41cb-bccb-7f15694102e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09d79ad-860a-4e25-a42b-bdd4974d4aec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c81931b-26a2-4a9c-9949-5fdbe9ab9694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b92ad0-ba1d-4ec5-bd2c-1c3b44c02237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf9653f-7847-442f-973e-de05082a72db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9e1fb0-7bc6-42be-a491-8d249c4585e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676ecc81-00ef-4edd-b2b9-a85811b9bdd3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c86ddd-709d-41a3-a4b1-c440d9ef4be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac94664-e21c-4ed3-91d7-dd1434cd6d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b31a4e-07d9-4718-b2ee-9fde3ce289c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9208dda-d4f7-460d-9c5b-66486ca5b6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425d01db-c9bd-43cc-a22a-9c9f90b2ccd0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc04de7-f395-4f75-92cd-cc834befd665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf06c676-785b-4e99-8f38-ded5614655dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5944f394-6f43-4000-818c-24765f17d288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b1acbe-b364-4995-867a-fc159f5ea972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a6825e-f871-4ebc-9c5c-9a7a1e72c468",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b30ee42-d1fd-4171-a7f9-605febc756cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31770ae6-3e2d-470a-9030-b66f1b8a26d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae4016-dcec-400b-8ca4-018c3e24fedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83413e0a-bca0-4874-9675-c269316741d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc916385-c9bd-455e-be49-c80a8e396959",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4c10d8-0c6d-4919-857f-f575d528f10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b0f545-b7e3-4c54-9ad7-fe471dbf73b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e592e3-d1e1-4fce-bc4d-40510aead2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5460a7f-f8f2-4838-a8dc-7d027c1f28f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f18736-548c-4ede-8c44-c1214a79b8e0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f87a13d-e583-4654-bdc4-aa1eb8ac267b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fbb368-d957-4e0d-8ed7-05de108ebf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f40a6-0887-4d4f-a94a-87a3715d9383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e4c737-953b-4ac7-b311-43cb9ec51872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5fd454-0cab-466a-8aaf-69f98faac667",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbbfe44-d68d-4670-8c9f-99a335a7f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90702f4e-afea-4330-81cb-6e8e7b1e14d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d9c3f-b3f0-499c-baef-f0053d36ed4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9bf08c-4e89-46a7-b828-2756ac53e8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef91cbaf-1e04-44b1-a24a-5d326e76afef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02de726f-405b-4da6-a32e-a03e31f1a468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07fb67ad-b87a-47d2-aa17-e380425819ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdedafd1-789f-463c-b13f-bdc544cf28f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5802f1a-7bc9-4bf0-96ea-2d79766f269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df68aff-948b-4ef3-b374-81841b61742c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6b783f-4436-441a-8994-89f4aae8a8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b78ea26-6576-4288-a82b-dadecff5ba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dcd087-4d93-488f-952c-9b24ec739fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fda0fcc-092e-4062-af81-365e09dcb07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce751fc-2724-47f9-ade5-498166241783",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad45f9a-b619-4057-91c3-074aecb00901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f89522-7e7a-4bd8-b473-04a8566234f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a560c-5eb9-4b38-8352-984c63692d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7648c30-1810-4b5c-867a-e9b24116f8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f4f87-bd14-4240-b2ae-b0b3225b7048",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73776580-127c-47fa-b9ec-ab93e359464d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce53c79b-dff6-4332-95fa-46fc7821451f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b518e7e5-b545-4a3d-8355-bc79c6cd0bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bce9743-9ab4-40c4-9591-3441e8a6288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a95aa4-bf76-4365-b606-65e856db3ad8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3363b98-93db-4280-8a53-e425fa7499a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f72e4b0-b818-48ab-ab66-c2cba9d4c36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c8fb08-04a1-48d4-a8c8-1e2998cca678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b9934c-d98f-4dbc-acbc-1266eadcc14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabafa9b-72db-445d-9f3f-7d78c9eeb697",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44aed2f-6bd7-47e8-87ee-e6527dfb5ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77801c56-f98c-46d2-9cba-00c1709ae2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af96cb07-66f2-4c86-a225-f1582edde6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff43de2-2627-45b7-8f61-85edf67029cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc301824-3050-4890-98c7-ded0b3de8bd9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3963a01d-b61f-4f76-9e36-3350fef06640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6fb3ad-aad8-4257-a9b6-5acdd6bd51ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eccd6d-150f-4ac9-acd7-573e28fb5a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f7f984-a476-4772-b7ed-f6b2f054683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2883db4-525f-42fc-992c-5317a279f4f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e0c27-5fe2-42c9-9b9e-77617c4e3f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff29d11a-eb21-48aa-b736-0276994f262d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c60930f-3724-4cfb-9231-a3ddb7d57165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a6cd6f-ffe0-4596-9088-c366d2d91b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f067e0-d083-45b9-8128-ec0ce25897a2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d2e1ff-f982-4f11-997d-ffa29027885b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb0bc37-b307-48f6-92d3-1f868904d912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853656d-aa1d-47cd-8135-5104a96d716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14510de3-a92c-44cb-bde9-7e5e0a898e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0518f663-6bbd-4005-84d2-d0ea230ebcb5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a44a421-bb44-4488-a92b-b42878c40d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e189aa-dbbc-44d3-a3a3-0126f13f24fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f07e50-b197-4054-a962-ee2d244b18bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429f0342-693a-4c54-9b2e-a9b0445c1791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfc67a0-6297-4ef4-a1d9-8008219b4e06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef08507b-1af1-42e5-9d1d-1bdb123c6184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3897c14-ac69-47d9-8b0d-a64a94ab915e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a21ebc9-d383-4fde-bf57-e18e99aae4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d39f75-dbe2-479d-ba54-d3ac8037f5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9185af-f90a-41f2-b16b-6738302c46ef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c69164-2e6c-43c2-b1aa-b41a1a64008e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2eb8c3-bad4-4fca-aede-93556dc10a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eeee7e-5e0e-430a-84f9-f781040cad7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88edfae6-a2a1-4399-9848-66d0f1dfe9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79ec30c-ae14-4a5f-a670-ce093c58ed4f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce815c-99d4-4993-b654-f96fdbed1caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f661cd-e540-48da-8ef0-b040342a7dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff582c-53e3-4e04-9431-81a69c9986c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b5efd1-412c-490a-9f5e-55906430010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b31b33f-874f-4e06-b5f7-a62463c5e24d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b2a6e8-e64a-44b2-9aaa-a1ceb50ca51a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825b44d6-e4cb-4cce-97c2-6083f8f786ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99868ebd-4fa2-4e60-ba89-17d62d48e7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5759e3-1acb-4cc8-9769-bcb776a499bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af296c4-2909-415a-bcca-941da81900f9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51e3fb-2d0d-4672-8595-247fa1692317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafde85f-3d4d-4d94-ba05-39a6c4c460d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ba5987-f670-43f7-a80b-d315462d0091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1011529-bddb-4cd2-9aa6-31c4ce04d54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09afa409-574f-48ae-ba48-bbd8edd3d581",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51786b4c-b948-4214-a944-81134e67dfe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8662e6-9a12-41bf-8836-cd8223138c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2803cb-fa87-405a-90e5-80a50fe90343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73718774-5d8a-4070-b493-bbb9da3cfc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c20278-d64e-4d44-98cf-cc315fd571c3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30177477-5b7e-4a51-a990-882656b74742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4c6bbf-7657-4cb7-8fe3-ab4749d873ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ab5d6-9b01-4a23-9a81-52f4914d414f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e701a62-5ca8-4633-b5d9-4740fef5022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12908ef9-789d-43bb-8f81-8d7d754e0198",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c462c92-ecb0-4a38-8321-4494424bb91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4c593c-6ef6-4036-a9bf-0602c529de63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee368096-fb4a-4dcb-8409-42df01f1d5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b562f093-9031-489b-9e3a-ed85e7dfcfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e462e21-84d3-46a8-96c0-aea7702e3b16",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a341a-4d95-4aeb-9351-13e39a6249cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbfb714d-2c64-485f-868c-a40972800506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4a95e0-df4f-4398-abfa-3ea95fc5a697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ca5ee7-3459-43bb-b8e0-b0e4517c94ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2333fe-1927-4e9f-a0c6-7aaed5f235ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a0b910-241e-4a5c-8f1a-9642077db7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5c40a7-14c3-4d22-a48f-4de28acfa73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85fd1e5-278d-496f-acfd-049bafdd1688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7b1c81-05f0-4773-82cd-bd7412049d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f45539e-cfa3-49fe-9518-427df487436a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a38f73a-a1a6-4788-9d05-8173b4697f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb7a708-c1c9-47e3-ab2a-a5a6914e444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5feb65-4e8c-4fc5-9ff4-767f72e09f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca9def8-5796-4c70-8174-25df1af00efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeea4fda-0642-4362-bd27-48168e8f66e8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bffd89c-6431-4a7c-be82-68fd274fe6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1daafc39-8477-4569-94b5-37e873f99764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0b8a1d-c9f7-4eed-a430-e46151a26c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8af3716-7d2b-4db3-9800-a99c2a06f009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c61f872-89c7-491d-99b3-2deef039b792",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d322a628-c8b2-40ff-987f-ce35596f1901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21dc2fb-fda5-4512-8a2a-96fafd95918c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a73865-b37a-4e22-9b3a-6455d31dcd86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d52c17e-cae4-421c-b01c-55396a2817b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b016882-0a0e-476b-b2ec-b3a6028f7c37",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f88c38-8f22-446a-9adc-cd47a94ee2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62a0a32-8fc1-42cc-8ee2-cee8aa4f1ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea865cb-43a3-4ba8-9f48-1a077737c6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc64047-814b-44fa-b7e8-8c076901d15c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d384441a-b341-494f-a59a-26714e8bcc65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce8bc3c5-5077-4283-9224-fc3b368888fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39e92543-3796-45c0-bc5b-e33ef4499496",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf5086f-2f7d-46f0-9f44-ba146eadbdd4"
                    }
                  }
                ]
              },
              {
                "id": "ecf5bb2b-cbc9-467c-8ce9-1ed963907248",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5b07270-7358-46b0-bf32-307e87ba3070",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a13c71-bb25-4a84-a192-915f2ded7e8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02c4deb7-1111-4658-aedc-274775560e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b100b-3dec-4484-b77b-ef7100ed2d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc874d12-998d-430f-a385-c94a7632e88a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f19476-c72d-440a-8e4e-3125ad02ed3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a666be7-f794-411b-91a0-cc048c8680fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a683cf82-4134-4db1-975c-61ce21966225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db7c788f-e175-4571-a3d2-deb5ec1b88e6"
                    }
                  }
                ]
              },
              {
                "id": "20067d5c-70a1-46f7-9173-76672603a67d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "19a4083d-6969-4c64-9a1b-8b8196f92bd1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08ae48d-c20d-4f22-bdfb-184fda240aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "66cfd1be-22f9-4d3b-ab2c-0573e41a314b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd698ca6-a65e-4920-abc2-b86403714b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a313641-fea3-445c-9523-9cc007a16a09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "89a2e650-059d-4766-8a62-b1d9143d4f15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32c4c646-2fca-4f8b-a431-3a809abf3297",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d859d405-d4f6-40a1-8afd-ad429200099a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40654e8d-123a-4aa5-8a99-ad1ba263fe8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a55bcfea-fa40-4154-888b-99b21270bd7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d593f8a8-b0de-4d12-b4c2-6c47d4947ec9"
                    }
                  }
                ]
              },
              {
                "id": "81eea4d6-da3a-4134-ab46-8f85f93d99e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287c41c7-8f5a-4928-a255-43d53575c9aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32a0f599-063d-4dbe-a44a-5f0d409ec496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "601818a5-fb40-4f8a-b71e-ff0818e0dfda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329c3b24-1f2c-475b-b201-0fccb2ec8b50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "405b4858-e16a-40e0-933b-aca0ad756013",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0efa496-3c8c-4d6d-9180-9bd1c0ff1fb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d8523b4-aef5-4ecc-afaf-c30597b49a16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5337a5e0-0b59-45c3-9eb2-3e25cc8cbe1f"
            }
          }
        ]
      },
      {
        "id": "1ae33190-3ef6-47c2-9f27-6fc977eb4080",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2be071d-3f12-4d1a-ada0-9f513482ed4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee0c053c-60f7-4cb1-a666-555647762fae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ad16e04-3d77-4e2d-b22c-a0139ab3a1db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e2c133-5470-4702-9a95-d60114130eed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a60b0408-6bcd-4d00-88f8-e700f0fae006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cc225c-f675-48a7-ad2f-6204b9af0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a9c613f-2611-4240-a7c6-f9aa8977ffd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba15e8ee-f993-4c50-839d-13b6802b5b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7070c3e1-5a74-4df5-8a27-36a0225b4614"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b2bba65-c5d0-4973-b195-68ce0d955228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c994d73-ee45-4bba-a66c-1ad28c622bd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f7e9fc1-f7ba-422b-a2d9-2604d0c6bf91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f42fc43-8be0-4634-b930-bdb955f81387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fd7c564-8aeb-49dc-a87f-b87faf897d28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f26aa55-3753-470c-a326-d8b50a464381"
            }
          }
        ]
      },
      {
        "id": "92599353-a878-46ea-ba6d-8e4ec6bceda0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5db7b93a-a9d8-4ec6-9eea-2d580f196bdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "167bf887-5bab-489a-bb5e-6a6178d284ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0ce2553-aaae-4167-ab57-b125ed3782aa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b64628-5766-40df-8883-32c9ebb54a30",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5006a705-ed1f-4793-b771-845ba1f31dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e144ff2-0e8e-444c-945a-0a4585b6db5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a672208-52b3-4a05-b128-475978efb207"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e91cfab2-e9c1-4221-8679-ad833784ebef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2584450d-3247-4c68-acd0-75f75df27881"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19a5fc3c-53ec-4e56-853b-9abcbc89ffc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5ad7a66-f054-4c25-977d-acded526406b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55430836-f7a0-460f-9ee5-45e7720c4fb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93d12280-5642-4dc0-8b40-0701cff41572"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "648a264a-3ce5-4af1-bce5-30622a118ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d04d1491-d0f9-46e7-9b08-6e9e24371a7f"
            }
          }
        ]
      },
      {
        "id": "fca0e627-d423-40b5-a0c5-6f34df7f186c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dd9460c0-9245-4a40-883a-310ad8c5b5de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "912bb4f3-e3d9-47d5-b340-09aa8524103b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65e3472f-e824-4a81-97ec-ad64a0b3a013",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33982a8-8bb5-4ab0-a1fb-9c2b6f99b619",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34a843d2-8f7c-4d59-b182-35f5d6119fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b90dc1-85f0-4d97-9b6b-1ee52f32efec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dde5a7e-120d-4044-9172-86db7e2a39a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b1c3fb9-2964-4001-8b56-d50ff3e4676a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2a1a13-9d3c-45d4-b4de-fddc9eb7c231"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85c2bf60-d161-4652-8374-8a80dfd3463f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3acb098f-70cd-4f40-82da-13e1fcd80e8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "613cd882-59a9-4f82-b82a-4a5c5f5d9e91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d2ac54c-59f3-4f85-9273-d45062d8e7a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fab1aaf6-6a58-4f5d-8e91-46a6b09c89a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84e2afef-a02d-49e6-ba3e-5372de62133e"
            }
          }
        ]
      },
      {
        "id": "7f29f099-342b-4d44-a264-4f12656df606",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3caaa231-911d-4427-8668-e0edeaf934c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "604caf10-2d12-419b-9a2f-d3cfbcba9d91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f9ca2c54-b189-4745-8c86-e2ed2521e6d4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f44a89e0-b76a-439e-beb4-c9393bc6f89e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e512bb1-5f43-46c4-9874-21046303e91b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.859649122807014,
      "responseMin": 20,
      "responseMax": 299,
      "responseSd": 25.559726130709716,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702773531775,
      "completed": 1702773556016
    },
    "executions": [
      {
        "id": "4ca7889a-b194-4aa8-8cb5-3ada6127924c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8462b6b7-b5c6-40d4-8adf-93c1d3893a52",
          "httpRequestId": "848ed57a-51f5-4817-afaa-c94c686847c5"
        },
        "item": {
          "id": "4ca7889a-b194-4aa8-8cb5-3ada6127924c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "65a0299e-eacd-414e-ace4-9d09eab0f984",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "fef88c96-daca-4770-b835-32f2d502313f",
        "cursor": {
          "ref": "1dd5a819-88f0-4aa5-b7b8-4492f10337f4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "62a1c5b8-46d4-4680-81a2-c510a181c7d9"
        },
        "item": {
          "id": "fef88c96-daca-4770-b835-32f2d502313f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d384f73-2050-471b-ad3d-ddb01d5fe01d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "5954d64c-60fa-4c8e-bdad-fc6d1b2f4174",
        "cursor": {
          "ref": "89e411b7-d198-46ad-9cb7-9c0c016fc63a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "89f23a5e-15ba-4999-a2a8-591872caa06c"
        },
        "item": {
          "id": "5954d64c-60fa-4c8e-bdad-fc6d1b2f4174",
          "name": "did_json"
        },
        "response": {
          "id": "fe09f5ed-f79b-47c0-9707-126c60babe47",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0adf49c-81ff-4887-b8e7-f57ee4f60f03",
        "cursor": {
          "ref": "22723ee0-21ef-4bac-9663-93007545ca64",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfb6228c-6b9d-489c-a471-2e8e0daf85b6"
        },
        "item": {
          "id": "a0adf49c-81ff-4887-b8e7-f57ee4f60f03",
          "name": "did:invalid"
        },
        "response": {
          "id": "e762cee7-e477-43dc-9581-3bf2077229c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0adf49c-81ff-4887-b8e7-f57ee4f60f03",
        "cursor": {
          "ref": "22723ee0-21ef-4bac-9663-93007545ca64",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfb6228c-6b9d-489c-a471-2e8e0daf85b6"
        },
        "item": {
          "id": "a0adf49c-81ff-4887-b8e7-f57ee4f60f03",
          "name": "did:invalid"
        },
        "response": {
          "id": "e762cee7-e477-43dc-9581-3bf2077229c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f6f9ae-6d0b-4e5e-a485-aa2bd04fb3c2",
        "cursor": {
          "ref": "8154de6d-1cb7-4089-853a-9df37a3353ea",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "74ce760a-9dd7-441c-9f5c-012a104a1223"
        },
        "item": {
          "id": "93f6f9ae-6d0b-4e5e-a485-aa2bd04fb3c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "38f31305-0fec-4b96-9fa4-0cb124e9a1c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c7aa6f-3a17-49f1-a396-cf4662d0b5ae",
        "cursor": {
          "ref": "e7a61434-631a-48f9-b060-2da94c834b92",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e63d4263-608d-4703-b183-9d73e5303bda"
        },
        "item": {
          "id": "48c7aa6f-3a17-49f1-a396-cf4662d0b5ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e0116849-a29c-4d14-bd59-25878aa8f335",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af4a125-fdbe-493e-945b-ee42913cc6b2",
        "cursor": {
          "ref": "0330432d-01ff-4e7f-ac90-5e07e963a5dc",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5dbfee66-44b0-42f0-bba0-ea983f55480b"
        },
        "item": {
          "id": "9af4a125-fdbe-493e-945b-ee42913cc6b2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f6aa51d6-7434-44c1-aa75-dffa7ccc7977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ccf4fa-e046-4155-9c4b-b19e81c79dee",
        "cursor": {
          "ref": "5e561871-912d-4680-bc08-12d0e8e99c4b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6a9554de-d786-4da9-bfe0-b4690d44ae3d"
        },
        "item": {
          "id": "b8ccf4fa-e046-4155-9c4b-b19e81c79dee",
          "name": "identifiers"
        },
        "response": {
          "id": "6720121e-601e-452b-af6b-d0cdb4468719",
          "status": "OK",
          "code": 200,
          "responseTime": 291,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbe0ea0-2b6e-4348-932f-5fb055cb3d46",
        "cursor": {
          "ref": "c6a552cd-a5a4-4f36-bb73-3d792ed65b82",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "40ac407a-b90c-456b-a228-c6dc5a42335e"
        },
        "item": {
          "id": "9bbe0ea0-2b6e-4348-932f-5fb055cb3d46",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d41e4dc5-3c76-4d60-8b6d-80fbb8b4fb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55142bff-bd6a-4e8f-b0f2-cacc62f4b17e",
        "cursor": {
          "ref": "c6b12807-6474-4b10-ad59-86155fd595f7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a9bd9b7a-d326-4142-9396-6ea54cd86664"
        },
        "item": {
          "id": "55142bff-bd6a-4e8f-b0f2-cacc62f4b17e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "60eb87bb-a977-4882-8958-b591d02573a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834e67b4-8b78-4719-aeaf-bc76c267ab19",
        "cursor": {
          "ref": "7ccbeb13-976e-4f36-b8e6-fd47051532d5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7289ce2d-ec4a-4585-b02c-8965daad82f7"
        },
        "item": {
          "id": "834e67b4-8b78-4719-aeaf-bc76c267ab19",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "124eb86e-d08a-4992-9842-8d142987f9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3a5584-e1e9-4b0a-b140-6405bbdfe137",
        "cursor": {
          "ref": "2652be72-e306-4de6-96ef-aaa1729a27d2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "23bd3f4c-237d-4bec-8656-60d53fefac96"
        },
        "item": {
          "id": "cf3a5584-e1e9-4b0a-b140-6405bbdfe137",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f120db97-d29f-408c-b086-e31b9a76bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6c4aaf-c2f6-4661-bfcb-a0f9482232fa",
        "cursor": {
          "ref": "812f3df4-0c0c-4fbc-9b3f-ddcbf357cb17",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c964c8c3-d799-442d-bc09-e4d4253eec6a"
        },
        "item": {
          "id": "fa6c4aaf-c2f6-4661-bfcb-a0f9482232fa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e983efc1-d0dc-486a-b228-8c771f94c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b227f8c3-2fd6-433f-a86f-8d18da890832",
        "cursor": {
          "ref": "e020452e-45c0-4222-abad-42e0aef51409",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff9e1bd9-7258-46bb-bbce-b6ba7ae0da90"
        },
        "item": {
          "id": "b227f8c3-2fd6-433f-a86f-8d18da890832",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9f8b5c38-4c0f-4d88-8f4d-9c64f0874149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bdb3e4-92fd-4056-981f-589cc0748d89",
        "cursor": {
          "ref": "5d0cc93e-8cb1-4275-b565-4528e507abbd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "acbbc2e3-4cdc-4f1b-8785-b622eca873b3"
        },
        "item": {
          "id": "c2bdb3e4-92fd-4056-981f-589cc0748d89",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "29dfe6bd-4206-4eda-8d4e-c6ac819bd1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f73eecc-693c-45b4-8754-46bbc3750069",
        "cursor": {
          "ref": "60973b8c-bcf4-4291-b66a-d889b6fcf0ec",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b3184592-8868-4db5-aaa4-d2b375b3034c"
        },
        "item": {
          "id": "5f73eecc-693c-45b4-8754-46bbc3750069",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3b93842e-6e30-4402-b65a-eecf7aac0b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c433c6-99b9-4a3d-aa6c-81c8780580ea",
        "cursor": {
          "ref": "bd639533-e5b0-4edc-b32e-2f703552e3b7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "212c8f70-e9c2-46fa-85ed-0e82e7a12a98"
        },
        "item": {
          "id": "f0c433c6-99b9-4a3d-aa6c-81c8780580ea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9cb8d395-4f3f-4bff-a6d4-982d6c79b769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d934c-5564-4059-9994-d8e9237d2792",
        "cursor": {
          "ref": "dbb8be6d-d1e2-482e-a8e4-a4a8f90e81f7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "444e0f61-9987-4128-8c91-253498f18e7b"
        },
        "item": {
          "id": "af4d934c-5564-4059-9994-d8e9237d2792",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2a4ab9fb-98af-484a-b677-937d33500ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a38275d-fc85-42e8-af7d-1aefc22789b0",
        "cursor": {
          "ref": "3dc8cbd4-c6b0-4b89-9924-e69426c7a6ef",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "53bc9590-4683-44e8-93e1-186c442fe8c3"
        },
        "item": {
          "id": "6a38275d-fc85-42e8-af7d-1aefc22789b0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a5ccd45-47c4-4d2f-8713-137f2b46bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152f322c-9f0f-47fe-aa19-aabf9bd07b8a",
        "cursor": {
          "ref": "c88be5ce-a9bf-4c9e-b3e5-e9d472d62709",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f48bab44-ec78-422c-a6c4-b840061eff1a"
        },
        "item": {
          "id": "152f322c-9f0f-47fe-aa19-aabf9bd07b8a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6d58a8b0-cc07-441a-848a-55735803e8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287c560-7dc8-4629-a59c-c4b454c20af2",
        "cursor": {
          "ref": "540161f4-a541-46de-bc64-ce90427fde28",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de3b22c6-57c9-4ecb-a3c8-33f88c272bfc"
        },
        "item": {
          "id": "4287c560-7dc8-4629-a59c-c4b454c20af2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1487ec66-45a1-4263-aea0-30370a40d9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e533461-49bd-445d-b3af-d4ce3a16602f",
        "cursor": {
          "ref": "ba514c10-7419-4e43-b00b-a241fe7a4f37",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9f143b98-7b6f-4a0a-951b-87650ea9c26a"
        },
        "item": {
          "id": "0e533461-49bd-445d-b3af-d4ce3a16602f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e7613fb8-4e1e-40b7-90b6-3ba25885bf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a73b1-0ce4-4c8b-81d9-05e59ae6e53f",
        "cursor": {
          "ref": "644b1339-ac25-4a48-b693-079e64b68522",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f297f8c-5368-41f4-bb6a-05c34b8f2f1a"
        },
        "item": {
          "id": "e22a73b1-0ce4-4c8b-81d9-05e59ae6e53f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c7b173c1-ce42-4346-bbb8-bd98facd6f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd7a7f8-2888-44ec-a711-9ee901407d4a",
        "cursor": {
          "ref": "c5f7d3f8-3bee-4b9f-9cc9-1707c299f59e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9db664b7-64de-423d-97fb-e461cd01243d"
        },
        "item": {
          "id": "ffd7a7f8-2888-44ec-a711-9ee901407d4a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "48667470-6b17-45a0-9e94-5a52e4b8137d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544dc72e-4ab8-439a-abbb-d6611477e844",
        "cursor": {
          "ref": "a363f497-cc73-4326-8cd6-1f8dd4db38e2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e84fe202-4fe0-4f23-a46d-28531d2133cb"
        },
        "item": {
          "id": "544dc72e-4ab8-439a-abbb-d6611477e844",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "899d7c9b-0ef4-433f-ae1e-d4d5f863ccdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be667949-ecfa-46ff-b637-150605507f60",
        "cursor": {
          "ref": "84934a9e-d7fa-41a2-9be1-70c46b2af8c6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9630d579-f562-4ccc-861f-c932dd75a630"
        },
        "item": {
          "id": "be667949-ecfa-46ff-b637-150605507f60",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0c1425a2-0643-4d82-a61c-a326f6c50e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e449184-00e7-4c66-ab27-463ec39d3362",
        "cursor": {
          "ref": "ed2162a5-b90a-4caf-9e07-7317bfc43d3a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "43a64949-0f32-4729-a2e2-c961feab6cfe"
        },
        "item": {
          "id": "3e449184-00e7-4c66-ab27-463ec39d3362",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1e0d77f6-75b8-49cc-8701-c8b952d312a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8895e31-dca3-4736-860c-66574bd17d1d",
        "cursor": {
          "ref": "b1161f3b-8483-43a0-bcf1-216dd1dfe1a7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "061dfb76-3163-4312-920a-669eff2a6b3f"
        },
        "item": {
          "id": "d8895e31-dca3-4736-860c-66574bd17d1d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e7a62d1-cf72-4ca8-866e-2d35350eae36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca9e6b9-7af8-4e51-9fc3-02de9bf55eb0",
        "cursor": {
          "ref": "bf7142e0-869d-4dc6-b7a1-ba32c0b4bac0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "33c53238-d906-475c-912b-cec200af79a8"
        },
        "item": {
          "id": "3ca9e6b9-7af8-4e51-9fc3-02de9bf55eb0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3a11b9b7-4578-4ded-ad4c-95be2f1b64e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b5ed6-f075-4212-aef8-8f4557072df8",
        "cursor": {
          "ref": "c6580f93-b70a-4cb9-8a4a-45f069cf6259",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "17e3f568-46ca-497c-8353-27a1a0ee0ffa"
        },
        "item": {
          "id": "973b5ed6-f075-4212-aef8-8f4557072df8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dafb5844-0efb-4c89-be53-76cc304a5e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edddad3-e3d1-4aa6-b333-c6659650f419",
        "cursor": {
          "ref": "48302bfb-48b2-488b-bb7c-08cef192e112",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f0823b91-063b-4785-bd5c-569388827573"
        },
        "item": {
          "id": "4edddad3-e3d1-4aa6-b333-c6659650f419",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ce067ae6-4d92-4f7a-b1e0-ddc8a9fdb949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f97d66-88b5-4c9b-b17b-6aa602b96d61",
        "cursor": {
          "ref": "dbb14f90-7d74-4bef-be1d-7fa22915dba6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "093b820c-f02a-4dc5-80f6-8d757319e4b2"
        },
        "item": {
          "id": "a9f97d66-88b5-4c9b-b17b-6aa602b96d61",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "339a6b57-e6c5-4965-964d-c221701abed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212b5efa-b80b-43c5-aca2-47d39ad7974d",
        "cursor": {
          "ref": "0bcc6aed-7e4f-4d64-ac1d-60f72bfb93de",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6b65dd2d-4b7a-45d2-8a4c-9fa0600239af"
        },
        "item": {
          "id": "212b5efa-b80b-43c5-aca2-47d39ad7974d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "148a665c-d8d0-405e-a3b0-4210d5a26c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f8a88b-bd9f-47c8-865c-da9575ec2b1e",
        "cursor": {
          "ref": "19cc1289-159e-41a6-9f05-eb372c2a2b1c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe26c7db-56a2-4a6c-866b-4a580c8789d6"
        },
        "item": {
          "id": "c6f8a88b-bd9f-47c8-865c-da9575ec2b1e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e1f99ee3-35f5-42bf-b14b-ef83130ab18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c25d72-d429-4f07-b4aa-b1f3d3a72c8e",
        "cursor": {
          "ref": "2751de49-61ed-4a3c-91bd-818578bf63ac",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b595d3ff-e990-42f1-a687-6e60c163d033"
        },
        "item": {
          "id": "17c25d72-d429-4f07-b4aa-b1f3d3a72c8e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5c751559-166a-4db9-bfbb-824bbf8e3cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d50e1e2-9cd7-4459-9cc7-92945a30d3a7",
        "cursor": {
          "ref": "ba04b407-c6f7-46ed-8c13-0d05ddf4f7b7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fe7d4305-8181-41f4-b687-fb134e266bbf"
        },
        "item": {
          "id": "4d50e1e2-9cd7-4459-9cc7-92945a30d3a7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0ce49448-4378-41c2-bdfe-58755d6fb57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b33dc86-a8e6-4fd5-b870-c9077283325b",
        "cursor": {
          "ref": "8cdc1ebf-9ba4-4412-9dd8-6c9b56ef74d9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "861f20f9-f9ae-4165-a5e7-c0851cac6fa1"
        },
        "item": {
          "id": "1b33dc86-a8e6-4fd5-b870-c9077283325b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "22890d7a-628f-4153-85eb-138af3d3d428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c044284c-198a-4120-bcf4-a7d80aac39b0",
        "cursor": {
          "ref": "a6272c0e-4eb6-46a9-b06a-8a702c5207c7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f4d32e57-5bed-4c19-9ec0-92b5abf9da2d"
        },
        "item": {
          "id": "c044284c-198a-4120-bcf4-a7d80aac39b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aef42e24-9f3e-4a02-b88c-b12959846fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed5a822-03d3-4ee3-b5ea-0bacb4184979",
        "cursor": {
          "ref": "8e92bd35-1606-40b7-baab-50f1cdc51fea",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5bdbe331-92cc-4a8f-8d8f-115fd3e6ccc5"
        },
        "item": {
          "id": "5ed5a822-03d3-4ee3-b5ea-0bacb4184979",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18d32a42-f12b-4eaf-bf2d-a81059a8f2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448126cd-accc-4f3c-938a-0e0e3fb278eb",
        "cursor": {
          "ref": "926cf04b-f02e-42f8-9313-f92a21c5bba8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ee7025c7-5c5f-466b-8d0f-e10109be023b"
        },
        "item": {
          "id": "448126cd-accc-4f3c-938a-0e0e3fb278eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4dc76e37-0b3c-4417-a45d-e5a34f9c02d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d79073-f23f-4259-bba5-77eca73ffa1a",
        "cursor": {
          "ref": "9bc935b3-13df-4c66-b84f-84365a691d63",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c14ddaa7-b15b-4b08-8f0f-52f26da7c2aa"
        },
        "item": {
          "id": "d8d79073-f23f-4259-bba5-77eca73ffa1a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "72e73954-70bd-46c6-b02d-4d9b819b8c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b126aa4-e778-4e06-bd94-de81acc529e3",
        "cursor": {
          "ref": "001ae74b-b232-4433-ad38-4c6aee8114d6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09039fe1-d931-4d73-b839-a63ea43b79d1"
        },
        "item": {
          "id": "8b126aa4-e778-4e06-bd94-de81acc529e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b52ea245-b230-4e3f-8dfd-e9c76648e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252c19f-0b4b-4bcd-8086-cacd1c20fb3c",
        "cursor": {
          "ref": "8782734f-dd09-432e-8dde-4314db66fcfd",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9f6dbdd0-7fe3-4f7b-9687-1c8e6902737f"
        },
        "item": {
          "id": "e252c19f-0b4b-4bcd-8086-cacd1c20fb3c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7e51d0fd-62a8-42d9-ada8-fe32c5fa22ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45287fd1-8c05-42c6-b81b-b86e3ae68174",
        "cursor": {
          "ref": "5f602771-8edb-4af3-94f0-42725a0cbbb8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3a65d1e1-8a17-4e5e-b5a2-e1492b2d2784"
        },
        "item": {
          "id": "45287fd1-8c05-42c6-b81b-b86e3ae68174",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ced1ce99-590d-49a6-9aec-c32e2a0e05d8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde97261-09e9-4838-a1a0-9b60cdf20d06",
        "cursor": {
          "ref": "29ff3f55-918f-45f5-a362-8166418955e4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4416f60d-ebfb-4653-88fb-d996656a11ff"
        },
        "item": {
          "id": "cde97261-09e9-4838-a1a0-9b60cdf20d06",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "08ff2638-fca7-465e-89f5-b2b256e70559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872fd161-0a11-4677-ab0b-eef4956495d4",
        "cursor": {
          "ref": "22dd5aae-f9ca-4f80-9897-606745752f6f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "445899ef-c28a-41f0-99cc-a4b8f1580989"
        },
        "item": {
          "id": "872fd161-0a11-4677-ab0b-eef4956495d4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bfcb1e80-0274-408d-bb3c-346ee9631d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010b1fd0-ea60-4b96-b2d6-af0b13f612c3",
        "cursor": {
          "ref": "b6acc729-e088-4837-a02b-44c8da86c385",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4348fc33-5d3a-4f14-9a9b-61a454f6ef9f"
        },
        "item": {
          "id": "010b1fd0-ea60-4b96-b2d6-af0b13f612c3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a48c541-72e7-494f-9c96-856996bd993f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2211f31-3169-4345-a675-b7b781a485ce",
        "cursor": {
          "ref": "1f8408a5-b917-487a-a225-f17784ce4f90",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b7178e74-7bc7-4a8e-ade8-f246e169a6d7"
        },
        "item": {
          "id": "a2211f31-3169-4345-a675-b7b781a485ce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "35c97b17-dfe7-41fa-acd0-d47ffff30eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d4960f-eed8-48f3-993e-9c8492c56f82",
        "cursor": {
          "ref": "efc2b94a-4baa-4903-a57c-3a61ef65f263",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "40a1eb90-5c1a-446f-9a0f-e481df734ff8"
        },
        "item": {
          "id": "a2d4960f-eed8-48f3-993e-9c8492c56f82",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e85b61d9-6b01-4833-8152-e916d1aa977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442cbf8f-8b74-42e3-979a-0e463cde4308",
        "cursor": {
          "ref": "b4ae4504-7880-429b-a3f6-484e4c60094e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e3842b7f-482f-4332-b955-5b0ea0ab4c0a"
        },
        "item": {
          "id": "442cbf8f-8b74-42e3-979a-0e463cde4308",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bb5989e4-d885-4653-9c36-74923e1a93a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3744dec-3c2e-4cbe-9285-8b12081d6fc6",
        "cursor": {
          "ref": "ff7c8963-d60e-4d28-82fb-b9e5b4b1ebae",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ba5d831e-2359-44fb-b67f-ca17d103b847"
        },
        "item": {
          "id": "c3744dec-3c2e-4cbe-9285-8b12081d6fc6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "98c11be5-d280-4f24-8d85-f6740808b781",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af556a29-971d-499b-ac45-9839d83c79d1",
        "cursor": {
          "ref": "26a7a6f9-892b-41bd-bec2-8f4f66c990c2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3ce3c0c9-2463-4773-b057-67d3a3da80ea"
        },
        "item": {
          "id": "af556a29-971d-499b-ac45-9839d83c79d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8cf15a71-470f-4d50-98ae-8b2e7b9280f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4512c7-d231-4852-9677-2f24a507ec8b",
        "cursor": {
          "ref": "0166deb7-de71-408b-b865-c8556bc52714",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "99ee49bd-e94c-4ad4-af3c-7452247e8348"
        },
        "item": {
          "id": "de4512c7-d231-4852-9677-2f24a507ec8b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "56e8a789-99cc-4522-9718-93fa28dc8fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fc87b2-eeef-416b-a200-b0401cee63ad",
        "cursor": {
          "ref": "43de2066-9b6b-470d-a43c-5cdb9cdb8e84",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "165019da-0aec-4b6a-97f2-9d54085e03a4"
        },
        "item": {
          "id": "f4fc87b2-eeef-416b-a200-b0401cee63ad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13308c5d-184c-49ac-9b11-9a4792cd1f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b65c3e5-16bb-4be5-ba33-c5099955efc5",
        "cursor": {
          "ref": "1697b260-ce2a-44ef-b22b-65ec9cb1f1da",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cc0d2f89-a0cc-4afb-998d-9f025dee6d08"
        },
        "item": {
          "id": "4b65c3e5-16bb-4be5-ba33-c5099955efc5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2d0a2263-1106-4ad8-b1ee-ce011397d55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f796a9-03ff-40b7-b7bd-3b262c78b7ed",
        "cursor": {
          "ref": "8663a90d-15b8-43aa-b55e-556807cc19a3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "025d6596-76c2-4dda-8c7a-ae8b9d41fb3a"
        },
        "item": {
          "id": "c6f796a9-03ff-40b7-b7bd-3b262c78b7ed",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cec7e400-850e-430e-acd2-27c60c2bdc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab77911-f96a-4a76-9252-c706bb160109",
        "cursor": {
          "ref": "fa580a5f-762f-4af6-9ed8-2c13580662e5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b17155d3-2407-4f09-9301-b4151321f7a7"
        },
        "item": {
          "id": "5ab77911-f96a-4a76-9252-c706bb160109",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "244f63f5-4086-4b9c-a547-3fc7b794ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df226bc1-7e9d-4481-83bb-6397c687cca6",
        "cursor": {
          "ref": "1e345a10-95a2-4e71-acac-f2d27992d3eb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "33fba132-4bce-43f5-a394-7032853da7cc"
        },
        "item": {
          "id": "df226bc1-7e9d-4481-83bb-6397c687cca6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3f36ae71-e406-426f-9f93-5cfeaef54996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf7c5c8-8c63-4ed3-b0a6-5009f811beb0",
        "cursor": {
          "ref": "73ace782-1d6d-4011-8567-3dbc6252ff43",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4eb2443b-b626-432e-b239-fdc1a835584d"
        },
        "item": {
          "id": "4bf7c5c8-8c63-4ed3-b0a6-5009f811beb0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "482f5373-237d-4847-a088-ebfb8ca6e91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e50b144-70be-4d5a-af1b-2c636e484b5f",
        "cursor": {
          "ref": "f8d59bdc-8f57-4ca4-b18e-9d053607c59c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0f4dfb78-cdf9-4322-8736-a302233afe93"
        },
        "item": {
          "id": "7e50b144-70be-4d5a-af1b-2c636e484b5f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c257b8a5-f821-4b1d-bfb9-2f1b115f9283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95183f8-892c-4daf-b340-ba67d3739c4b",
        "cursor": {
          "ref": "c0085431-a1b7-43eb-b02c-44956bdc9123",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aed0d941-be54-4b3a-94b6-d0faa60b9e1b"
        },
        "item": {
          "id": "c95183f8-892c-4daf-b340-ba67d3739c4b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "82e53361-d426-4ac2-9adc-6939937ff67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5be4dc-372f-486a-96ba-153a50e61a6a",
        "cursor": {
          "ref": "3823b9c4-24c0-4742-987b-80f9aaa996b9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "00938de9-2e00-44ac-8833-bbde7c211204"
        },
        "item": {
          "id": "8b5be4dc-372f-486a-96ba-153a50e61a6a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f7314fb-da0f-4d0e-9190-c91420dfc84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b352c03-9f74-4f65-8690-05417b170c1f",
        "cursor": {
          "ref": "5efc96e6-b018-4123-b6f7-aa6203793027",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7881520-1bd5-4ff2-b073-99f4085a3b5f"
        },
        "item": {
          "id": "1b352c03-9f74-4f65-8690-05417b170c1f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "598373b0-d0c6-45fa-947f-64b2acbb5a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac7677c-989e-4ee5-adae-6aea88e8aab4",
        "cursor": {
          "ref": "226c3521-c609-4500-95d4-0daab41b463b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "28724608-5cac-49d8-923b-43323618b148"
        },
        "item": {
          "id": "4ac7677c-989e-4ee5-adae-6aea88e8aab4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5e240ed9-b017-49a7-b628-8abde122f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc926ab5-3b83-4968-8039-2798b46c836e",
        "cursor": {
          "ref": "835eccd6-5f6b-4099-8c82-aee4f3926d35",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "387b3098-0811-4b36-951e-c802956b84a6"
        },
        "item": {
          "id": "dc926ab5-3b83-4968-8039-2798b46c836e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b7cf5f3f-d13a-446b-ac4c-b0ec548eedf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a1adfe-4bda-4da1-82d6-c9d529c2596d",
        "cursor": {
          "ref": "45cebde3-c841-45bf-a572-9cb52e23c4f8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "82238e45-a39d-48fb-b5dd-666373e3f5cb"
        },
        "item": {
          "id": "a4a1adfe-4bda-4da1-82d6-c9d529c2596d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5d49eeac-e270-49ac-8bd0-19642d49b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71798d96-a901-4ce3-af86-72328ec225e2",
        "cursor": {
          "ref": "ca368f68-9a3b-409b-b14c-7312b96bd758",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4c099d13-8bff-4fe0-82b9-f46fd62ce96a"
        },
        "item": {
          "id": "71798d96-a901-4ce3-af86-72328ec225e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f132828a-24a3-450d-a2c6-7f414700d327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caf4b45-cea8-429d-a6a2-24849d3e0383",
        "cursor": {
          "ref": "491788cd-d9f9-4019-aa66-4047938c4c4c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "45f89ca0-6893-48e3-990b-858a5dc6921e"
        },
        "item": {
          "id": "2caf4b45-cea8-429d-a6a2-24849d3e0383",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d55340c3-763f-4e3a-9df8-7a211c6e5fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956d81d2-2ce2-4a0b-b571-6941f744fd1a",
        "cursor": {
          "ref": "1a9577a0-5dca-4df1-bc3d-17f95ad0d0ae",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "21dde155-4aec-4ac8-9346-089b6a90a56c"
        },
        "item": {
          "id": "956d81d2-2ce2-4a0b-b571-6941f744fd1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b42c2d7-0372-4af6-9c2d-26e62da03800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139fb713-8283-4e27-851e-e248755068ea",
        "cursor": {
          "ref": "296752df-2b41-4d3a-8057-63ffb93703a6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "67e70f7c-044f-46f0-9f82-f579c0a42bce"
        },
        "item": {
          "id": "139fb713-8283-4e27-851e-e248755068ea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a51e470b-f1dc-40ca-ba43-2824aec97512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba78456-5505-4ea3-88cc-a161a5226a4f",
        "cursor": {
          "ref": "1c32b1e0-9788-4890-86d2-b797943159a1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9839c18-ec66-4baa-afeb-84b99ae01128"
        },
        "item": {
          "id": "6ba78456-5505-4ea3-88cc-a161a5226a4f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6177e8f7-9299-4a6d-a78e-e69ef823ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815d0377-3b5d-43e9-8118-c6b14ef5acf1",
        "cursor": {
          "ref": "fac9418e-3f00-42ee-be67-d04c86fe3324",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2cc5b34c-ecbe-4195-a5d5-68e6c39ef2f3"
        },
        "item": {
          "id": "815d0377-3b5d-43e9-8118-c6b14ef5acf1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2a373b23-183b-40cb-bfb8-1d8a94434f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc8819b-55da-491a-ab9b-81bfa76016a2",
        "cursor": {
          "ref": "76dcae5b-1707-461f-af34-05727633f3e3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f9acf3a6-e89f-417e-b557-1f1698f6952d"
        },
        "item": {
          "id": "ebc8819b-55da-491a-ab9b-81bfa76016a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "640e9396-cb0a-4448-bc2f-e4ccfb26f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9715cdc0-c167-4f6a-9a8d-fde2e16a5b57",
        "cursor": {
          "ref": "7dc27ae5-3d0b-4922-a670-b11898ff4e10",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b4034e6-7868-4ffc-ac5b-046790a03c47"
        },
        "item": {
          "id": "9715cdc0-c167-4f6a-9a8d-fde2e16a5b57",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d46ee360-606e-4556-bf4f-63bae70d541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea83109-82a3-43ea-bdf5-1247f369b998",
        "cursor": {
          "ref": "7bb92ba5-c3ae-46f3-8238-b06b836297ff",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e2b0b7b-1a9b-410c-ae32-19b72eb7b885"
        },
        "item": {
          "id": "6ea83109-82a3-43ea-bdf5-1247f369b998",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a2018af-e4e2-4f03-bd0e-eb481f3f06a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8043c3d-1647-4e2d-b871-7d23868c7999",
        "cursor": {
          "ref": "7cc79a70-6cd0-4c98-b5ff-654ec7eda67b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6cf834e0-26b2-4435-a27f-82daeb732d6b"
        },
        "item": {
          "id": "c8043c3d-1647-4e2d-b871-7d23868c7999",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5c5759ed-6683-4e29-a310-257004ea46d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826b12ff-0526-4bad-832c-c64067be2cb7",
        "cursor": {
          "ref": "e15bfc45-732b-4e11-b74a-93b1a07426e2",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "79879ec7-af16-46df-af4e-6516675e146c"
        },
        "item": {
          "id": "826b12ff-0526-4bad-832c-c64067be2cb7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e93b569c-5091-4b7e-8bfe-b703ae5d2de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ff3358-498d-4b9b-84ab-0018207557ed",
        "cursor": {
          "ref": "7f7d634e-a522-4322-880d-3a0425a510f0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3aac5fc8-0420-4d5b-be67-99f25243429f"
        },
        "item": {
          "id": "08ff3358-498d-4b9b-84ab-0018207557ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "115afac8-c7a7-486d-9736-affc35d45ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00b1185-ed74-4249-ab27-d8846880fadd",
        "cursor": {
          "ref": "62566744-c970-408e-955b-eef8f380c5e3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "23d777ef-28a9-41cf-94fc-0dc1ca4907ee"
        },
        "item": {
          "id": "e00b1185-ed74-4249-ab27-d8846880fadd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3848fe41-a559-4d77-bd43-2d34ef28a154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb81b43-0c51-4fc9-9750-741eb904ced2",
        "cursor": {
          "ref": "934741f7-f1e2-4027-8116-ac541e1f8d79",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fb1b6cfb-56b5-4a95-befb-9569a8cfad13"
        },
        "item": {
          "id": "fcb81b43-0c51-4fc9-9750-741eb904ced2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d41c54ea-b9de-4730-8e1d-af32de594ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4aad3-1c72-4dcc-8c21-5afaa5a1b610",
        "cursor": {
          "ref": "82d28b1a-4ccc-4bb6-882f-4f19ec31c7ed",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "31610bb4-51df-408f-a853-2c4f471da4c2"
        },
        "item": {
          "id": "9dd4aad3-1c72-4dcc-8c21-5afaa5a1b610",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3f98e051-6d09-4cf7-afab-f69407fa2613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dc2a6b-3e19-4fc3-b9f1-19b802080dec",
        "cursor": {
          "ref": "69e49c16-7911-439d-a246-cbb7bf087fb2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "34194799-70a3-4df6-91c0-fbde13c0c4ed"
        },
        "item": {
          "id": "27dc2a6b-3e19-4fc3-b9f1-19b802080dec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34086295-c9ec-4938-a045-6e7361b27ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646de421-ad01-4bcf-aedb-540073263a6f",
        "cursor": {
          "ref": "62d841a4-00a5-4104-91b5-aa1e195f595b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5cb0da4a-50ec-4c4f-8267-e16e2ac22ddc"
        },
        "item": {
          "id": "646de421-ad01-4bcf-aedb-540073263a6f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "65029df5-fb95-4901-b4cc-966206e7c722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad527c-9f2b-411c-a3a0-f23317dc0c0a",
        "cursor": {
          "ref": "10e83cfe-10d6-42ed-9365-bbee2fe9bdfb",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "943357de-3c9f-45af-8e3e-dabf0f3fba2d"
        },
        "item": {
          "id": "caad527c-9f2b-411c-a3a0-f23317dc0c0a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6cad4540-d5d2-4959-a6f2-a68e4359d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b41c08-ef74-447c-9ce3-6d28015bf1d1",
        "cursor": {
          "ref": "2c7a1935-01d6-49bc-94cf-c5221cae375d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0045a6c-efa9-4c1e-af9d-9c0d43f04ec1"
        },
        "item": {
          "id": "85b41c08-ef74-447c-9ce3-6d28015bf1d1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2ff4936e-153a-463f-bee3-2ab84d22579e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc341e-0576-42b8-922a-410d2568fa44",
        "cursor": {
          "ref": "74646b7e-a987-4618-b7b0-c911550bb247",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1264d2fc-9958-450b-9514-8a3de8021b13"
        },
        "item": {
          "id": "09bc341e-0576-42b8-922a-410d2568fa44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5c0af02-2775-47cd-889a-7cc360feab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04492089-8c63-44a1-a5f9-2bb9b1ca0271",
        "cursor": {
          "ref": "0f4a4f0d-78c4-4f2c-b744-18d0ec96c07f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1aefb828-6994-41b3-9567-98fc2403338e"
        },
        "item": {
          "id": "04492089-8c63-44a1-a5f9-2bb9b1ca0271",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b7db3d7-d48d-4e58-8cc1-19ca01cc7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edae9a7-cbd8-4024-85ad-20de98539c66",
        "cursor": {
          "ref": "cbbd8cc5-03ae-44cf-8892-e069489f8306",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4e121563-10d5-4fb0-bc22-4b3a39783669"
        },
        "item": {
          "id": "3edae9a7-cbd8-4024-85ad-20de98539c66",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e130f8c0-fcc8-459f-9050-083918d3e41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b4d904-7cbb-4f67-903a-d3b07f73a849",
        "cursor": {
          "ref": "ada51bbc-0bbd-4a25-b3a2-48ebd7760ab1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5aef7207-ee78-40e3-b857-d4e60b6547b2"
        },
        "item": {
          "id": "57b4d904-7cbb-4f67-903a-d3b07f73a849",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eae68522-4dd3-4c13-a58b-6317e77d714c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a77ba17-431e-475f-af27-9e3292453a58",
        "cursor": {
          "ref": "f5c35052-ed97-4096-bab1-9fb0a7531b13",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "723d2723-0885-4f82-8c88-ff47fab993c3"
        },
        "item": {
          "id": "8a77ba17-431e-475f-af27-9e3292453a58",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ea9db831-a372-4dfe-b439-396da19b2068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8789703d-6790-4f55-8321-806de32cd07a",
        "cursor": {
          "ref": "1acdbb8d-502c-464a-82e5-d1346de6f1fb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6e9cbd84-4350-45c3-84e8-26127a13be9e"
        },
        "item": {
          "id": "8789703d-6790-4f55-8321-806de32cd07a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e8b58ff6-45c6-429a-99c6-5a4f5f432448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9103140-b21c-4f60-ad94-d1b98a2ff71e",
        "cursor": {
          "ref": "42cb670b-f9c0-45f3-961e-f551ad883243",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ca723891-aae8-452b-90f0-85f185108518"
        },
        "item": {
          "id": "a9103140-b21c-4f60-ad94-d1b98a2ff71e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9c2e5ed9-6a27-4acc-aaf6-2b66c93f1ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c9e7e0-b95c-4214-8105-a80d28a2ad75",
        "cursor": {
          "ref": "798bb4ea-043a-4c15-8b4b-fd8d0c257b9c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3fbce5d7-f7e1-47a4-ba80-3ba67e49891c"
        },
        "item": {
          "id": "b5c9e7e0-b95c-4214-8105-a80d28a2ad75",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2f3717e6-2454-4ad9-a636-86c2b6b4c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1091f78-76e1-4cbc-82ac-5ccd16488fee",
        "cursor": {
          "ref": "56dd1eaf-e64a-4de0-b04b-0c76b91eb89a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "01dca298-0d8a-434d-987b-66da77e5ccf6"
        },
        "item": {
          "id": "e1091f78-76e1-4cbc-82ac-5ccd16488fee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ed4279e5-a138-428b-a093-3b2def902d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcffd52-8f85-486f-a55c-4e59cc13f208",
        "cursor": {
          "ref": "6085adda-1db7-4860-bf92-d53ea5632e01",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca74ac6d-56dc-4279-8d8e-122b7f99a152"
        },
        "item": {
          "id": "3fcffd52-8f85-486f-a55c-4e59cc13f208",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "767fe37d-0c3e-4c4c-9f05-3961e3eeca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2386bc35-6f7c-4c49-8c30-5eb3d0cbde20",
        "cursor": {
          "ref": "7d90d35c-b33f-4e41-b19e-056027a2b3d8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "21e70852-b275-483b-9daa-9c151a165451"
        },
        "item": {
          "id": "2386bc35-6f7c-4c49-8c30-5eb3d0cbde20",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9e6cef1c-1b41-4c80-8e5e-aadcf5c80678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d8b6da-3a61-4e0f-8197-162dbbd9ceb4",
        "cursor": {
          "ref": "51124e3b-d45c-4876-b889-9ea30e4a635c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "385c8826-87c9-4fa4-9fa2-156f721e06f7"
        },
        "item": {
          "id": "08d8b6da-3a61-4e0f-8197-162dbbd9ceb4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56bf203c-822a-45bf-ac7f-84022d301171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b34d60-f258-4934-975a-b16521bc0fbd",
        "cursor": {
          "ref": "f4d6be5c-614b-4123-b3f6-79b9a1e9f42f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b3aea139-5b85-4b2b-8391-e34973886ab9"
        },
        "item": {
          "id": "79b34d60-f258-4934-975a-b16521bc0fbd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "82962f58-a82f-4827-bae9-a715947973bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f2f85d-ceb2-44d5-bcf9-1dae1d7247b9",
        "cursor": {
          "ref": "68968130-5316-4b47-b7ed-17a1444f4cd0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cdeec746-9059-4265-acaa-1fa3458287da"
        },
        "item": {
          "id": "e9f2f85d-ceb2-44d5-bcf9-1dae1d7247b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "be5516a7-123b-461e-ac91-ffd3f32038d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d54159-d5a3-4997-b937-4ed9e279ea92",
        "cursor": {
          "ref": "0cf8ece5-f0fd-4853-847d-f195c4f7aacb",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "57bd42f3-2355-4fa6-93be-f7fdeefd27cc"
        },
        "item": {
          "id": "13d54159-d5a3-4997-b937-4ed9e279ea92",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5766f5a2-2869-45bf-beef-6ac36d1659b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b076be63-cf24-47b7-a46d-b66027d4df7e",
        "cursor": {
          "ref": "859710ee-e670-45ce-8616-441b9e7d09b7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ace4e9e5-61e4-47d8-9101-e1c93e388c09"
        },
        "item": {
          "id": "b076be63-cf24-47b7-a46d-b66027d4df7e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd951c40-eebe-4f9e-afd0-7cb67bcb86d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ee074d-de9d-447c-b7aa-a1993cf273b7",
        "cursor": {
          "ref": "9a761218-c078-4318-8eb3-bfaaa676c667",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "765c115c-9b7f-4fb7-9d42-05ae1bbe993a"
        },
        "item": {
          "id": "23ee074d-de9d-447c-b7aa-a1993cf273b7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1f5b5378-4e82-4bfa-80ec-1586d678a8bc",
          "status": "Created",
          "code": 201,
          "responseTime": 98,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb47614-ce36-43ec-b7ae-f178984a07c5",
        "cursor": {
          "ref": "68e01a2f-1fd2-4f77-b7a7-ac570cdded85",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85cb62fd-2a8c-44b3-9e9e-a8e10063255a"
        },
        "item": {
          "id": "bcb47614-ce36-43ec-b7ae-f178984a07c5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fe8f5027-7309-45b0-a6cc-655a5e12f808",
          "status": "Created",
          "code": 201,
          "responseTime": 171,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad881af-6547-4211-881b-45b55e2f2763",
        "cursor": {
          "ref": "0bb03dda-ad30-4893-bdab-5ab0aef48fd3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bed0dd7b-4692-429f-b389-6afc7e1079ec"
        },
        "item": {
          "id": "6ad881af-6547-4211-881b-45b55e2f2763",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ba48df55-1b78-4821-a480-0ad3d9f2c640",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19d6ab0-3bdc-4171-9f74-0e9b8b443329",
        "cursor": {
          "ref": "a5696757-51e6-46f5-8420-a9efc1fdfa9b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "960bf938-0230-4c8c-ad62-40bf052ea02e"
        },
        "item": {
          "id": "e19d6ab0-3bdc-4171-9f74-0e9b8b443329",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "77d8a052-5cc7-4871-a0ef-132622498134",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b51b9-910c-4d53-aca2-0f6d12bdceef",
        "cursor": {
          "ref": "20e71285-6ca3-45e4-9e22-79df7e783ecc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4c89a012-55e0-4df1-9009-b3f3dd8cd1e2"
        },
        "item": {
          "id": "293b51b9-910c-4d53-aca2-0f6d12bdceef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "29c12c6f-1e87-4ac2-9716-a8bbc1fc6445",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d13716-610c-48a9-a9f2-067e03e9d50e",
        "cursor": {
          "ref": "22590ad7-1476-4bcb-8632-3a7b9107e8c5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a70992f2-3a98-4b8a-a195-9c0d6cdb1722"
        },
        "item": {
          "id": "20d13716-610c-48a9-a9f2-067e03e9d50e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9ed59d54-96da-4613-9712-cc465351898f",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35fa49d-0543-4625-9550-8b6981e3fa81",
        "cursor": {
          "ref": "a8bf3e25-6474-4613-be2f-840044f36d7d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88eb2894-418c-4d3e-a8db-c9952038a6f0"
        },
        "item": {
          "id": "b35fa49d-0543-4625-9550-8b6981e3fa81",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5bd4622f-1281-4d8d-a7bf-990eb55e182c",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a8488-dd33-4a5a-ac7d-6856f549385f",
        "cursor": {
          "ref": "31907480-b8da-4104-ab00-873d45182458",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "07cb9c4a-1b2c-4863-9d1e-5e89f5fd9286"
        },
        "item": {
          "id": "0e3a8488-dd33-4a5a-ac7d-6856f549385f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6fb8ef9-a06b-48f7-a342-f3a31e8c7683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315f9ed3-eb70-4704-bc2c-a71e76cbebfb",
        "cursor": {
          "ref": "a2405c27-2910-4cfd-a911-d9c58e5815c2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "09bee42c-27b0-4f55-9367-d64c8aa07def"
        },
        "item": {
          "id": "315f9ed3-eb70-4704-bc2c-a71e76cbebfb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b8fe5914-d185-4197-8db4-559c277edc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d85c8d-86aa-40aa-9f15-f5b35b41f1c8",
        "cursor": {
          "ref": "2dc01e67-2c96-4e48-b33e-9c56a33884e1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e339d8f5-8acc-4fa1-8443-922d1edeffe8"
        },
        "item": {
          "id": "c1d85c8d-86aa-40aa-9f15-f5b35b41f1c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bfaf8271-f995-4e44-8221-e3d9d01ee65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d091bfe3-a33b-44f0-8f2e-1b748de74d8d",
        "cursor": {
          "ref": "4f352d3e-b2ed-4e12-b94b-91710a295ea8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5314fdcd-6c91-4b64-9d3b-422b15aa8d6d"
        },
        "item": {
          "id": "d091bfe3-a33b-44f0-8f2e-1b748de74d8d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5905128e-68ef-43ab-bfd0-6b28e433c2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185a3f62-6d97-419f-8ac1-e6b269bef435",
        "cursor": {
          "ref": "53714399-2a46-442e-be14-e6517e63d4cb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a45b6cd4-cd79-4b7a-b3d0-4b5cdbd020e7"
        },
        "item": {
          "id": "185a3f62-6d97-419f-8ac1-e6b269bef435",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d70799b9-4e82-43fe-b7be-357939df50bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e84ca-061f-4de7-901b-ddffc51ffb50",
        "cursor": {
          "ref": "6e7fd131-ec9a-4ff7-b171-1ab14a1ed3b4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d90d5a8a-b38f-4bb4-91bf-8dd0d4c82faf"
        },
        "item": {
          "id": "0a0e84ca-061f-4de7-901b-ddffc51ffb50",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a85f706-64ab-4121-9d03-1586b73b51f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049fe7be-8225-4b2d-87a4-35b352fb4ad1",
        "cursor": {
          "ref": "f988673b-3fa0-410d-b947-d3cef6f252de",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c91e75ac-b4c6-4cca-b916-899ac11e39bf"
        },
        "item": {
          "id": "049fe7be-8225-4b2d-87a4-35b352fb4ad1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "debadedb-bedf-42a9-b4f5-757a851d7669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515783da-2189-41e9-a904-4f458ea6c045",
        "cursor": {
          "ref": "6a55cf1f-2f1a-43f5-a8c5-6aa5b17381f0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2aec7a09-c7f9-40fd-a89f-2543bb4a81b1"
        },
        "item": {
          "id": "515783da-2189-41e9-a904-4f458ea6c045",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc764fd4-cc10-4b9d-bd0c-ca2814abca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4330b5-f7c1-4142-affa-1bc5b6319680",
        "cursor": {
          "ref": "26c1eebf-5424-4bbb-93c8-29d973349b48",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6cf7eac6-6c38-465f-9f4f-18c4fb8b439c"
        },
        "item": {
          "id": "3f4330b5-f7c1-4142-affa-1bc5b6319680",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b46685d-2750-4815-be4f-6d5c5a11f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731a878a-68e1-4650-b2b0-3ef2462bce79",
        "cursor": {
          "ref": "0e6a5f0d-37ad-4bda-a83c-9d013c2a8fa0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "60cb495d-a635-4ecb-a89e-65309212514a"
        },
        "item": {
          "id": "731a878a-68e1-4650-b2b0-3ef2462bce79",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f3af641e-8177-46d3-9a98-638ea4fa7dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999c3eed-2602-4aeb-8eb9-0f03b66d7d7a",
        "cursor": {
          "ref": "770284a5-10f4-4ba9-a8f6-11074d09a6eb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e11efece-1905-442b-aa2a-576c72ba3184"
        },
        "item": {
          "id": "999c3eed-2602-4aeb-8eb9-0f03b66d7d7a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f7ac60be-8bd3-45a4-9007-ffec9582b77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031179fa-9993-4c89-ae84-43a30f467c96",
        "cursor": {
          "ref": "fc2dae02-b2c6-4a02-8572-1ad2cdc40489",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "819a9b52-976f-4b5e-aaa8-1ab33b5f4a01"
        },
        "item": {
          "id": "031179fa-9993-4c89-ae84-43a30f467c96",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7912b71-f500-4a4a-b3a7-c833b8297eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fa2b2e-9bd6-429d-affb-60f6c67f5863",
        "cursor": {
          "ref": "42ea8c86-054c-40f1-ac52-f30f5700cf6c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d21cbce-4d0e-49a2-81b6-d676455fdefd"
        },
        "item": {
          "id": "86fa2b2e-9bd6-429d-affb-60f6c67f5863",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b92dee52-d672-409f-a52e-cadf2192e703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51f2df-35d3-44d6-855f-7854a550ded1",
        "cursor": {
          "ref": "8a12e8ae-4cdc-467b-9c16-cb5f9da8484a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "db6a73ec-b6a1-431f-9a0b-8428530728f0"
        },
        "item": {
          "id": "1c51f2df-35d3-44d6-855f-7854a550ded1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1b479558-00a1-4703-90f9-ef4840dc0c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1d68c9-e75e-42e2-916c-e8c027c08ba0",
        "cursor": {
          "ref": "9309062c-1e52-4bc2-8e34-477ee1a7a16a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "72445215-ee20-4a7e-a218-3040342f6935"
        },
        "item": {
          "id": "5b1d68c9-e75e-42e2-916c-e8c027c08ba0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0ce86042-c390-4663-b426-dd308ace217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf7665c-a131-4b20-8f92-c2f4bcf54928",
        "cursor": {
          "ref": "fb5497ec-69a0-4699-a18f-6503196d5994",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b9f0ffee-e250-4185-b435-0d7e2035daa0"
        },
        "item": {
          "id": "0bf7665c-a131-4b20-8f92-c2f4bcf54928",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "692ac037-dae8-4382-a81e-a0977bcb3223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7bf5cd-4a98-4c32-8c8c-50c56061dfb6",
        "cursor": {
          "ref": "1f9e5a99-7cd2-4dc6-a5f9-c94930aa28ce",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b09e80ed-3803-4a79-bc58-0c8e4367581b"
        },
        "item": {
          "id": "7b7bf5cd-4a98-4c32-8c8c-50c56061dfb6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "24faf693-c5fb-48fc-b5b3-2adad9b0ab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e891adf-4791-4bd1-9d67-85258045b7e5",
        "cursor": {
          "ref": "d376f88a-d601-45f0-abe6-7c75e4547e0e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "23a3125b-0e96-4768-bdc5-cdb40dfb48dd"
        },
        "item": {
          "id": "4e891adf-4791-4bd1-9d67-85258045b7e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "253d7cb6-91c7-4dee-a22b-22e054a92b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bd0ca2-6988-4e38-870a-a123209f28a9",
        "cursor": {
          "ref": "811aab3b-ec5b-4266-bd09-d2e7b57944ec",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a8a741ad-f667-4f19-94ea-96120c52173e"
        },
        "item": {
          "id": "f2bd0ca2-6988-4e38-870a-a123209f28a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b02b801-30f7-4826-82b9-d565260bf492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca92e74c-0aa9-4969-9171-7f0349a4d24b",
        "cursor": {
          "ref": "9aba5796-14bc-42ce-b0c2-71d6923d6f1e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4616041a-9d92-453e-9254-4ea9a900102a"
        },
        "item": {
          "id": "ca92e74c-0aa9-4969-9171-7f0349a4d24b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c2c5aa51-5d26-4c0b-8c21-e90ca5904232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e97e818-8489-4681-b0c2-bed78f6d38d9",
        "cursor": {
          "ref": "e6442413-ba1e-42f6-89a4-2cdba40209f5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "70025f98-1e8b-4c86-83c1-fc43059bc6d1"
        },
        "item": {
          "id": "4e97e818-8489-4681-b0c2-bed78f6d38d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "106e9324-9201-4033-82cd-48f955341f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6db29a-a857-420f-83d9-54157d1a1eb2",
        "cursor": {
          "ref": "d70dfd3f-87dc-4874-88ce-38b3abafbc5c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ca6dbf0-1c3d-4f61-9c4f-55148a8cdda1"
        },
        "item": {
          "id": "1f6db29a-a857-420f-83d9-54157d1a1eb2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8d76f767-aa00-4ff0-be13-7b9a22af1b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf054a4c-5c36-4226-8999-b896edb9b448",
        "cursor": {
          "ref": "1bd306d2-7c57-4a0d-842d-3bcc29440ca5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "725f2952-23dd-4235-8db7-f444e33e9e4b"
        },
        "item": {
          "id": "bf054a4c-5c36-4226-8999-b896edb9b448",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f90e88c4-612f-41c3-b429-bc8f14da1dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5248c1-3636-45f4-a954-e972e01be595",
        "cursor": {
          "ref": "1f8ebe3b-257b-4646-99c2-31408c549405",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6ca87c82-4372-47f7-81d8-e18e99291c5d"
        },
        "item": {
          "id": "ed5248c1-3636-45f4-a954-e972e01be595",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e52b9f4-2fdd-4b82-96ee-486802a44013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46bceac-2a27-4804-87e4-a77f8e79af6b",
        "cursor": {
          "ref": "6861462f-38a4-44f0-9b6d-f53171bb5a11",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bbee3d64-bfe0-4140-965a-9bf126e9962f"
        },
        "item": {
          "id": "b46bceac-2a27-4804-87e4-a77f8e79af6b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c52dabf6-299d-44fb-b462-95124653edfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5fba44-afb3-4656-bd27-671e0ce21df0",
        "cursor": {
          "ref": "d45b5341-d332-4b32-ae70-0dc393bff387",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ab066417-00c2-4385-bd30-0e091a7352cb"
        },
        "item": {
          "id": "9e5fba44-afb3-4656-bd27-671e0ce21df0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60ad78a4-ed6b-4f2d-8596-eaf12a4968d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8337f57d-5a95-440e-a9a8-1e0b3e7345df",
        "cursor": {
          "ref": "0b05f621-a813-42d7-9b55-bc240ef29d52",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "de1bb1a5-347a-4908-8d34-3bf3dc906029"
        },
        "item": {
          "id": "8337f57d-5a95-440e-a9a8-1e0b3e7345df",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7db0962f-deb5-464a-ac8d-e0dea57ef795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d354711a-4094-46b8-8ad3-6b740869a46f",
        "cursor": {
          "ref": "cbdadc48-5ea4-491f-b69a-e16a254f45bc",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5bc6b9ad-14ce-46d0-aef3-dbe3587f9a6b"
        },
        "item": {
          "id": "d354711a-4094-46b8-8ad3-6b740869a46f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f510e9cb-dd55-410f-b85e-03acf860507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92578ed3-163c-457b-8968-545068cf1012",
        "cursor": {
          "ref": "29cf1632-b17d-430d-8339-bb0f0551e4da",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26e59300-8ebd-4806-a092-abd4db9527d5"
        },
        "item": {
          "id": "92578ed3-163c-457b-8968-545068cf1012",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9aa8aa01-984d-497d-9c27-ca3b722c8f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09a7630-39b7-454c-bf88-7ebf6c70e2c8",
        "cursor": {
          "ref": "88ea3f5b-a873-4c83-8fa4-ce4446d93d9d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "64cb3e94-ada5-4dc0-ac6e-c81776f625f9"
        },
        "item": {
          "id": "b09a7630-39b7-454c-bf88-7ebf6c70e2c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ae42d53-1709-44f5-a43e-0f992b1a90e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8742fe40-647e-4b9e-875a-7c088eff0cc7",
        "cursor": {
          "ref": "dfc612e4-bb49-4431-808e-416e6aff4c2c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "741b3a11-662c-42aa-a6fd-3d2bbd5429f3"
        },
        "item": {
          "id": "8742fe40-647e-4b9e-875a-7c088eff0cc7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "24baba07-7f20-41c0-8092-a61cb8809e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75548ec8-2d6b-4e56-914b-4f214ae16434",
        "cursor": {
          "ref": "8e453b2d-78bb-45a3-a128-636d9bdfa77c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e0ff386-7250-48f0-a7c6-e34869fc62b5"
        },
        "item": {
          "id": "75548ec8-2d6b-4e56-914b-4f214ae16434",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1337fcb2-5b24-4701-9616-93f108c1e3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be4c865-2bdc-43c0-92d3-6bcc66f3cda3",
        "cursor": {
          "ref": "2bed8a37-38a2-47c4-bc56-0d9a9b1ae330",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "230005e4-9efd-4c07-9d2f-78a65f836b61"
        },
        "item": {
          "id": "9be4c865-2bdc-43c0-92d3-6bcc66f3cda3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ca6685a-c3d9-4613-a0b1-25bf36650065",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04c39dc-89c0-4618-b47b-eb7bbe435e06",
        "cursor": {
          "ref": "df75d34f-52a6-44cf-92fd-f35867584d6a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "879ae333-9b4d-4c67-800a-bb4f550550cb"
        },
        "item": {
          "id": "d04c39dc-89c0-4618-b47b-eb7bbe435e06",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b8b34e63-ce10-4a7b-89e6-c974caeb4a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff6b9cd-f6e9-4b5c-b34c-63418a61d958",
        "cursor": {
          "ref": "bafc8c45-96e9-47fb-8456-8698bc824793",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "13de5005-cd53-4012-a7eb-8f049169ee97"
        },
        "item": {
          "id": "9ff6b9cd-f6e9-4b5c-b34c-63418a61d958",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe56b9fe-0f95-47a4-85f5-e8f316d3f0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383de336-1d97-4c30-a3ad-ff398d1d3bbf",
        "cursor": {
          "ref": "2d92f426-c877-49d7-a490-f35910352a84",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f7b9bae0-8784-4559-9837-4df711a34426"
        },
        "item": {
          "id": "383de336-1d97-4c30-a3ad-ff398d1d3bbf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2c34ac2e-d269-4954-b6d6-81b721ab467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3153a-1ae0-44ba-99d3-f21913709d25",
        "cursor": {
          "ref": "c6fff0b6-dcc0-40a7-a4e6-a92c07680219",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "611a10b2-a2eb-46d3-80ed-8631079f2fb4"
        },
        "item": {
          "id": "39c3153a-1ae0-44ba-99d3-f21913709d25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48dd7c86-ff14-4d69-8465-0074a2fcd318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1d5185-c479-4fc6-b36f-6b261d4f66b5",
        "cursor": {
          "ref": "85cc6904-4914-460f-97f8-e1611bf54e1e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "431d4898-7f31-4848-96f5-a088c31209dd"
        },
        "item": {
          "id": "fc1d5185-c479-4fc6-b36f-6b261d4f66b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8ef3e2ad-54a4-4c17-a703-23801ff83cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfda6f7e-620f-4776-85eb-579e78cde2d5",
        "cursor": {
          "ref": "87b9c218-29f3-4afe-8211-f36784ecb5c4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fa16bafe-847a-44e5-a0c0-0f4bf717c5ed"
        },
        "item": {
          "id": "dfda6f7e-620f-4776-85eb-579e78cde2d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9008ae28-39bf-4d66-874d-99cb65393d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aff28a7-11aa-4f76-8182-1c55f23fb383",
        "cursor": {
          "ref": "bfb00c1e-f30f-410c-b9e4-547ce7b46bb4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "37ace6cb-26fb-4f91-812c-c388fc971519"
        },
        "item": {
          "id": "8aff28a7-11aa-4f76-8182-1c55f23fb383",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0e73636-de75-4b44-89fe-0ba6132438a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f774810-e78d-4f95-9834-a98f560d5e37",
        "cursor": {
          "ref": "77e6120b-d6d2-4a14-960f-0f6f55e03589",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e6c2859c-5f8e-4358-a6ef-f7e22160ad7f"
        },
        "item": {
          "id": "5f774810-e78d-4f95-9834-a98f560d5e37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f2770b6-d447-444f-9a4a-b375a7cbbe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a1f786-e887-4281-9a30-0bbeea73b693",
        "cursor": {
          "ref": "d438d54c-0f68-42ac-bb04-34fe73f6ed52",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06f99d0f-3db4-471c-b159-2606d059b771"
        },
        "item": {
          "id": "e3a1f786-e887-4281-9a30-0bbeea73b693",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c9296883-ccf0-4fb0-b93f-1c0f854390dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeca104-634a-4e1e-8916-f12deb980d11",
        "cursor": {
          "ref": "3627dea3-5aa2-414c-9c64-ae80f6dba431",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d7175659-3db2-46a7-a0e5-cc4ce7a6559e"
        },
        "item": {
          "id": "ddeca104-634a-4e1e-8916-f12deb980d11",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd87a387-ad29-4283-8493-09a62a03cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ccca07-43cd-4eed-b811-dce184c864fb",
        "cursor": {
          "ref": "55208e24-b194-4ebe-a877-7c1c88b7a910",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d7cc0560-ad38-48e8-b87d-41408de33be1"
        },
        "item": {
          "id": "06ccca07-43cd-4eed-b811-dce184c864fb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53757c69-06cb-4765-b33d-b9922aec17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb21bac-a848-40f0-8f1d-2d8af692f150",
        "cursor": {
          "ref": "d6a294a4-f576-4965-9ae4-e2757fe40b66",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fe13f80f-9c84-4819-abb9-cd97545add92"
        },
        "item": {
          "id": "cfb21bac-a848-40f0-8f1d-2d8af692f150",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7514a097-3a88-42ba-9190-ed295cde763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0f7fbc-7f84-4ec8-8520-54ab0187ab00",
        "cursor": {
          "ref": "3bf52e10-42ba-4c33-8715-384e0a1211c6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "863afed9-48c4-467b-afbe-c1171e8cf315"
        },
        "item": {
          "id": "6a0f7fbc-7f84-4ec8-8520-54ab0187ab00",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "df5c6c53-043e-4e01-bc52-4629ced0d7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97593e75-0732-4c39-9278-bb4dcb640fe7",
        "cursor": {
          "ref": "037ca4d4-d050-41a9-88ea-c708e75b2175",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5cdefc8c-cf34-488b-a83f-a575505f3230"
        },
        "item": {
          "id": "97593e75-0732-4c39-9278-bb4dcb640fe7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fa526e5b-d90a-4fe2-af26-bdd762551c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e1e790-6152-4c05-bc6d-6f09107aa3d0",
        "cursor": {
          "ref": "9560ec5a-5438-424b-941b-f71ce8b17f01",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ec65f943-40a2-4570-9803-f0edcc713d88"
        },
        "item": {
          "id": "24e1e790-6152-4c05-bc6d-6f09107aa3d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e7e9f5a1-3ba4-4411-816b-ed3400545a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bc674e-776e-4443-aa8f-f79c65d00bce",
        "cursor": {
          "ref": "e83d6424-b77c-4a49-b227-edfe5e7226be",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1c22d6a0-73f5-47a6-b343-50b7cf781898"
        },
        "item": {
          "id": "33bc674e-776e-4443-aa8f-f79c65d00bce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f9e5b5ff-4c2c-4631-a43b-4e29244f5653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee0f1b2-124b-463d-a1af-4d5332f90f1a",
        "cursor": {
          "ref": "b2e275b7-c1c5-4913-a384-5e4ec98fca99",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7bb3254d-0676-4e6c-9a13-b45806ad1875"
        },
        "item": {
          "id": "6ee0f1b2-124b-463d-a1af-4d5332f90f1a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b32b06fc-74d3-444c-a4f4-76044ce08bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a9abf8-5e66-4f7b-bb50-d733778c9e8d",
        "cursor": {
          "ref": "c0c008c0-d0c2-4efb-bbd8-e60a675dd903",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "79cb5c7a-cebd-49ea-9032-c9d8938f6bc2"
        },
        "item": {
          "id": "84a9abf8-5e66-4f7b-bb50-d733778c9e8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d31824e3-6199-4946-9dc3-783c15569298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494cc8a8-9475-452d-acff-074920dcc43c",
        "cursor": {
          "ref": "3b47598f-fc3a-44cb-bc14-43709af1e64a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2f9ee60-80fe-41a4-972b-1d91412792ee"
        },
        "item": {
          "id": "494cc8a8-9475-452d-acff-074920dcc43c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "072dafeb-ca0e-4f31-9c2e-c86c27bbe9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eacfde-36da-4798-ae4b-95bb6c2960c4",
        "cursor": {
          "ref": "ed1118ad-e481-457f-9027-7d4b121846e5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b85ba042-2112-4fd3-abe4-d56d97e175a6"
        },
        "item": {
          "id": "64eacfde-36da-4798-ae4b-95bb6c2960c4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "972858eb-f1a7-48a4-ada4-d3a6f6d3b6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76446c35-f415-4e23-84a8-15aa4c00d39b",
        "cursor": {
          "ref": "def5c482-0699-4644-9b42-651ea51e2791",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "12700877-bdf1-43bb-a3b3-73f8659e4111"
        },
        "item": {
          "id": "76446c35-f415-4e23-84a8-15aa4c00d39b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2c26286-1f53-4983-b5b9-5a5f4120f128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c585186-5c80-45e0-9e2e-53be7728d949",
        "cursor": {
          "ref": "a64629cd-1cb8-4b90-b1d3-68a66c5ec1e2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b5b8f252-1fe1-4679-a75e-cc6e3d352ee5"
        },
        "item": {
          "id": "7c585186-5c80-45e0-9e2e-53be7728d949",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11c13af6-6781-43e5-8a49-ad95cbde2e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b97a8dc-1f8b-47d0-bb47-8e27fd3dfa91",
        "cursor": {
          "ref": "fbbb3866-153b-4c98-8d9a-44d23776064c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8bb0bae1-7990-4c92-819d-ed1ed67ca621"
        },
        "item": {
          "id": "0b97a8dc-1f8b-47d0-bb47-8e27fd3dfa91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9175f8ce-b7f2-4b75-a392-86c6fc6d1382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59feb5c3-c09c-4a25-965b-c403ce6cad26",
        "cursor": {
          "ref": "7d7c1628-d7a9-4e8b-8276-28dc4161af49",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "43d5a1c7-88a9-4575-91ec-3b0881fda53f"
        },
        "item": {
          "id": "59feb5c3-c09c-4a25-965b-c403ce6cad26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "806d480f-6f70-4ae4-bf2d-1e464cb76c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6782331c-a383-4af2-b86b-93eef772df95",
        "cursor": {
          "ref": "2b24e655-8a52-4e38-bc07-badb61e27aaa",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9128f08b-1082-40c4-aac2-fbbd6f88847f"
        },
        "item": {
          "id": "6782331c-a383-4af2-b86b-93eef772df95",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5053be48-4c1a-4866-912a-db5ed74fa3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460fa8b7-59fb-40ea-bea4-e778acd072fc",
        "cursor": {
          "ref": "a2bf92b3-0acb-432e-aa3c-aeb00829627e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cb6e2b08-b381-435f-8d25-34d9f2717aca"
        },
        "item": {
          "id": "460fa8b7-59fb-40ea-bea4-e778acd072fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3a24290-4072-4a32-b147-eea6a616dd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f18f9ae-9d1e-4e88-a204-de59b790032d",
        "cursor": {
          "ref": "1519ea8c-0cde-404f-9728-5567b0e1f29b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a04256d8-8b6b-414d-810b-cf9e5dd51f34"
        },
        "item": {
          "id": "9f18f9ae-9d1e-4e88-a204-de59b790032d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "166e1d32-6466-4e22-b0d5-1c0489df885b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e55894-e00a-43f5-9ecd-ee6623d944fe",
        "cursor": {
          "ref": "001db457-fc56-413f-8439-29dc84b4c175",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cb3c6c44-9e81-44cc-a513-0af4e10f5d96"
        },
        "item": {
          "id": "d8e55894-e00a-43f5-9ecd-ee6623d944fe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6f485540-7b52-4f2c-a63c-6918cde0ea78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e4ba56-fb2e-40a6-8dfd-552cf19403b0",
        "cursor": {
          "ref": "ea2bed6a-3969-4b67-84c0-b6a8bb5cbb03",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "569edf42-f72c-403d-b54d-b538b1a2b92e"
        },
        "item": {
          "id": "19e4ba56-fb2e-40a6-8dfd-552cf19403b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b689b3f3-8079-416c-be0d-6ef48a65275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b686fb6f-968a-4bc8-b359-134b3850430b",
        "cursor": {
          "ref": "775785f4-5e38-4277-b25b-db6f07068cc8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cfad477d-3a23-4cc0-bf67-82183f198d6e"
        },
        "item": {
          "id": "b686fb6f-968a-4bc8-b359-134b3850430b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0dfe5841-5eb7-4b66-aeb7-aafbd6ace13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95fc1fb-64f7-4d79-8bf8-29b99ded59fe",
        "cursor": {
          "ref": "7295fb01-747c-4f30-8948-b5f5e90ae25d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2817b59d-ff36-4c56-9253-ecee0b5a8e62"
        },
        "item": {
          "id": "a95fc1fb-64f7-4d79-8bf8-29b99ded59fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0ecbeb03-f4a5-4f65-ab77-0186f254bfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ad88f7-b14d-4389-950b-da4f3fbbbabc",
        "cursor": {
          "ref": "3583719b-f693-4c50-9710-720364bc5ecf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ca1eb351-2531-43e6-8707-926d3af32663"
        },
        "item": {
          "id": "21ad88f7-b14d-4389-950b-da4f3fbbbabc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "998ee49f-a083-4442-bec5-b31f055d9833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa40b5be-c047-435a-b882-6de923017e26",
        "cursor": {
          "ref": "46026eda-0829-49b5-aeed-fb3aa5aa9db0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "df7e47a0-378f-4712-b8fa-8e1294263cca"
        },
        "item": {
          "id": "aa40b5be-c047-435a-b882-6de923017e26",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aa1232fa-0d39-48fd-ba6a-5c6a17994604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d050fa00-28d4-4b56-bc59-396e44ff41ac",
        "cursor": {
          "ref": "906c0b96-607e-4d74-86f6-2e598d238e28",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e8d11c2f-a34d-4632-a1f9-4ce8fd73f377"
        },
        "item": {
          "id": "d050fa00-28d4-4b56-bc59-396e44ff41ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "95ef5133-4307-4d56-8e5f-311229d2c255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840a02e1-3f3c-4591-8242-7a6a4bface44",
        "cursor": {
          "ref": "0e6da464-0e67-4883-9986-0dc4b9bd5ed5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "125a9dc9-b487-4f41-8a29-dca4541d722c"
        },
        "item": {
          "id": "840a02e1-3f3c-4591-8242-7a6a4bface44",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ec118dbb-f616-4836-b54b-48fe989acfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba50786-dc53-4b1d-a356-718fd10b4a5e",
        "cursor": {
          "ref": "2f89974f-2329-483c-9165-112eca2d79e0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0d3c0af3-8778-45fe-954a-c6b88a696298"
        },
        "item": {
          "id": "7ba50786-dc53-4b1d-a356-718fd10b4a5e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d95286a1-721a-48c5-9f70-18582732c80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de75a8-79d0-4720-a454-c381dafb27d2",
        "cursor": {
          "ref": "10c46da1-3232-4d43-b166-882c3d2dd03b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9cf2f8f7-4019-46b1-9ad8-9c90d76a9ce6"
        },
        "item": {
          "id": "f1de75a8-79d0-4720-a454-c381dafb27d2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4bf80d46-cdbb-406e-acb6-3e207c09bac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987ff2a4-20ce-4008-8bac-d7c107db6326",
        "cursor": {
          "ref": "f605229e-6a98-4115-954c-c6c640df6d2b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "226513ae-a4e4-40ad-9607-68704ad56ad5"
        },
        "item": {
          "id": "987ff2a4-20ce-4008-8bac-d7c107db6326",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f57bbedd-b9bf-4fe9-9f60-087e0c7e8334",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48c6b73-8ffd-4fd6-ad1e-f324facd96f8",
        "cursor": {
          "ref": "6393577f-f81e-4103-bdda-936d5a7add84",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1da7c972-2e08-45ed-91cf-a00bcaab9d48"
        },
        "item": {
          "id": "b48c6b73-8ffd-4fd6-ad1e-f324facd96f8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f54b0873-73ca-43a1-91c8-dcc9c16b156e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfc0ca7-01cb-4ff5-9f17-c305784c1645",
        "cursor": {
          "ref": "f84b4939-7cbc-4157-8e39-9e9bb27c44b8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d65191c6-9c9f-4fa3-8bd1-6c2f39c30f45"
        },
        "item": {
          "id": "7cfc0ca7-01cb-4ff5-9f17-c305784c1645",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ecde12c4-c7f4-4709-b402-fb8f1fcae9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03d639e-20bc-4a80-bfc4-befffaa9d982",
        "cursor": {
          "ref": "96da80f3-04b9-47f0-b0a0-a5a55cf3c182",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "229d9bd2-fda8-470a-99f8-1bcc5ec45468"
        },
        "item": {
          "id": "e03d639e-20bc-4a80-bfc4-befffaa9d982",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4fa3941a-9d1b-4d4d-8acb-f4690383cd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab72532-7d51-45d1-bb42-ad3e0eca56de",
        "cursor": {
          "ref": "dd48fd03-9463-42b4-b9eb-ebb7d23616e1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1a954238-26de-40ad-9352-ed1be2306e01"
        },
        "item": {
          "id": "3ab72532-7d51-45d1-bb42-ad3e0eca56de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "13df3c63-9210-4fb5-9d9a-b8f3600dd0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d341a9-caca-49bd-bbc5-c0ffcba23957",
        "cursor": {
          "ref": "4e614d63-315c-4397-bcf4-39b7ca7192c7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "69f05765-9943-4210-aba3-bb1ad1200f3b"
        },
        "item": {
          "id": "64d341a9-caca-49bd-bbc5-c0ffcba23957",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7d313fc6-16e2-4881-ac8c-ca4b046dbb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d975b95-0554-4645-a84f-6fc8bf93cfa2",
        "cursor": {
          "ref": "2d2e221f-f51e-43b3-a630-de872dd4a63d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9a0c2b34-4398-40f0-ac43-3a657c341354"
        },
        "item": {
          "id": "4d975b95-0554-4645-a84f-6fc8bf93cfa2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9c587b2f-1c8c-4327-b599-3a733953b79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de9cb71-3221-4331-bcec-5fe2822908c6",
        "cursor": {
          "ref": "506f4096-2981-4159-adbe-a522c6457cd1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "69847147-4d55-4ec3-bc40-19e98a868c9c"
        },
        "item": {
          "id": "3de9cb71-3221-4331-bcec-5fe2822908c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9dbc5281-0373-46ee-8b5f-620664611f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3a995-7329-4de5-8c6d-f175112454f8",
        "cursor": {
          "ref": "d6343707-ef24-43d7-858c-f35ea5a12a90",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "44f28938-da43-407f-b34d-ded80729bd46"
        },
        "item": {
          "id": "b2c3a995-7329-4de5-8c6d-f175112454f8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b6cf8dc2-4c7f-4013-83ef-a7bbacbf0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b18fc49-83bd-4ad0-9cbe-9f801740eae7",
        "cursor": {
          "ref": "5c15af48-ce7b-4eab-94d4-f0c8ccf8cdf6",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9ed228cc-0add-41ad-812d-b92b286939d7"
        },
        "item": {
          "id": "8b18fc49-83bd-4ad0-9cbe-9f801740eae7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "650cddf3-5e90-43b3-86ee-1414891bf68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6968320-642d-4ea8-ba27-8807cd1e11e2",
        "cursor": {
          "ref": "1cc4989f-0880-4c1d-acff-9fd3e62e3b4d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1736f04-8e28-4c93-95ef-68793403cde9"
        },
        "item": {
          "id": "b6968320-642d-4ea8-ba27-8807cd1e11e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e5be879-0a60-4524-bbdb-1d99960b5459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad22dca6-e442-4568-85cb-6380644d598f",
        "cursor": {
          "ref": "965a8bca-fcc1-4497-8321-312877806a74",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "045193c9-006b-48eb-918f-6534c69e443b"
        },
        "item": {
          "id": "ad22dca6-e442-4568-85cb-6380644d598f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a69249e9-96de-4cf4-88e0-f2eb86f9c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d440a9bd-97c1-4613-af1f-2cfbed912498",
        "cursor": {
          "ref": "b253547f-7cd9-4cb2-8f14-acfcf6901d47",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5f562cc0-779b-44e5-8316-6f79083e9b38"
        },
        "item": {
          "id": "d440a9bd-97c1-4613-af1f-2cfbed912498",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b055f90b-3e5d-4c7e-964f-22900737a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851e874-e700-41c2-a73a-4a6fe58eb8fe",
        "cursor": {
          "ref": "2ceb5ef7-ec31-439c-8df6-e6283524fb1c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b8c4a830-2a1c-42dc-9017-a4d97df0eb20"
        },
        "item": {
          "id": "f851e874-e700-41c2-a73a-4a6fe58eb8fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ae7255eb-bb8a-477f-933d-82af89cc4502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c1a940-2986-4a50-b83d-6bcea79ecc51",
        "cursor": {
          "ref": "ebc1d6e3-9cb7-4da0-9334-369745bee920",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba16b196-d1b2-44c9-8b07-f94b1477eabd"
        },
        "item": {
          "id": "39c1a940-2986-4a50-b83d-6bcea79ecc51",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7f2e7d75-641c-48cb-b337-efd4410e8dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9746b1f-a3b4-40c7-b464-415d281e91f1",
        "cursor": {
          "ref": "a17ce117-dbc8-4bc9-a78e-f649a61c37bf",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a94dffa-84fc-4668-bb72-824fa7060b34"
        },
        "item": {
          "id": "f9746b1f-a3b4-40c7-b464-415d281e91f1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "aa8950dd-cc37-4f87-a3e5-3e5e14b344f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8435c339-6d8b-4ee7-bd7c-d94156195f6b",
        "cursor": {
          "ref": "93d7f7c2-ddd1-4113-a8b0-0b3913537f0f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d05e3d43-fa06-4e6f-b080-6e1ca8068dfd"
        },
        "item": {
          "id": "8435c339-6d8b-4ee7-bd7c-d94156195f6b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3ce2d6dd-099b-4831-a012-481c647046b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d49e76-f367-43be-9c0d-9dab3db7d73e",
        "cursor": {
          "ref": "8afb5c4c-26a7-4970-bf21-833dfbc778a2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "db5d4b5d-6889-4470-a03d-416817a95542"
        },
        "item": {
          "id": "83d49e76-f367-43be-9c0d-9dab3db7d73e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6c28a854-a52c-4e28-8650-edbcac3ed3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60106bea-a08c-480d-a3e1-9349bfe24182",
        "cursor": {
          "ref": "4a75f4bc-d6b9-430f-9897-f622e3c59413",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "42d919bb-c360-4c56-9a53-8dc0b11f2c0d"
        },
        "item": {
          "id": "60106bea-a08c-480d-a3e1-9349bfe24182",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b4d73eac-1dcc-4c16-b9d9-1eda6be39652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70b4632-52b7-4535-94b2-ac42ea7b52ad",
        "cursor": {
          "ref": "39f3bd27-9efc-44e5-a686-2e4d1683b1ae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75d198e5-4dd2-47de-b992-d372d766a98f"
        },
        "item": {
          "id": "c70b4632-52b7-4535-94b2-ac42ea7b52ad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57b09a54-f8a4-4351-a654-e5ef5e5775d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bff115-517b-4572-a7a7-c33cdd47790f",
        "cursor": {
          "ref": "57664a74-1003-4a58-bddb-da629d7a9bad",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c6e13e2f-3e4c-43b6-aacf-771928ce6cf5"
        },
        "item": {
          "id": "e3bff115-517b-4572-a7a7-c33cdd47790f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2cb06ddb-f81a-468f-a5db-e181638dd44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a09072-0b51-4e7c-a9c5-33a5323dac14",
        "cursor": {
          "ref": "7ee1d4d6-1373-4757-9f7f-07c05b054a08",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "53a3d78d-ec57-4e6f-bd76-d4666db97b87"
        },
        "item": {
          "id": "24a09072-0b51-4e7c-a9c5-33a5323dac14",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4e414228-4379-4186-9b4b-015578d54f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c0b0f-0aa9-453e-a69b-f9ff0241c54b",
        "cursor": {
          "ref": "f8b9a1ec-1025-432d-9462-322fd579657c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a90c446d-ac60-4667-8909-fa10e4572d43"
        },
        "item": {
          "id": "077c0b0f-0aa9-453e-a69b-f9ff0241c54b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9cc91790-79d8-42a2-8563-7f4baadea7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d9e453-95c4-4ec7-906c-83ca5420adac",
        "cursor": {
          "ref": "50c6b82f-e9fb-4681-8980-c9e4c988ab6e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c952e95a-5f7e-498b-ba34-39d002c2f964"
        },
        "item": {
          "id": "d6d9e453-95c4-4ec7-906c-83ca5420adac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d0a2f4bf-41d9-4198-ba0d-59649465003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e4f6c-583f-4a23-8a4b-78b56a87b287",
        "cursor": {
          "ref": "bb784ad8-b097-4b62-b298-73881703affb",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "472a8504-3479-41d4-904e-28358161c30b"
        },
        "item": {
          "id": "a15e4f6c-583f-4a23-8a4b-78b56a87b287",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aa1ed6fa-06d9-4165-8eb2-8e0fcbaec232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588c7c96-3018-4016-be93-48892241c475",
        "cursor": {
          "ref": "5276e9d6-66c6-4e97-aeb5-0692f13ea331",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4a547dd9-08f2-4543-b6fd-fc976199a531"
        },
        "item": {
          "id": "588c7c96-3018-4016-be93-48892241c475",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a6a49cf-4f03-4384-8bf5-0f74b88692db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f58cfaf-4973-424c-8521-0f52b641e20a",
        "cursor": {
          "ref": "65230ac9-fce0-485e-ba17-fdf49f9447ec",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4a05bebc-2df1-4269-a4dc-0ae39b5dceb1"
        },
        "item": {
          "id": "6f58cfaf-4973-424c-8521-0f52b641e20a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c2d87ae-dc3c-4124-a6cb-ea305eb9d741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadb1697-922a-44af-a755-a21b9ebcf4f8",
        "cursor": {
          "ref": "a693abc2-b567-4287-ab3c-11d010fd6523",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46fd9a27-c249-4bf2-ac31-454f47b45572"
        },
        "item": {
          "id": "eadb1697-922a-44af-a755-a21b9ebcf4f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cbede2c4-c33f-4c0c-abd0-0dc5f62f47f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb46268-5f7f-4936-a825-3af01ad8419d",
        "cursor": {
          "ref": "881bc79a-5945-4999-9d52-6f4462f9d870",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a137c45-b9ec-4473-9bbb-2662e343256f"
        },
        "item": {
          "id": "feb46268-5f7f-4936-a825-3af01ad8419d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a744f399-c90b-4b8a-9f82-e94e62947625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a124a872-8db7-4592-ac68-64d80a905a24",
        "cursor": {
          "ref": "d177dd60-5e92-4fbb-8146-c4ce859e0bca",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f1e6a637-604f-4338-9f03-dd91fb0fabe4"
        },
        "item": {
          "id": "a124a872-8db7-4592-ac68-64d80a905a24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8543e510-7baa-4727-9fc1-b55eaef6b5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaef3f34-ef71-4fd6-8a46-463a497e7ded",
        "cursor": {
          "ref": "ae957411-18a7-4c31-b500-583ebd3c1eab",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "85630f3c-c702-4b48-88c3-c596a2ff9f76"
        },
        "item": {
          "id": "aaef3f34-ef71-4fd6-8a46-463a497e7ded",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7475556a-26b6-4bc6-a15b-c7d98024818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc412b00-f69a-4627-9399-182f7ea9e4de",
        "cursor": {
          "ref": "6a57fc9a-fc05-45d8-b262-0f6d02a085a3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "44314a3d-376b-41d7-b2ae-ac5be4e7752a"
        },
        "item": {
          "id": "bc412b00-f69a-4627-9399-182f7ea9e4de",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f0f66a58-192a-4449-b839-ae5546a910ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d5627d-c92f-4adb-81b6-612417756a97",
        "cursor": {
          "ref": "8e5dda06-b8db-4860-964a-6964251b1424",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2e5b7b33-b671-4944-9776-ba8162df0e33"
        },
        "item": {
          "id": "67d5627d-c92f-4adb-81b6-612417756a97",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30119956-8d1a-4100-90f3-527e005a58a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b31525-4d06-421d-a1f3-d1c294a9a87d",
        "cursor": {
          "ref": "4ec4e0a2-dd1f-4dae-b12c-35bb4ab080d2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "958aa7c3-68c9-4aef-8602-db96549c5d26"
        },
        "item": {
          "id": "06b31525-4d06-421d-a1f3-d1c294a9a87d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3ae4deaa-a4c4-4fb8-86fe-8a06b9c70989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7aeb9d-ca0d-40ab-83cf-a4f71f167f10",
        "cursor": {
          "ref": "32e9e032-f2f8-4016-ad0f-e91f2ab37aa1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aae193c0-6617-4074-a6aa-b9e51ca7fa93"
        },
        "item": {
          "id": "4f7aeb9d-ca0d-40ab-83cf-a4f71f167f10",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "641c1ffc-772b-4206-84b6-c02ce1a3ba0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feb78c7-fdf6-4f15-963d-7fb370bc7ee6",
        "cursor": {
          "ref": "e1d17634-55f8-47f2-aeb5-dcd0e858a21a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2847642e-d477-4851-bf0a-9ea72ea6911b"
        },
        "item": {
          "id": "5feb78c7-fdf6-4f15-963d-7fb370bc7ee6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d0520b11-6abb-4aeb-af14-c8d7cd55c7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afd8d06-0f45-4cc4-a888-da51dd8e3cbb",
        "cursor": {
          "ref": "a308773b-2798-46fc-9c5f-c8197304b579",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eb0ca7dd-1ae0-482f-9f08-d82b006a63d0"
        },
        "item": {
          "id": "3afd8d06-0f45-4cc4-a888-da51dd8e3cbb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "300ee610-51dc-4671-b087-7af56ef62cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8bd4ac-6ee9-4da5-b63f-26cb9ff0a628",
        "cursor": {
          "ref": "c9dce367-dba0-4dcf-8eaa-19772567a100",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ca0116d8-8380-4017-8f78-1603c80f61d3"
        },
        "item": {
          "id": "7a8bd4ac-6ee9-4da5-b63f-26cb9ff0a628",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4f898c56-4fab-40b6-9f45-9741c948f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd847e6-9c23-4221-99b5-45f47ede7784",
        "cursor": {
          "ref": "0c5f750e-0f22-42d3-83b1-4bb66d30872e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "27339078-5e4d-4956-bc52-29270f2e74b6"
        },
        "item": {
          "id": "2fd847e6-9c23-4221-99b5-45f47ede7784",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9d8ecc64-4819-4240-8354-d1617c82d9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caf0fab-d98a-4428-8bcd-cdaa68937aa7",
        "cursor": {
          "ref": "4376fd87-542d-434f-aa8d-fbecd0d0b2dc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "76d5748e-ff66-4731-bad0-fcbc1cf1a8b7"
        },
        "item": {
          "id": "2caf0fab-d98a-4428-8bcd-cdaa68937aa7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5608502b-03dc-4f5e-85a9-2ea623f2a4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef91498-3fd5-4ca0-b872-37aad7fcf124",
        "cursor": {
          "ref": "19aba1ed-8a0d-4fe0-b054-dd4607f9a577",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6e42e8aa-3f8e-44da-992e-6e84adea8744"
        },
        "item": {
          "id": "1ef91498-3fd5-4ca0-b872-37aad7fcf124",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fe032a14-377d-487f-9327-0d2719841c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce04e7f-6632-43c9-bbf8-fe9534cf076c",
        "cursor": {
          "ref": "718b6ebe-a3df-48f2-bd5e-a2690eea3795",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d25d8916-1793-4345-b6f8-19aa5c3d89cf"
        },
        "item": {
          "id": "8ce04e7f-6632-43c9-bbf8-fe9534cf076c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54dd5166-2f24-4d24-8667-aae724b6aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d8277c-5196-4478-91a5-ce99dca474e2",
        "cursor": {
          "ref": "c0558e36-fa65-4584-8d5f-5e4745cf907b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "46123b1f-5a79-4872-bfe0-41f422c45322"
        },
        "item": {
          "id": "a5d8277c-5196-4478-91a5-ce99dca474e2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5712ac30-6b6c-4a2a-adf6-0c7770753f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4759a0a5-54e9-447a-9a30-c7215a91ab27",
        "cursor": {
          "ref": "423928d8-2e76-4be0-9dd9-bf85eb7e962a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b44471df-5b65-4982-9fe5-c3d0502246cb"
        },
        "item": {
          "id": "4759a0a5-54e9-447a-9a30-c7215a91ab27",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c061cc47-d261-4b02-842e-63983d3a5eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aea329d-3ad7-47f8-b583-3c213b4f2b0a",
        "cursor": {
          "ref": "ceaf83ad-2bf5-4d4f-a0ab-98d7fc4e2ebd",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "98a0d20a-3f81-4ca2-8c1a-797779a0a076"
        },
        "item": {
          "id": "3aea329d-3ad7-47f8-b583-3c213b4f2b0a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d29e9339-652e-4abe-a5b9-2ab9c44d3fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1faf67-1064-4664-8825-f14ec4bf2de6",
        "cursor": {
          "ref": "8a442aa2-9ae3-42bc-a856-8b83938f3122",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0aa3ed8c-0fc9-4e0d-a292-341e671f35f8"
        },
        "item": {
          "id": "7d1faf67-1064-4664-8825-f14ec4bf2de6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "177184ea-b9dc-40ba-b2fc-4273330ea17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2330b8f7-531b-49d1-8fbd-99a4dde0cfa7",
        "cursor": {
          "ref": "78a0e57d-6b46-4f31-afdc-17587af4d175",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a6956805-0682-437b-82f4-7b7653f322a7"
        },
        "item": {
          "id": "2330b8f7-531b-49d1-8fbd-99a4dde0cfa7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "34c70337-9f75-4012-a4a3-14b0306d8316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f90b65-c9d0-4335-b38b-1667db96f694",
        "cursor": {
          "ref": "3f696360-9fa5-47d1-909c-33d99143f990",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30857fff-06db-46a0-97f7-7e65d6de5236"
        },
        "item": {
          "id": "e6f90b65-c9d0-4335-b38b-1667db96f694",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d660479e-7b51-4214-8852-311d16535d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1335ed03-c46b-4a3c-8d9d-6e319c9f90b9",
        "cursor": {
          "ref": "126117f7-5155-40c0-b66f-0fb2abfb251f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6282526f-de73-44fb-a7e5-ffd7a8c5e0ad"
        },
        "item": {
          "id": "1335ed03-c46b-4a3c-8d9d-6e319c9f90b9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5fe3bab1-4f32-4864-adb6-91d7c061a1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45116a9-dd27-49bb-b8fa-0b5f7e5d086f",
        "cursor": {
          "ref": "23c28a48-d056-4ab9-ad81-acc256439ce8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f14803f9-0742-42b9-b75b-3d48a5f34de8"
        },
        "item": {
          "id": "a45116a9-dd27-49bb-b8fa-0b5f7e5d086f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "31324829-2506-4013-a508-927eb1580ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aed3331-0526-414e-8241-e0015a0b427e",
        "cursor": {
          "ref": "b2405a28-c07d-43d7-90a5-8ddac0c4c006",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a5ee17dc-5bb5-4a33-a28e-84d639a95c6d"
        },
        "item": {
          "id": "7aed3331-0526-414e-8241-e0015a0b427e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c1ec5b54-bd49-4b6c-9700-a5eba3e4a432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82297e8-1f27-4e00-a1de-b68d033d1704",
        "cursor": {
          "ref": "581d369f-f299-45a5-8538-7af8789df1dd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "462d36ad-fbc4-4cf4-9b61-2b0bc3248ecf"
        },
        "item": {
          "id": "e82297e8-1f27-4e00-a1de-b68d033d1704",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "16ad6083-920f-47be-9667-6600fb2ad9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2283af2-509f-4d54-b7a7-c6b3dd8c8676",
        "cursor": {
          "ref": "a02f8ae3-dabb-4fc6-91da-1cbec0d02cc1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "af940961-5a81-481b-ae4c-9cd42b410b3d"
        },
        "item": {
          "id": "d2283af2-509f-4d54-b7a7-c6b3dd8c8676",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d314d1e3-ffe3-45e3-9eb9-97cc02aaae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ff024d-c8f7-4c50-b993-0c9e622cc6ed",
        "cursor": {
          "ref": "2eb0db96-8204-4b4a-af87-db3e8972153b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4431cb35-0f3b-43eb-a6de-2905ddadfb82"
        },
        "item": {
          "id": "60ff024d-c8f7-4c50-b993-0c9e622cc6ed",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "24b53587-b296-4325-a5b9-0df5d98c87ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e86221-896d-4a03-a2d1-e615f3081ead",
        "cursor": {
          "ref": "8450376c-e215-4b4a-9eee-6371180cf03a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d67a04f3-1823-4f5f-9850-f60a8e428caa"
        },
        "item": {
          "id": "e2e86221-896d-4a03-a2d1-e615f3081ead",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5e4d94e1-029c-4bc2-b583-92ce590515b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7141bbb4-ae97-4d79-abce-04cc56a272e1",
        "cursor": {
          "ref": "659ac167-ece5-41f8-a522-d149d4e87619",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f942d892-2fc4-4e83-836d-b93ab5f8b393"
        },
        "item": {
          "id": "7141bbb4-ae97-4d79-abce-04cc56a272e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5a67a9f9-3821-405d-a742-d96c5dc73ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9eacb5-bef4-41e8-b9e9-34c0d736cf03",
        "cursor": {
          "ref": "f380a525-064e-4b41-982e-177f5bc6505e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "98ce5814-5d04-4b40-b2af-8c47e33cc83e"
        },
        "item": {
          "id": "7d9eacb5-bef4-41e8-b9e9-34c0d736cf03",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1408c9a4-c424-4e98-b2e3-6c39bc02b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7820f9f5-ed30-4936-98db-6a51273f303c",
        "cursor": {
          "ref": "9253616b-cf0c-4254-aa6f-7e444a15ba58",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "795c000f-a800-4ca7-9a88-d30f4c4651f2"
        },
        "item": {
          "id": "7820f9f5-ed30-4936-98db-6a51273f303c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fe0df1b1-ab82-4c6b-94b2-fde1459f41b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32667e72-27df-44e4-b5f7-eda6a1d0e274",
        "cursor": {
          "ref": "4f90526d-3644-405d-8210-247704de2723",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ea801350-6c91-49c1-be7b-014412f9bd8f"
        },
        "item": {
          "id": "32667e72-27df-44e4-b5f7-eda6a1d0e274",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e4904e8e-3a3d-4081-a8c3-5cb7b267fa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b687267d-6ec0-4f18-a0eb-204e8e70541f",
        "cursor": {
          "ref": "862a97de-1445-4625-a6e3-48940284a719",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c7ec8e8-b780-4967-800a-5ce1fafafbff"
        },
        "item": {
          "id": "b687267d-6ec0-4f18-a0eb-204e8e70541f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "96957da9-8b6a-4c81-926d-090c19df02a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a136418-2849-4ace-905a-504f5c70c824",
        "cursor": {
          "ref": "1c3bf26e-1233-455f-aeb9-95e1b1ba06c3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8ca33994-057a-4d86-9c2f-12f9f13538ee"
        },
        "item": {
          "id": "3a136418-2849-4ace-905a-504f5c70c824",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "45795efc-fa9d-4cd6-ac5b-2b14955cc2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5c2f7b-cf4e-46e2-b879-5abe9aa5b964",
        "cursor": {
          "ref": "503d22d1-9513-4f05-bf05-dcb06cb05608",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0b40b087-3463-4b94-8058-1446d548fd00"
        },
        "item": {
          "id": "ed5c2f7b-cf4e-46e2-b879-5abe9aa5b964",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b8b3e97b-4e30-4c43-bcf9-279c6be17a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab5a681-b930-4a9b-8601-f92adcffeadc",
        "cursor": {
          "ref": "4f4ce655-1417-4aaf-a5f5-2c4b9fe2a0b3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5908f29-0eac-4265-ae96-d30f1476a53a"
        },
        "item": {
          "id": "fab5a681-b930-4a9b-8601-f92adcffeadc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d9143373-7ace-41d2-915c-000c49fa9542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0de803-2f23-42ba-9cef-473d66b2f322",
        "cursor": {
          "ref": "46ad1d26-1b2b-4e9a-bd36-8742803db707",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8c6a2c0d-0004-4d2a-be58-a4d26913d506"
        },
        "item": {
          "id": "5d0de803-2f23-42ba-9cef-473d66b2f322",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bf766158-048d-45ce-a1ec-97534948c28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768c0dd0-9b7b-497d-9553-92d6bdeca80e",
        "cursor": {
          "ref": "1de2e231-20dd-4e3a-8bae-669a6a417c31",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e8c2e0a6-7d06-4f99-98e2-258ab41ff6f4"
        },
        "item": {
          "id": "768c0dd0-9b7b-497d-9553-92d6bdeca80e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "21573e19-58a1-4abe-aa4f-185cdc0261da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac0f1bb-4312-445c-91ae-1fb4eb5dbdf4",
        "cursor": {
          "ref": "cd8cd129-b3d2-49fa-9b12-7b021a652c0b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43a20a81-716d-413f-8ce8-b3354b68dd2c"
        },
        "item": {
          "id": "aac0f1bb-4312-445c-91ae-1fb4eb5dbdf4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "114d1407-e93b-4911-9272-aa1caa252646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc94a335-8793-4329-b702-ca8a80c1a7db",
        "cursor": {
          "ref": "efd62a60-f449-437a-bb0a-04fcdf95a5c8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cfacb37d-583f-424a-991f-e2fc181343ac"
        },
        "item": {
          "id": "dc94a335-8793-4329-b702-ca8a80c1a7db",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5f6597cd-876c-41d1-a715-e7c3656c4b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09d79ad-860a-4e25-a42b-bdd4974d4aec",
        "cursor": {
          "ref": "77053a9e-4e2f-447c-9c44-acecc175b786",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c5a875fe-2ac3-4d31-9f1c-d3caf76a8afd"
        },
        "item": {
          "id": "b09d79ad-860a-4e25-a42b-bdd4974d4aec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8d3dc23a-85be-4d2d-9a95-927ed645b791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676ecc81-00ef-4edd-b2b9-a85811b9bdd3",
        "cursor": {
          "ref": "1c03288a-8c9c-40a4-a25c-dffc4a57a7ab",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f55654b1-5899-4658-8360-f067120a0bb6"
        },
        "item": {
          "id": "676ecc81-00ef-4edd-b2b9-a85811b9bdd3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "adf828e0-1d7f-4216-9d6f-88f0e95acaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425d01db-c9bd-43cc-a22a-9c9f90b2ccd0",
        "cursor": {
          "ref": "16a33b64-c112-4c6a-b4e4-bcd75dd8063f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46aa26e2-34a6-402d-b7d4-41e8a662efbf"
        },
        "item": {
          "id": "425d01db-c9bd-43cc-a22a-9c9f90b2ccd0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e215b700-602c-48d8-8bbb-fe1aa0888755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a6825e-f871-4ebc-9c5c-9a7a1e72c468",
        "cursor": {
          "ref": "16cbaa4c-0fd3-49dc-9554-56e36d3351f6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68e214d1-dbfe-4c1b-bb09-f3501cb5ff31"
        },
        "item": {
          "id": "e9a6825e-f871-4ebc-9c5c-9a7a1e72c468",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "19b1e12d-4263-47ba-9241-7d0522e84497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc916385-c9bd-455e-be49-c80a8e396959",
        "cursor": {
          "ref": "f7448574-3b0c-4f3f-aff6-9d9dc8a29d75",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fcbebcf-764e-4389-8fd8-11c6f8e824ca"
        },
        "item": {
          "id": "bc916385-c9bd-455e-be49-c80a8e396959",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "116c3815-02ff-4ebf-bc6b-58006d756b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f18736-548c-4ede-8c44-c1214a79b8e0",
        "cursor": {
          "ref": "186167f9-b04e-409c-8393-47b0319554ac",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ed89580d-2b91-4f8c-87e2-ff2e882b7e0e"
        },
        "item": {
          "id": "35f18736-548c-4ede-8c44-c1214a79b8e0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "913c85b5-f46d-45c5-94f0-62baf298c94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5fd454-0cab-466a-8aaf-69f98faac667",
        "cursor": {
          "ref": "029cfb70-bd40-4a7a-9054-5376d88398a3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "640bda36-ee00-4796-849e-596c3cbf2db9"
        },
        "item": {
          "id": "fe5fd454-0cab-466a-8aaf-69f98faac667",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee2686ed-b563-4236-b846-641c99591db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef91cbaf-1e04-44b1-a24a-5d326e76afef",
        "cursor": {
          "ref": "f0adaf43-65af-471a-8bdd-3ba4c8e2ea0c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d37b0a10-ce4b-45f6-afed-d032b26863a2"
        },
        "item": {
          "id": "ef91cbaf-1e04-44b1-a24a-5d326e76afef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5e9d3b02-f0e5-426c-ba8f-046abafb712f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df68aff-948b-4ef3-b374-81841b61742c",
        "cursor": {
          "ref": "9c7a84f9-9827-4294-bc8a-fa1026750b44",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3f5be9b6-9a84-4a1f-9c90-bf8338754698"
        },
        "item": {
          "id": "4df68aff-948b-4ef3-b374-81841b61742c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "68e0d3c7-e68f-41f7-b163-d3ddafdecee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce751fc-2724-47f9-ade5-498166241783",
        "cursor": {
          "ref": "ddd13adb-cdfc-45e7-9865-7ecbc1cfaf0d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0d1422c2-7f28-42a0-89bd-6240144b90b0"
        },
        "item": {
          "id": "7ce751fc-2724-47f9-ade5-498166241783",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4cf1c094-e651-429a-9bb8-d045600ea598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f4f87-bd14-4240-b2ae-b0b3225b7048",
        "cursor": {
          "ref": "abff6a8a-8c39-4aad-9f3b-10bef5f66444",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d6db3e4b-1813-4ae9-9017-f75816932aaf"
        },
        "item": {
          "id": "ef1f4f87-bd14-4240-b2ae-b0b3225b7048",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c6440f31-45cd-4332-95b9-ee9b760a347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a95aa4-bf76-4365-b606-65e856db3ad8",
        "cursor": {
          "ref": "728ae891-4636-4b25-9101-b0d063755f68",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cfeabd59-98b6-4a41-8d8e-2fee586bf8ce"
        },
        "item": {
          "id": "e5a95aa4-bf76-4365-b606-65e856db3ad8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5c116bca-8f4a-4512-a0c4-1bb1f99e54b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabafa9b-72db-445d-9f3f-7d78c9eeb697",
        "cursor": {
          "ref": "e87bc882-e605-44fd-99cc-af48b6ba03da",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "58a7fe1e-8e0a-4aac-a3d7-60b633cd9d0f"
        },
        "item": {
          "id": "dabafa9b-72db-445d-9f3f-7d78c9eeb697",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6323acf1-1269-4fd1-a5c5-9abbdfe164f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc301824-3050-4890-98c7-ded0b3de8bd9",
        "cursor": {
          "ref": "e54c91d0-1b29-4244-a1ec-3da84e7a59d9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f6c0cdaa-c985-4f83-94da-cfebb9ac3c68"
        },
        "item": {
          "id": "fc301824-3050-4890-98c7-ded0b3de8bd9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b175df7f-3195-4a4c-b50b-95a9caece310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2883db4-525f-42fc-992c-5317a279f4f8",
        "cursor": {
          "ref": "b35327af-3153-4cf1-94d0-a40ae8d47323",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "45811d6b-51f7-4329-b22c-6510dc40e9db"
        },
        "item": {
          "id": "c2883db4-525f-42fc-992c-5317a279f4f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8f8ef669-3ba1-4fea-a000-ff2e2c126a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f067e0-d083-45b9-8128-ec0ce25897a2",
        "cursor": {
          "ref": "a8d9ee45-cede-40cd-b2dc-a86260145098",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d624197d-b453-4431-a39b-ff7f88ec2459"
        },
        "item": {
          "id": "53f067e0-d083-45b9-8128-ec0ce25897a2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d76effc4-43bb-4ba4-9b9e-c257dac30d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0518f663-6bbd-4005-84d2-d0ea230ebcb5",
        "cursor": {
          "ref": "5506fe0d-ad8b-4399-af90-31c64ecca37d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d5f84a7c-75fc-48f8-8faf-b96c1409d1b4"
        },
        "item": {
          "id": "0518f663-6bbd-4005-84d2-d0ea230ebcb5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "76335eae-73ac-41fb-a15d-369fded4348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfc67a0-6297-4ef4-a1d9-8008219b4e06",
        "cursor": {
          "ref": "e3d0b2b1-64f4-4f6c-a66e-db07f7d74686",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d22d4e8b-b94e-4d85-8b9b-4157a435c20f"
        },
        "item": {
          "id": "bdfc67a0-6297-4ef4-a1d9-8008219b4e06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2c068b24-cd06-4629-b0bd-f5ad729d6956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9185af-f90a-41f2-b16b-6738302c46ef",
        "cursor": {
          "ref": "d63a05d6-8767-4a3a-a20a-4f40c8578329",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4b386e2b-4220-4a67-a07f-521288d8c471"
        },
        "item": {
          "id": "ad9185af-f90a-41f2-b16b-6738302c46ef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d7e78da-1457-4180-a17f-5696e5022a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ec30c-ae14-4a5f-a670-ce093c58ed4f",
        "cursor": {
          "ref": "3d65f688-1cdf-4801-aacd-e24857303c06",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bd7fd686-5344-4065-851c-f03c4495f47b"
        },
        "item": {
          "id": "f79ec30c-ae14-4a5f-a670-ce093c58ed4f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6b74a569-68e8-4b75-8d3d-abb779eded63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b31b33f-874f-4e06-b5f7-a62463c5e24d",
        "cursor": {
          "ref": "93844cb4-03f6-48fc-bb73-7f44f2ea7b37",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cf74d4e7-e417-420c-9e16-794bb320b0d5"
        },
        "item": {
          "id": "8b31b33f-874f-4e06-b5f7-a62463c5e24d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b695599-f58e-4b3d-be73-2e898c7857d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af296c4-2909-415a-bcca-941da81900f9",
        "cursor": {
          "ref": "1bc47c41-56cd-46e6-9901-44354350d499",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "773cccdb-0eae-41a7-8428-084f1300186b"
        },
        "item": {
          "id": "3af296c4-2909-415a-bcca-941da81900f9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9828b487-efca-48bd-b202-02aeaacd6949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09afa409-574f-48ae-ba48-bbd8edd3d581",
        "cursor": {
          "ref": "9b02ba1d-5b56-4b48-9d0c-6fd3d3563782",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "abe1d57b-b156-4644-9539-ddcb15999255"
        },
        "item": {
          "id": "09afa409-574f-48ae-ba48-bbd8edd3d581",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b6afe54b-d9a3-4896-abe1-d07f6c09b101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c20278-d64e-4d44-98cf-cc315fd571c3",
        "cursor": {
          "ref": "1d2d78ad-9464-4a4c-8939-f45e40e5b0f5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "11aaecd0-9d96-456e-97c8-577dfbd74788"
        },
        "item": {
          "id": "64c20278-d64e-4d44-98cf-cc315fd571c3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1f1f9c1d-7a37-437d-8531-c27b7645d2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12908ef9-789d-43bb-8f81-8d7d754e0198",
        "cursor": {
          "ref": "d8021f52-2eb7-41ef-a41d-430b8505b1e3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "979c3238-702b-4e3d-9b33-21b900490409"
        },
        "item": {
          "id": "12908ef9-789d-43bb-8f81-8d7d754e0198",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5e755312-ca19-4771-b3b9-83cc85a3bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e462e21-84d3-46a8-96c0-aea7702e3b16",
        "cursor": {
          "ref": "fc654613-c200-45d6-96a7-43421ecc6333",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "355e342d-d0b9-4c61-ac18-260ee943ec9e"
        },
        "item": {
          "id": "6e462e21-84d3-46a8-96c0-aea7702e3b16",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c876d1b4-421b-453a-8a0b-da2dffcf9ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2333fe-1927-4e9f-a0c6-7aaed5f235ab",
        "cursor": {
          "ref": "ccec4691-5628-4b91-9851-5261533a1780",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "14878eba-c580-4026-b7d0-93ba16c539f2"
        },
        "item": {
          "id": "7f2333fe-1927-4e9f-a0c6-7aaed5f235ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "05120136-6951-4fb0-82f8-287e9cff3f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f45539e-cfa3-49fe-9518-427df487436a",
        "cursor": {
          "ref": "4e329e36-073e-4e75-82d4-603f00bcea95",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "686ce71e-4521-42ea-af3d-2f596320b4b9"
        },
        "item": {
          "id": "8f45539e-cfa3-49fe-9518-427df487436a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ddfcfcdf-86a8-4e80-917e-524ef781e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeea4fda-0642-4362-bd27-48168e8f66e8",
        "cursor": {
          "ref": "e0b5eb20-41ba-4f53-8faf-744fcb8be826",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1621922e-6fe8-4ea9-8ce0-4ed01ab1332e"
        },
        "item": {
          "id": "aeea4fda-0642-4362-bd27-48168e8f66e8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1b92c8fc-4ecb-4655-9919-79d7589912bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c61f872-89c7-491d-99b3-2deef039b792",
        "cursor": {
          "ref": "907c7811-5bfa-41e4-bf3b-bbd41b890bf8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a6418c58-fdfa-436e-a491-c5706a3c75ad"
        },
        "item": {
          "id": "5c61f872-89c7-491d-99b3-2deef039b792",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "96a96b21-8f92-480d-ac3d-9229a2955d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b016882-0a0e-476b-b2ec-b3a6028f7c37",
        "cursor": {
          "ref": "7950aa5c-dbe4-47b9-bdfe-73ab26ccc4a3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6db94ae4-3bfe-4d21-ba11-c84a85df97e1"
        },
        "item": {
          "id": "7b016882-0a0e-476b-b2ec-b3a6028f7c37",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4a5d53f8-237c-4854-97fe-d63229218407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b07270-7358-46b0-bf32-307e87ba3070",
        "cursor": {
          "ref": "3157c5d1-6f74-458d-81db-b77db6673fe7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "53caadcf-9258-441f-b1e0-65af144fa8bf"
        },
        "item": {
          "id": "d5b07270-7358-46b0-bf32-307e87ba3070",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b1603240-142c-419e-b2f5-43b2f4618ca5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a4083d-6969-4c64-9a1b-8b8196f92bd1",
        "cursor": {
          "ref": "84907a4b-4ba8-403a-9d67-8437ba73a465",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fde61c46-b462-464b-9d8d-769269c496b4"
        },
        "item": {
          "id": "19a4083d-6969-4c64-9a1b-8b8196f92bd1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "389847ee-1d3c-4b86-bd7e-c380187d46d1",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4c646-2fca-4f8b-a431-3a809abf3297",
        "cursor": {
          "ref": "c8f2b411-0b69-44aa-935b-a068600bb2a5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2f090fd8-3bc3-4ce0-8340-66e25cd5f831"
        },
        "item": {
          "id": "32c4c646-2fca-4f8b-a431-3a809abf3297",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5faa2805-847b-4fd5-836c-be2fbe9ca61b",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eea4d6-da3a-4134-ab46-8f85f93d99e8",
        "cursor": {
          "ref": "44f136c5-8c3c-4aca-9a0a-6f71e82e71de",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b61a9db4-a95b-4df3-b965-303300a5a96f"
        },
        "item": {
          "id": "81eea4d6-da3a-4134-ab46-8f85f93d99e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "453ff16b-539a-438a-91ef-3a469da77851",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad16e04-3d77-4e2d-b22c-a0139ab3a1db",
        "cursor": {
          "ref": "a5cbedb2-0185-4902-acb0-a28e03c5d2e5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "80653ab2-0e23-43af-ac60-e349769af7e6"
        },
        "item": {
          "id": "4ad16e04-3d77-4e2d-b22c-a0139ab3a1db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d20d8fdd-f9f3-469e-9ac3-caf5b4708203",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad16e04-3d77-4e2d-b22c-a0139ab3a1db",
        "cursor": {
          "ref": "a5cbedb2-0185-4902-acb0-a28e03c5d2e5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "80653ab2-0e23-43af-ac60-e349769af7e6"
        },
        "item": {
          "id": "4ad16e04-3d77-4e2d-b22c-a0139ab3a1db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d20d8fdd-f9f3-469e-9ac3-caf5b4708203",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ce2553-aaae-4167-ab57-b125ed3782aa",
        "cursor": {
          "ref": "e74719bb-a5ce-484e-9b81-797256e15d13",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1fe770b1-c672-409a-876b-59fee926900e"
        },
        "item": {
          "id": "d0ce2553-aaae-4167-ab57-b125ed3782aa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64188157-9fd8-4f8b-9213-5b27b6c61d5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3472f-e824-4a81-97ec-ad64a0b3a013",
        "cursor": {
          "ref": "a2850872-d321-4442-8566-1e6f51faec4b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b4a58b25-4a38-423c-b7c3-27d8ee9c645e"
        },
        "item": {
          "id": "65e3472f-e824-4a81-97ec-ad64a0b3a013",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3bfc2dfc-e70b-4ffa-8d0e-327b4b04bad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}