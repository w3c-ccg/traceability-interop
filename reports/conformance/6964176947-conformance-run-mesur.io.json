{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7103f409-668f-40b2-bca8-63240db871fc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d92e09b6-5d03-4545-873e-ca8acc2a690d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c565a621-78fa-453a-bb38-58e822a10717",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f7744b8a-a01b-404e-bd84-44fe67a65372"
                }
              }
            ]
          },
          {
            "id": "bd1a618c-7b72-4c12-bb85-b404fdf6b7d4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85b22213-d60f-443d-925c-cbbcee8cb075",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b28ce7b-280a-4138-b4bb-bdcb8ce880ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6628691-3ff3-474f-9e53-f88d38c413b7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e738a6af-ace2-4727-beb9-b0b9001f2fa3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15122385-e388-435d-9093-de78a84823f1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a44a7eb-31bb-488e-b0fd-02403a94023f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8772cfb8-16e6-4fd4-a54a-82a61690d776"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c94bbfde-53a4-42e2-b3e4-0322577e66a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ac35b6d-070f-4ca7-8de7-8c0972bf2ea7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "411e09f7-21cc-403c-9793-3f2441bd7c66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "816dbbce-49d5-467e-93d5-2b179ab8c1d2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54dedc2d-c651-4532-be25-6790edd89333",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "effdc5d7-f150-4105-8ca5-a01ca3e5ba6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66d99f62-ac80-42e9-964b-7fef00bef2d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cef58cfe-9f39-4e01-af5f-fb66172d58d7"
            }
          }
        ]
      },
      {
        "id": "2a37d384-32c7-4e97-bd21-b2e7fcd83cf3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f17a498c-8f97-420b-b2ea-e311c98ba8c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "665a78ec-2d91-4ce4-ab66-450b115fb069",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28db609d-91d0-46ec-80e7-7fc377b274a0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700b2ee3-3a1d-4e14-a3eb-4632a84e75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de1a0181-49a0-4db0-b197-e551605e7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7f0fdb-3413-4b05-a7b4-d9c942ca38db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759db034-81ad-4912-a22a-34f4a3aef34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "013f05ad-cd34-4c9e-8d05-c0b2a39df8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060afe8a-f1be-4097-8b88-ceeafce86fa8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b1e19-e9cb-47a5-a622-e31f8c2a87ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f8b05d6-8cfd-4de0-9046-685d1c935165"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bdd2f33-3d68-47dd-96dd-516268cb0804",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "300b1256-55c8-49f1-83a3-344f1bcdbc0d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db7f75b-ae63-4dcd-9e62-6d469974bfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cedc0411-e7cc-4e79-aae5-831f6d8eb2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54c6acc-68a6-4b5c-b956-bd34e700a0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b32f977-b21a-4e6a-a929-8f875de83e3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c507308-551b-43d1-a734-499cda4df756",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aad03666-e075-46b8-b219-2245e9c269d0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c24d420-aa68-45c7-a8af-28c65cd03dc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1096fd9e-4a1e-4507-b69e-6e6b7a14ebe6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a28284f-a8d6-4605-a679-38b589a6ab1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "65c42f82-da7a-4f49-8dd0-4af995490a14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4db60380-a826-41d4-99ba-ec441f416577",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8d57f17-425a-451a-be34-42b3a6ef5b20"
            }
          }
        ]
      },
      {
        "id": "9df66827-e8d9-4c38-b927-3c2fb0c6eb0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6257551d-dd73-4fbf-9842-0bc63ec20667",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57ef474b-7868-4595-b405-155ff745ce3c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e467a45f-b748-489a-b0f9-597b31125bcc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca6bc5b-3ad4-4dd2-baa2-8ab9d70e613d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412f9db3-cfaa-4d02-a0f1-f4162ab5d91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfd37e7-94f8-4e50-9ed1-9d08f8709e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ffd6f09-bf33-4d11-9bcb-c532c4ca2abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e970a4b4-20d4-49be-9fe5-bf130847cd74",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f594b0-b573-4d22-9655-acb4a6d68a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d441b05-a5d4-4ea8-88cc-61215989af05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d0f627-ee25-4b0f-bc8c-fd2c6e31dc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a80bd2f-745a-44bc-9aa3-9c28c9cbcf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed9b7bb-8ab4-4385-873b-9b13a96c1eea",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbb6f2-02d0-4afb-ba88-12960f9ef33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74f8cf6-afa1-4a50-9f0e-313780971074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7c7d80-6c11-45bc-b68b-e00f13ec4c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c7e92e-d168-4573-a329-a0953d3d0c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44a5c3a-08e2-4536-b632-68b82d3c11f6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ca3a7-c245-4c2d-ab7f-48d4dc8f5316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ae7f96-fc50-4941-a094-cf941803942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62153a98-5def-469f-b338-022e2fa29708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b347db-4f20-48cd-a035-8f84422eaf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e331a667-3e7f-4afd-8f0a-4d83ef908321",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b713a-23e0-4ab6-a7a8-9cdd1bf00c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9e3bf2-225e-420f-9610-03545aa23c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded4288-4aa4-4035-b395-fe4ba8070a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f18e932-a4c7-43ca-ad40-9c0e629b2791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0118b4ec-5863-449a-92e5-18300b10f89e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1083c6-be0e-4437-8960-3b44150b8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4258e1-885f-4ac0-a1ca-ecf564702554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107407fa-9e7f-42a0-9ac0-c36cc934b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d84ee6cb-4854-466c-90b0-6e832d3edca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60619aca-e41a-40b0-86a3-7bd8e2dabcfd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b85dc0-9845-4f47-a54d-7d01bc0cc698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfec9840-19ff-4aeb-95ff-aa20dfe3fdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b990db24-9637-4a88-bc6c-f0ed46c7c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a97fd46-3e62-4be9-b6ac-bea7c69c9dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee402248-7d7b-466b-b135-1d7ddafa7d45",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e354460-2934-4988-845f-2d3dd31ae135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1127bcaf-5fbb-4e11-92bb-d983f2fb7433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a24b448-7276-47d6-8681-071f6ee27ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db9312d-4d71-4980-b9cc-f3467ffa26b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce4d19-f97d-4743-b6ed-f7883730cad5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eca5e7-4eba-4319-aea4-abed9508d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82b4763-ad43-4d69-ad3d-5ba1172f1525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4645af65-b18d-4235-ab20-9b0cb7171f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9385cd45-4f29-48ab-aba4-d5051223e943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29833f3-9ea7-47d2-afe6-6758594095eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6756793c-cb41-4d16-bd94-0b45cd39aa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b78dde-12d3-4965-813c-f48754a9afd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db50881-0830-4eb9-8e18-e79e01ba84ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151b07d5-9310-4a97-bfd7-2446eb92ad8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581cd9e1-8b53-4451-8724-63afceb639ea",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226e444-8d2b-4257-874e-4ef4fff45320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de06d3cf-b3b2-49ac-8e61-247c30b50006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216202ec-f401-4458-ad66-0af7d86b2f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb9d45a-1664-48ba-b418-910f310646a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d771ad-0d0a-4dad-b5fa-f2d262d8bc86",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dcbd9d-38f5-4ec8-a1fa-6add0c4d67d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a78d2f-2738-4fde-ab48-f444728a99a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a8cf9f-6e9f-40f7-b3a6-db86130fde39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe4a762-b16d-42a8-b751-df09b9be861b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd31503-d475-45c2-98cf-e34037891920",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85615747-564f-4767-90e0-7e2aa469eed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f12a43-0b57-4dd1-8699-00e447f61ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec00c37-118e-4ad6-80cb-8a8ebced017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "debbcbb0-89bf-4e89-a0bc-5b9e9d483e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511c5b52-0cce-4da8-82cb-a3410e1e8a6c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f418f9-33df-40d5-bac7-63f67a9263d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f9adc2-6eaa-4a34-8a5d-9833c1b37c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0356d935-7675-4ddb-b2ff-c0a90034df93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b9d5011-9864-4ffb-bb1e-491caae97da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c5d0e-0dda-4374-aa2e-dd85b67b93fe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7b2060-9bd3-4fdf-9031-466ba3830700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f9e980-6a06-4a91-b2a1-23c0f6ee2160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc319b0-0740-448f-80e5-e3a7a5f0937f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161b299c-05ac-4709-80ef-59ece0e589a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e122ee23-8d36-4fa3-86d5-685fc0ccb0f4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fb9e7c-fee9-4764-9a99-73436f28fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577031b1-6faf-4eb8-a201-14de34e2b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf0ac0e-a0ee-48f9-a387-918fd0049bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc0f968a-34e0-4464-906f-74a2946a4441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ba6b13-5878-492e-8943-1e149e612260",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e6c6cb-7af0-4059-b153-45892f25cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7907092c-3a4f-4183-b42c-e6a5039da1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e7b5b9-208a-468c-88b0-4949d0f67201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bf98c24-0400-465a-8592-fd0f3e414e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa9cd7-0fbb-4fa9-888b-9d2014b7429b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fba9e9-ac71-4f22-83c6-abe8c81ebeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5141456-e711-496c-b0da-74fb9e26ea42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad8782c-dafa-4e4f-867b-0fcde3ddca99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a577e85-66b3-4899-8451-391fe5056a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c596cd2-ca74-46c5-b1ea-f46b2341b950",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af0079e-d477-4cf5-b18e-1fa8d0acba4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957ea67e-4953-4944-b289-3b5d60c9f248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a2c9cd-585f-4b2b-a86a-9907f915e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a257312-72b6-4d21-974e-9ae1584b634c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c88c826-1237-43b7-8710-f2058ca9ff70",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32afc2-c93a-4edc-82e0-a9edbd09e799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a8f8c8-1c99-498b-a896-0cb500f460ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0922e5a7-aa55-4abf-aa63-bf877f59b227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8534fc9-9c49-4886-b1d7-5de8f3bf4146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a8d6db-0ab0-4ed0-a5f1-c7e0ef3d0255",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63affd6-0e9d-424d-b396-72c145dad9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c51274-22ea-4152-861f-bdda96dc2148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a60bfc-15dc-4054-b5e2-ec604955e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9b348e-0ba5-4ca2-a329-2bb7b877e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15944e7c-d3b1-4473-846e-d6883bd3d4e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9b8d60-5ba5-4b3a-b457-2c7cebb26910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20e1bb-970f-435d-aae3-5af27e50f658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd7aa0b-dfd9-40cf-be1a-69ed64faf8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc55570-27a9-4241-a7a6-a1dc6cb3d53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e4c733-15ce-4808-af95-577f2c8169cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b327b-95a1-402d-9725-899618e7b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a04cd45-208a-4690-9843-f1d014590b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed934c4e-0abf-4e61-af46-f7c336e7a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7281cf29-45d7-4650-88fe-09944ad2b79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9afb8b-4845-4570-a00f-24e90724f2fe",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef4dd53-5414-4dfe-ace9-f9069f349b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0584a5ae-b49e-4f7b-97a0-d44aff484666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1850ab68-03d1-4660-b4aa-2e84fb0fefca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc930508-3ff1-4ab2-ba58-3d2ebe6f284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80e37f5-dfd3-406f-9455-acfd9eca28cd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4a1723-4dc2-4bec-b800-d0ecfd665222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44faef22-5193-427f-86ac-3566991c27ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988549b5-6ebc-41d8-aea2-62717e796fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09cee3f-6320-4532-a328-f7f838f089c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865f817-7c1e-4b3b-a758-6a167aeed8f4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944561f8-1a4b-41e4-ab81-96fc803b5469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff2cfdf-623a-478c-acbd-793525c834f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee456abf-922b-4f66-9df0-78527eb38c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbcc59b-1cdd-441a-9e89-6f859678e50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4314588-47e3-46f3-9b4a-ebb4b8470755",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cf212e-8a7a-425a-bd21-9e2184c97ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031becea-e3ef-45ee-a8c4-86ca70b11b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e1f57f-0ce1-499b-926a-fc824fec54ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7446da5-e2b6-4615-8bd9-1655cd06a260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fae1a4-6a5c-4205-b771-f2f35cd8cd6e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734b5a8f-cd74-4d6d-8f33-1a6df88ca5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f09057-f6fb-41e2-8be8-dfe821a02123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94825da0-1d20-41fe-9dc8-dbc2b0f2525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c48473-8ef2-415e-8b18-4702ebb495de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd339ac-8415-4f06-b785-a8954b33ca25",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa85f69-0812-47e5-bb81-be3895439116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbef1ae-f16e-4dbf-bb64-8abe1b9d3269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766b4090-863b-4da7-86c9-aab9279287c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "224cee1f-cae8-4a37-ab38-8f8e880255bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374f21a-6d3e-4db8-85e3-348aeb060835",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e049ea-7949-4395-bf6d-a263f203c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a378f1b8-34d1-463f-b958-d642845fca8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac80669-3182-478d-9441-bce0196b9842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acb4993-0ce4-43d5-b79d-534afb220017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47778c02-a6de-4271-b91c-e44e47e82f01",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf791a1-9087-45a2-8e3f-d8c7d600f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ea3e46-4bf1-4579-85f3-997eb883d4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a80a73-bd15-49e8-a2bc-e66588e6d3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0e9286-ec84-43d6-9ba3-ec3cfbecdcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead52e7a-cadf-4522-b426-9a98429b7a15",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767ca31e-1a16-46fc-9131-f9cb0508d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d5220b-adb6-4110-8743-9191ec2b5a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb15365-f8fc-4b67-b95b-0a3d6ff86132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0355a419-4b33-4a72-ad5e-ef641fb948c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f517ff32-d297-4d0b-8391-0f96d871db82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55adae86-4266-41a2-978b-0f60c6e12174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daeff41-6e6d-4397-864d-46b5202e188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb449467-1bd4-45f3-ac80-52ce80881c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20cbfa2a-46d4-45ba-9826-7696e620355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b4d29e-83d6-4a4b-9e4e-7a18f3c2d596",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd102e-1754-4cda-a20c-73a94cfb6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d4c5d2-a0fa-4fee-a55c-2c2a58a33b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae203f-5c0b-4bc9-a8d3-2fe33aca6383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d32d62-924e-430b-946c-8e6673c3bb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4972a7-89bd-4421-a772-87fed0397b14",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d30855-e34c-433a-af3c-d172c520a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c984a962-46cd-4ac8-b0ef-2ffec134336f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2becd0-31ab-4f0b-94d4-04853a38446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "65f8253d-8202-4fcc-aa8c-75a5f0c2072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3dd126-0692-4dde-a24b-5de356a7bd56",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ae6933-2ca3-4caf-b8da-6993ebaf637a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e77f0b-44d6-409f-a9f1-976cbbc378a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ff41d-2d05-43a9-8fdc-8b38f832fa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "206f1599-6982-4623-8074-52a9c1b9c201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469ba650-33c4-402c-8849-3f42a216ef94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b58380-c646-4a21-a637-bf02e058689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5631f9c-20ed-4f4c-8e91-a45f58862fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb489e02-ac57-4e63-936e-0ca4635d5b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9515f8e0-b01c-4985-96db-b94e933027da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc774853-7d95-4b7a-879f-efb88079aca9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff25132-6026-4f96-a3c8-ef68a5608df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80ca44a-6fba-4e13-9753-34110f81161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b4e451-5f2a-4409-aecf-8a93d0530060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7612a068-849b-4cae-a009-44819bab3825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109d5902-0769-4332-b6c2-7dd1b8515162",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf48841-c8f2-4e51-8cbb-2ed84b7595bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b62fb7-677b-4611-b8fa-9f3fcac6ca5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03e778b-c863-47b6-bb75-79314a2cedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39969aa-044b-4b69-9e67-e158138907c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bc652e-7cb0-4fe2-a83c-a75cf523b1dd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b018f3b5-e92e-43a0-adc1-494011a2a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3cc257-1e59-488f-84b7-215f76a2a4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137266f9-6330-4407-a779-0c537caa804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4624ba0-9866-4081-b631-108d608e39e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb83275e-3e8c-460b-aa79-5f373ba32c26",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f860fe78-ccd4-4067-8bff-7588530ac461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7c6147-7d9b-4571-af13-c676b905b70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985569c-12c0-45ac-8021-c2a6bfb8572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a4d2d4-486a-4d79-8ff6-7020118e8185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0dfe14-8fd9-4b22-95eb-2b57c7d48141",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac1fd15-a2c3-4bd1-91a7-1acdeecd011e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5063e1af-c593-4bf2-9f5d-808a303da037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9748ddaf-60eb-47fb-ae16-19aaebfab5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7ae7c4-9525-4cd6-98a8-8491e4f40ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f16c043-6b8b-4521-99f6-c8323a43e3a2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb15e3-9423-48ae-a35e-144836282c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b6eed1-a812-425f-94ae-7bf8e2b78450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ee4da-4b61-4113-9a82-d7d5cb2c1531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "77b6e7fe-28f4-405b-bf78-4a5f370cb57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf049df-e58a-461d-a1a1-72d3d8d3691b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c824ece-5a4e-4b77-923b-802237841091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1c17c0-5769-419f-ae43-91a178934822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db6ae59-f30d-464f-a83c-5a2604aff5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eda7f1d-529d-485e-bf1d-3b7ef73060c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac33eb04-bc08-4b2b-bc66-b23dc5beac7e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efb727-0979-4c28-91cf-d2ec0c597ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e09802-13bf-4bdc-b801-6bd37d320236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45a32de-c66c-4f9e-a7dd-dd1ba6a18664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9405ea0-c2e9-4794-b994-a9c705942998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f48d92-5908-47d6-a2a7-0c09679a1813",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaea7105-8ff4-4efe-a5be-9fe1e444e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af58ea2-83fb-42cf-a8f4-5b943aa7c7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3411b93b-6fbe-4a8f-bc33-b0de4aa31f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf02f9b7-edaf-495c-aef3-bdcdc12bf624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ab4731-d9c6-43fe-81a9-c0be7defc502",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5baf45-ff06-41c2-ae4c-607ec218fa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e687860d-efbf-433b-838d-1644091338ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569aeba2-f0e4-4c63-a978-611841a97386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75c9232-768a-4ade-b4c4-821a074c4bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc5f547-5b40-4c8b-8d88-bb23dcb064f6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff28f21-0635-4e6f-8b15-cd8059ab7005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108d7141-5c98-4c6a-a4db-560e1e748735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a32f064-fde1-4a10-be61-f650d5a1cc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ea4e43-2e66-49f5-97dd-15b0dba2a40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728fb5c8-2eb7-4b2a-91d0-afb973c9c52d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e25045e-aefa-4bd0-bc6f-7e219a2cdd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c33a785-578e-46f4-b44e-49ff7ed9969e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad1cba-2c45-4249-87b6-a7be20fc0548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4511a615-f51d-403c-8038-a4e6eff07201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4cf3df-182d-4def-958d-66168ca2aee5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f6dc95-752e-416f-a07b-27eb79f2a5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240f9c8b-4946-4376-84c5-d73438a20a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d982d9-a072-4187-9613-e895f1b91450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09e5f6e4-7a0d-4062-893c-f2fe9601ae7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83059972-1c8c-438d-9e9f-69ebce5ec768",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f180abf-ad80-4027-84d3-39d33570fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924cf47-e26c-4373-973a-d8dea9a138a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dddae5-357d-44e6-a4ac-1f0e59b759c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab5b2c6-ecd9-450d-8d12-bc30f8118e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63daac6-527a-4f5d-90ab-6f55dd421d8d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd62eeb-8720-45da-9236-6b8b7213fc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f5d8f8-b975-4da3-b3f5-4a88584fe95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eb0ca2-030a-4ec4-8a39-ee9d74b02911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14976d3-b00d-4320-b755-6d50aef1014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e2921c-5b14-43fb-8b6b-583b36c6365a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6ada48-8a28-4f71-87a0-bd5b051f0137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a091ec-973f-4366-81ab-b2566854b32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ec4ed7-09c3-4c92-87f4-6e1e2106c801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df34faea-e269-4522-98be-917b1389c5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2093d915-63e2-4aaa-970e-e00550f9479f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6de9ab-9403-46c2-a611-0f7255929764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ecc718-e49a-4aa1-8659-758f9a29fed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a950e4-6b44-4b58-8af1-394ed0d8c46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31f165f-d887-427c-b5a7-ef7feb19e991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c825fe-da63-4dee-b29b-b6b974a2c4b9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c24dfd-81c4-4eae-ba11-781b8b90ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ef4431-2eee-4f5a-883c-a86776d3eaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9ed0d4-6196-4c36-92bc-a2234d5549f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "393df0b5-48d0-46f5-bd9e-86fcebcdbd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1739d847-de84-457c-adeb-45860a72abf1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b74edcb-e116-4f4b-a191-8af4eb3b3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9281723a-8658-468f-8656-246bd4eaedc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994a61d-200f-4251-9ad5-fb297c5e4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4337f4bd-a27e-4543-9340-b7ee6b742139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b985465-380c-4cb5-874e-da22ece7e8d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0bd327-a6be-4432-828c-e126c771e167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bb0d8b-c0ff-409a-8c63-8c286a03b62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae85a65-e4e7-49f9-bb4f-6ad5cd3b4a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f536e3c-ec1b-43a4-89b5-0e7cada3b912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a855b4e1-5a65-4c09-adba-8a0a1ee9e564",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b683c9-6526-48f9-95aa-d647499bb2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6d1953-3628-4b51-8f4c-da1307a36102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ceeebc-d9ed-4932-b836-c4af81f210a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "998e140b-3687-4a47-b749-1a2af28ce27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef693bd6-61ae-4cb7-ba46-d0add464fad3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2968ef47-722d-4be6-9ea6-7af7286a0f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea43ae1f-2895-4810-bfb0-db4696d33e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5060b0-0621-4cc8-986a-6903356e2625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b556a7f7-231d-41df-8887-abecaf2872e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af2f3a9-4d5a-43e4-a95f-02990d41dcdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b75344-e215-4078-b088-5fb05c5cfb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8e3520-1f65-4026-9d5e-c4ef4f4295c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547ada49-32c3-4418-b8d0-c08d1efaee64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a096aac2-9368-42c8-a647-103d47e7fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2326592e-871a-4c47-b32c-b26f29bc97d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e9b3f-8e6d-4e1a-af4a-7d9dda83bb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1382a80-df3a-43ff-a252-9a1c25169614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11073c37-d29a-4ceb-bfc1-f26381ab3193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa1d8b7-708e-43e3-931a-bf2b4da484a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c1bbbc-04d1-4fd8-99c1-8823c34a6b6b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b391c05d-351e-44d3-8b07-830e15a3c83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aaf3f83-189c-44d1-b04d-9deb2d4d7791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dbaea8-02fd-41b5-a0e3-e89e6eb9fd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d00623-fb96-450d-9e8f-d2cb923ea69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e5c42b-9597-423e-bb1e-65fb5326f026",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba97cf4-071f-4db2-845d-ba426d6c6d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93de10d5-5121-4030-8a05-d8e6a9c8ebe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea113f-7a4c-4ec6-936c-b42aaa341a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13d0c8b-cf4b-4f59-a6de-94afb8e49bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a579cdc-c45b-45c4-ace8-3a2682bafbe6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10604b6c-b4f7-4eb4-bca5-2967b3e63727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606ec22f-3827-42fb-98af-d79696fc4d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d745f0dd-47cd-4cdb-ad8e-3496a1fcf52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d58daa-a38f-4de5-9a4f-432eb2b938d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b5bcc7-c652-46b6-ba5e-d3bcb2a6cbdb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b17508-61a7-4c3d-8045-038a06a9f1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5f96df-977f-4e19-b131-11aabce1d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4793be-bbdf-4f86-8e18-5403496431d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b732bc-5deb-4938-a3a0-52452b7966de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee58b1-834f-4e3d-a6ba-d699915314e2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739edb0a-2c20-44ed-896a-d20f5e484ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f01784-c15b-4fe5-8b80-b8a75b465811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b91baf-293a-424a-8d62-30739f83279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcca9b4d-d58c-423d-a8b1-c24640619d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882bbd3a-4984-475f-969a-0e4cee77c4f4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54ae06c-eaf5-454f-9253-2efdce163a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5769dfb6-f275-49f0-964d-dd2188fb7747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fff0b8-094e-4e56-8063-8097824df94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7771d2ba-6390-404d-be4d-933dc706e3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c705395-3eda-4929-b200-50dc16c03e17",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d01dfa4-64d8-4dca-8652-76464d223ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b99aa6-b9c5-41cd-9003-279559077e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70f90c7-4627-41fe-ac0d-43d5458c25f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0794ed81-8877-4fbe-8919-8909c16bcca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcd4f6d-2b1e-4ad5-90ad-51db5b152ac4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7cf33-87bb-4eb5-8b96-fd8a8b023abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37729be6-4314-45d5-b42e-64ae435ec441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734a63cc-13c5-44be-a0a6-3136749e5723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0d6661-8338-4ed5-84f7-5a7076a3a825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d17fa3e-42e9-4bfc-b733-b274125c068d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62330707-ae5a-4f99-b2a4-b7d69490d10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c5c48-e374-43ec-b6b9-0b741fdf3353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1225be-bdeb-4a96-b27b-40ef503c0975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3bba86-d32f-49f2-86a5-6745d77495d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c528b8-c04e-4e11-bc1f-fcc369018ab3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a92ac-3173-482b-a5d1-27634688040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96676e9d-369b-4847-b9d5-5afd6ddc82be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4eb354-f818-4929-99e2-2bbdb3b4c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a2ce3d-af3e-4dc5-84ba-2e8352a0aaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070efa38-b350-4ca7-96bd-b8d5031bffea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48a657c-a464-46e6-9600-418f301867c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe50a20-ecb6-4650-b5db-bf0dedb3cf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33442567-59b4-4de9-abbb-9c8b4d41d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b459304-e004-4acf-af7e-2f41a22c967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533deece-6947-4c33-afc1-4a76f6da9e47",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a369e-552b-4fc4-b862-79f7883f44b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe957ee-452d-4a76-8951-9c19c28bd8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0958b2-0b40-4d2c-a6e8-01dda91871cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef62af23-86b9-4b39-96c6-3122c4ccb9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a65e08d-5930-425e-a0a0-7c3ed27468bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af950dab-9806-474a-aea6-64da392bc89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ea51e9-a8c8-4275-ae3b-42ef191d0442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23200712-d2e0-44da-9999-238d42dd77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7894055e-ce73-48fa-9011-11262bdd9a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bac51e-1a0d-4718-96f0-d2998af96441",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2131b493-fa2f-48c9-a0b3-4f4c30e4c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264482ab-fb12-4db3-9d07-703498debf7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfc8293-f7d0-492f-9b0f-ff533157eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfe99f8-4aea-4453-ac94-05e64aa58298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b79e01-341b-48fa-a7b4-721b94203b53",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e35592e-576c-438f-a1ad-41c027a1b45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9beb62-0821-45b1-a5eb-598c0d5e97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d4a62c-2085-41eb-b050-98da6526c26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f5e503-0134-4f7f-9380-6e2ff227f5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140c890e-1b08-4e46-94a5-9140c4798fd6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26442713-122d-4fab-a9d3-34fd386c625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3852dcb7-fd62-472b-ad0e-3ec08551ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6e9618-d0db-41c7-80be-a5b6b1dab5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32edbb7-9634-4149-a0b1-cd0c7c1e8f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0598c6-38e8-46b6-8622-58bf55f7b779",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0a887-ca63-4814-b5ea-1f141aa745b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b9ebab-ac82-4781-a989-884a64d99276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c37239a-1807-466f-9979-c0d1eae3aff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a802305-3ae6-41f3-8f26-fc63002f7e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd43a4d-f8fc-4708-8371-6b8f929b5922",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e3d5d2-0334-4ab0-bd2d-b2efc716ab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a0be9b-0f85-4d39-9e3c-903287fd8817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31976f0-0001-4c6a-a6af-5a6d76b3837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c35c8ea0-44c3-47bf-9ee3-2ee2d449f366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c4f8e7-badc-48bb-9b05-317f8cfcf001",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e375c983-b7d4-48d0-bc21-ab54f3de7613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394b6171-7fc6-4368-b31c-eb3805f3161a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92e4603-be87-4e9c-80b6-a6a8c9ae3267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7342ae7-aa29-41fa-bd0c-619a62e52a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5552108-5d8b-42a2-99f4-208dd9749969",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862bd458-2fae-415b-a8a9-39245a3bbec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50b982d-2cf8-437e-8db8-1a4d97ac7e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8dd807-3955-4ed6-9b6e-68805635db8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77cd5a5-3ea3-4a22-aa9e-c8f329c20703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb9d8e9-beca-4cfb-af69-f30dd69b6858",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7a178-8f72-457a-9cdc-d4f6f7b78791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4ddee2-9bad-4023-9bbd-0a968948909b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3108431c-0d21-49a7-a7f5-707663e8d749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd927515-b7cb-45b4-9dce-e863e9770e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d698c16-4b0f-4926-8f99-a6049409dec6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dee9699-b1b2-44d2-b8e2-e955740c968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d625ab6b-e160-480c-bbdb-98b552154385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c4da3-9304-4925-8181-e85e3f946f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d738b5-93b8-4e27-9d5a-68e9b0c2a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4118937d-39c1-42c5-a5f2-ccdf471bc517",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dbb8b9-36a5-4287-8006-e2d777bd003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8563016-a178-4647-9acf-647924a7ec4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84512572-a835-42a8-835b-8771094f59db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631b94cb-438b-49ae-9401-892aba158943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd161f9a-ceb9-4664-83fe-dcfb4a42a248",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222a9360-7cc3-4a24-8d83-41b03a64f34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d3d186-ef37-4214-8bd2-e0177ae3be57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785c1af2-d01f-494a-b6b0-af7754e79215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c404caa-3da4-4129-aeee-8737c51761ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b456274-6e91-4772-a435-0bff0c65f782",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6baf34-5d01-4570-b084-4190dc4ac9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e94522-4bac-4128-a51a-64b9e831ccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e09ce5-c0c6-4d2a-b3da-1e76cb5b1c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1eb491-6e7f-4ec4-bf5e-76ec4edbe152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d197f70d-e770-4995-9b17-548bfc02dbc1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61647adb-2e09-4423-9971-886a29fd4dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f6c7ef-caca-4608-84a2-8ba9fc88c460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0fe4bb-d01c-4e6b-a4ee-e0312ea2267b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6376430-a7d6-4210-98aa-f375a803838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72abcbac-1041-428e-b28a-39fbff50a8a2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a427b-093c-403e-95f9-3dec785babfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b0bade-1d1e-4ddf-9e58-9e29d82cb4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e56b57e-9ed7-45f4-a9a9-989ddaffed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a3718e-8deb-4dcc-bb58-2e559cbebcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff79f9f8-e584-40f5-a43a-633b63f0a77e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea5c173-ad6d-4e63-8a30-5a52197485f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c277bdd-18fd-45a9-a4f3-a8417aa9b7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d9522-69e7-4726-af7c-cf7840853e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b37f802b-7f18-40c2-bd7d-f733cf0322ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ce82ea-1e44-4aea-addc-d0aeb5626a7b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2d3f1a-63cd-4253-8f93-6611eb84ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baaa618-9f07-401c-962b-b9d706e7dfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd8d8c7-0530-4930-9d07-8af9de3ab97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f557f891-4368-40e1-a331-7b96d3ddcf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6361f6a8-f055-4fe1-9ecd-18607854907d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c85be0-151c-4f40-9ad7-c09c8072becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cc0973-67b2-4b43-bf12-8b8a498f52b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a30c3b3-a3ee-4f32-adae-255a8c9186e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7edb587c-df67-4844-97a7-d95f1b327472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fdc309-da47-43e7-8c68-5c0d7f4bd756",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e1c2c9-61e0-4862-9827-c881d12e8713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0029b1a2-869b-45ed-a9c2-0ce1fdefec4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a36adce-df1b-4e75-8b0b-4f4b74f2b33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2a4bf9-ba34-4239-b9a9-76f395d266a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ebb8c17-bed5-4136-96ee-2f9af1d039cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8770515-f57f-4d55-89b2-cb18d3b2e19b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6396d-21eb-4e71-85eb-867abce2a37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd3b4dce-ef3c-49b2-856e-5372da5e1f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d209d-666a-438f-b126-cde2f68fafe3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98627ecb-a5bd-421f-a99a-8e841292d897"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d428c730-bedc-464e-864c-463d079d31cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87000cdb-ccd2-4c15-b4cf-6204880304fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb939db-64a6-4618-8421-4a6fb8c99284",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3349ceb0-ee61-4246-ad1d-2c101b1c38e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8aec8b43-eb1a-453b-8da1-65e62d2629e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74291806-3838-4dc4-a2da-ff3d24094f56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08e3a5c3-b4e1-4bf3-8f14-24aa7eea4dca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86fea176-d885-4e69-afb1-b0af7044af0e"
                }
              }
            ]
          },
          {
            "id": "fefe8ef0-c69d-4a56-b079-d70550ee9977",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2adf337a-fa1c-4101-a3e3-c4b22b82ce44",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b38bf334-99e1-4231-a64d-1b7209a9f7e4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1b7226-7143-45e2-afde-044757b658f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ff4fb70-77bf-47cc-970a-378275050502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44808879-64d7-4c39-a694-10c01aa77782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23bb197-c17e-4e71-a7ff-c02fcd150e2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9190cde8-71a3-4aaa-ae8f-6f81a6c5b0d4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c54ba0-3342-4cd8-a999-24629e1abe38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cf9df3b-f847-435d-9b59-cab8f115934c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd82267f-25c7-46f8-8a2c-e76ede8664af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a852fd59-d951-4e33-9570-1a02111210ca"
                    }
                  }
                ]
              },
              {
                "id": "83b18d33-5ed8-43b3-89df-83797af73d1e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd40c236-fdd6-4d8b-b0e4-d992282fc97b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cb63593-bbff-4ff6-87f0-1f1972c90583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a6dca55-0884-452d-a852-bd60b6b1790f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49b34e19-ae79-42c6-862f-e0f1e593003b"
                    }
                  }
                ]
              },
              {
                "id": "e4c4605e-899b-49c6-bf25-16a0622eec11",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca9042c0-003c-4b76-a145-4bb69324c855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eacc907e-2f83-48ee-a33b-2201412e1ded"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d89fece1-2c2f-4bf7-9441-c6a749707f26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99231910-6b48-44d7-b6f3-602cb2f6a64a"
                    }
                  }
                ]
              },
              {
                "id": "16c5e780-772e-43a2-b4b2-44a07ece8247",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "994ee247-6c51-4551-b31b-fa3f1bab5412",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d91ee5cf-2f8a-45df-9b71-8e29e85d58a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2f6fb6-5987-42a0-983a-264a9a6ef384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "465cbcb3-0b3a-4fd9-a3aa-88eb72d4e602"
                    }
                  }
                ]
              },
              {
                "id": "59d9de1e-69f9-4b8e-b92b-e636909758ed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7293f16b-6884-4eb9-98ba-f27cd3437100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03f03823-1650-4ea5-9849-830f7b9e2210"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "180dde12-7941-405e-8750-31c2e55f3c6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9599134b-894b-439f-9354-fd49f9848e8a"
                    }
                  }
                ]
              },
              {
                "id": "f63f978c-fa9b-4adb-b124-08faffee3971",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b34df4b2-3b5e-4bf8-aaae-4bb997963918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee9c2813-b5e1-4202-af75-79e57f49572f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c52630ad-18b5-4f18-813d-ddca94282239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "871c646c-aae0-445d-ae71-4a84e3ad568f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb5a5932-218f-48a2-99ce-241bb2e623a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25d22833-9d2f-48f2-974e-2abf940f5c2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "892f83f1-7499-465f-809f-991f7180388f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fa02356-f914-4494-a1bf-498be31f7b29"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df23c787-4748-4e1c-b55b-afa07dc39485",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "64ff51a4-44ac-4059-925f-fb10885546c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a934819-f81e-420c-b7cd-32446709ca3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d6bc6d0-5fbe-4876-bdb8-7d1a924798aa"
            }
          }
        ]
      },
      {
        "id": "98f8d2b7-6566-4252-b508-53b3062a7b78",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad9bd013-d52f-4885-9a89-8180caa08f2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b3b8269-d1be-434e-9f31-faffc1037261",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b2a5917-a2e9-421f-8868-092eccb04d3b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4586ba-b918-4c3e-88d9-dc2d096f4b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba06b93e-f716-49f0-913c-246f35fda2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9670e0-d9e6-451f-a91c-3dcee9039150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "49aa0991-4641-49da-8a93-431b5fabe32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c70f1f-9cb6-4e79-94ac-7dc20956b8ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed52b51-79f1-4abb-b37e-18efaed48b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3923b1dd-a70c-4194-ab53-98993bbd7c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac30814-9b45-4781-b211-b09da0fc6eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5ccabf-1200-4abd-9937-eff3ba702be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafd291e-b326-4927-b909-82061cf08705",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd840db-6e32-4ba6-b303-0a29403f8da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f0165e-ca63-4f2f-8fe5-954f9e11014a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac58bf-4a57-4f6f-af37-40365716635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de482c6f-47ed-4284-948e-7cc4beaa37c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0836579-1fe0-4e96-a4d7-3d7c8290fb54",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2236ddf0-54bf-49d5-bc63-1836ed2c6457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c743d63d-fd8c-4038-a33c-dc44664030e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9479d0b4-dfa7-4952-97b2-7f905c28e57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea0c01c-28a9-4ee2-b2db-5f1195a523df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557eb7be-dc5f-480e-904e-b463e8913587",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e64a8a-2684-4a58-9d9e-fb29270440ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b82ccb-32f9-4dae-8aed-d14406053540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e9d65d-730d-46e3-a4f4-069c16c78ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b559c5a-6fa3-4258-913b-513dd611b4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32487c3a-0f14-404b-9657-58c5c8939465",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845b540a-bd02-43cd-9365-4011bb1e6f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dbe47e-5dde-4322-9af6-05421a33d0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47fca23-1369-4caa-9efc-6f4433e1ee3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb492bf-6c5b-4ba3-b80a-b4db15463006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c01a86-657e-46e1-8c5f-e49aaa77fa1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809dee53-ec4f-475f-867c-df642e910a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca0b108-b69a-4ee1-aac1-9ccca99c476f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc227bee-adc3-40d2-b920-e5c2fa4342dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7697142d-f50d-429b-8543-c5d6e95cb679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ddd2a4-137d-4391-8b24-deabd7e344a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30a7a8e-64cb-4f77-87a9-73d53cf6d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea39f88c-a20d-4f9c-ae2c-288016e508e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee137a-e0c6-4e82-9c3d-df72adae3b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc93cfe2-538c-4f0c-ae6d-fdb5bd9e8175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906be78d-124e-4043-a40f-1274e445040e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03848c40-784c-4012-9ce5-75920746e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679aa52c-929f-4361-a320-a2f59f6cd09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb3dcd1-b32b-409a-b403-35077849fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34e674a-b4c2-4f07-a7a0-81a8fadf1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcfa7e0-33ff-47fe-83c7-a8f4790391be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bd09e6-8b39-4157-b76d-937ffa6be1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f893fdb0-58a6-481e-b24a-90a86414806c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b516e5ae-e83b-4f5d-b299-06461ab2cc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4097c594-3256-47c0-b6d7-b483db999ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c45897-1c19-4288-8fbb-21d86bbf1a43",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b39a1-613f-4099-82a1-4c5b453aa459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed49ee-86ae-4c76-b649-b6208b0eac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7201829c-ebd5-482f-9d54-e7ed05e9af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4d0199-3982-4800-b26a-a611d9cff897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8bcceb-4ccd-4cc8-a953-b65c260a0c67",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f034a30-facb-44a8-99d7-037263c3ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aaadfa-e829-4650-a0a0-5b98c1ac962b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744f7971-f1e5-4f64-bd55-b25ba8acf726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "000fd570-9258-4a35-a177-ba060a9c863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fddbbb2-71b4-4b2d-afef-1900d4e4ed1e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f3e61b-7b91-4de0-b0b3-5c82a0e4bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b610bc2-1e87-4c81-9caa-d69b4c33231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33298f3a-8aab-4490-8f5c-b2e2fdd3a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "621ecb1f-6484-4e94-b67e-ab467742c4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02621d1a-24c1-43ef-a6ca-8a68ab4777c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cce759-2b03-4ccc-a256-96727b6877c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fb6921-e1db-4b45-b488-9cca939b311b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9b910f-5c10-44ef-80ac-a738619ef083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f4ba4e-4f94-40ff-869c-14c7e4071ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be80110a-4286-4936-81af-6fca1ad3a16b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a1d7bd-699b-476b-afca-aba83619d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cc4a71-04e9-4679-b2a9-eafc76279815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af14e1ec-c553-4616-b323-31d22fc224c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff333bc-61e3-4cdd-9306-eda1db721250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5b836b-9b3d-4691-8ff0-b6c252124ad5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c0a25-acd7-4146-a9d1-5200428ae89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606107f2-dda8-494b-8c3f-149e959e84bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6901776e-9c50-4e38-b4fd-32ed14d27d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "725b0f54-b305-4f1b-b619-a80dfbb10ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a8fb6-d35a-47b1-b1b0-bfc883da5c26",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c4c5b3-8d55-4e54-8a46-2a5175c62aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91b86dc-3d9a-4411-b04e-a951d0a7de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0647a9-3b66-4223-b556-1df866649e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "416013e3-01b6-443e-bfa3-b1ceff11d32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300723de-e728-41dd-b2f8-033780d9d147",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9808ec97-9181-48a1-ba41-b0e0a73aeb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f982fd-c85d-443a-8bee-cfcc06e4c695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cccbb67-754a-43af-83f7-9b1f5174b8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9a5a8c-2496-4183-be87-acd49fd8f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a43a44-e04e-4b23-874e-d53f611a3b39",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3587c67e-1af1-4111-8b90-7f094ee39ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931854a3-2c5d-49e2-97aa-721f9daa0e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d115fae-cc45-4646-a840-ef563d238a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c851146-3e4c-4ac3-b5e6-05a7ae604f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb6f2d8-121f-440b-949b-f44b7ed7efe4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107be9c7-053d-403a-b80a-abd961959040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6921dc5-331a-4e86-8264-5ccc8e214ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55738ae3-62db-4c83-95e3-9452d78b1dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b7f44b-7a13-4417-b538-f80953aed4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858301ba-f1b1-4c42-b67e-bf439a70e15b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4f8b06-d4b0-4cd4-8ddd-18411ae455fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43911f2-4901-431d-952b-a958b1b1ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ad105f-762e-4458-a00a-c40de71dcf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4edf9b72-f550-4d3f-9385-fe5f0bd1dc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90ef211-df03-4080-aff7-cdf82cd7186b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c722e-17bf-40ba-9673-16d5ee7fcd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b73dfb-0cc7-4b64-8e12-615c0304b357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd406038-15c3-4dd8-9f89-66c1b5245191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f8e553-0633-48c6-86c5-0d903ba0c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eac6ff-c6a3-4520-bdf4-dafefb559245",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7856ae33-1132-4fa1-8796-b5b741e2765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5918c72f-ace7-477b-9e69-2dbac223b85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c6d07b-0ef9-42b3-9697-ab94000a7267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff55fed-d39a-4b74-830f-277acabd233f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c80777-a7fd-4a37-ac5c-c68f0c0eb0c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35755548-ed1f-489d-b771-681cbca44b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0705c6-38d7-4e64-b884-369888d98519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64d8b72-dd1f-4cfd-b185-c31f93a72ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d2467c-5c12-4409-ba25-6bf964805e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6046c2b-d220-4c20-860c-fb2f1d251fba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37591fe7-521e-4b44-941c-ecda61e83e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d420b7d6-60c0-43b4-893c-7d7bd570ceee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2daf66d-3670-43dd-9109-2944a72092a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1fbd65-dace-4805-ba60-389a5c3a6daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8959c-99d0-4947-aa22-491b78514c55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ff4b74-8475-4cd3-ad4a-3348225d605a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dec99b-5b29-43c8-82b4-74bde3050d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d73f089-6c87-4b1c-871f-dd58d1c72f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85eba9ae-b7a6-4337-9807-4467645c7087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17a965c-139c-4002-8ede-02b5a96ccbbb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81393c0-478b-4cb4-ab60-5a7ceb0fa050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633dcc84-0792-4726-b8b4-59ff19f9d385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8c4127-70e8-4921-ac25-515c57760839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f501627-93f3-4626-a2d7-88a70b0bb554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e72a3fd-e275-4bd0-9252-b3c9e52a0e0b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5276a851-8a8d-44c0-adc8-7421bdfc6705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e12fa4-2976-4b07-8653-0e982b525c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d9a5e9-923c-4257-ae2c-ffbc47121a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7e91c9-1038-414a-957f-da11c36b7754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8dd44c-f046-416a-a481-4a1a0398abff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59354b76-6f32-4f9a-8055-18c5216dbc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48e6419-69a8-485d-bfba-051501e81233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf0121-9864-460c-bc4f-60c4339b72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f213018-7ed3-40fc-94e2-42334f129516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201566d3-7818-4202-9e62-9c2766204ad8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b185a6db-e78f-4ede-b5a8-4bea60f22e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7650c872-38fc-4a55-8e70-a92338ac8d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f4ab5-24cf-40f0-a0fc-6d0184402a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f11522f-b7c6-4dbb-bd46-d1a5d4ac7a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1302ab-c5f9-4b36-945e-7bfb56fb9012",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a100120-577f-481b-aac6-8b8a313af473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a058c31-dbf6-4e78-91ab-abd497e7c9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4aac15-9825-4beb-9dc3-b8eed4a500d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac9d045-41cd-4eee-822c-153c1ec674da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad90b8-ca2f-45c4-bcba-aaa27870959d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8107b9a-cb72-4972-a3ec-650f9990931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22efa3f5-94b9-48f9-8dda-68e921c17e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92640306-154e-4748-8f44-06773d0aa639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed067d31-7722-4ccd-be02-ffe157067589"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b412f7b0-1675-4013-9219-108c9dc77fee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56ac43ce-b7d9-437d-a7a1-07289480e5ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b04cc03-f265-45bd-ba10-9e9ef18f9037",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "701e4ab0-6040-4ca7-8149-359d3d00b947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b98f515-4561-425d-85be-2e26091a78a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6bdd63-8ade-4224-9dc2-584d1212e490"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aaf7372-8c99-4cce-a1b4-2c584703437c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "251f860d-797a-4e94-97b1-8d2e6d775b54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff61163-111d-4680-ace0-8992199e00bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb45c62-93f9-4414-8ab4-6e27b8540ad9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d62933d7-25c3-4c82-b22d-46b453918be5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9917b47c-2cbd-4b7f-883d-fa413b90b899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98029d45-eb61-4cf1-918b-3319e134fb91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5cf99e4-4af9-4ada-a9c2-79dc7274c1b6"
            }
          }
        ]
      },
      {
        "id": "af86dab9-4208-4295-b57a-d3b20530e000",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "572a7bc5-4029-459c-aa38-a5c8b241f278",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1984e05-5e34-4bc6-a24b-7b9a1db83bec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8da717d-ef2d-42e8-9498-798b05ea6d9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6473a84a-f046-4ad9-a2b5-ec9ea9992cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baeca8f-82ab-4d30-a134-1f97839fefa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b4a951-15f1-4e89-911d-759f6254537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "daefad4f-e09d-4396-a247-a180cebe9aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f47798-0700-4920-84bb-40644deda41e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31abcf46-23e4-4eaf-a844-87c89832042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd73bd3-7bb7-4785-acd4-35f5d753fdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55182b5-856c-4dc3-9074-e06fd0fb8b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a360fe26-2505-4995-9978-5a58e89dc64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039d263e-b547-48dd-9b47-e51464e3a043",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9c45a2-a703-41c4-893d-ea85ac060a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ba2ab4-329f-4db3-ba4d-9a580a89fa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f910f-e36e-4fe8-b584-9f65adebb04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b55db0-c9a0-4735-8abc-e066ddf08b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dab6a7f-10c9-4e62-80eb-bb98a2dc1af9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552701e8-e4f8-4b30-82cd-dc06091da261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823d5e05-4789-458a-ae69-9b1786574c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd2c58-5ce3-4f54-bcee-5d28a3b5d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fad2e1f-7f0f-4f77-9ad2-1e46c8f53282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d9da4c-d660-46a5-9e35-4151377f1f78",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5981272b-dc61-482c-b9ab-501815084e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d43e45-7839-477b-a946-d5cc48fe57cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01ea1d0-4d17-4083-a843-9d581b3ccfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c9a9ce-e1b9-40c2-b282-e3ea55c90e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ad27a0-8fc8-4bcf-8e61-2d535630befd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea178a7-8cab-4790-bdb7-fd7a41ece458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f3fdce-7490-4d60-b152-07b8e4a2c1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73964408-488e-4af4-b66f-b9ac47f28993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6300e160-4b7c-423d-96bd-f516918ce437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5405751a-619b-46be-b293-a06a6bc084ae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a761f3-bc94-4314-a97b-b3f4de260868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dd6992-7e9f-440f-bf1b-91491119ce8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed8aef3-b221-429a-9008-765cd3bd977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4123499e-ad74-4c54-8c32-0dfe5acc622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888f08c9-db36-438e-acd1-50c3d46524e5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6ac040-46c3-4157-a208-c0ea169336a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2084541-1da6-403e-afd1-5aea4531c2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f5a9f-0c67-471d-bb8f-eedf16e3a053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9018a197-3ab8-480c-bfc9-0575a58a610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49101c2-9476-4221-991e-70762c80472b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e7470d-aed2-4ac7-b4af-af03bac26366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb9420b-a732-4e7a-9348-6b56ff90fd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d35a1e9-f153-42a4-a3a2-ea4041b498f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd35a1c-e915-44c7-acfe-8d9e65c4edcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c35e49-cfbd-4420-99eb-b9b4c5df26f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401580aa-5dcf-4f37-9167-b0791c5d9820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76ee12c-af2e-4ad6-b2c8-0459c1dd3812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fab4e0-b141-4d15-b078-2e9df31aeceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2092cfb3-c408-4fcc-91e1-32513c9aed53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a796b3d-ba23-4de9-b3a6-4290c0c3072a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ff28b-77d8-42ca-9a09-c775b75cb657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6408ad25-efbb-49fd-aca7-38e19adbc7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de64cc0e-793e-4582-83da-68138a6c4c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "165f9a50-2b04-4f0a-8d3e-8098cd42faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4080e6-9756-46fa-b5da-d660d6d3a357",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea342fa9-70bc-4975-a536-5e4044329011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83d3e99-5f56-4d85-9f40-0299f38bcb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3a86a4-630b-44c4-9cfb-477a8a7358d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24343848-9fdd-471f-b0b7-09024e92088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08c0b29-e3fb-4dde-a13b-720c34b8c739",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a20613-1013-47f0-81da-6d326db69946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e255fd29-7f4e-4c6d-be2a-da7826758dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed4167a-0d81-48c6-bc9a-efdef5709a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b1a244-91c7-41c8-8ce7-9438201959e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13da1cb9-0954-4eb3-9b80-5f981ae702ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023cf55-9731-4173-803c-f65174dc7f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520f5c5d-c84c-46cf-89af-eae1e97c3908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99c4472-47ac-4e9f-af85-3c40b1d97503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec279ac-1903-45ac-89dd-3f2fb0b8258e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b29da8-963c-44a6-aa73-66227d6cc92c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427fc011-3dc0-4047-bb60-05d9c917dcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcafbd0-51e9-4577-a4f8-0baaf3cc5683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741fdeaf-9464-4ecf-947b-134f4dff226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "452ad6f0-040f-4a40-84c6-e3c66c4ce926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c69c4-8a01-4054-8379-a88cd80b85ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb23028-fc86-4e65-9251-3f643cedc866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a474bd-5397-4a60-9302-4fbe8ce465c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f266ef4-27cc-4ae1-a81b-9529aeaf631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8505e80-4a30-4bae-9ccf-cfd44800bffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9da122-10c0-4b04-9955-6907fc31d295",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691a940e-6de6-46d2-abb2-d97be43805e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d1ed54-f32a-4a75-84c3-64f244e4cdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b29894-f466-4bed-93af-460160d544ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa8aa0e-39f2-4ffa-bb35-c07668a6a83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ac434a-74f8-4d9d-b78a-d80ea072fd73",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ceeaa1-67e8-41d6-bb99-329db209c069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef137f5-0d6a-45db-b0b9-4d252b7c17b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9188ce3b-a3ed-49c4-9f22-f0e6e51a12a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddd3413-0fdb-45cc-af6c-761d870af162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9078ad-1041-4580-8ecb-188db47e3f0a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83004500-2b2d-4c94-95a0-1d5fecc5da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a843a544-ea72-4905-b6b6-8901ede6eeaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815749bd-c687-415f-bcc0-18493eba34a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "981e3813-be9c-439b-b48e-cd57a7df91a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8c70c3-c595-4496-8abb-351dea8a8d86",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b85468-796e-474c-a6de-fa342d4e7718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885f77e4-c099-41ea-9202-6d48b7de3c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910dddb7-45fc-422f-b2b7-144d5b609cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9afbe87-775f-4109-babc-560de8880688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eafa369-90e1-415f-9c7e-3f4652433d99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5a05b4-b5c5-4ac9-8095-906a9327400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf9e23c-4321-40f1-be18-55cd5bb0c0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10728c1f-d72e-424b-afd2-6cb9898cdd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "085252e3-e2a0-44a1-840d-778d21504702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e54fb6f-538c-430f-8fb1-7551c4dbac45",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad4318-d799-470a-aac5-b7cafe51c88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae2dac8-cf47-4ac5-bc37-3cd3fbdf4ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3564111-a4fc-40d1-a29d-ffd612af4871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b410621-5a30-4ed5-a99a-cdd36c16fd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb0dd80-a665-4c9e-8e4c-054e956a71c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8af4eba-43ff-4546-85cc-5cba4367dc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8776ee41-56f0-4496-98bf-001801c0a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e90dd-474d-440a-8b2b-8e123df5d27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd807be-080b-45ad-9959-d709f2aee6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5040ba4-ce2e-4b84-9a8f-8a52ff02aa8a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b361ff8-98a5-4a25-91de-1d7d4508ec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ac0950-ba01-4f7d-ad81-d4d86688df61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e382c1d-b7f0-4fcf-98f7-c0e6114be46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66b00b6-3f1e-4acb-88a3-fb1a20ee0013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e76632-f41e-4ce1-9f58-509be5f0c3af",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f5d3e1-aaa1-40c0-a6f2-25315183ac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e23e55-ee17-4f63-a7f2-ce2a6f639ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd7049-3dee-41b9-80a0-7f46405592ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4018c516-2137-4dd5-a43e-9a9e46b165c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2fe880-0a2f-4f90-abf3-2e53f228267d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06007d8a-cdd7-448f-87c6-e9e06247a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f31fac-065f-484c-93cc-a41c87871531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6b90d7-c3f7-4878-87aa-1b687acfbece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8838890e-ed6d-430e-bf62-17612bc02268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b234b4-7ca0-4211-9dc0-6c76f8662ee5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eee0bc-ef75-44d1-b82a-f41a2beae493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58f4788-1995-4d28-9ad3-ece9edfeb335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aff5128-b709-4d0a-8c63-626c8ee72ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cde9994-9e8e-4200-9c1c-088a2e6ed122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8713f548-28af-49b9-8f9a-85c83d027a86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51bd2d8-ecb9-4695-85e8-595ed8d81e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9d0ba4-8c35-4f9e-ad8e-ed045925f8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9da12-239d-4f70-bf9d-d5f895f98a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "830558f1-66a1-40d3-a32f-e114c4020267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa3ea91-168f-4a27-b340-f45f70041356",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbd8baa-c8a0-404d-a0f1-f7bbd08c2fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2b61b4-8767-452b-b372-36fdcaf45e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054cf9c9-f571-4f1b-8394-563a854993f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe9a4ef-d082-46fe-a5fc-b7ca3e83a846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba88d96f-624f-4309-8d10-e80bfb085bfd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4091babe-dea6-4bf7-a3e3-444d7ac80e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00726a8f-48ed-4e30-be83-fe40d0e8a5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf663119-16f6-421b-bd03-e5e62febf384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba0f93f-7611-42b4-a297-be093b60f50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5be0b8-69c1-4775-b6d6-9a54d5d5bf96",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7edbab8-4661-4383-bf6a-ff34498c3b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f85a54-07bd-4f98-9539-fc1f8e88536f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60994fc-cb56-43ed-b2c6-f7920d905941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8367276-fedc-464d-ac54-8986deff34e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523aa20f-f273-4ee8-8637-905bc4e81719",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b90e8ee-d08c-4f8b-91f1-83572a487cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71f3966-87bb-4c32-8131-6556bc50d96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10280585-1cf6-4f52-a743-3f4cd92e7206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99354161-f725-4821-bbfe-0c12f3cf9caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa233c2f-c295-4acb-8781-56a9e8d0f72c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee799a5d-1ac0-4678-add8-019f1a77d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18795aa2-bd0c-4d65-bcd3-56a65b0738f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04275ec-1d63-4f36-b771-06df5621d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fef6d4-dafd-43d4-a8cc-90d17f6720d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b74c92c-653d-4eba-acb5-7b1964da55ec",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de24fca-9a38-4345-b2d6-7bd1be4654d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2092ae08-92cc-4ed2-a2fe-08a550c4c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d99f2e-6f3a-44b8-8215-5d9d6b63f348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7fa5e-aa05-4e82-8401-9f40c1ffee2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c96b07-4d3b-45d1-8b50-b97bb4d9d345",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26434eb8-9cd6-44ab-8088-2263a0eb1f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6579da53-a8c1-4fba-a2e8-521b70dbac1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd27f1ac-3710-4266-84a7-ddf6a951e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89ec766-c76b-4f3c-90be-7b27c13bce72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442d42f7-dde5-49d8-a92c-050cef28684e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c43700-09e8-4c1d-a981-45e33aacd5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ed3403-b9a1-4464-95b5-142ba0f30a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81759b84-c743-4e26-b225-ec66267edb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8e59c8-bc0d-486b-84e5-91e902af9e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8920d6a1-9f67-42ba-a83e-0cfa1e8adaf0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55458820-77eb-4686-8217-fc0de81a63e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f98833-7382-47d0-bbd1-18c7555eed22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4b0849-c847-4ec4-9b5a-8085ad0c366b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc4399d-a641-43d5-a204-c3f597f6aed2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69bb07ac-d285-4453-a37d-e9ee45eca7b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de1e98a4-775e-4aac-9c19-6b8a70f77867",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5ae5c2-05be-4916-9a9d-e94de23a4709",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "70828b7b-77b0-48e2-ae70-598f01f070fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f44ea6-1409-4d25-8218-1c62723b2ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "148af1b8-3505-42ca-9311-00dd25c92d13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f878d289-5929-480a-bddd-2977422f12b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8984c2d2-e907-4459-ab82-21f7bb2d94dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8345dace-654b-4509-a421-69a7046dfe20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b0b190d-df86-4458-a39a-5365fa29185e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b328b607-68c8-4c61-a24f-b2999e6acf8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6149e9a1-c6c3-4923-a97f-37b2d9e55d89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb4989f0-1bd8-409b-bca1-a3384067f539",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5acf6842-c7e8-4440-b62d-1b37b968b036"
            }
          }
        ]
      },
      {
        "id": "5953b61c-5f55-4ecf-969a-54388913548f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ff67bfff-eca0-4740-b763-d26760f26b8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6cdc99d-1345-44f2-8b64-60035b12f932",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1669abee-c02d-4dc6-8e3d-2158db4cc099",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd95bbc0-4531-4a2e-b44e-d1c454b3a789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f32ff34-c469-49c9-80cf-ae90be7a369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d532bc3-4196-4fd5-a88a-44d93ee414c3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b3394f-de7c-4c7a-b5a6-c041a66fded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05990739-d2bc-4a3d-acf0-a94e1e004564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649480e-29ac-4e00-8e66-f21ba7634ef8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a8af82-1c7f-4032-9efe-c0167e7b7f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7908985b-9bc4-4bb4-859c-de455b83774d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efa8ad8-0b75-46b5-b59d-a26f2d9c7f89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136d0403-4bf0-497e-8b3a-03901099646f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b95d59-188b-4434-98f4-68a997d7d673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45a512-b69c-4dc1-bfc8-48f5755367f3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d092f9-6905-42e3-9b6b-42fc39621996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdbd874-bfc7-4d12-97de-f5b18329b7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455ee7a2-d9bf-4ee3-bb73-f9eb0f8e4f04",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66607fa-0a1f-4d1c-a65f-641c8f9d6b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e03cc3-6810-4f34-beaf-3b79ab96e1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c664b40-3e9e-4b70-81d5-4ee8684c77af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c4771c-8d94-4c2f-bd6a-3f53db21c32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa980f5-948b-4fd9-883a-2c0a24ad6a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7a741b-7729-42ad-8e73-1818e4c4a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36fbcea-997e-4e73-bc0e-f52d9a080eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccce3b8-46de-4f66-90af-b6c4c60f6c8e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7449e4-f712-415b-a92a-5ea18e31121f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015a15bb-89da-4447-ae7d-f8c54dd61684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1884116d-39ba-4cc1-9bb2-a77fdaa7b552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1d8f3a-af15-481b-b964-304113444894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade99d89-c3c6-4b90-99f8-f09cbcef865f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32637572-bc3f-43b6-a0ae-aa94a1293ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a3ece5-a846-46c5-af91-ba2fb9eb2753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c8337-b16c-4b5c-a095-221ae9d26b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381e7b38-0da3-44c3-826b-9627cb937828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea19b6a-79f0-49ca-9930-81bffa32138d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14510a79-6892-478a-b572-e23ec3acfdf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb336af-2b9e-4dbd-a3b5-70771a51f74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6fc180-090e-491e-bb8b-75cb0b02589a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9329a1-1b27-45f5-813e-e85a2856a39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e985756-84e7-48aa-bb37-091f611026ee",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1aa59f-ca73-45b5-8581-22c363ca944f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1037f9e-9c46-40e6-ae17-0cd88e0cb497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb80aa9-37e5-47a3-89fc-9ef7601a389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9656eba-a93b-47fe-8bf6-d0c5f95455c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933c2ee0-f558-417b-990d-51f5a30e9bcf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987a7649-3056-4cbf-ac8a-23dc0be43f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671482ca-0f4f-41c0-8794-ddca11074251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac33186-b450-4ac2-8604-256a6da0090a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d87df5-d7c3-4006-bc03-e3d90d3a0f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3811f596-0764-4b8b-890e-8a7d8b4d2ed5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a1272-6778-4617-bc72-1397254c0d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1cdabb-218f-436b-b43c-38df954947a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b8179-1822-4919-ae74-a429fafd7162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54070c72-314b-41a1-851b-7e743a87644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58abd6a2-56f1-4be6-9c86-f58b3c9e39ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b84859f-762c-424f-bfc7-d4b86ab33086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018d4a5c-af2f-4453-aa44-27ab04ebf18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e235cd-9238-4b48-abbc-151befc19548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d5ab50-7e1a-472e-bd5b-d95318dc1b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4de60f-5b48-45fc-a0f4-eee0708a8987",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e3c27b-79d0-45ff-8ec2-b1e9089a6baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817db26d-17bd-41ed-95a7-993421660ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fd5dc5-4489-4a7b-855a-53edb4f1ed40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273e2d61-7890-47aa-9524-dc7489a138e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bac017-5cf3-4414-a604-82f9c063a443",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d688b3-6a92-4839-9a2a-52a2c3f3605d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7b9e3f-4862-47a9-ba27-5871ec7ded4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68005378-d20e-4fd5-af1c-be5c1dc6cd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11e41b1-54ca-474f-a520-8a49ce954025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e36944-ac3b-4cf9-a8bc-457fe8e9c4df",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73ed4b-1236-4fe9-a99f-563b32dba0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1408b222-fd4c-45d3-a855-e57349b04631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e90c545-03fc-4dbf-a928-df926a17f27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8241e49b-903f-4b7b-b457-59ec4fe2bc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31234582-5608-40c6-a63b-89626b035c1b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db681e3-bd0b-4068-ae34-c0ab14b4baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbe45f9-32a5-4add-968f-8b37bf52c0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f630d8c-1393-4cf3-9290-10282a1e79c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac346534-02c8-441a-948e-a195160ba41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237dab1-e74a-49ab-ac17-b0e754d8006d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e57a5d-8969-40d6-b685-20b16738939e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1d15d2-b103-4b40-b00b-631b0bfa07cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8395dc7f-d810-45c2-b934-1270e5a4bd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d376191c-2bfe-4489-8193-d26aef81967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51985e7e-ee57-42de-95af-8eb9b3a94281",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae774d-2766-4e86-b774-626b884175a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a4d78e-4a52-47d8-bf58-8865d791fad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b9c624-4d5c-48d9-8145-ceff196a3de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea77217c-9641-45cb-8919-e5ddfaa30ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6409c8b0-e29d-4864-9576-02166c5283ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32082561-8c67-4235-abbe-7f654bc3eba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14327df8-30ff-465f-bb10-aa86702b80f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d6f61b-31ab-4d3b-9542-1a4a7abecab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba0119b-491f-4839-a969-5f82207b1b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acea958-cc5a-4969-8eb6-eba1e3c8663d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5073229-323a-4b10-bd98-475475e61b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55148808-fd57-4b68-891c-227af967da61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e165f2-721f-48a1-b416-6ff7560895e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797dba75-8b1a-486c-b42d-0d93b58b4c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8c8ce3-a35f-462b-8bb5-a1a39d4ee4f2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4af19f-b483-48d5-948e-b52adcea3304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0ab335-f82b-4d71-9a2d-e020dc6d7e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e580f2d-db5f-473a-b851-f0d8389af6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59105d7d-2722-4717-9d6f-9550dfac664f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1919412-4600-4d5e-b9c6-58c0a3443f8b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4482b723-fea7-4b97-b5ca-8cab012c7ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b56d6de-613a-4e40-bea2-43b407c5d312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029f0a13-4b2d-4736-8a80-2cc36af3cce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a023348-1d62-419b-8d96-a18e34d4c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8db2ee-ce3e-4fbe-95d4-73a67d0c1115",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b60db5-d1d1-46e1-b169-12fc554a6a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "006e5ed3-dc88-4945-9557-68ea83fd8784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f729e-7676-4ceb-9ca0-ca516e07c158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069615d0-3e3e-4a76-9b2f-5126ffbed011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c917831-b5bb-47e3-b01f-a3a223a95b38",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6266bb-4241-4883-9820-ec82ee09c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d08a58-fc34-4129-8d8e-3309fa48049b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae14d4-1a3a-4540-97de-5857b0fefed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c42a63c-3469-46d3-a659-81a5eec54913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79201c52-25c6-4988-9b49-98519402361c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d3b835-6d50-4a81-b8ed-97ca20e2c657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85a9a3e-3477-4148-84d6-1d16e4b98573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7601b7f7-c2ae-4c5c-84dc-422e8dd7da01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffc915a-3e2d-4322-95fc-3a6fe0ec31a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81064de-5c2e-415f-95a0-a2ed91ed2d04",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51818121-8731-4d04-bbdc-00d5c1416b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e735f9-8b9a-4b33-a02c-3c391348dc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c802829-774b-40c5-b6fb-5c9632046f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addc98dd-7b72-46ed-8f50-11895489fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e949df7-a535-4a8d-8cc9-e466b0d446b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059bd270-2d69-4b53-bebc-1065a33120e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bfe448-d570-40a6-9ba5-e2579ebcb48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4754b7e-7e2d-4dea-b27d-c0795c3d064a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23f18a0-3cae-4595-a0c5-83bfa8042ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116bf7aa-72fe-4562-9e2d-171e03c9a3e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af963f8-6d7d-4545-939a-fd22c6ca411c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c91d62-145f-4d4c-8389-75e689175786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37292516-d785-421b-acd3-86337869b31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c087139-edf7-40ce-a1d9-593355008048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a50043-c920-42c7-87ba-8f6ce5cbe6f6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380d1d8a-1899-476e-93e3-a82796dd954e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9423f7-8217-4fda-83a2-9b4ee3e5ecd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f18fb6b-d95d-4ed4-8e26-fe3e5f0e0a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5736694-b4ba-427b-816f-a16bd8c8eff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b24393-77bf-43b0-b22f-758a9e446f92",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed08cbf0-9909-4e1a-bf71-044842011136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1eb8f02-8621-4f09-8f8f-710f25623927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b44cd9-6095-4472-a0d9-a28308abce23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1116f482-e4a1-41fb-8c4b-bb6042a4f552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86828dda-1c6c-4d5f-aa8a-c56bc4b9206f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c9d626-2e96-4230-a883-ebbca13242a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfee415-f105-4ed6-96bb-a47ea0c3dcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce696ca-f005-40b7-a647-a28da555b880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa82412c-e421-4692-8c47-e73414485db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20448e72-4c84-4dda-bf43-ba89e2a66737",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b886c82-7c45-46f1-a91b-4ba52a65acd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92d522f-ae47-4316-9a67-28d5e7b98ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5611a248-393b-449e-bd43-1e45a16a8ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89c21c3-5d90-4ade-8529-d56f5b32bbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd26469-9453-468b-8589-53124af24584",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55296781-47eb-4729-a5c9-a03578cae984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b25c7e-da57-4eff-bbcc-744277e1e87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a763b-4e61-4f69-9edc-e8ecd0b8de68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3055578b-008f-4e36-9942-cafd067f5bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c8948e-c3a9-439e-bdc9-95b63d3facbd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e200d4-e215-4e79-a6ec-977c18a9fc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064e304f-6522-4804-92e0-7b10549c33b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940eebd2-d6e8-4fa5-985e-7a907a4a49c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963797ef-d7f3-4d09-906e-6abde6e9972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c98767f-7274-4e6a-be65-c4fa5883eb59",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8acd05-9645-4f41-84ad-5d33cc691146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762a8a11-798d-4676-8ec7-90d94780b549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3b0e50-457b-4923-98df-3cbe9fe95ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd09fe46-ca58-409b-ae26-d9d1aa232a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8001d3-c64b-4fc8-b1a7-178872a40628",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a8437a-00fc-4aeb-baf6-d65369780a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ba6910-65ef-47c7-b3d0-488ae94a33bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd7f7f-ae4b-4c14-8daa-60fb9c676246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ba1af3-e4a8-48fc-9af2-4c203f80ec6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d49d80-3f1f-494d-a3e4-04a515b0b45a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be12830d-8e7c-470b-a1ce-30bfbe21c88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5142081-8592-43e5-a176-dd7d157e3224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8181dad-a3a5-4659-8acb-bd90be999e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc8d387-cfb9-4353-8dc6-43d2a9c6b09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1756b-0d9d-40a8-9fdc-135acfa533e2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7caee28-e6db-4a11-b141-a82ccc2c543e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350df551-db1a-44ed-b3b4-85b9bebc0341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea84d8e-c1b2-40ea-9576-69253b7bd656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba323577-e258-4e9e-b65a-f37b3f3af116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba908fb-3cd5-456b-b062-9086be5da005",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdacf2c-bb0e-4373-a7d9-62f7643b34d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b070dc7-e447-4541-b8b6-c616a0b5cfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7f88a5-5447-46b4-9f18-6cd7bb9e56c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddc292e-8256-4aa9-b231-173419f8e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdd5ed1-d9f5-4be7-8258-92a958902c1a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40680395-997b-415b-82d3-d6ea2572dddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cc716b-fbbb-498f-bdcb-1a63be1fbcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373de0d-e4e8-4e4d-be09-95b3d3add7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5ba094-1de1-4ad3-90e0-13ced7aaae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fde8baf-17f0-4d65-9758-6685c5355e4b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6267b92b-6181-4046-907f-304cba1830f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685d7c3f-6f0b-4367-90a2-c92477c1bbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f531170-8d0e-4f3c-bbe0-1401a8e9987f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e00140a-6ab6-46dd-befc-404a1f5d7315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f110bab6-77d1-4384-a7ca-3640a4899c9b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82db26f-2431-40e5-885c-5635a82f5a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e2cd41-679f-4aa7-9798-bba8b1fb8d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04df5018-5ebf-4b66-9eff-ac0e13ed3313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effde948-2d6e-4a71-957d-87861177d88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b027fb-9a57-47fd-9256-6e0e761861b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac70f49-0838-4bca-a590-c3143fef3b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceecd69e-f0f2-4791-947f-21737ac3f42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c681ac-4992-4c91-852a-94f439e14f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d53906-53ef-4d88-8b0a-e497b4dea202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1c6ee0-1748-4682-a962-62e31713e118",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3192ce-a1df-44da-93fb-0772a04b286a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dad354-0e30-4504-97b5-e6db0d3ef4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4284b820-d352-4182-b817-39010b1bed9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0dcc64-37ab-4344-95de-0010188a0846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6e68d4-dc86-44d9-b878-c2a5800e704b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd8fa2-07e1-4374-bef8-e8a9969d0505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce5671e-38d5-4651-a5af-986cf61ac56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d79ec-2a93-40b5-8474-7d443aac9c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec7a5e9-49fb-44ff-a903-5fa7ab6298a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37fbd6b-4fdf-4560-b7d5-8fa3c0c4a56f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b32594-2999-479a-aa5b-48d34551f981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44df05e8-b9f6-40b8-9b4d-1e489ac82b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8932f7db-42a3-45bd-aae9-529f16fedd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79d9b08-83b1-40c3-9923-0318548ad7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d210239-6ad6-45f0-9227-058593b01fa3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd404db1-93a6-49a2-aa8d-3a62c7be5c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594db12c-a6f7-4137-9a58-eb6d0ebba077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8babdb79-89cc-4b7e-9f06-cc1a699e134d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2009c7a7-0a5a-457a-8e13-85c9a9803530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f87481-7f5d-47c4-947e-643418c29642",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adb7146-c573-4e5d-bfa8-1d0361132dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a4fb04-c24e-40bf-b8dd-1873c5209d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad794a56-24c1-4176-b21f-46547bd47a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af976b7-c8c0-4681-ab90-083ae349a293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408465e0-6717-4603-843e-e2c0285afeec",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ecb3a1-5b6e-4759-9975-aed110933169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e01d4c-cc07-4f48-a699-ee5d6636b5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69413890-974c-4952-8fd9-fc205b5f8224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6aaa69a-1034-4770-8a48-9a70b36fd5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593f5481-cd50-4a57-bd59-c4075572f884",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743d717d-85e4-44e0-91f6-d947f45b39d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba80389-bf51-479b-bf43-03d287ccacaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb953ef-6ba0-4276-9216-718596963f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557efb83-535b-4fca-8722-016b6b4d3ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfe6321-98de-45fd-bea9-ee838848b79b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b953dde-fcb6-43d1-b16e-992158ae22f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748f5b47-b8cd-4813-b987-6523f459303e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b6b082-092a-4695-8a13-c9b7be96cf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c758902-4fa4-4bcc-ba05-6443d9b0142a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432fb4a3-1165-454a-8d08-8053f2aefbde",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a3732d-0085-4a0c-bd4b-5e47cdd79d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62d701e-d53c-44bf-a0eb-d405c99d28cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bd074f-f300-4a4e-abac-4ecff07ce566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b44902e-68ac-41ad-8b1b-5942237f4da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafd7ce3-5e0c-4f66-913b-ecb448ec5e9d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13b3ce6-d0cf-4784-8aa9-6d2ebaa68e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06362e10-7f9b-418c-83e6-fa4e35461033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec18e01-2853-4bb0-aa56-41a820a2bb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc83bca3-6107-4f47-b9eb-918192040e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea0c21e-ff19-4857-96e1-a0b54e5b2ca7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d58494-983e-4444-94d5-0d59f5501ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a8f48f-e426-40ad-abb5-3fbccd72c7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc492bf9-f4b7-415c-b8ce-70a4a65f6619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0767740b-6df8-4806-ad67-8ec0c0349a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42a0bae-29eb-423c-82ac-e2c98bfaf51e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bfb9c4-a386-4bc7-b25f-6123bc71716a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2748ad77-5354-4cf0-8a14-c51f95b6cbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef8c15-082e-4a77-a798-03bbd9d5e5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435d5338-f834-4163-b9cb-b3da7bbba3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe0f720-db5a-4528-9722-93b0b5d81631",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdcf91e-d7c4-438a-935b-ecbf8d2c52c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1707de-c52f-4dfc-a67f-30e180feabf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a7f4b1-43ae-430b-998d-63cf1c204e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb004292-169b-4b74-9e46-f90b972ef9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871b385b-accb-41d3-904c-f2b43cfceafe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004a337b-e8c2-474c-a4c4-da0e715ab6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9c289b-63d4-489b-a9d9-0cf27e36913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6a39cf-af83-4bf5-872e-d0e2b6dee7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b908cb57-6060-43ec-b7bb-e3114da89ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5550bf44-ee62-4a1f-9f2b-73d675391908",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a71f2-ed32-4958-8dd2-1e2aa15f4bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6f9273-106c-472a-ae39-05b38011ebd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2caa57-bf2a-412a-893c-7972328356f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540e3153-3fa8-43ce-ad69-c0f46bace6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b12749-420a-4f46-8cf8-8f2c878b7caa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ff573c-6983-4976-8114-36d2e148f627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b3fdf6-be05-4c8e-a9ac-72400bf2aed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071cba2d-96e4-4975-af7a-52d4488a1f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d91cfa-34a9-44c3-9bbb-5c1b9875afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630900cb-aeaa-4fea-af3a-08463f1eb240",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9780c840-65a7-458f-bd79-4c9d1bb2f09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dab1f8-e104-4c29-9757-a8651de05d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661f402d-09d6-43fe-bff2-1b0c46990be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dc6a23-341c-47cd-b366-6a5d68ffeff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f61c49f-a335-404e-b65f-a4acf58d6717",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ec4ad-f657-42b2-be45-a7c8bf9d869e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83877fd-1693-40df-beb0-91e96f20853a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397e074a-4685-4b3a-9493-e215707fdafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76632cf8-9acb-4592-a197-3a85c21813c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc2ef01-edcf-43b4-8377-bfde9b0c9d44",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cb3706-446f-4eaa-9917-b8b2546ceed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827c3f7b-6fcf-4e1b-b618-fcda3aa239b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b3907-c778-4d09-8158-56f9232f916f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d759e65-3615-4de4-b747-82f65611682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ef0441-513a-4309-9ff4-e7c05d9c2625",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf3eb80-45b4-40ff-8951-9c46088f758c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cab0c6-bc3d-4f29-80e5-d89c82be1a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde3669f-fca7-4d3f-ac70-c4e32b24825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b038e39c-d392-44c0-853d-6daf73ab1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f13c5e3-cf35-460e-be44-8680ef6df748",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fe39cd-3b87-4195-9425-e0ed3bad6bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b254a53c-bf63-4389-9362-e8382d48141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636584e8-e718-4b81-afd2-029724bfed55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaaec3b-7e12-4122-82fc-03cd2f65f9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea16844c-58dd-431e-b28f-6a9cf1f58b36",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f470a-2eac-4a25-bb1c-a2bc49c6586f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa726588-2a80-4c2b-bb2f-63a2588b9ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bec0052-abef-44e4-99d2-dabab1c958b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181616fe-84b3-45a0-80df-53fd791acfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61013ea3-a969-4551-9458-1742aba568b9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e45c10-6818-4870-9b34-90efe1b217cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0daa5d01-064d-4ee7-a1ea-bf77586800e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adec73a-0c6c-43d4-94e7-fd558d2c15f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561681b1-25fd-4600-8bc0-b5d162de456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5025e2bf-3529-467e-bf38-910c501b2889",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2b1f58-996e-495f-a5a3-9e5a64c0bb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "693df44f-f525-4314-bcc6-91134224a4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c6c2da-c36e-4429-8878-846b346c1584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8b5193-ca1c-4957-ba89-c01de1768dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcbdfd2-d287-438a-8c08-e5103686af93",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951b1b82-e4c7-461a-bd1e-6e211d4e5980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92211286-1060-4998-b731-67fbea667e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb92c3-73fc-47b2-9bd1-98821df2968c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f3bedb-6960-432f-98e2-b7f50158a07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6e010-4844-4b87-be24-167a55545b63",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3985fb03-9b65-489e-b17c-caa2c3df5e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc5e68c-0a75-41cd-b547-bc96025c200c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864fb4d-9308-4309-8329-d22f2d10b6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b58e509-cb1c-43bb-88ee-afc92ad1fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae64293-a154-4136-8395-7c5991dec093",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01916dd7-399e-4d8e-9a4f-6f912c0cf5b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef1a212-d476-4181-ad99-c513dfaaa20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73950aac-9b4e-493a-8252-23f73c0c318a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb124c1f-a6bc-47f8-a02b-d67859465423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606bf553-407b-4606-bd2b-ed6e99960c2a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5956ff-ac70-47d2-8426-5c06bdff084e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860982cb-2ce9-4475-93f5-162fbe692394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4866049-df6d-4e6a-8b80-8ffb2dc9bf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423981fe-7b3c-4fe3-b5f9-358cb3fddef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dcd176-dae3-428a-8cbd-7879a865f5f6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a37633-8072-4fba-9c44-9c62ec4627da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb38c8de-6cf5-4528-878d-1d767ba63480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a7532-9e19-4edd-8fb4-fc2e8212d4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d0d3e0-c858-42b9-908c-e3358b8ca71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8f7045-7736-4290-8161-1b2f50f31160",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e3064c-54d6-469d-8585-ade5d0045a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7855712b-ee3f-4278-b00e-449774a3505e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572eeabd-213c-4e97-a305-e36d895389d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f9136d-9edb-42b8-bffa-ab114d4a709f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f717236f-8465-41ed-b15a-891ba8d52b1a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d272bf-995d-46ab-97fd-0e93ae82774a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e1b01f-e63c-4f87-b43d-822f68c447dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce7f39d-042b-4429-b822-9f973a7ffc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda69c8d-500d-468a-8a45-ab2fd4c5c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16bae8e-b07d-4d03-91d4-1fc57ce84d31",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675dbaf6-e37f-4819-9501-c2de93a4ced3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ec2ff6-3cde-4c21-aaa3-fb444a7fa850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c60d24-c45c-4a32-bfa6-9a2d390bf90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08295141-9c97-44ce-9058-6f222d2303f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751c8c4-bc81-4977-9ec3-dbd9423df267",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec86fcf-0cb6-4bfb-be60-c729bc0970f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0af2632-9f0a-485f-84c4-6a5cf303c611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa04c9da-35fa-4b41-b2cf-0b788bdcc168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446858a4-4fa4-43ff-bb8f-dc533abdc0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040dfa0-ee3f-4d81-b3c5-a940007f587a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ee6432-4c06-4b35-b8e1-dd495e3f204b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e96607f-7e63-478d-934e-cc80f70df6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea33ac-bae4-4efe-b278-88cace752fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c05508-1312-451f-9b5b-ad91417d1a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25248625-1655-422a-8415-1e713ca98bde",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f82393b-6078-465c-ae3e-f40329a67033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e242c3a9-face-4c92-b737-d5211360aa3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dc5b90-ab24-4703-a533-9063268323db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401b73a4-04de-4dca-ba08-202027136dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7071fa4a-cb2d-496c-bdef-08f7c1782c5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ca1458-848f-4f39-972e-e207b1d83c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9255d90-43c6-41f1-885a-80c1340d907b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9fa2d8-48fa-45b9-8d6e-1642ab5a0b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7866daa2-5dba-42d6-9dbf-19e52326cff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980f9868-41e3-4e11-b52a-0d914c89bd83",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae519f5c-b415-4d98-ab4f-6290b4e4d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53b2c7f-e0d9-4b01-b730-530cda6ef2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07ed57d-88a1-4e6f-bcf9-83fd6c48a77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc67c8aa-4391-4a41-9c5d-293260d6bbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae6f7ba-5e78-4308-b803-136688b10008",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b256b3f5-f51a-4f1c-b090-35d786349280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925833ba-4b3c-4d52-aa67-31ddac828705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a1259-274d-4e58-94eb-b58c4ed8d9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ac6de3-3e3a-4a22-ab1f-c58ddccb12fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3013c-ec1f-4d66-a6fe-1a8b372f8a74",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0107cd76-3c92-4c15-9f09-4324c8884694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269aeb25-f21e-4f8f-9ae4-cae8fb24a93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb9e5d6-9aaf-49b7-8b9c-f4b3bf0b0e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aa1649-cde6-4dc2-b61a-b7db7ee6e3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e895c84f-b2fa-4df5-839d-f5665a2e2220",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3ae0a8-ffec-4a5b-aaae-1f04a7e33f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa2163f-2302-4063-b929-2aef5cb7e834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4d8bef-49e5-49b8-8236-d1b56bbd3fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa8c574-9ef4-49e9-9aff-7f8f8fea9107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ace1c1-460a-47e4-a7f5-3720c72acb5c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a853c5-05d9-4a4a-9ca1-02b2ebe771c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f72733e5-b33f-43e6-8e62-b94671f4f818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9105a4d3-d219-4971-a1e4-13088523fd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece5e407-e36f-4c5d-a702-081a089486c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af12120-24c1-45a3-9763-63f2e79fc9e5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff18438-5581-4176-9f46-080c212469a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480a7945-b96f-4586-bda2-485b2e45c9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde34294-d9a5-4d0a-9005-1cea9cb87dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a71555-ea2d-43d2-a24a-993090107917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844acf99-33bb-4d38-9a80-50d49495b0b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2d2ef0-1543-407c-8c2a-dfc462a4290e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e801fd-0b77-487a-b1de-5fb080ffbd2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5da05d-0c30-4071-b58f-9ffdadd4911f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2bea08-18ec-4540-ba07-2bb0643bc965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff6e924-3812-448d-9566-0839c48e4d2e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0978a49c-10b2-4309-bf59-0794601e3f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193f21db-b3fc-4649-a5b6-e0bf7915a61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d45628-a504-4928-9913-31a70bcce150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bb1a74-08b9-42c0-8cac-f032a75b74ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472043d-4dbf-44d8-bd0d-f2250a80da96",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b20a249-6804-4652-b795-71cc91b88e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b57ad5f-7393-472a-ae5b-93d3e75c2142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2344c2c-323d-441f-98e1-641d3c0e7578",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa1f9aa-b43b-4c64-9d00-26fb3377a2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e1cf38-2c57-4e29-8d76-2a6d06db9253",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7b781d-beac-43ef-a7ea-fd6bd423081d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fb7821-f089-4113-9a75-ed8ced43b832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee5323e-7328-475e-b083-3bf87c36eaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2815926-0fc4-4fc7-b987-a003a8d0546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b667b-e00d-49f1-a081-99acbd599b81",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10397f53-b61e-45f3-88e9-572db743cccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bc00d8-c9b9-4219-84b4-b6602761c697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3043f04f-b4e6-414e-935e-6ef35c639010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072a35b5-033e-4501-8880-8c9618428112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58efc3ad-6803-46f0-a52e-e6823199072e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287fc0b3-9f9c-44b4-89f8-07532bfe9cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e3480e-4408-443c-ad78-4d7d8340768b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bef9842-5fca-4fca-b6d4-deb26c7d143a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0db512-aa11-4a96-8edf-7acaa316fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2dbbd5-dd8d-4d15-af3f-6eea4ab892ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b77ab0-aacf-491c-adcf-56c12f187cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9712758-3b79-4235-9358-b77f680c755f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c1ae8-5e6a-4b58-96a3-8cd239c7702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7382417c-e91e-45c6-85ae-38a047fed5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6851d75-c2b9-47fd-ac83-01ae504e217e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fd4f66-5f6b-4e97-9cf7-7077c14190f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed29e94-811e-4eec-a143-eb6c5c8c5c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6c47a2-36b4-4229-8d60-0a7ba30285d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3182cd-edc0-4e61-a03a-adcc34864241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e05a0d-e13b-4ba3-8936-7f6a0e850a4c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3130fc61-e5bf-4ba9-ae5b-ce913d1b1de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7c8e52-4eb8-427a-9e4a-f6a91c67afc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7019065-d17b-4a32-91a6-4bff501ebb89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157b7734-d28b-40eb-89bc-af37a0e2d141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d7492e-ffcf-4758-a6da-755c6f23c845",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5483aac5-6c73-4b23-a865-8c21a822a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602de923-45bf-4675-b67a-5964ae4b6457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d20333-87f5-42e5-8d64-7a13ef31245a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316c11e0-03fa-43df-bb56-6a9be572d74d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5209f67-e930-4734-a4d4-a5ca43862279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c02da27-8060-4594-94b2-3fb2de8d3a87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b3dc8ef-3539-4972-adf2-77a006a8c909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef1994a6-b75b-4da7-a433-3d6df935284e"
                    }
                  }
                ]
              },
              {
                "id": "451f4666-f1c8-43eb-97a1-b028bb414cfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2877bdc8-07e6-4ec0-88cd-846850b1ca1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81258ed6-5520-4c9e-a416-8aeb643d59f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81055ed9-006d-47bb-bb73-71524ab4c709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de08e4-f3cc-469d-94ca-8591425c4a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fe637b2-9303-4a51-b9ed-02a3a97a94d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1867a93d-133f-4f2d-86ed-1634101dc34b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e01a0c06-b791-47f5-a252-573895d9e3f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e7ec658-8b44-4a05-a4a6-10e587176790",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0a182e-e03f-4c75-b2bf-4b5c7f6260d5"
                    }
                  }
                ]
              },
              {
                "id": "e2313d61-ff55-42fc-ad0c-7831767f3e8b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "36d79e5f-98e4-4686-aace-2dc7592a9610",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b2e30-2f13-4fb1-99a7-d35a8588dd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2a0d61ff-f09f-4eb7-bc96-9b5244fdfde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf24768c-2282-4ceb-b401-047e7f6a2a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3f5249-c841-451e-92d9-2b37e42caa7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "89c9e700-ec67-42da-9c39-e19445710ffb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20f890cb-43fe-4ac9-a90a-dd80d8d6885b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "378de0cb-565a-4a83-94ec-7047c567cf72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "022ca6cf-4dc9-4c8e-86a5-084743aa22f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d0a4d7-1ff3-4db2-8ffe-89878b78565b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88c333a4-035b-4598-a844-3770ca02e8f5"
                    }
                  }
                ]
              },
              {
                "id": "6d84ae68-db36-4a5e-848a-938473c4be1a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3bcaccb-4489-45de-ab94-04e194024bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "778b1c1c-c471-46f5-b788-604d882eaa11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d354ddd7-f3a5-4a12-ad0b-341bf8774ee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "316c50d8-56b6-4e91-8859-b27444e6166c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a495fa34-5e13-4880-9aba-64e4d5831b7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "37abc7a6-2286-445d-bd2b-651824f28e85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70e75a8a-e7db-468a-8281-defdc81249bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c363be25-39ab-4ed7-8f3c-0315f03853a8"
            }
          }
        ]
      },
      {
        "id": "27e4369f-53eb-47b8-abba-b8c1129ca4ad",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "84a38d8e-af6c-4afc-8ad5-3ec01ba19ac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd11ded3-b512-4da7-ab31-3ed3120ea1cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45c7ed2c-12df-436a-bc50-20b316143389",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74adafcb-61d1-4ab0-ae89-fc1e16cac43a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76af636e-0b59-4853-b495-7b360923d5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16753a24-bb7b-4a92-9876-320536721be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55abf75c-8944-4ed1-90df-d3961a2abeeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97dde99-3eeb-4503-9c04-8d005669c1aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d94018f-459e-4b29-b09b-7c39d72cddae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac5f7e5a-a767-4d59-82d5-59d9a34c57c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad89f3f-de96-4baf-9b7c-b8addd66f813"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "731b8206-5cc7-495c-933b-8f3a732156c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a316761-9410-4fce-b88c-a489c608bd79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09549d82-ed46-4f4a-9267-7e54d8eb9a7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e36432f7-eac0-4c97-b4d7-de026065a597"
            }
          }
        ]
      },
      {
        "id": "366802b2-df57-4866-a964-a2bb41c94eeb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c4dde61-c455-4f64-ab81-d1719c2632e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61b0f2e1-079e-4c1c-8541-d7992bb92fb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40a65ad4-7e09-42f1-a930-3481afe70794",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe16a3cc-639e-4b47-8358-4ef18c21c27c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aefac5a0-73c9-472a-b37a-1a26b1c76115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3370ab-859e-455c-b1f2-10c42c2aada6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cd1339e-9dd2-4311-bc9f-3f5e7fe97ef4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f19da1f4-49e3-4807-b779-5b8c3482cdd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c265a7a1-3501-42e7-9504-0b49919cac23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e51d29af-1a72-41cd-8cb6-231361b88615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23df03a1-bdd1-4786-ba2a-ca5cf1b7e4c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02f1fe22-1d62-4b25-b407-795448992019",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3729c04a-276f-4ddf-a666-908fc031787d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6ee3bac-c82a-488d-adcf-7b134745dcbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8b756c4-9973-4c20-a284-5f31bcbbdf99"
            }
          }
        ]
      },
      {
        "id": "9b4643cf-966c-4d3f-8817-e4e91e80e904",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fbeefba8-57e4-4a3d-8334-2ad9b1681993",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b4a61e0-5961-45e8-9f86-f8487f302c4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a7b26d5-2608-453c-8060-04b71b35d1e3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a665876-4fe4-4f85-9be6-cc10b824a560",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e62caa8a-125b-475e-a5e8-2ebf922a0d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8622041-13af-4508-b201-f8498c814d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf9a87fc-416c-4a94-b3ba-f1a10898e2de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d9312c-78e8-4b4d-91ee-dc2aca2acf1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cba31236-67bd-41b1-85e7-3eeddd99308b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bc51b2b-c08e-4943-93b9-788d90a9a99e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ca47d8-9df5-4c99-a229-2b43aad2b6d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "353072c1-2174-4bb7-bc05-26907f762a6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5826fafd-dbdb-4701-b7da-28df5ee6b78a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "153d4549-697f-4c66-a109-58b4a3b8d41a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "807b0c30-4b54-40d7-856b-f3c1ceeb57d2"
            }
          }
        ]
      },
      {
        "id": "a4347091-1321-4b2d-a67d-c2610f0a6854",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a7cac5c-0c2a-46e9-bb7b-2b5e40c47217",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8f1b4e4-ee6e-4113-8486-3b1b36769187",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "883734b1-e857-416d-8d58-785446003703",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62e61c6f-a407-4629-a3ac-870ce3876767",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d909f90-1c8a-43c7-a5dc-0477ef329491",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.44561403508767,
      "responseMin": 5,
      "responseMax": 317,
      "responseSd": 23.08036356987681,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700699736693,
      "completed": 1700699764221
    },
    "executions": [
      {
        "id": "d92e09b6-5d03-4545-873e-ca8acc2a690d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0f07c8b4-cb19-4d37-811b-5c4e7208ab46",
          "httpRequestId": "82fa7911-9a7b-49c6-9380-862bd310e198"
        },
        "item": {
          "id": "d92e09b6-5d03-4545-873e-ca8acc2a690d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "455efd33-c765-4b6e-9393-a1483551132e",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "bd1a618c-7b72-4c12-bb85-b404fdf6b7d4",
        "cursor": {
          "ref": "6ec54ac5-ea2e-45b3-9bb0-5df62ad3554c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66d18519-cbd6-45a4-afda-ce177a26488b"
        },
        "item": {
          "id": "bd1a618c-7b72-4c12-bb85-b404fdf6b7d4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7a290cd7-ac23-42d3-b695-0016ff24ce08",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "15122385-e388-435d-9093-de78a84823f1",
        "cursor": {
          "ref": "1de9cb48-191a-4403-93a6-36db31d300ca",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dccdf078-66a6-49dc-8926-0dd63e04d464"
        },
        "item": {
          "id": "15122385-e388-435d-9093-de78a84823f1",
          "name": "did_json"
        },
        "response": {
          "id": "654dfcc6-4252-4154-8587-bcf52cad28ca",
          "status": "OK",
          "code": 200,
          "responseTime": 317,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db609d-91d0-46ec-80e7-7fc377b274a0",
        "cursor": {
          "ref": "32fb31c1-658c-4c4b-8c5b-bba08b3029df",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94017504-479e-4a01-887e-2d9a647a4129"
        },
        "item": {
          "id": "28db609d-91d0-46ec-80e7-7fc377b274a0",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd67a1cb-d479-4a5e-a254-5bc9e695fa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db609d-91d0-46ec-80e7-7fc377b274a0",
        "cursor": {
          "ref": "32fb31c1-658c-4c4b-8c5b-bba08b3029df",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94017504-479e-4a01-887e-2d9a647a4129"
        },
        "item": {
          "id": "28db609d-91d0-46ec-80e7-7fc377b274a0",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd67a1cb-d479-4a5e-a254-5bc9e695fa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7f0fdb-3413-4b05-a7b4-d9c942ca38db",
        "cursor": {
          "ref": "586ff52d-9ec0-46c6-982f-e70d19798b4f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8a9e2061-053c-4ea0-b4e8-b03f90413c78"
        },
        "item": {
          "id": "3b7f0fdb-3413-4b05-a7b4-d9c942ca38db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "99f5fafb-668e-4393-a5a5-190a1ad94297",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060afe8a-f1be-4097-8b88-ceeafce86fa8",
        "cursor": {
          "ref": "8bbbf4da-578a-40e9-913a-4e700c86c7c7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ef7de960-564b-48e6-ad89-70bddbc6fb3b"
        },
        "item": {
          "id": "060afe8a-f1be-4097-8b88-ceeafce86fa8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "40e1ff6a-4360-4c7d-88bc-b15ac2e8285c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300b1256-55c8-49f1-83a3-344f1bcdbc0d",
        "cursor": {
          "ref": "720c1c87-6434-46f6-a66d-8deebf42a156",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5af03c0e-cdae-40d1-82bb-098b23c75089"
        },
        "item": {
          "id": "300b1256-55c8-49f1-83a3-344f1bcdbc0d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "768db641-39b2-4ca4-a5fc-59d1dcac5143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad03666-e075-46b8-b219-2245e9c269d0",
        "cursor": {
          "ref": "35ef122f-e0fa-47ad-8985-060d3104433e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "704bc5fe-e2d6-4b44-a02d-4b81a7909976"
        },
        "item": {
          "id": "aad03666-e075-46b8-b219-2245e9c269d0",
          "name": "identifiers"
        },
        "response": {
          "id": "147214c2-24b9-408f-bd76-3505a2ad1a5d",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467a45f-b748-489a-b0f9-597b31125bcc",
        "cursor": {
          "ref": "4c3fd21c-78e3-4b7d-8aa7-89b9efd08d0c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d953d64f-cf5a-4141-9478-20496472776d"
        },
        "item": {
          "id": "e467a45f-b748-489a-b0f9-597b31125bcc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "537b6c5e-c302-49a8-b5a6-144f1349779e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970a4b4-20d4-49be-9fe5-bf130847cd74",
        "cursor": {
          "ref": "bf666853-e5d9-4994-8372-f9016d412605",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a14cbdad-7f0d-44e2-8996-4639134a3495"
        },
        "item": {
          "id": "e970a4b4-20d4-49be-9fe5-bf130847cd74",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ec27a971-f6ee-43ed-be6c-d90a61a3faa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed9b7bb-8ab4-4385-873b-9b13a96c1eea",
        "cursor": {
          "ref": "29e376bb-e27b-49de-becb-fae9f625baf8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e961a82a-f5b5-4c6e-be76-f481594f48e6"
        },
        "item": {
          "id": "aed9b7bb-8ab4-4385-873b-9b13a96c1eea",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "afc89ac7-1557-4873-af58-344b66e9fe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44a5c3a-08e2-4536-b632-68b82d3c11f6",
        "cursor": {
          "ref": "607d2dc3-3f68-43fb-919d-dde92b430f3f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8ac64160-452b-420f-b83f-d29a0dcd2d57"
        },
        "item": {
          "id": "a44a5c3a-08e2-4536-b632-68b82d3c11f6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a0c7c9d2-a0c3-4723-afc1-295e9e920623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e331a667-3e7f-4afd-8f0a-4d83ef908321",
        "cursor": {
          "ref": "82a84a4b-01d0-4a2f-9b31-a12d7fd531d1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6ac998e6-bb2f-4901-ab65-ba3ecf846a49"
        },
        "item": {
          "id": "e331a667-3e7f-4afd-8f0a-4d83ef908321",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4f9f45ab-8966-4dc5-b4df-c3db306ec94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0118b4ec-5863-449a-92e5-18300b10f89e",
        "cursor": {
          "ref": "9ae45c83-ebb8-40d1-af1f-a1a39db31cf0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ee3f7b3-d693-481d-b24f-75ae3007248b"
        },
        "item": {
          "id": "0118b4ec-5863-449a-92e5-18300b10f89e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c0de0c96-b35a-40a8-8f63-b17193dfc297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60619aca-e41a-40b0-86a3-7bd8e2dabcfd",
        "cursor": {
          "ref": "344c9fc0-8fd5-4fea-ab6c-7b06847d3e8d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5ac7608-a20b-4d0d-9eec-615a3694ca1e"
        },
        "item": {
          "id": "60619aca-e41a-40b0-86a3-7bd8e2dabcfd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f8cd6b2-ba26-44c5-8322-2a6459ae9ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee402248-7d7b-466b-b135-1d7ddafa7d45",
        "cursor": {
          "ref": "39d65800-2d7f-4c38-b21b-ed171581e50c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21fa9fec-fcb5-4955-bdde-53ce207e634c"
        },
        "item": {
          "id": "ee402248-7d7b-466b-b135-1d7ddafa7d45",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7a3db274-aff3-476d-9f93-8fa5902daf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce4d19-f97d-4743-b6ed-f7883730cad5",
        "cursor": {
          "ref": "fbe9ee57-0bb1-4abd-9338-3607e026fe18",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04b043fb-056c-442c-a994-ab9cc8cf6ddd"
        },
        "item": {
          "id": "2cce4d19-f97d-4743-b6ed-f7883730cad5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "36dddf55-17af-4b0d-adc1-cfab9b14ef4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29833f3-9ea7-47d2-afe6-6758594095eb",
        "cursor": {
          "ref": "26f51a8a-bbba-4c44-a84c-a8bb54a210fa",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "aa489f11-b10d-4951-b2ad-9458236d8797"
        },
        "item": {
          "id": "f29833f3-9ea7-47d2-afe6-6758594095eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6f664905-d08d-47a8-a36c-c615609cf40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581cd9e1-8b53-4451-8724-63afceb639ea",
        "cursor": {
          "ref": "545eb93f-f311-42b9-9221-3d1666442327",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "98ef2378-c1c0-4d50-b77e-2f24bfc27de0"
        },
        "item": {
          "id": "581cd9e1-8b53-4451-8724-63afceb639ea",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "232c330a-eadc-4ab4-8071-d3b7f6cd7217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d771ad-0d0a-4dad-b5fa-f2d262d8bc86",
        "cursor": {
          "ref": "d18e5eee-9ce4-42b8-b4b5-91b31ea4cd34",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "90937ea2-0255-4827-82b5-8c6ffc394498"
        },
        "item": {
          "id": "70d771ad-0d0a-4dad-b5fa-f2d262d8bc86",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c9363586-7d7c-40f5-8388-ef01fc328d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd31503-d475-45c2-98cf-e34037891920",
        "cursor": {
          "ref": "9acce7e1-af7b-4da6-90b2-a28515ee1b9f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "40d95a06-561a-465d-8174-396dfac2f8ea"
        },
        "item": {
          "id": "4fd31503-d475-45c2-98cf-e34037891920",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6f9f2e1e-e264-4147-bf9f-6673f9d2b256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511c5b52-0cce-4da8-82cb-a3410e1e8a6c",
        "cursor": {
          "ref": "3f48a303-f0f6-49fa-a0a6-b979b450ca62",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e30c4b85-b611-4f27-8d6a-8cc11124eab5"
        },
        "item": {
          "id": "511c5b52-0cce-4da8-82cb-a3410e1e8a6c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69990815-1196-4c76-8fcb-ca743329a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c5d0e-0dda-4374-aa2e-dd85b67b93fe",
        "cursor": {
          "ref": "4a082a1a-3ece-4dd0-91fd-af55adac2ff7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "46e8c2d3-cde5-4b1a-bcd2-6188476d4780"
        },
        "item": {
          "id": "090c5d0e-0dda-4374-aa2e-dd85b67b93fe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "49e16e4a-8539-44f4-9c6e-47b9c642f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e122ee23-8d36-4fa3-86d5-685fc0ccb0f4",
        "cursor": {
          "ref": "2ac798f4-3083-4b58-a792-99a518e9e62e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3ff06d19-2cb9-419f-9ec4-b50ff7547c03"
        },
        "item": {
          "id": "e122ee23-8d36-4fa3-86d5-685fc0ccb0f4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e38c41dc-b215-432b-a762-74173f2d9bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba6b13-5878-492e-8943-1e149e612260",
        "cursor": {
          "ref": "9c447bb0-bbd4-46dd-a07b-ece373c39ebd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "521d6bff-be24-4e4b-b7a4-c1abee829718"
        },
        "item": {
          "id": "54ba6b13-5878-492e-8943-1e149e612260",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d98f919-6693-48ad-b85e-3081161165b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa9cd7-0fbb-4fa9-888b-9d2014b7429b",
        "cursor": {
          "ref": "440cbfe2-277f-4c22-8c24-82d3400a4d87",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c76fb52a-6b53-4b2e-af1f-fd8038916238"
        },
        "item": {
          "id": "82fa9cd7-0fbb-4fa9-888b-9d2014b7429b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bfe685f4-92fd-40ba-bdf8-f27cf307646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c596cd2-ca74-46c5-b1ea-f46b2341b950",
        "cursor": {
          "ref": "55d75319-cadd-4060-9460-a292136408d9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "980c8cce-8020-4da5-8ab4-054c8a095257"
        },
        "item": {
          "id": "5c596cd2-ca74-46c5-b1ea-f46b2341b950",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c2ca32ef-2b26-4885-8e6a-060816ae04ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c88c826-1237-43b7-8710-f2058ca9ff70",
        "cursor": {
          "ref": "833b2a83-36e5-453b-88a5-6807bbdd233b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "59510652-9443-4526-b582-a19312365805"
        },
        "item": {
          "id": "3c88c826-1237-43b7-8710-f2058ca9ff70",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "58a9d388-3905-4675-ba83-e1a501d57b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a8d6db-0ab0-4ed0-a5f1-c7e0ef3d0255",
        "cursor": {
          "ref": "2450ed61-a2ec-4016-8411-7a46e371ac05",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "53ce202b-3ba2-42f2-8ad0-cb4470def447"
        },
        "item": {
          "id": "29a8d6db-0ab0-4ed0-a5f1-c7e0ef3d0255",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "baaeeeb8-05d2-4672-9af0-adf8d22789a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15944e7c-d3b1-4473-846e-d6883bd3d4e9",
        "cursor": {
          "ref": "0a166f8c-f32a-4d0b-8365-07bf8d45936a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "255c3aa4-3724-4b0e-b9a6-b521b1e0b4e9"
        },
        "item": {
          "id": "15944e7c-d3b1-4473-846e-d6883bd3d4e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f7fe4cb9-0e51-4838-b8df-2de60c7a7244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4c733-15ce-4808-af95-577f2c8169cd",
        "cursor": {
          "ref": "447235ea-319e-4d45-9196-7e2b82e54ac9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "04644616-86c2-43f9-aba1-2e782372f98f"
        },
        "item": {
          "id": "d1e4c733-15ce-4808-af95-577f2c8169cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f02bc2c0-9df5-4085-9ac3-6f6d00ff2946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9afb8b-4845-4570-a00f-24e90724f2fe",
        "cursor": {
          "ref": "e5288d5c-cc40-4f0d-b006-61078b42b6f5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "934c29d8-307d-4e86-8395-cbc3141e0247"
        },
        "item": {
          "id": "be9afb8b-4845-4570-a00f-24e90724f2fe",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "77242812-b2c9-4d7e-bad6-26c77dd1c7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80e37f5-dfd3-406f-9455-acfd9eca28cd",
        "cursor": {
          "ref": "6f118ac8-064b-4f31-8c5e-5deb19c4fbae",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5ff738b2-2b8d-4807-aab2-b2d85b40f012"
        },
        "item": {
          "id": "e80e37f5-dfd3-406f-9455-acfd9eca28cd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "616121f8-190f-48c6-a039-8dd5b0054fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865f817-7c1e-4b3b-a758-6a167aeed8f4",
        "cursor": {
          "ref": "e01b9568-85d6-411a-9ec5-8e6c6aa58d48",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d03587e0-8a81-4447-b004-b0c1584a680f"
        },
        "item": {
          "id": "b865f817-7c1e-4b3b-a758-6a167aeed8f4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6c140e10-53fb-407c-88c8-73d34182d80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4314588-47e3-46f3-9b4a-ebb4b8470755",
        "cursor": {
          "ref": "093769cb-c0a8-4fd2-a8e4-026047e12543",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "11440792-700e-4b9d-8883-7f61ed843c57"
        },
        "item": {
          "id": "b4314588-47e3-46f3-9b4a-ebb4b8470755",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ea38ad5-6646-4bbc-902c-6065e3603254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fae1a4-6a5c-4205-b771-f2f35cd8cd6e",
        "cursor": {
          "ref": "63b938da-ba39-4592-a1b9-cc99ca6c8df6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f90dac9-3e01-4d8a-a592-c0b53786c0fa"
        },
        "item": {
          "id": "c1fae1a4-6a5c-4205-b771-f2f35cd8cd6e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0e0312bf-e707-4556-8fd4-cd03574eae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd339ac-8415-4f06-b785-a8954b33ca25",
        "cursor": {
          "ref": "e8e9910f-8f20-4caf-a02a-eb007f666d01",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e7a1302a-c9cd-40cb-a7bb-31bc03b07a92"
        },
        "item": {
          "id": "bbd339ac-8415-4f06-b785-a8954b33ca25",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c307b66-1a53-48b4-bd16-b581e744542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374f21a-6d3e-4db8-85e3-348aeb060835",
        "cursor": {
          "ref": "08d2e5b3-3401-442d-808d-2817a13a0bda",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f99dd4e-3a1a-4d0f-8e74-c0c987e67ec6"
        },
        "item": {
          "id": "e374f21a-6d3e-4db8-85e3-348aeb060835",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4ce536ea-084a-4365-ba68-2151c0cec26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47778c02-a6de-4271-b91c-e44e47e82f01",
        "cursor": {
          "ref": "6a6ff196-af31-4b47-9e79-10e71e8ad982",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4b9476cf-0d1b-4381-932c-fbe93f3e2fd1"
        },
        "item": {
          "id": "47778c02-a6de-4271-b91c-e44e47e82f01",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3be0bdd1-ccf1-4ac1-9c78-bd7498d25782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead52e7a-cadf-4522-b426-9a98429b7a15",
        "cursor": {
          "ref": "cb13f21f-d5d3-4e49-b45f-d11ff7a52600",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e62d8bee-c56d-4440-a24a-b411c0f97095"
        },
        "item": {
          "id": "ead52e7a-cadf-4522-b426-9a98429b7a15",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f63cd68f-c938-4173-94a4-3906fb4d6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f517ff32-d297-4d0b-8391-0f96d871db82",
        "cursor": {
          "ref": "7d5cb920-b537-4394-a11c-d797d26142e2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c42af22-85c6-4773-a94f-0216357b296e"
        },
        "item": {
          "id": "f517ff32-d297-4d0b-8391-0f96d871db82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dd7b74e1-0aa2-434c-a51f-8f38734a1982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b4d29e-83d6-4a4b-9e4e-7a18f3c2d596",
        "cursor": {
          "ref": "cc25e676-99a8-406d-a06f-a83294455ea0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2f8a8717-9cb1-4572-ad2e-ac08ca5a10d5"
        },
        "item": {
          "id": "84b4d29e-83d6-4a4b-9e4e-7a18f3c2d596",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cc633ddd-81db-40b5-b2f8-70f64ddcdae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4972a7-89bd-4421-a772-87fed0397b14",
        "cursor": {
          "ref": "86fec734-235d-457e-adec-27c077232324",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c6b495cc-040d-43c2-b9ee-387e43ea1876"
        },
        "item": {
          "id": "4a4972a7-89bd-4421-a772-87fed0397b14",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "784a484d-2a94-4189-a161-e68288c5ee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3dd126-0692-4dde-a24b-5de356a7bd56",
        "cursor": {
          "ref": "60f72c0f-b844-4edd-92f6-a6d3f81679f3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "db211860-d5f3-4684-9c5f-bd4693a15443"
        },
        "item": {
          "id": "0a3dd126-0692-4dde-a24b-5de356a7bd56",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e4442478-72ce-435f-b519-79440021e813",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469ba650-33c4-402c-8849-3f42a216ef94",
        "cursor": {
          "ref": "ba7d045c-45eb-45cb-8dba-29c5f81ea910",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "98f93650-4740-45c8-868b-ac247f57b56e"
        },
        "item": {
          "id": "469ba650-33c4-402c-8849-3f42a216ef94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "57e3e572-f8b6-4fb2-bd63-b77cd8ecad11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc774853-7d95-4b7a-879f-efb88079aca9",
        "cursor": {
          "ref": "12c89d4f-b3c0-49cd-93d0-7b37f9b213d8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0f73f771-e30e-430c-bfa6-fdf119a044fc"
        },
        "item": {
          "id": "cc774853-7d95-4b7a-879f-efb88079aca9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d589914b-38f1-4795-8be8-f628eb793a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109d5902-0769-4332-b6c2-7dd1b8515162",
        "cursor": {
          "ref": "463886ef-30be-48ed-a851-ebdbd002823f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "30c47d0b-771d-493d-97e9-0ac3727a0b45"
        },
        "item": {
          "id": "109d5902-0769-4332-b6c2-7dd1b8515162",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "399682e4-833d-456a-9000-6777f367a4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bc652e-7cb0-4fe2-a83c-a75cf523b1dd",
        "cursor": {
          "ref": "5c91fe5e-6d6b-44a9-96e4-a8e42f2e4295",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7e2ea920-77d9-4121-ab92-fce5f66cdeeb"
        },
        "item": {
          "id": "a1bc652e-7cb0-4fe2-a83c-a75cf523b1dd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d1561790-185b-4df1-b0c5-1b88c1cade5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb83275e-3e8c-460b-aa79-5f373ba32c26",
        "cursor": {
          "ref": "6e0e8a69-ed41-47f7-8639-70868f33d752",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "52487f89-1f46-49ac-89d6-78a925a3bf56"
        },
        "item": {
          "id": "bb83275e-3e8c-460b-aa79-5f373ba32c26",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63d111a9-133b-457c-bb52-5d379dcd38b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0dfe14-8fd9-4b22-95eb-2b57c7d48141",
        "cursor": {
          "ref": "a79e1acb-4889-4f78-8be4-37ec5505c8b9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea5a056b-afea-450b-adb5-ee2b002848e8"
        },
        "item": {
          "id": "8f0dfe14-8fd9-4b22-95eb-2b57c7d48141",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5dbeb7af-beb6-4bd6-ac2b-d31efec4913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f16c043-6b8b-4521-99f6-c8323a43e3a2",
        "cursor": {
          "ref": "00337b58-a4b7-4c6e-a994-36d16174f185",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c4a87772-2d4e-424a-80ef-1aeac7e1ee7a"
        },
        "item": {
          "id": "8f16c043-6b8b-4521-99f6-c8323a43e3a2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fd5e8a79-d980-42cf-8ae8-329e7481ad91",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf049df-e58a-461d-a1a1-72d3d8d3691b",
        "cursor": {
          "ref": "4605a608-98de-4b6f-b081-28d81300dc85",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e965fbc-01d0-4f28-9b94-43ec4d516e61"
        },
        "item": {
          "id": "6bf049df-e58a-461d-a1a1-72d3d8d3691b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b3cbd0f-2937-4dae-91e6-adee2b47c1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac33eb04-bc08-4b2b-bc66-b23dc5beac7e",
        "cursor": {
          "ref": "00fd3773-cfd2-4e2e-80fb-49fbe5d94967",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fb006a40-627c-4837-ab0a-2afffd497097"
        },
        "item": {
          "id": "ac33eb04-bc08-4b2b-bc66-b23dc5beac7e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00788620-7329-441c-b93d-c63166b9f4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f48d92-5908-47d6-a2a7-0c09679a1813",
        "cursor": {
          "ref": "91b5a2a5-aac1-471c-96ea-79f8a6f2d32a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2e051a84-3d19-444d-ad85-e2fdfb72956e"
        },
        "item": {
          "id": "44f48d92-5908-47d6-a2a7-0c09679a1813",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bb0195d2-ef54-4a0d-aa2f-b90f998702d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ab4731-d9c6-43fe-81a9-c0be7defc502",
        "cursor": {
          "ref": "d88c2dfe-84cd-45d2-8478-c356ed533a01",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e27da0f9-8956-4dac-9921-9fd51e7b2eea"
        },
        "item": {
          "id": "51ab4731-d9c6-43fe-81a9-c0be7defc502",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f6ca699e-0acf-4b5a-8989-cc4332d7991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5f547-5b40-4c8b-8d88-bb23dcb064f6",
        "cursor": {
          "ref": "ef73b9e0-82ab-46e8-913c-bfc6dcb5338a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "774c8ac2-bc6d-4a21-b3fa-2d0af27418de"
        },
        "item": {
          "id": "cdc5f547-5b40-4c8b-8d88-bb23dcb064f6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e796b8f5-7328-43c1-b30c-eafaec06cf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728fb5c8-2eb7-4b2a-91d0-afb973c9c52d",
        "cursor": {
          "ref": "9f4a986a-ac93-4f7f-a10f-2986872825d2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4fd7effb-f990-437d-bcfb-cac35c695d35"
        },
        "item": {
          "id": "728fb5c8-2eb7-4b2a-91d0-afb973c9c52d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5316949b-e13b-48d4-b637-5646a04d866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cf3df-182d-4def-958d-66168ca2aee5",
        "cursor": {
          "ref": "010fe335-ff94-466c-b2d1-d4ba8e7f6d71",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "79e191f0-a363-4fc4-849c-9952b1f9c88d"
        },
        "item": {
          "id": "8a4cf3df-182d-4def-958d-66168ca2aee5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "42e0d311-f0ed-4031-aeee-155d919691e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83059972-1c8c-438d-9e9f-69ebce5ec768",
        "cursor": {
          "ref": "f422042f-6e33-4038-af00-7499546ab73c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4ecc5f1c-adf4-485c-83ec-926c12aa34a5"
        },
        "item": {
          "id": "83059972-1c8c-438d-9e9f-69ebce5ec768",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64b63ddf-197d-4b8e-8306-d076745a35a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63daac6-527a-4f5d-90ab-6f55dd421d8d",
        "cursor": {
          "ref": "9a232add-ec5a-4b49-a11a-7f2a444d4ea0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c29821ca-0081-4a33-895a-d186234e5847"
        },
        "item": {
          "id": "a63daac6-527a-4f5d-90ab-6f55dd421d8d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2268f3fe-eea3-4e9e-8902-48ec1ce66e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e2921c-5b14-43fb-8b6b-583b36c6365a",
        "cursor": {
          "ref": "b687a436-2cbb-478c-8ca0-40a51a2c9d1b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94320186-dc82-4a22-856f-dbfce8c4ccc6"
        },
        "item": {
          "id": "c5e2921c-5b14-43fb-8b6b-583b36c6365a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0d29cf5e-4b25-4f81-b7d8-93634ec3c911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093d915-63e2-4aaa-970e-e00550f9479f",
        "cursor": {
          "ref": "6ac6ed62-1876-4857-8927-eef7e7e1fa69",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a6ee1019-0944-449d-89fc-ba3c0bf89473"
        },
        "item": {
          "id": "2093d915-63e2-4aaa-970e-e00550f9479f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ba8e0357-bf84-4afd-8430-6fb3938fa97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c825fe-da63-4dee-b29b-b6b974a2c4b9",
        "cursor": {
          "ref": "ce513f3d-9c21-4abf-87ea-f67a82b25bf6",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7cea848d-92ca-40bc-a885-a1c6b0dcc28c"
        },
        "item": {
          "id": "33c825fe-da63-4dee-b29b-b6b974a2c4b9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "339c880c-ef45-4e4d-89a9-97fc292e3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1739d847-de84-457c-adeb-45860a72abf1",
        "cursor": {
          "ref": "e20de223-4312-44c6-ba2e-dcb268046fb1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7db260f-e508-473b-be92-71328097de38"
        },
        "item": {
          "id": "1739d847-de84-457c-adeb-45860a72abf1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dff5aabe-42c0-4873-b754-7c5eaae81e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b985465-380c-4cb5-874e-da22ece7e8d4",
        "cursor": {
          "ref": "e12642ed-ded4-453a-ab22-d49944d772ff",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d0981c10-52e9-417c-bea7-1e81ea705ff5"
        },
        "item": {
          "id": "6b985465-380c-4cb5-874e-da22ece7e8d4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "05dd4499-4d28-4d2c-9cc7-c60ae25b1d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a855b4e1-5a65-4c09-adba-8a0a1ee9e564",
        "cursor": {
          "ref": "9c7f230f-649d-40b8-b3d3-681d09086b3b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b59046e4-2254-4260-8cd6-5ef5965b8c9b"
        },
        "item": {
          "id": "a855b4e1-5a65-4c09-adba-8a0a1ee9e564",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "51fa90c9-2e54-4a2b-b7e3-f048375ae32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef693bd6-61ae-4cb7-ba46-d0add464fad3",
        "cursor": {
          "ref": "212d57a1-87f6-420a-b26c-92c0dc85ca1c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "73c917dc-ef71-4b85-a139-579cc9d150ec"
        },
        "item": {
          "id": "ef693bd6-61ae-4cb7-ba46-d0add464fad3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e9b377f9-6a43-49c5-b904-a51cbd626bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af2f3a9-4d5a-43e4-a95f-02990d41dcdf",
        "cursor": {
          "ref": "6bca4b6a-9a3a-480c-82bc-588ced2dd7d1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "50ee113d-8fb6-4f0e-9573-e15c8bc2afb4"
        },
        "item": {
          "id": "2af2f3a9-4d5a-43e4-a95f-02990d41dcdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e49cce0b-9882-4c63-952e-2e742398b8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2326592e-871a-4c47-b32c-b26f29bc97d0",
        "cursor": {
          "ref": "3691d46f-7b49-4dab-b2ed-573a12ee06ce",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a3422470-c3bc-4f54-a7f9-dfe252144d73"
        },
        "item": {
          "id": "2326592e-871a-4c47-b32c-b26f29bc97d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7f6dc7c4-f609-4f23-822e-6c193b9abfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c1bbbc-04d1-4fd8-99c1-8823c34a6b6b",
        "cursor": {
          "ref": "f9d7a713-33e9-4a89-86da-47989a65d245",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "21d981bc-fa7c-44f9-b5ea-7659e37d0ebd"
        },
        "item": {
          "id": "44c1bbbc-04d1-4fd8-99c1-8823c34a6b6b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4a2f8247-bdb8-4ab0-bba7-b60b71849d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e5c42b-9597-423e-bb1e-65fb5326f026",
        "cursor": {
          "ref": "6d865db6-2486-4e81-b784-ddb252a7378c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cd4ffa96-0074-4c23-92e3-aca8d9d9400c"
        },
        "item": {
          "id": "e9e5c42b-9597-423e-bb1e-65fb5326f026",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7064add-5a91-44e0-8ccc-814d7392050b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a579cdc-c45b-45c4-ace8-3a2682bafbe6",
        "cursor": {
          "ref": "b5cbadd5-9e2a-44a6-a26c-857e45b66192",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d8333d7-e8a4-40eb-97aa-2053cc4ddd23"
        },
        "item": {
          "id": "8a579cdc-c45b-45c4-ace8-3a2682bafbe6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b6f95131-02a2-428a-b0b8-136bdc4c7a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b5bcc7-c652-46b6-ba5e-d3bcb2a6cbdb",
        "cursor": {
          "ref": "e409ccd7-68d5-40ee-b166-226e8db62565",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9519db5a-2ffc-4d84-a7f0-a9b52a5719ce"
        },
        "item": {
          "id": "28b5bcc7-c652-46b6-ba5e-d3bcb2a6cbdb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9847e6d8-af9d-48bf-be66-3ca5384e8c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee58b1-834f-4e3d-a6ba-d699915314e2",
        "cursor": {
          "ref": "e5c56d9d-8480-4158-8015-018c5d1aabe4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0eb23a50-df45-4b2f-a83d-46a338ed4e69"
        },
        "item": {
          "id": "86ee58b1-834f-4e3d-a6ba-d699915314e2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c92213ca-809a-4f05-a12e-98ee2379ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882bbd3a-4984-475f-969a-0e4cee77c4f4",
        "cursor": {
          "ref": "40e2237c-65c4-4c90-ac06-345322e21693",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cf37c078-a7ad-4c37-bcf0-e1c4963b47c6"
        },
        "item": {
          "id": "882bbd3a-4984-475f-969a-0e4cee77c4f4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d1b51bb1-4287-441e-8a28-bcc5502ed15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c705395-3eda-4929-b200-50dc16c03e17",
        "cursor": {
          "ref": "eb364689-3a1e-4064-bcd4-0f695f79c117",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4792dd11-0ae4-45ea-bdc3-978c49009cf2"
        },
        "item": {
          "id": "0c705395-3eda-4929-b200-50dc16c03e17",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be85eddf-fc95-4317-9eb9-6f30f0624796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcd4f6d-2b1e-4ad5-90ad-51db5b152ac4",
        "cursor": {
          "ref": "4d824d4a-1666-4d4b-b9d5-94b26f12bec0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7f2fe41e-7d42-4891-92e8-e1c4b0d5d576"
        },
        "item": {
          "id": "ffcd4f6d-2b1e-4ad5-90ad-51db5b152ac4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4297d4d1-f23f-4245-b4bc-0c1130942638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d17fa3e-42e9-4bfc-b733-b274125c068d",
        "cursor": {
          "ref": "8c675d4b-acbf-4ac7-9582-329c89ba56e1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a4b70089-0193-425a-af40-dd5fa04258b8"
        },
        "item": {
          "id": "7d17fa3e-42e9-4bfc-b733-b274125c068d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "771e21d6-49d9-4314-a628-e1e9a8fdcf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c528b8-c04e-4e11-bc1f-fcc369018ab3",
        "cursor": {
          "ref": "ab1e3849-b58c-4f83-bb8f-bdad3062179e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3f2cb5ba-e7da-4ee5-b6f0-867d8c61c856"
        },
        "item": {
          "id": "c3c528b8-c04e-4e11-bc1f-fcc369018ab3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1d31f761-8823-4464-ae26-931a7094b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070efa38-b350-4ca7-96bd-b8d5031bffea",
        "cursor": {
          "ref": "febcd155-022b-40d7-bf55-b18fb378f914",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "39e27f6d-4689-4318-9787-7b9f6a1d086c"
        },
        "item": {
          "id": "070efa38-b350-4ca7-96bd-b8d5031bffea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9646a64f-25eb-47f9-a183-a08d5e035c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533deece-6947-4c33-afc1-4a76f6da9e47",
        "cursor": {
          "ref": "d486d65a-2b2b-4bde-bb77-f48ac78a9960",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad1240b2-a4b5-4bd2-81f6-f8d80445b831"
        },
        "item": {
          "id": "533deece-6947-4c33-afc1-4a76f6da9e47",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6578a0d5-3506-4194-9d15-3da929a7c97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a65e08d-5930-425e-a0a0-7c3ed27468bd",
        "cursor": {
          "ref": "dce22782-7e46-4180-9423-09733264625f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3f80db6a-7810-4f64-80a8-ed0db56b306b"
        },
        "item": {
          "id": "1a65e08d-5930-425e-a0a0-7c3ed27468bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eafaef1c-0e88-40c5-a575-cb47572a1114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bac51e-1a0d-4718-96f0-d2998af96441",
        "cursor": {
          "ref": "e371e041-ab85-40e8-ba31-1112a5892ff0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8ed9a22a-30ac-45e9-be29-86baf39d4168"
        },
        "item": {
          "id": "54bac51e-1a0d-4718-96f0-d2998af96441",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6faf6b32-0b40-4d86-80f1-eb5752020450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b79e01-341b-48fa-a7b4-721b94203b53",
        "cursor": {
          "ref": "2e9e6214-6fd7-4b36-9129-c4cde9005ca7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41500609-1e89-4955-91fc-a640d9dced3f"
        },
        "item": {
          "id": "d8b79e01-341b-48fa-a7b4-721b94203b53",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a250903a-e11c-407c-97b1-cccd53eb78fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140c890e-1b08-4e46-94a5-9140c4798fd6",
        "cursor": {
          "ref": "8c38ed62-c8db-4429-9949-65b7bb55a006",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c962d511-c985-46ee-905e-1068c3728bfc"
        },
        "item": {
          "id": "140c890e-1b08-4e46-94a5-9140c4798fd6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "379a9ff8-fd14-4210-8ea9-dbce1fabc036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0598c6-38e8-46b6-8622-58bf55f7b779",
        "cursor": {
          "ref": "7b492a55-8dec-4290-8541-06db13d67fbe",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90c86f5b-f3e1-45d0-9647-cc37f187523b"
        },
        "item": {
          "id": "9f0598c6-38e8-46b6-8622-58bf55f7b779",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d7d51c5-ae0d-4dd4-96d4-8ac44431608c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd43a4d-f8fc-4708-8371-6b8f929b5922",
        "cursor": {
          "ref": "bf08f06d-8992-4df3-a05d-50ff3fc94181",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cf0f5e37-ff4b-45f4-9f8a-9b51f2a82f0d"
        },
        "item": {
          "id": "fdd43a4d-f8fc-4708-8371-6b8f929b5922",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "64a2b598-aac1-4096-9a50-afb6b2bfb9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c4f8e7-badc-48bb-9b05-317f8cfcf001",
        "cursor": {
          "ref": "dd7a2d29-21eb-4510-8a99-1fcf04d462f3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e113b024-c221-4259-8a9f-a50c9a3a4066"
        },
        "item": {
          "id": "43c4f8e7-badc-48bb-9b05-317f8cfcf001",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "54c7ea9b-570e-4f27-b5fd-acb86e0b34fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5552108-5d8b-42a2-99f4-208dd9749969",
        "cursor": {
          "ref": "a6a7f0a4-2ae6-47cc-a681-5ac831880cf0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8495f43f-85a5-4037-b5b0-f8e56beb88dc"
        },
        "item": {
          "id": "c5552108-5d8b-42a2-99f4-208dd9749969",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a9c4e5e0-1669-4334-920d-f6e408463916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb9d8e9-beca-4cfb-af69-f30dd69b6858",
        "cursor": {
          "ref": "b79489c4-f037-4ab3-a023-774d29a2a634",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "21e8cd94-f02d-43eb-ac8a-541533b440b2"
        },
        "item": {
          "id": "bcb9d8e9-beca-4cfb-af69-f30dd69b6858",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "be018de9-5f40-4ba7-a868-09051de5a753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d698c16-4b0f-4926-8f99-a6049409dec6",
        "cursor": {
          "ref": "f9554c41-6b97-49f5-891c-cc41303cdcdc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2cc8aa8f-4972-4d23-ad09-bd50a2354b1b"
        },
        "item": {
          "id": "6d698c16-4b0f-4926-8f99-a6049409dec6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "972f50c3-f0ea-4c40-a037-f460199f8c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4118937d-39c1-42c5-a5f2-ccdf471bc517",
        "cursor": {
          "ref": "4ec3a23b-4f2e-43bd-973c-fb15196327a1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f408258-aae2-4ca8-b7cf-359e8aa455eb"
        },
        "item": {
          "id": "4118937d-39c1-42c5-a5f2-ccdf471bc517",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "26ad07b0-3ba2-4064-9a3e-d0945cd61925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd161f9a-ceb9-4664-83fe-dcfb4a42a248",
        "cursor": {
          "ref": "d87f3100-e708-4850-b420-fc9a35486e03",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1daa3505-ebe2-4513-8d58-ab358340bc4c"
        },
        "item": {
          "id": "cd161f9a-ceb9-4664-83fe-dcfb4a42a248",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d98c0b6-1455-4db7-9c8e-2233f5c20346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b456274-6e91-4772-a435-0bff0c65f782",
        "cursor": {
          "ref": "2c9ccfa2-91a3-4ab2-9a24-14263bf16bca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6e377131-6d17-4d3c-aa88-e28d5878b5db"
        },
        "item": {
          "id": "7b456274-6e91-4772-a435-0bff0c65f782",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5b02592e-7fa6-4193-bbb3-d614512f5874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d197f70d-e770-4995-9b17-548bfc02dbc1",
        "cursor": {
          "ref": "127be739-3cff-415c-97ff-94248ab815e3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2094397f-1fd3-466f-bed2-d85b5bb6f674"
        },
        "item": {
          "id": "d197f70d-e770-4995-9b17-548bfc02dbc1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "77eb8049-ddaf-4ab3-9367-0384095d0856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72abcbac-1041-428e-b28a-39fbff50a8a2",
        "cursor": {
          "ref": "f50c4a1e-343e-4392-a2c0-db1ebc62eb69",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8f5abd1a-3cca-46c5-ae90-ca486629afb9"
        },
        "item": {
          "id": "72abcbac-1041-428e-b28a-39fbff50a8a2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8b3d8123-f32e-41ab-8bbc-dd378f128d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff79f9f8-e584-40f5-a43a-633b63f0a77e",
        "cursor": {
          "ref": "2ba12f5a-a551-4a9e-9060-416bac0e4a43",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f812f715-a328-46e4-942b-585b90d6d376"
        },
        "item": {
          "id": "ff79f9f8-e584-40f5-a43a-633b63f0a77e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3c927143-0ff2-49b3-b1bb-600df27b5a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ce82ea-1e44-4aea-addc-d0aeb5626a7b",
        "cursor": {
          "ref": "cafb52ff-0aa6-40ac-be5b-530077a4ebee",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "aa199f7f-9d41-4597-95a4-103047a2d0f5"
        },
        "item": {
          "id": "95ce82ea-1e44-4aea-addc-d0aeb5626a7b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1cdeba3c-9bba-4889-a188-02562cb592c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6361f6a8-f055-4fe1-9ecd-18607854907d",
        "cursor": {
          "ref": "1085afed-670b-423c-8ce3-fa6d6036acea",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b0f7bc94-33cc-4b0e-9a69-a2f031ceae56"
        },
        "item": {
          "id": "6361f6a8-f055-4fe1-9ecd-18607854907d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68e42ecc-61fe-43e2-a37b-5b438f371da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fdc309-da47-43e7-8c68-5c0d7f4bd756",
        "cursor": {
          "ref": "f6a120b9-d849-4e52-912f-1ac86cfcada0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5e80a4f-575a-4413-bf84-2644b3e9c3c5"
        },
        "item": {
          "id": "79fdc309-da47-43e7-8c68-5c0d7f4bd756",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08806c3b-cb84-4a1c-83ff-512dac6ab014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8770515-f57f-4d55-89b2-cb18d3b2e19b",
        "cursor": {
          "ref": "27bdd379-ab01-4358-bb2a-c334a7e1642b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7b8d64e-dfc7-4fba-96be-8f1016a22a84"
        },
        "item": {
          "id": "e8770515-f57f-4d55-89b2-cb18d3b2e19b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "50aada5a-c166-4eac-aa6a-50e62c9ebca8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38bf334-99e1-4231-a64d-1b7209a9f7e4",
        "cursor": {
          "ref": "31223bcf-17d5-40ce-b210-6432d82c4b17",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6d6fee94-eaa9-4468-af1e-d86bfe49ce65"
        },
        "item": {
          "id": "b38bf334-99e1-4231-a64d-1b7209a9f7e4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7f453c44-cdbc-451e-b334-36ce997f1788",
          "status": "Created",
          "code": 201,
          "responseTime": 100,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9190cde8-71a3-4aaa-ae8f-6f81a6c5b0d4",
        "cursor": {
          "ref": "34bc43d1-836e-480b-b190-b567a933d8a0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "75c6187c-aaf3-469c-b851-a1c1b32a82e3"
        },
        "item": {
          "id": "9190cde8-71a3-4aaa-ae8f-6f81a6c5b0d4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b491b18-030d-4bfa-a4e6-e7c568899a1d",
          "status": "Created",
          "code": 201,
          "responseTime": 261,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b18d33-5ed8-43b3-89df-83797af73d1e",
        "cursor": {
          "ref": "b2885f81-c8cc-4dcc-a9a4-16482b69f235",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "52f4f0a0-721a-41e2-aa90-eacf1aeab2a4"
        },
        "item": {
          "id": "83b18d33-5ed8-43b3-89df-83797af73d1e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "052d7beb-5c66-448c-b128-93a68df81270",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c4605e-899b-49c6-bf25-16a0622eec11",
        "cursor": {
          "ref": "cd2cdc5f-1000-46ea-bd15-9f2544803b03",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "547228be-6dd0-4e29-a56c-029fcb6ed032"
        },
        "item": {
          "id": "e4c4605e-899b-49c6-bf25-16a0622eec11",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c02f9131-bca9-45df-991a-54a9aa513b94",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5e780-772e-43a2-b4b2-44a07ece8247",
        "cursor": {
          "ref": "592efe44-341a-46de-8e4c-5e3fb7bfcb1e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d184a4c6-c791-4828-8d75-cf410f21b74e"
        },
        "item": {
          "id": "16c5e780-772e-43a2-b4b2-44a07ece8247",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f1689616-237a-45ba-8834-eb694fba74f0",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d9de1e-69f9-4b8e-b92b-e636909758ed",
        "cursor": {
          "ref": "395712e5-a239-4702-8e48-891b6a637773",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fd772c77-000f-439e-9655-650f1c75aec5"
        },
        "item": {
          "id": "59d9de1e-69f9-4b8e-b92b-e636909758ed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "632cef00-4e1c-4750-a3ee-837eaabe628e",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63f978c-fa9b-4adb-b124-08faffee3971",
        "cursor": {
          "ref": "54c17d4f-7daf-4159-a925-497f39e47ea2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69db10e4-53a2-4a33-9ba4-705683f4f761"
        },
        "item": {
          "id": "f63f978c-fa9b-4adb-b124-08faffee3971",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "daf2f1e5-7463-4a45-b3b3-d10a3b818864",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2a5917-a2e9-421f-8868-092eccb04d3b",
        "cursor": {
          "ref": "bbc4fe7f-46f5-4acf-ac54-e80f24b8626e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bb158b50-9b95-478e-b8cc-cbed240e8cc6"
        },
        "item": {
          "id": "9b2a5917-a2e9-421f-8868-092eccb04d3b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "85fbe074-227e-47ae-abc7-f445fb69c9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c70f1f-9cb6-4e79-94ac-7dc20956b8ca",
        "cursor": {
          "ref": "a899f540-f30c-4318-9032-3e6dbf6ff5c3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "400c49e3-1cf9-49d9-8338-3304452e3d53"
        },
        "item": {
          "id": "28c70f1f-9cb6-4e79-94ac-7dc20956b8ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bed60a1b-ece4-45c2-8685-32ad05ad3377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafd291e-b326-4927-b909-82061cf08705",
        "cursor": {
          "ref": "56147416-5bf4-4127-8385-1f6b2af6c860",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a942b45b-15e5-44c4-8577-9e05b8d09ecf"
        },
        "item": {
          "id": "bafd291e-b326-4927-b909-82061cf08705",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76022992-785c-4276-96f0-153ab8a497ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0836579-1fe0-4e96-a4d7-3d7c8290fb54",
        "cursor": {
          "ref": "fc2bffe1-587f-4b31-b625-2b6fe0d3f1e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6d226568-0e74-48bd-9da8-abf8c8122014"
        },
        "item": {
          "id": "a0836579-1fe0-4e96-a4d7-3d7c8290fb54",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7b2e4370-a061-47df-ab46-e9237faaac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557eb7be-dc5f-480e-904e-b463e8913587",
        "cursor": {
          "ref": "dea25065-3fc1-45e6-8141-916fc2202584",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5daea9b-42f4-42db-862d-48119d601370"
        },
        "item": {
          "id": "557eb7be-dc5f-480e-904e-b463e8913587",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bb07b01c-e0f0-42fd-9155-b71782252643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32487c3a-0f14-404b-9657-58c5c8939465",
        "cursor": {
          "ref": "ce4bf7dd-8174-46e7-8236-123bea99ac28",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "67c2fe59-5a67-4eb5-88dd-ae05452ddc33"
        },
        "item": {
          "id": "32487c3a-0f14-404b-9657-58c5c8939465",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "238eb153-d56e-4add-9239-9ab310da980d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c01a86-657e-46e1-8c5f-e49aaa77fa1a",
        "cursor": {
          "ref": "aec73cc2-e9b6-4d53-93f4-738d0a23d38b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "587c01ea-0fb7-4b22-aa37-968234e55197"
        },
        "item": {
          "id": "90c01a86-657e-46e1-8c5f-e49aaa77fa1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f91e27d5-9c0e-459b-b251-58b78312d056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ddd2a4-137d-4391-8b24-deabd7e344a7",
        "cursor": {
          "ref": "3e8d6578-fe60-4b3d-895a-65b34fad1941",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "108cd6ee-e0ad-4822-b64e-c1fc0fdb120b"
        },
        "item": {
          "id": "34ddd2a4-137d-4391-8b24-deabd7e344a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d25fdff0-97d1-4414-8a5b-178a2a64ee4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906be78d-124e-4043-a40f-1274e445040e",
        "cursor": {
          "ref": "c26308d9-3fe5-4d6c-83ed-f2fde8c3eef5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cecb83da-687f-4fc8-b736-5aca30780cd0"
        },
        "item": {
          "id": "906be78d-124e-4043-a40f-1274e445040e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "892a8119-5a5a-47e7-8df3-4656bda0566c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcfa7e0-33ff-47fe-83c7-a8f4790391be",
        "cursor": {
          "ref": "0a1d60a6-0271-4417-9091-9adef11da946",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9ee7b7ff-9c5c-4666-9037-194293d50614"
        },
        "item": {
          "id": "5fcfa7e0-33ff-47fe-83c7-a8f4790391be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cbacff26-5ada-451b-a179-535d9e52d5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c45897-1c19-4288-8fbb-21d86bbf1a43",
        "cursor": {
          "ref": "1999f829-17ca-49bf-861c-f99ea5deabc4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8c12756a-b3b6-482e-b60d-824b1ec6c9fa"
        },
        "item": {
          "id": "01c45897-1c19-4288-8fbb-21d86bbf1a43",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4770c4b-302d-4119-92fb-924c36804857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8bcceb-4ccd-4cc8-a953-b65c260a0c67",
        "cursor": {
          "ref": "e8258d0d-4609-4646-861e-03ab634f4fa1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e74ca0e6-e8e6-492d-b637-73d01ddb8451"
        },
        "item": {
          "id": "9c8bcceb-4ccd-4cc8-a953-b65c260a0c67",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c96db93-fc4a-4f03-bb69-98b7c6768a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fddbbb2-71b4-4b2d-afef-1900d4e4ed1e",
        "cursor": {
          "ref": "6e0e2807-3b37-4f1d-bce5-2b9c3703763f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5c126311-cae3-4f81-bc33-2273661b6ff8"
        },
        "item": {
          "id": "0fddbbb2-71b4-4b2d-afef-1900d4e4ed1e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c1075b1-f82a-49e1-80bd-53348d99515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02621d1a-24c1-43ef-a6ca-8a68ab4777c7",
        "cursor": {
          "ref": "f2639e97-c320-400f-994e-2c6307c3053c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "233ad9ca-9517-4a20-8f84-121e3d681ff9"
        },
        "item": {
          "id": "02621d1a-24c1-43ef-a6ca-8a68ab4777c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5497c8eb-b74a-4e71-b3ec-bcbded91da59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be80110a-4286-4936-81af-6fca1ad3a16b",
        "cursor": {
          "ref": "7470426e-6ea0-404a-b980-07b081169746",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "90292510-8bba-449d-ae7b-b01a0c570ba3"
        },
        "item": {
          "id": "be80110a-4286-4936-81af-6fca1ad3a16b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "909e3221-ec88-42e6-a99d-b37aa97f0a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5b836b-9b3d-4691-8ff0-b6c252124ad5",
        "cursor": {
          "ref": "9b673d13-f0a2-424e-85ac-38cfc0e76670",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26f61016-1efb-44d7-886d-3cb738c1c0ff"
        },
        "item": {
          "id": "2c5b836b-9b3d-4691-8ff0-b6c252124ad5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "175a728c-a274-4a67-ac39-8dd55f5d4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a8fb6-d35a-47b1-b1b0-bfc883da5c26",
        "cursor": {
          "ref": "ebf373cd-fffc-4823-b3d6-1fc5f8345099",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "608b7965-9dfd-48fc-b0e1-a8e798a2911c"
        },
        "item": {
          "id": "763a8fb6-d35a-47b1-b1b0-bfc883da5c26",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "32f51800-7c56-4d21-a08c-f196d792e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300723de-e728-41dd-b2f8-033780d9d147",
        "cursor": {
          "ref": "6e4c4b09-3de3-42ba-b36d-dd128d663541",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cd4a859d-a761-4771-8ee3-4d570805863c"
        },
        "item": {
          "id": "300723de-e728-41dd-b2f8-033780d9d147",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cefac0fe-b540-4f9e-9fed-07808015deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a43a44-e04e-4b23-874e-d53f611a3b39",
        "cursor": {
          "ref": "6b62c5d4-5020-4831-9289-cd08ad9154e7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1755a8ea-a29e-4503-9fd4-e07e90a02466"
        },
        "item": {
          "id": "e7a43a44-e04e-4b23-874e-d53f611a3b39",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c88b615d-c7e8-47bb-84e8-fcd235e0a95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb6f2d8-121f-440b-949b-f44b7ed7efe4",
        "cursor": {
          "ref": "c93a9a13-c3d4-4daf-bf6f-581085b26a49",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4d0cefb6-6170-4116-891b-a2a7bdcb35cf"
        },
        "item": {
          "id": "2bb6f2d8-121f-440b-949b-f44b7ed7efe4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7944bed4-df7c-4345-8807-7ecd04ba30d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858301ba-f1b1-4c42-b67e-bf439a70e15b",
        "cursor": {
          "ref": "9e914b9b-4502-4041-9c7c-a4518c519aac",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bb4cd33c-4b24-4c98-9099-ee49f90c0338"
        },
        "item": {
          "id": "858301ba-f1b1-4c42-b67e-bf439a70e15b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "15421726-5bea-4bd4-a8ae-81c6e20e946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ef211-df03-4080-aff7-cdf82cd7186b",
        "cursor": {
          "ref": "e26f838a-c1dc-45d4-a0de-e1e13409bfb5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "de5b10f0-6194-45d7-8221-1c2313eaa76f"
        },
        "item": {
          "id": "d90ef211-df03-4080-aff7-cdf82cd7186b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c1c0e04-1fb2-4e74-b228-504acce6d627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eac6ff-c6a3-4520-bdf4-dafefb559245",
        "cursor": {
          "ref": "e6d3ad89-a08c-4823-8861-0b9f51404408",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ce8cae62-be0c-4f68-ab14-19eedbed3c89"
        },
        "item": {
          "id": "32eac6ff-c6a3-4520-bdf4-dafefb559245",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "851331f8-846b-45a9-818f-c1ff4fd6cdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c80777-a7fd-4a37-ac5c-c68f0c0eb0c0",
        "cursor": {
          "ref": "01c2f40a-4373-4ef4-b436-1a6ef0f11241",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "209e891a-94aa-4206-862b-cc5ab655cfb3"
        },
        "item": {
          "id": "14c80777-a7fd-4a37-ac5c-c68f0c0eb0c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43c34520-f4e9-4e56-a832-9f25ad73cd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6046c2b-d220-4c20-860c-fb2f1d251fba",
        "cursor": {
          "ref": "38f9c223-9b0f-4cec-9afd-f73b48251005",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b240f3e8-5bf6-4fd0-8d83-7d4652a9de2e"
        },
        "item": {
          "id": "c6046c2b-d220-4c20-860c-fb2f1d251fba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "252c04e2-39dc-42cb-a633-50a34da29003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8959c-99d0-4947-aa22-491b78514c55",
        "cursor": {
          "ref": "edacf412-a5c4-483d-b3e9-dc70791c9fd3",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "936ff636-c163-4b2c-bd14-56abce344393"
        },
        "item": {
          "id": "4ce8959c-99d0-4947-aa22-491b78514c55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e6ae3978-f919-43c1-855b-3da00e8cb6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17a965c-139c-4002-8ede-02b5a96ccbbb",
        "cursor": {
          "ref": "10c6cf16-e4e7-46df-904e-441961d9fd28",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb2c49b0-1c1f-4b3a-ab01-d3af498aa795"
        },
        "item": {
          "id": "d17a965c-139c-4002-8ede-02b5a96ccbbb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d18d1f3e-f169-432c-892e-ec3a34dccebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e72a3fd-e275-4bd0-9252-b3c9e52a0e0b",
        "cursor": {
          "ref": "110bb72f-a624-4486-b2e5-8422cdee5b37",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d91c47b-7127-4d82-a6b3-ff2e3f7a7d28"
        },
        "item": {
          "id": "4e72a3fd-e275-4bd0-9252-b3c9e52a0e0b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "962e73bb-f9e7-4736-873b-c5197bb32af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8dd44c-f046-416a-a481-4a1a0398abff",
        "cursor": {
          "ref": "46788361-0391-4f97-a7bd-7f75296ccd27",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a23b2aa-ca00-4171-98cf-547789407409"
        },
        "item": {
          "id": "da8dd44c-f046-416a-a481-4a1a0398abff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba985c35-c547-4eb5-991b-7f192a9051df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201566d3-7818-4202-9e62-9c2766204ad8",
        "cursor": {
          "ref": "8ab1b631-6e19-4d4b-9f33-ac313853b77d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e16cfca2-aa96-48bf-89da-7dc9c03663a7"
        },
        "item": {
          "id": "201566d3-7818-4202-9e62-9c2766204ad8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb905124-6137-48c5-8ff9-cdd3a78ec06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1302ab-c5f9-4b36-945e-7bfb56fb9012",
        "cursor": {
          "ref": "930fc073-881a-4543-ab59-4ccae35269ce",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f4ad71b9-b64c-47bc-8d9e-577329b2cf49"
        },
        "item": {
          "id": "1e1302ab-c5f9-4b36-945e-7bfb56fb9012",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "478d92ba-4ac3-426e-9639-f1eee8034aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad90b8-ca2f-45c4-bcba-aaa27870959d",
        "cursor": {
          "ref": "3c497b9c-791b-40bd-975d-a8e50fa3f0e1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36f27fec-c8db-4320-8ba3-f03cad4a86da"
        },
        "item": {
          "id": "8bad90b8-ca2f-45c4-bcba-aaa27870959d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1239e8a0-eb25-4616-86c9-6266f9c95c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ac43ce-b7d9-437d-a7a1-07289480e5ef",
        "cursor": {
          "ref": "ab22e1e1-85bf-4573-a43f-9d692365a6a1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3d6c4760-9775-4e61-a953-56819ac488bd"
        },
        "item": {
          "id": "56ac43ce-b7d9-437d-a7a1-07289480e5ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a4f9f7c-7ebc-4461-baf6-e98462f2b284",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da717d-ef2d-42e8-9498-798b05ea6d9a",
        "cursor": {
          "ref": "622f9886-6d6e-437b-9c15-9a1eeb8b6633",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1e2005d3-e4fc-4608-9baf-ddbe701cb3dc"
        },
        "item": {
          "id": "d8da717d-ef2d-42e8-9498-798b05ea6d9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bc0cae1-a02f-463b-9d2d-ab5bc45ba724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f47798-0700-4920-84bb-40644deda41e",
        "cursor": {
          "ref": "fd382e85-9b1b-49be-9801-4e9e55cce278",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1496b2ba-27d0-4148-b1ec-da0f693f75d1"
        },
        "item": {
          "id": "92f47798-0700-4920-84bb-40644deda41e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6244ee90-a289-4a9b-a88c-9491f5fe049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039d263e-b547-48dd-9b47-e51464e3a043",
        "cursor": {
          "ref": "698c9e61-3779-4651-94b0-4592ab732f16",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "07efd042-9178-4fe5-8c72-59b804edee9d"
        },
        "item": {
          "id": "039d263e-b547-48dd-9b47-e51464e3a043",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "85c3b94d-b89a-4053-b467-b937c397b442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dab6a7f-10c9-4e62-80eb-bb98a2dc1af9",
        "cursor": {
          "ref": "34d7bb7d-b738-41b3-b9d9-33d9cc6a2298",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1637127e-faf7-4abe-88f3-fc4f5dbfa731"
        },
        "item": {
          "id": "5dab6a7f-10c9-4e62-80eb-bb98a2dc1af9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "694cc8fe-05c6-4413-9c37-109163f9bccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d9da4c-d660-46a5-9e35-4151377f1f78",
        "cursor": {
          "ref": "fea1f46f-5b4a-4c48-9d2d-8a61bd254f00",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "42bf8437-8908-4d42-ab40-67bdbab6b73e"
        },
        "item": {
          "id": "f6d9da4c-d660-46a5-9e35-4151377f1f78",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3b92d731-5c79-4dc9-bef4-39ed3265b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ad27a0-8fc8-4bcf-8e61-2d535630befd",
        "cursor": {
          "ref": "8b2edaa1-c375-47d6-9187-56ed2d5d47ef",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "814dfe64-0462-4868-b3f0-74d5637bdc74"
        },
        "item": {
          "id": "20ad27a0-8fc8-4bcf-8e61-2d535630befd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ff6dbcad-26fc-4751-a8bd-058792d962ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5405751a-619b-46be-b293-a06a6bc084ae",
        "cursor": {
          "ref": "efc0768d-1e58-4ad3-a1c9-f7318aaeb9d5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8b1dde08-9bbc-41ca-979a-8f67e1230e57"
        },
        "item": {
          "id": "5405751a-619b-46be-b293-a06a6bc084ae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "239c7025-a61d-4154-85b1-0a353d44a5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888f08c9-db36-438e-acd1-50c3d46524e5",
        "cursor": {
          "ref": "0e2adb76-1971-42c9-b4ca-dcc2d4228457",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "20462d9e-94f5-4a2f-8f95-38692d981943"
        },
        "item": {
          "id": "888f08c9-db36-438e-acd1-50c3d46524e5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0f8d5a9-4df9-4b14-9abd-bfa8b603b503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49101c2-9476-4221-991e-70762c80472b",
        "cursor": {
          "ref": "c0482bae-6eed-42aa-8103-3263a450c83a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5b39b41-2f9f-421c-aa7f-6077c057c20a"
        },
        "item": {
          "id": "e49101c2-9476-4221-991e-70762c80472b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f538a565-994f-4c0d-b843-12f990c9d7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c35e49-cfbd-4420-99eb-b9b4c5df26f9",
        "cursor": {
          "ref": "c41eeb76-43c5-4185-ba65-effa740f3629",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5c063fb7-978e-4023-aa02-36def723670c"
        },
        "item": {
          "id": "b5c35e49-cfbd-4420-99eb-b9b4c5df26f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ec2f49f2-aa67-40a9-9693-7dab4938cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a796b3d-ba23-4de9-b3a6-4290c0c3072a",
        "cursor": {
          "ref": "b681008c-228d-4043-bd22-d6705f7d8916",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "326de51f-1a16-4254-82bd-7e1eaf097a41"
        },
        "item": {
          "id": "7a796b3d-ba23-4de9-b3a6-4290c0c3072a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e079d52c-7bad-4751-a711-60a1065575a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4080e6-9756-46fa-b5da-d660d6d3a357",
        "cursor": {
          "ref": "6dea125c-6bb9-4feb-8d56-27282ca2a9fe",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9cb5373f-74af-4eb4-9bde-4ac6c937610e"
        },
        "item": {
          "id": "6f4080e6-9756-46fa-b5da-d660d6d3a357",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e2098a61-049a-42c6-9032-b78a9d5325e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08c0b29-e3fb-4dde-a13b-720c34b8c739",
        "cursor": {
          "ref": "44fd788b-f46b-4447-9cb0-af88feb09f28",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d9a8b3b-8caa-4fad-a70b-2fa8e19a1bdd"
        },
        "item": {
          "id": "c08c0b29-e3fb-4dde-a13b-720c34b8c739",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6a39ea60-4c8a-43d6-8871-6368909b7310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13da1cb9-0954-4eb3-9b80-5f981ae702ea",
        "cursor": {
          "ref": "a580a4ad-3290-406c-99e8-52b7a0dbd399",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da1e8f11-3726-40ab-932c-3238d1934095"
        },
        "item": {
          "id": "13da1cb9-0954-4eb3-9b80-5f981ae702ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b1421c09-b545-455e-9fa2-f2c808f4fde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b29da8-963c-44a6-aa73-66227d6cc92c",
        "cursor": {
          "ref": "506881e2-637d-4616-abe5-f84a399cf199",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16bf332c-6de1-4a1b-923c-7e16ca753e22"
        },
        "item": {
          "id": "70b29da8-963c-44a6-aa73-66227d6cc92c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7546da0-9b60-4734-ab67-d6af432ba3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c69c4-8a01-4054-8379-a88cd80b85ad",
        "cursor": {
          "ref": "ccdf9c50-e17c-4ec6-9668-c43dae7c9421",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6a8bda83-9247-41e9-9b36-4254a05cb1bb"
        },
        "item": {
          "id": "1f0c69c4-8a01-4054-8379-a88cd80b85ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "69b9260e-d687-4e5f-8493-16be104b9488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9da122-10c0-4b04-9955-6907fc31d295",
        "cursor": {
          "ref": "f3abb0e7-a904-4d2f-bfd0-7d9ecd9f44d0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f5f6786f-a53e-4902-a30c-c169522034ca"
        },
        "item": {
          "id": "0f9da122-10c0-4b04-9955-6907fc31d295",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8993fded-02a3-40b6-8afc-eebaf4748762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ac434a-74f8-4d9d-b78a-d80ea072fd73",
        "cursor": {
          "ref": "6e326e8e-7c2f-47f1-aac7-2ed5c8cec667",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c82ff85e-47a7-4681-8246-bd440aac91e3"
        },
        "item": {
          "id": "29ac434a-74f8-4d9d-b78a-d80ea072fd73",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "be138cd2-e643-48e4-82cc-6adba603d691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9078ad-1041-4580-8ecb-188db47e3f0a",
        "cursor": {
          "ref": "d8991fa0-f21c-485d-9191-51ce140fe628",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e24b54c-351e-4761-84a7-4db2bc869278"
        },
        "item": {
          "id": "fc9078ad-1041-4580-8ecb-188db47e3f0a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "90d93963-81f8-4672-99a5-863cdbc084c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8c70c3-c595-4496-8abb-351dea8a8d86",
        "cursor": {
          "ref": "88a38dbb-1fc7-412f-9e62-71452d91899b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f644ff9c-15ac-489f-9a8c-6343a6a9456a"
        },
        "item": {
          "id": "7c8c70c3-c595-4496-8abb-351dea8a8d86",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b41d13e-78ad-49fb-a704-af401dbbeaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eafa369-90e1-415f-9c7e-3f4652433d99",
        "cursor": {
          "ref": "0caef31d-2974-4fcd-8841-4edac69f650a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "818f4dd0-9253-4c65-967f-164f701ffd01"
        },
        "item": {
          "id": "5eafa369-90e1-415f-9c7e-3f4652433d99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05058215-d90b-4f47-92e3-b77cf931d035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e54fb6f-538c-430f-8fb1-7551c4dbac45",
        "cursor": {
          "ref": "ced340c6-3e19-41b9-9e1e-3ae5635b5ca0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "65824dbd-2a4f-487d-b8ec-631e333c90b3"
        },
        "item": {
          "id": "9e54fb6f-538c-430f-8fb1-7551c4dbac45",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a510d1d6-4b1d-4a7d-a9cc-85852dda3771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb0dd80-a665-4c9e-8e4c-054e956a71c5",
        "cursor": {
          "ref": "04ab3125-c84b-4eb4-89ac-e51e15e176bb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9baa7f59-3f27-4def-9067-341340d16fff"
        },
        "item": {
          "id": "4fb0dd80-a665-4c9e-8e4c-054e956a71c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbe3f662-39cb-4cb6-aab3-058301155276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5040ba4-ce2e-4b84-9a8f-8a52ff02aa8a",
        "cursor": {
          "ref": "31f2f2b8-7a30-4792-9d72-7125425610d3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "10b63273-2475-43c3-a26c-eef0cfaa6ce5"
        },
        "item": {
          "id": "f5040ba4-ce2e-4b84-9a8f-8a52ff02aa8a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "86ad6732-badd-4c77-b8ce-13389376d1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e76632-f41e-4ce1-9f58-509be5f0c3af",
        "cursor": {
          "ref": "be5a2333-6373-4163-a020-71a3eada57ee",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0f8cfbe1-ca30-4e86-aca4-5f895c8af007"
        },
        "item": {
          "id": "64e76632-f41e-4ce1-9f58-509be5f0c3af",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "414021e7-2fd4-4b2b-9d82-d5024b4b502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2fe880-0a2f-4f90-abf3-2e53f228267d",
        "cursor": {
          "ref": "94d8c97c-9be2-47d1-aaee-8ab8e92d7203",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "110ff454-1d70-4412-a6fe-d0f5bcb5562c"
        },
        "item": {
          "id": "8e2fe880-0a2f-4f90-abf3-2e53f228267d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7f6495b1-cb71-47ef-baae-98c0c7edb243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b234b4-7ca0-4211-9dc0-6c76f8662ee5",
        "cursor": {
          "ref": "e4483dc0-ca25-484c-98dc-a66bd23ab15b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2dd8bfd-8d32-416a-82b2-4ca9c600f2f3"
        },
        "item": {
          "id": "70b234b4-7ca0-4211-9dc0-6c76f8662ee5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8e0cd22d-1365-435e-adbb-53dcd3f9c1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8713f548-28af-49b9-8f9a-85c83d027a86",
        "cursor": {
          "ref": "062f601a-a632-447f-8950-a3dd4434083f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c1916f7f-3d88-4eaa-9424-b832113d860c"
        },
        "item": {
          "id": "8713f548-28af-49b9-8f9a-85c83d027a86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39357909-7876-49ef-b5c9-795f3606e562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa3ea91-168f-4a27-b340-f45f70041356",
        "cursor": {
          "ref": "69f71c4b-207b-49ea-97f0-2ee1c0219cde",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9081be1d-f042-4597-b476-fc4cce59a5b7"
        },
        "item": {
          "id": "ffa3ea91-168f-4a27-b340-f45f70041356",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5e43a19-ab62-49f8-b0b7-4ae3254fa416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba88d96f-624f-4309-8d10-e80bfb085bfd",
        "cursor": {
          "ref": "b84f6441-9577-4c70-bd96-af1da44496c3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d4d74c65-1a1d-48c0-a6e5-bbc5c18cc3c5"
        },
        "item": {
          "id": "ba88d96f-624f-4309-8d10-e80bfb085bfd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5885fc18-6b63-4c47-ac49-dc9ebe68fee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5be0b8-69c1-4775-b6d6-9a54d5d5bf96",
        "cursor": {
          "ref": "e7cdf97a-8ebf-4356-996a-9f5b3c6fcf28",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8b787bcf-9357-47b4-b873-bbe8c2716b0a"
        },
        "item": {
          "id": "5e5be0b8-69c1-4775-b6d6-9a54d5d5bf96",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2068951-988e-4ed8-bb68-5aabd1bd543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523aa20f-f273-4ee8-8637-905bc4e81719",
        "cursor": {
          "ref": "d28e5836-7506-411d-baa0-14f4688f50c3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4a6b195c-eca4-4c88-9121-ef03fb146fe6"
        },
        "item": {
          "id": "523aa20f-f273-4ee8-8637-905bc4e81719",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ff097c4a-5678-4413-a052-b10e6e8d1802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa233c2f-c295-4acb-8781-56a9e8d0f72c",
        "cursor": {
          "ref": "a23e1d3e-105f-45ff-b2da-33e2b2462188",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "94fb232a-4167-45d9-82f4-482184ced9ae"
        },
        "item": {
          "id": "aa233c2f-c295-4acb-8781-56a9e8d0f72c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6cf87fec-409d-4fdd-a360-f644c8ad0808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b74c92c-653d-4eba-acb5-7b1964da55ec",
        "cursor": {
          "ref": "479e4fbe-e36b-4a63-a395-aa31eac79387",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d06942ce-9173-4058-b748-f979ce7df31f"
        },
        "item": {
          "id": "0b74c92c-653d-4eba-acb5-7b1964da55ec",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c9f4a359-7928-466c-bbef-785292033bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c96b07-4d3b-45d1-8b50-b97bb4d9d345",
        "cursor": {
          "ref": "62212a37-4c7c-4bac-ae01-8fd32c480440",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2fe02481-6797-4cbf-a6df-55f91f71681f"
        },
        "item": {
          "id": "63c96b07-4d3b-45d1-8b50-b97bb4d9d345",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc116139-7213-4a8c-af6a-ba05fb3e407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442d42f7-dde5-49d8-a92c-050cef28684e",
        "cursor": {
          "ref": "a720fbbd-2fa3-470b-8057-e6e5ef813620",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b858abf2-4b25-491e-837f-8790463d8dd9"
        },
        "item": {
          "id": "442d42f7-dde5-49d8-a92c-050cef28684e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0b122612-ac7b-45b8-ae2d-3968aeeb21eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8920d6a1-9f67-42ba-a83e-0cfa1e8adaf0",
        "cursor": {
          "ref": "0a2aec1b-d02c-4e4e-b348-a188b3dabc9e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a90d1500-3f3f-491c-b3a0-5773731ac8da"
        },
        "item": {
          "id": "8920d6a1-9f67-42ba-a83e-0cfa1e8adaf0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3206bbfb-8721-4fa6-a765-954777c0479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1e98a4-775e-4aac-9c19-6b8a70f77867",
        "cursor": {
          "ref": "2e0b8170-9d46-4739-a7ff-abd0963ba9a8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "53b92d00-67e1-4fb5-a695-db569b6ff196"
        },
        "item": {
          "id": "de1e98a4-775e-4aac-9c19-6b8a70f77867",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d2400c6-9e2d-42d7-b494-e5a384da9c18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1669abee-c02d-4dc6-8e3d-2158db4cc099",
        "cursor": {
          "ref": "ff89f0b5-53a4-4e1e-9719-a71052d34ee0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2cb9d383-d24a-4158-86b0-f12c826076d2"
        },
        "item": {
          "id": "1669abee-c02d-4dc6-8e3d-2158db4cc099",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ec7a4bd-4dd5-4444-b33b-4785a0fbb46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d532bc3-4196-4fd5-a88a-44d93ee414c3",
        "cursor": {
          "ref": "a567341f-6cf8-4395-adc6-99759ea6ec5c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "871acbc2-e7a7-4c07-a326-7ce7b4e1bba5"
        },
        "item": {
          "id": "4d532bc3-4196-4fd5-a88a-44d93ee414c3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8448a4ec-a19e-4241-90c5-efb313de85f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649480e-29ac-4e00-8e66-f21ba7634ef8",
        "cursor": {
          "ref": "3ae9c279-3d2b-466f-9d40-3ba996483c05",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "39cba69c-dfec-46af-af5b-e89aa6cfe798"
        },
        "item": {
          "id": "f649480e-29ac-4e00-8e66-f21ba7634ef8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fda38a15-feb8-430b-bb27-05861fd69ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efa8ad8-0b75-46b5-b59d-a26f2d9c7f89",
        "cursor": {
          "ref": "d000419f-7013-4778-a77e-300cb25d05fb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c9205a99-d8c5-4f06-b317-c7de3c2a889c"
        },
        "item": {
          "id": "5efa8ad8-0b75-46b5-b59d-a26f2d9c7f89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ae4f2fb-73cb-491e-ad49-e294eab325a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45a512-b69c-4dc1-bfc8-48f5755367f3",
        "cursor": {
          "ref": "7282119f-cfdd-4b4a-a1b2-bf3ff6009ac2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e62eae8-b827-4781-ad9d-fa42ef2024e2"
        },
        "item": {
          "id": "bf45a512-b69c-4dc1-bfc8-48f5755367f3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d819f142-01cd-413e-ab46-024ce6afed04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455ee7a2-d9bf-4ee3-bb73-f9eb0f8e4f04",
        "cursor": {
          "ref": "3bd4c7ad-063b-416b-99b8-64b70b31cb1e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "06914d2c-9469-49e5-8ee5-dcf1c5c0f2dd"
        },
        "item": {
          "id": "455ee7a2-d9bf-4ee3-bb73-f9eb0f8e4f04",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1879bbd9-1804-4719-bd71-03b808ee9519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c664b40-3e9e-4b70-81d5-4ee8684c77af",
        "cursor": {
          "ref": "2fabfcf8-0e54-4c7e-8e38-c19211cbccfb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ec3717d-5ec6-4514-ab1f-e8f09aed9670"
        },
        "item": {
          "id": "2c664b40-3e9e-4b70-81d5-4ee8684c77af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49dccfec-1b23-445a-910f-ad8041c96d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccce3b8-46de-4f66-90af-b6c4c60f6c8e",
        "cursor": {
          "ref": "d6d149b0-ee2f-49d5-9278-ee1bdfcdafde",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df54cbcf-9b2c-43fc-8624-8b1b5de594c2"
        },
        "item": {
          "id": "7ccce3b8-46de-4f66-90af-b6c4c60f6c8e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "116c85a3-0c01-4723-9bf5-fd60abf819a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade99d89-c3c6-4b90-99f8-f09cbcef865f",
        "cursor": {
          "ref": "2280ff6a-245c-4687-8426-03507da965d1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e99578f2-dbdf-492f-9e0f-59e88cff2b95"
        },
        "item": {
          "id": "ade99d89-c3c6-4b90-99f8-f09cbcef865f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1fb37182-5a80-46ce-9381-77705127f71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea19b6a-79f0-49ca-9930-81bffa32138d",
        "cursor": {
          "ref": "93b5ba95-6e28-4ab3-8c80-245ffb8cb244",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b0d37d1-3468-43ac-b53c-e17feb2ec2d9"
        },
        "item": {
          "id": "1ea19b6a-79f0-49ca-9930-81bffa32138d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2778c28a-9b99-4e0b-b3f4-f1c419f075a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e985756-84e7-48aa-bb37-091f611026ee",
        "cursor": {
          "ref": "49263ace-5616-4a70-8e1e-2f87eabf6ac8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bda00782-ffda-45dc-9455-4a56d25f9c5b"
        },
        "item": {
          "id": "6e985756-84e7-48aa-bb37-091f611026ee",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c352171c-f8d4-43a6-a5ab-69fb8a790605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933c2ee0-f558-417b-990d-51f5a30e9bcf",
        "cursor": {
          "ref": "f594f4ee-107e-41b9-871c-7a06a2868a55",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f72d09cd-b16f-4f12-b0c0-c6e2a1867f87"
        },
        "item": {
          "id": "933c2ee0-f558-417b-990d-51f5a30e9bcf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1802052f-035f-4e35-a6bf-dbeb35e03d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3811f596-0764-4b8b-890e-8a7d8b4d2ed5",
        "cursor": {
          "ref": "0b339183-2ffe-455b-bdc1-52cc4081b10e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f891eb7b-130c-4a0d-950d-d59fc883822b"
        },
        "item": {
          "id": "3811f596-0764-4b8b-890e-8a7d8b4d2ed5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "93417920-6ba2-4c73-a48d-d4e011ac7244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58abd6a2-56f1-4be6-9c86-f58b3c9e39ab",
        "cursor": {
          "ref": "655502de-c9ca-4adc-9153-3c8390937087",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3ce783a2-5cdd-49bb-b3f5-d77516ae2c7d"
        },
        "item": {
          "id": "58abd6a2-56f1-4be6-9c86-f58b3c9e39ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f683fd0e-ca81-498c-8eef-49037f1773a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4de60f-5b48-45fc-a0f4-eee0708a8987",
        "cursor": {
          "ref": "8b09f0ed-792d-4c6b-a430-13f9545479ab",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bfddde49-b9bf-4275-85ef-977e0a0c4095"
        },
        "item": {
          "id": "7d4de60f-5b48-45fc-a0f4-eee0708a8987",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ea2fb888-a075-4f82-af91-fc925bfbce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bac017-5cf3-4414-a604-82f9c063a443",
        "cursor": {
          "ref": "f048351e-7d13-46fc-a883-ee821cc7991d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "00372894-7522-492d-81e4-bab84eeed53a"
        },
        "item": {
          "id": "14bac017-5cf3-4414-a604-82f9c063a443",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3ea802a2-f626-4d8e-ad69-edd2a72c6bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e36944-ac3b-4cf9-a8bc-457fe8e9c4df",
        "cursor": {
          "ref": "0f0ae9ed-a437-4355-9b5f-7deacf40068b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c71f1b27-b081-4ead-8889-0f7e9adef49c"
        },
        "item": {
          "id": "f7e36944-ac3b-4cf9-a8bc-457fe8e9c4df",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6cb1bcab-f275-4246-a86c-5cfd2a51dea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31234582-5608-40c6-a63b-89626b035c1b",
        "cursor": {
          "ref": "1beeeecf-c130-4c3a-aa0d-758efb78d1b9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5da5c482-976e-4207-afb1-5bd20a858a76"
        },
        "item": {
          "id": "31234582-5608-40c6-a63b-89626b035c1b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2d227138-d628-4e58-81a7-bd5c82820fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237dab1-e74a-49ab-ac17-b0e754d8006d",
        "cursor": {
          "ref": "0958d5ee-2824-43e2-b996-5b009221d51d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bb3119d5-ab28-4a2a-8917-945fb6667c1c"
        },
        "item": {
          "id": "7237dab1-e74a-49ab-ac17-b0e754d8006d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cd44aa5f-08c2-4b55-8a2a-1829e5d308ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51985e7e-ee57-42de-95af-8eb9b3a94281",
        "cursor": {
          "ref": "5f9b0442-2069-4b06-a6f9-8e8098dd7757",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5d8de65b-805b-446f-af06-92d57f6862ba"
        },
        "item": {
          "id": "51985e7e-ee57-42de-95af-8eb9b3a94281",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6931182-d383-4b67-af8c-07f6edf03823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6409c8b0-e29d-4864-9576-02166c5283ce",
        "cursor": {
          "ref": "c8303d8b-38c1-42cb-b6bd-3209df685f70",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad1c4961-a97a-484a-8037-41d52590523d"
        },
        "item": {
          "id": "6409c8b0-e29d-4864-9576-02166c5283ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "192ebb15-8b57-4f48-9e4a-19605a12001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acea958-cc5a-4969-8eb6-eba1e3c8663d",
        "cursor": {
          "ref": "69fb743e-dfca-4a08-9bfd-43ac737f2cf5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "43ad3506-cafe-4789-9e5b-9b1c8a96a3a4"
        },
        "item": {
          "id": "1acea958-cc5a-4969-8eb6-eba1e3c8663d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d771aaa-45a3-45cc-821a-1e7163048491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8c8ce3-a35f-462b-8bb5-a1a39d4ee4f2",
        "cursor": {
          "ref": "d37574df-c228-42fe-9d58-f7932f03d7b7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "529fda2d-3852-46aa-8e0b-b0886ba36899"
        },
        "item": {
          "id": "5e8c8ce3-a35f-462b-8bb5-a1a39d4ee4f2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c7357ff5-8bfe-4df8-877d-c500c6e0fee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1919412-4600-4d5e-b9c6-58c0a3443f8b",
        "cursor": {
          "ref": "e36707a9-ae18-47b5-a184-a5948de0b232",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eb5bcb70-8660-40e5-a5af-90ecc30bcbfc"
        },
        "item": {
          "id": "a1919412-4600-4d5e-b9c6-58c0a3443f8b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5c5a80dc-6029-4b1a-ae9a-23e3ec763369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8db2ee-ce3e-4fbe-95d4-73a67d0c1115",
        "cursor": {
          "ref": "92e7b1d9-1a4d-4f50-b1cb-701c7759a339",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b5949aeb-befa-434d-b46b-c7df1a3a285c"
        },
        "item": {
          "id": "ba8db2ee-ce3e-4fbe-95d4-73a67d0c1115",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "db0780dc-5771-41e7-963e-d38c79de7adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c917831-b5bb-47e3-b01f-a3a223a95b38",
        "cursor": {
          "ref": "41721f41-f100-4f70-bc65-f99e53af2673",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ea003b01-e945-477c-97e1-d1eeefa8edb9"
        },
        "item": {
          "id": "8c917831-b5bb-47e3-b01f-a3a223a95b38",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98c100b9-f0ca-444d-8da3-670565124537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79201c52-25c6-4988-9b49-98519402361c",
        "cursor": {
          "ref": "c9920d48-a273-4e9f-ac13-4433e89f0f6c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e061ecef-b08f-4a9d-9d54-ec6f97426c3f"
        },
        "item": {
          "id": "79201c52-25c6-4988-9b49-98519402361c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "22eedafd-82ef-4d4c-b4f9-af8de7be9c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81064de-5c2e-415f-95a0-a2ed91ed2d04",
        "cursor": {
          "ref": "19fc59f4-3590-486b-8e68-8e6f8ad87954",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "81afa511-c2cc-42e5-8617-c907876578bd"
        },
        "item": {
          "id": "f81064de-5c2e-415f-95a0-a2ed91ed2d04",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c68941a-f10c-4161-932e-a142677b8f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e949df7-a535-4a8d-8cc9-e466b0d446b9",
        "cursor": {
          "ref": "322f2c1f-2fd1-404a-b121-a53fb83a9815",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "515e8e2d-eaaa-44b7-bf5c-54dabd10f731"
        },
        "item": {
          "id": "6e949df7-a535-4a8d-8cc9-e466b0d446b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "89eb2edf-6a6d-4e9c-8565-c070bd2df4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116bf7aa-72fe-4562-9e2d-171e03c9a3e8",
        "cursor": {
          "ref": "8f60a5cd-8b15-403c-ae06-73b7ab206a9e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "715d92c4-b4a4-4779-b07b-a87c298f0d7e"
        },
        "item": {
          "id": "116bf7aa-72fe-4562-9e2d-171e03c9a3e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "715bd527-51ad-47a0-a8ec-f852e0eb60d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a50043-c920-42c7-87ba-8f6ce5cbe6f6",
        "cursor": {
          "ref": "84f1483b-9d71-4554-92ab-c5a7e058568c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4014bb5f-6c6a-419a-ab3e-2c93b70ee141"
        },
        "item": {
          "id": "a9a50043-c920-42c7-87ba-8f6ce5cbe6f6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c6aa233e-8908-4ede-897a-503ffe029c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b24393-77bf-43b0-b22f-758a9e446f92",
        "cursor": {
          "ref": "5b68e0cd-5cae-4c3a-9a37-1ea95657e969",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b6ff0c53-c567-48f6-af4e-5562bf4fd5eb"
        },
        "item": {
          "id": "f1b24393-77bf-43b0-b22f-758a9e446f92",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "12b597b4-d6e8-4606-9478-488e396f4223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86828dda-1c6c-4d5f-aa8a-c56bc4b9206f",
        "cursor": {
          "ref": "64daad6b-c1cc-46ad-9119-f86f67fb9515",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c3215319-b394-45d3-8e6f-1c583cb2e289"
        },
        "item": {
          "id": "86828dda-1c6c-4d5f-aa8a-c56bc4b9206f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "638266a2-65a5-40df-89c5-a9b0356f0801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20448e72-4c84-4dda-bf43-ba89e2a66737",
        "cursor": {
          "ref": "f879fdbd-17ef-4c7a-8c75-c984e2d1de2d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbb76ff5-8d61-4bf6-9031-4a333b384098"
        },
        "item": {
          "id": "20448e72-4c84-4dda-bf43-ba89e2a66737",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "33e4d8ce-0bff-47f0-91ae-8c628e21e131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd26469-9453-468b-8589-53124af24584",
        "cursor": {
          "ref": "4632cd07-d7f1-4a9b-89bb-5f2dc5724e68",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f2dfad10-1516-4078-986b-2399442e6ab6"
        },
        "item": {
          "id": "2cd26469-9453-468b-8589-53124af24584",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "74ed9404-0d18-4d83-b3dd-d468e0a04e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c8948e-c3a9-439e-bdc9-95b63d3facbd",
        "cursor": {
          "ref": "f85134b8-5f16-4c7f-a68f-46e163792b43",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b5fd974-875d-4cf7-82c7-33b8995756ce"
        },
        "item": {
          "id": "45c8948e-c3a9-439e-bdc9-95b63d3facbd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d5fc0c91-c864-450b-ad5c-c0a208be70f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c98767f-7274-4e6a-be65-c4fa5883eb59",
        "cursor": {
          "ref": "cbde892a-476a-4bd1-8176-16b8361351fa",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fce62bed-5a63-4584-ab6c-7a6734e2cb42"
        },
        "item": {
          "id": "0c98767f-7274-4e6a-be65-c4fa5883eb59",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "05da5cb3-3c79-4e37-922d-da25dd25da17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8001d3-c64b-4fc8-b1a7-178872a40628",
        "cursor": {
          "ref": "fafd8a03-f649-4a09-8c1a-99a98b5445e8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4a2c0ea1-05e2-4be4-a533-f38a8f490c56"
        },
        "item": {
          "id": "2e8001d3-c64b-4fc8-b1a7-178872a40628",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "78e3d616-bc2d-4ada-b474-f66a111af5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d49d80-3f1f-494d-a3e4-04a515b0b45a",
        "cursor": {
          "ref": "37f03732-1a11-4ff9-96a0-f2feaffe6468",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4f529662-c778-454d-996b-d1f0b5b61f89"
        },
        "item": {
          "id": "c9d49d80-3f1f-494d-a3e4-04a515b0b45a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "02ad33a0-77f6-4130-8b00-2af2d7691cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1756b-0d9d-40a8-9fdc-135acfa533e2",
        "cursor": {
          "ref": "b71bc5a0-b57c-4ef8-aa6d-e64ea3eb230d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0ca0f02a-9289-4bf5-b0d0-eaab6dc9e3a7"
        },
        "item": {
          "id": "5aa1756b-0d9d-40a8-9fdc-135acfa533e2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "198899e3-618e-4983-b0bc-e4893def47fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba908fb-3cd5-456b-b062-9086be5da005",
        "cursor": {
          "ref": "a61f8176-9238-48c5-8e7d-445db73448ab",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7859f36a-27f2-445f-ba4b-d529a293407a"
        },
        "item": {
          "id": "bba908fb-3cd5-456b-b062-9086be5da005",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5763522e-69f1-4f74-ab96-e97942202981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdd5ed1-d9f5-4be7-8258-92a958902c1a",
        "cursor": {
          "ref": "8b0ea9d6-7934-4c39-ad12-75b39eb31132",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "09c221c2-4d46-4933-b62e-9f3d7f82bf0c"
        },
        "item": {
          "id": "dcdd5ed1-d9f5-4be7-8258-92a958902c1a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ce6aad2f-2366-4f24-b777-4d9df3d00ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fde8baf-17f0-4d65-9758-6685c5355e4b",
        "cursor": {
          "ref": "5a9f1639-e53f-45f3-85d7-2ac24836d883",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "846d97ac-6cb3-43fd-bb53-c75c1433d960"
        },
        "item": {
          "id": "1fde8baf-17f0-4d65-9758-6685c5355e4b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b3ac6ea5-c20d-4956-b04b-0bd6ce1359b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f110bab6-77d1-4384-a7ca-3640a4899c9b",
        "cursor": {
          "ref": "fefc2a91-69e3-4353-8aa1-82d7b5306803",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "70b4688b-f97e-45e2-b630-d694cc9e2571"
        },
        "item": {
          "id": "f110bab6-77d1-4384-a7ca-3640a4899c9b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6296f399-c5cd-4670-9c0b-1d4bfee21ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b027fb-9a57-47fd-9256-6e0e761861b9",
        "cursor": {
          "ref": "bb3ecf7b-2c45-44dc-bedc-8b74723d6f23",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "197970f3-424b-4507-9736-512842984fe7"
        },
        "item": {
          "id": "18b027fb-9a57-47fd-9256-6e0e761861b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0eab1de2-d948-40ee-b7f1-e24c7ab7fd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1c6ee0-1748-4682-a962-62e31713e118",
        "cursor": {
          "ref": "2db6e01e-6ae9-4085-8c32-32cacce2591a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d05278b1-8f52-4b70-9c17-060bde8f27bf"
        },
        "item": {
          "id": "de1c6ee0-1748-4682-a962-62e31713e118",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "386cd79f-40b0-47c1-83ae-efb0f0b7b618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6e68d4-dc86-44d9-b878-c2a5800e704b",
        "cursor": {
          "ref": "09f088ff-b5dc-4089-8c90-8605d65b0aec",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fcfbf6fe-6045-4983-8f7d-1d44b905603b"
        },
        "item": {
          "id": "5d6e68d4-dc86-44d9-b878-c2a5800e704b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f319bd8-4d14-423d-a33f-9cf697860a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37fbd6b-4fdf-4560-b7d5-8fa3c0c4a56f",
        "cursor": {
          "ref": "62686363-e92a-4322-ab36-d33e8edb6491",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f7177eb9-9869-4dc5-ac26-c4431dfeeedf"
        },
        "item": {
          "id": "b37fbd6b-4fdf-4560-b7d5-8fa3c0c4a56f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2bfdf76a-fc0f-42ae-beef-f5ba62c20894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d210239-6ad6-45f0-9227-058593b01fa3",
        "cursor": {
          "ref": "e9757549-84b4-407a-847a-16a9b9cd9b97",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd7de94f-3f21-4be7-8235-a4cd175529d9"
        },
        "item": {
          "id": "9d210239-6ad6-45f0-9227-058593b01fa3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cd05384e-2b69-4628-992e-107398b7665a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f87481-7f5d-47c4-947e-643418c29642",
        "cursor": {
          "ref": "065746d3-3af5-425f-8a7b-37d06fd83a3e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "26ff3f42-f6cd-42a7-ac77-e3715843cc7c"
        },
        "item": {
          "id": "41f87481-7f5d-47c4-947e-643418c29642",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "63db597a-d6cf-4b79-afcd-1284190dfe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408465e0-6717-4603-843e-e2c0285afeec",
        "cursor": {
          "ref": "24ffeb31-4224-41cf-ad40-b92057e14b24",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dff03627-27b0-4c27-81e7-ec3ff1743725"
        },
        "item": {
          "id": "408465e0-6717-4603-843e-e2c0285afeec",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd505328-09b4-4ba4-9c46-7d04be7df929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593f5481-cd50-4a57-bd59-c4075572f884",
        "cursor": {
          "ref": "32dc5c8d-5e05-4182-a2bd-4b03778dadf9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd895226-fc66-40c3-9024-5004474f8f02"
        },
        "item": {
          "id": "593f5481-cd50-4a57-bd59-c4075572f884",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f8c84b6-8701-4a75-aa6b-79ebd8192e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfe6321-98de-45fd-bea9-ee838848b79b",
        "cursor": {
          "ref": "b7468772-5178-4e13-b718-0ead42b661c9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "72d51f55-a11d-4512-89ba-d2ab285efa56"
        },
        "item": {
          "id": "5cfe6321-98de-45fd-bea9-ee838848b79b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "26c294b7-b2df-4719-9f01-2939c09622f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432fb4a3-1165-454a-8d08-8053f2aefbde",
        "cursor": {
          "ref": "9593cca9-7560-4c85-9cb7-24b9f6214d41",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2253dc0f-f8e7-4d30-b138-cd4bbc46cf7d"
        },
        "item": {
          "id": "432fb4a3-1165-454a-8d08-8053f2aefbde",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "be24f48b-ef20-4351-a107-9882a43e30fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafd7ce3-5e0c-4f66-913b-ecb448ec5e9d",
        "cursor": {
          "ref": "f33114a6-89d0-43a8-bdbd-7a58deec5413",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8db1ca54-ad7e-4f4c-bafc-030e6ba6c973"
        },
        "item": {
          "id": "eafd7ce3-5e0c-4f66-913b-ecb448ec5e9d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8d9c7e37-4cec-4b6b-896d-2eafa6d3f7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea0c21e-ff19-4857-96e1-a0b54e5b2ca7",
        "cursor": {
          "ref": "599ec085-48f6-4345-9d3a-4127b633ace6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "228719e2-3b43-46ff-a061-aa74f7be0d4f"
        },
        "item": {
          "id": "cea0c21e-ff19-4857-96e1-a0b54e5b2ca7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a5c70f93-a43a-4564-9927-f9e2ecc6ef84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42a0bae-29eb-423c-82ac-e2c98bfaf51e",
        "cursor": {
          "ref": "9ec77ce8-b1f3-4157-9369-35b62c00627a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "42161922-6091-43a5-a8f3-bed67dde1e50"
        },
        "item": {
          "id": "b42a0bae-29eb-423c-82ac-e2c98bfaf51e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "92443c0b-f6d7-4b3c-8df8-265f1827c29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe0f720-db5a-4528-9722-93b0b5d81631",
        "cursor": {
          "ref": "aa89af01-bc4c-4c3b-963b-cc5f1b900635",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b27c9652-f881-4806-be49-39200a8cc5d1"
        },
        "item": {
          "id": "4fe0f720-db5a-4528-9722-93b0b5d81631",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "acc771ba-a0d0-4079-8b56-41ceb73c32a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871b385b-accb-41d3-904c-f2b43cfceafe",
        "cursor": {
          "ref": "52a5345c-ce72-4d3a-9500-1fb2ac61a0b9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8ea0dc0-2f0c-4b3f-aca1-6176d6b2d214"
        },
        "item": {
          "id": "871b385b-accb-41d3-904c-f2b43cfceafe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8b91c208-606d-477d-8eb3-bda9d68c9c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5550bf44-ee62-4a1f-9f2b-73d675391908",
        "cursor": {
          "ref": "be271a1e-067e-4c47-b3b8-09c470ca2ac0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "380bdb71-68e1-4fdc-b3e9-1ce2aa95325c"
        },
        "item": {
          "id": "5550bf44-ee62-4a1f-9f2b-73d675391908",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "243279f8-d7c2-4a22-b27d-52fe44aa0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b12749-420a-4f46-8cf8-8f2c878b7caa",
        "cursor": {
          "ref": "9d6ba41d-0600-405c-a93c-d1ae48ec8409",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13bf81e2-24fb-4dcb-92e0-e03cce976430"
        },
        "item": {
          "id": "b6b12749-420a-4f46-8cf8-8f2c878b7caa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "06786443-e8aa-4439-9b20-c99fea690689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630900cb-aeaa-4fea-af3a-08463f1eb240",
        "cursor": {
          "ref": "96f3d12d-8dc8-4396-a2e7-08a369ced95d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc07b910-641d-4d7d-90b1-a83db1c61aa6"
        },
        "item": {
          "id": "630900cb-aeaa-4fea-af3a-08463f1eb240",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1bf16c79-db02-4ae7-b535-0b29be7909de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f61c49f-a335-404e-b65f-a4acf58d6717",
        "cursor": {
          "ref": "745eb697-48b9-4a9c-8ddd-a840fe672e98",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d3e0b81-fc11-424d-9617-7b47a05ff2a7"
        },
        "item": {
          "id": "2f61c49f-a335-404e-b65f-a4acf58d6717",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9afa0da-d7df-41de-a797-ba64147d544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc2ef01-edcf-43b4-8377-bfde9b0c9d44",
        "cursor": {
          "ref": "bc747c04-906e-4ac5-97cd-1955b2b6764b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cc95f457-b5e3-4518-947b-5604e95ab140"
        },
        "item": {
          "id": "0bc2ef01-edcf-43b4-8377-bfde9b0c9d44",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "09eebc58-fdd8-4789-9926-1be814cf0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ef0441-513a-4309-9ff4-e7c05d9c2625",
        "cursor": {
          "ref": "146f9a92-5b0c-430c-8fa3-e607597ec835",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "91a52dd7-32e7-45da-b980-6735d5ee8b2d"
        },
        "item": {
          "id": "b0ef0441-513a-4309-9ff4-e7c05d9c2625",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f3044b24-51bd-481e-bda6-b4cc156012c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f13c5e3-cf35-460e-be44-8680ef6df748",
        "cursor": {
          "ref": "00bab68b-7128-4ef6-8785-9deb2d03de45",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "337dd904-4788-4354-be32-e9bca7b1733f"
        },
        "item": {
          "id": "0f13c5e3-cf35-460e-be44-8680ef6df748",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "84efeaeb-1b5a-4f54-82e5-8836a945a4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea16844c-58dd-431e-b28f-6a9cf1f58b36",
        "cursor": {
          "ref": "c383aff6-02d5-4597-b09f-b22fa9cd652c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bcf31639-9c14-4e47-a552-62d0b0c96228"
        },
        "item": {
          "id": "ea16844c-58dd-431e-b28f-6a9cf1f58b36",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a7e801a8-5ee8-40d1-ba10-f49ed086f736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61013ea3-a969-4551-9458-1742aba568b9",
        "cursor": {
          "ref": "818a5641-ff6e-4047-b66e-8705d9c2b4c4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef31466b-72e9-4562-b30b-6197c15fd112"
        },
        "item": {
          "id": "61013ea3-a969-4551-9458-1742aba568b9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c9926b3-6ab0-4ccb-abac-5bbb3b04323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025e2bf-3529-467e-bf38-910c501b2889",
        "cursor": {
          "ref": "7b75fe9e-8958-4418-95c0-f28df2a0438f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36ce4910-a3f0-4860-8086-3fd594d5564e"
        },
        "item": {
          "id": "5025e2bf-3529-467e-bf38-910c501b2889",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2adca9c6-bbea-45ef-87c2-bcba0d2c6a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcbdfd2-d287-438a-8c08-e5103686af93",
        "cursor": {
          "ref": "f340bda8-df0f-4bfc-b0ea-5090ee2fcab3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6dd7398-f588-4f47-89cc-dbd8510a36a8"
        },
        "item": {
          "id": "abcbdfd2-d287-438a-8c08-e5103686af93",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4e33643d-93ef-4a9f-9106-86d0000a4788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6e010-4844-4b87-be24-167a55545b63",
        "cursor": {
          "ref": "72479337-0dd6-4235-8e10-83703ad784d5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e67931b4-ea1f-48ae-b149-639815decc76"
        },
        "item": {
          "id": "cef6e010-4844-4b87-be24-167a55545b63",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60e13a15-5b99-4467-915d-9b4be47c7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae64293-a154-4136-8395-7c5991dec093",
        "cursor": {
          "ref": "277fa387-d529-4ccc-be64-f972a3eb871c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3c447de3-0e47-497b-8049-cb71e1a7dcab"
        },
        "item": {
          "id": "3ae64293-a154-4136-8395-7c5991dec093",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "51a1d435-cb8a-4949-b901-f400edb703fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606bf553-407b-4606-bd2b-ed6e99960c2a",
        "cursor": {
          "ref": "75d1887f-f354-4ae2-ae2c-e9ebbd83d0c8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff10db44-8150-4832-9f3b-cfba6b5a7198"
        },
        "item": {
          "id": "606bf553-407b-4606-bd2b-ed6e99960c2a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eff6a958-1946-480e-ba69-5c8c7af85cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dcd176-dae3-428a-8cbd-7879a865f5f6",
        "cursor": {
          "ref": "40e43e57-6618-406d-91c6-42d5a40c7dbc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "84134a02-127c-4165-85e5-825a2bb17880"
        },
        "item": {
          "id": "83dcd176-dae3-428a-8cbd-7879a865f5f6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a580c8c6-3fd2-4a98-8995-6a61b189defb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8f7045-7736-4290-8161-1b2f50f31160",
        "cursor": {
          "ref": "76b7f5b1-0d67-4b5a-aab6-ff90511c741d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3cfbc2ec-ec7c-4ee1-908c-64461778dd69"
        },
        "item": {
          "id": "5a8f7045-7736-4290-8161-1b2f50f31160",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14a06846-7306-4730-a618-d3934da63dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f717236f-8465-41ed-b15a-891ba8d52b1a",
        "cursor": {
          "ref": "3304cc02-93f1-49a7-a55e-184582b30019",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4a8c3c4f-7501-4045-a012-b68edacf0813"
        },
        "item": {
          "id": "f717236f-8465-41ed-b15a-891ba8d52b1a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a2c0cd4-6295-469d-a723-46675bc39b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16bae8e-b07d-4d03-91d4-1fc57ce84d31",
        "cursor": {
          "ref": "dddf25b0-5e5f-40c9-9a87-c7bc2188278e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f9b600b6-585f-41a1-a038-4919e2f7974b"
        },
        "item": {
          "id": "b16bae8e-b07d-4d03-91d4-1fc57ce84d31",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c4d38f53-dfd9-4d09-8275-b64d1d72471f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751c8c4-bc81-4977-9ec3-dbd9423df267",
        "cursor": {
          "ref": "601cb9f1-672e-40f0-a0f7-e1252ffaaead",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "96620aaa-b6a0-4b1a-9d62-3670b96836c4"
        },
        "item": {
          "id": "d751c8c4-bc81-4977-9ec3-dbd9423df267",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "22339c16-9f3d-4af3-8c80-17014b384e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040dfa0-ee3f-4d81-b3c5-a940007f587a",
        "cursor": {
          "ref": "39b9e19d-494f-4dd9-9317-0785c2350f3d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c69950d1-d054-40ca-9cd1-daea793cdc43"
        },
        "item": {
          "id": "5040dfa0-ee3f-4d81-b3c5-a940007f587a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "de11ffcf-686d-4925-989d-9d8041ae6f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25248625-1655-422a-8415-1e713ca98bde",
        "cursor": {
          "ref": "c2bcef04-5f93-4e68-b230-29724b416641",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "26c3e8ad-36a3-4963-a0ef-c09198424a0f"
        },
        "item": {
          "id": "25248625-1655-422a-8415-1e713ca98bde",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d6a2473-fe1d-47e2-9703-a195573e4f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7071fa4a-cb2d-496c-bdef-08f7c1782c5e",
        "cursor": {
          "ref": "61ea774a-64da-4138-936a-fcc5299ce27a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "266f50c7-e9f0-4db2-943c-f2fb3bbb0949"
        },
        "item": {
          "id": "7071fa4a-cb2d-496c-bdef-08f7c1782c5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0192cc9d-7a76-454d-966b-5dade1d39e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980f9868-41e3-4e11-b52a-0d914c89bd83",
        "cursor": {
          "ref": "363ef7a9-96ee-4b72-ae26-356e2ff6974f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d38d4ef9-ec84-4e53-a809-7830b970acd3"
        },
        "item": {
          "id": "980f9868-41e3-4e11-b52a-0d914c89bd83",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "88d04a65-3b32-4216-82bd-97ccdddca931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae6f7ba-5e78-4308-b803-136688b10008",
        "cursor": {
          "ref": "8c3ee5ae-04ad-4d7b-bc47-d37d4b6f2329",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d42128c7-3d2d-48ef-b68a-0e8b37082860"
        },
        "item": {
          "id": "dae6f7ba-5e78-4308-b803-136688b10008",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dde3c69c-8ff2-4e90-a054-c2cf8cdc8331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3013c-ec1f-4d66-a6fe-1a8b372f8a74",
        "cursor": {
          "ref": "5d266026-2746-40b4-89af-d6506cc07f91",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2c355602-ec34-4184-81ad-c5933cf6b9c5"
        },
        "item": {
          "id": "bea3013c-ec1f-4d66-a6fe-1a8b372f8a74",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3c4904eb-cc9d-4e18-a2d7-2c423783d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e895c84f-b2fa-4df5-839d-f5665a2e2220",
        "cursor": {
          "ref": "f1fd0254-8f03-4abd-adfa-50351f912aad",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6d2eea68-fb6c-4b94-81b6-0cdc6d1b7bd4"
        },
        "item": {
          "id": "e895c84f-b2fa-4df5-839d-f5665a2e2220",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dfa51c21-9f41-4df0-b988-aebb80f1033f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ace1c1-460a-47e4-a7f5-3720c72acb5c",
        "cursor": {
          "ref": "6a90f63a-2e4b-4e00-a6f6-87e5ced9037b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "373655ff-46ad-45a0-837b-317ac79370b1"
        },
        "item": {
          "id": "b1ace1c1-460a-47e4-a7f5-3720c72acb5c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cd23dfb8-903e-44ee-bbf2-a3e9f64c9cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af12120-24c1-45a3-9763-63f2e79fc9e5",
        "cursor": {
          "ref": "9f1d4140-40e4-4036-bc77-3d853bb60398",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4893601a-c0f5-4544-8d4b-84c169e44d1f"
        },
        "item": {
          "id": "7af12120-24c1-45a3-9763-63f2e79fc9e5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f104ee8e-871a-4c64-817d-402eb159ed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844acf99-33bb-4d38-9a80-50d49495b0b0",
        "cursor": {
          "ref": "a4cb0e92-581d-4380-a331-7eabd8b531c5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cb242d91-4147-440a-bc52-0ffbc4d15cdf"
        },
        "item": {
          "id": "844acf99-33bb-4d38-9a80-50d49495b0b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e5a0fbf2-b7e9-411f-bdc1-f3e65126a53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff6e924-3812-448d-9566-0839c48e4d2e",
        "cursor": {
          "ref": "647b54d3-2a5b-44dd-89c5-47b619dd2f8c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "851e7784-33c3-4256-ae49-ad66029cd2b3"
        },
        "item": {
          "id": "0ff6e924-3812-448d-9566-0839c48e4d2e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bf9adc8a-2fca-4490-9bf6-3a4f745da500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472043d-4dbf-44d8-bd0d-f2250a80da96",
        "cursor": {
          "ref": "6587e86c-9adf-421c-86ad-bc2399d7fc4f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a5df3ac9-f373-4422-97b0-cf5dac6b667a"
        },
        "item": {
          "id": "2472043d-4dbf-44d8-bd0d-f2250a80da96",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d6f171fa-21be-42ee-a396-9c3ac6b2269c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e1cf38-2c57-4e29-8d76-2a6d06db9253",
        "cursor": {
          "ref": "5cf8238f-1551-47a2-84b6-1c1c6544faf6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "903bbd8f-9ab3-4d10-9cbc-9e3aafa6ef28"
        },
        "item": {
          "id": "f1e1cf38-2c57-4e29-8d76-2a6d06db9253",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8301ef27-5792-4394-8e48-71a611dbb710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b667b-e00d-49f1-a081-99acbd599b81",
        "cursor": {
          "ref": "06800665-f6ae-4372-8782-642cfc54b4b6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0ae94f1c-9ff7-4b97-8570-699d51275bf2"
        },
        "item": {
          "id": "501b667b-e00d-49f1-a081-99acbd599b81",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0e281ada-9979-40b2-9543-e808454f7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58efc3ad-6803-46f0-a52e-e6823199072e",
        "cursor": {
          "ref": "9a14c6cc-d0fe-4ecd-a080-ae8b06fb8c2c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a190bf98-ce46-487a-aca0-c55ae722aea7"
        },
        "item": {
          "id": "58efc3ad-6803-46f0-a52e-e6823199072e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "65fa3fcf-b7f5-497a-8ff2-b893d63b6074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2dbbd5-dd8d-4d15-af3f-6eea4ab892ce",
        "cursor": {
          "ref": "f76f61a9-b538-4a57-8563-c152d9b3f299",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "94f51f4b-637d-4265-83e5-64b6dbd9676f"
        },
        "item": {
          "id": "9c2dbbd5-dd8d-4d15-af3f-6eea4ab892ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "965cf335-8254-4c08-84ef-1295e931c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6851d75-c2b9-47fd-ac83-01ae504e217e",
        "cursor": {
          "ref": "db9bfbcd-707c-4d6a-85cd-750936779f15",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d5593ebc-1424-4b41-9683-6e3c1315725e"
        },
        "item": {
          "id": "d6851d75-c2b9-47fd-ac83-01ae504e217e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a07bf88-16a8-4bee-a1d4-ebc77ba7e159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e05a0d-e13b-4ba3-8936-7f6a0e850a4c",
        "cursor": {
          "ref": "0b3cf1ab-b791-4154-b16f-f22e4ef80e12",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e45a180e-49e8-44ea-8e50-5197296a4fac"
        },
        "item": {
          "id": "a6e05a0d-e13b-4ba3-8936-7f6a0e850a4c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2f884803-aeef-4bce-a990-31a0413cb6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d7492e-ffcf-4758-a6da-755c6f23c845",
        "cursor": {
          "ref": "eeedf153-a67a-4f9a-a445-a8e0111fbc8f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "57d67cbc-3b2c-4907-bb62-790c60314876"
        },
        "item": {
          "id": "43d7492e-ffcf-4758-a6da-755c6f23c845",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8eb101eb-f97a-40b7-9fc0-0c44c98b8b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2877bdc8-07e6-4ec0-88cd-846850b1ca1d",
        "cursor": {
          "ref": "33379cbc-e799-4473-88d0-df585bd79220",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8c0c78cf-3144-4b14-aac0-d73c1402a353"
        },
        "item": {
          "id": "2877bdc8-07e6-4ec0-88cd-846850b1ca1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9e556eaf-d1fb-4708-82b5-c1f3929f5d31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d79e5f-98e4-4686-aace-2dc7592a9610",
        "cursor": {
          "ref": "dc983be4-ac5d-4187-a696-e4635fb6f219",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b21ad261-cb1e-4896-8060-5c4622df4ee3"
        },
        "item": {
          "id": "36d79e5f-98e4-4686-aace-2dc7592a9610",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce429ba7-e343-44d8-aba6-1bd9c42a7a56",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f890cb-43fe-4ac9-a90a-dd80d8d6885b",
        "cursor": {
          "ref": "8a34f702-a0af-48cb-84dd-b4c983f76fc0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "842043ae-bb46-49be-9c02-bad3fa08c7f8"
        },
        "item": {
          "id": "20f890cb-43fe-4ac9-a90a-dd80d8d6885b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d3d77bd-85ae-475e-9a79-c7853cdeb406",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d84ae68-db36-4a5e-848a-938473c4be1a",
        "cursor": {
          "ref": "a64f4392-5a22-43e7-96eb-62eb7f3aaed1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dbef9f64-1bb0-45ad-ab62-6358242cfde7"
        },
        "item": {
          "id": "6d84ae68-db36-4a5e-848a-938473c4be1a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "367627a6-d747-4948-a1b7-9bdde4e00769",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c7ed2c-12df-436a-bc50-20b316143389",
        "cursor": {
          "ref": "b5316e5c-c519-4846-b31c-32c2f8699d3a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "deecf455-fdd4-43ff-ae52-3bd4df5d64f3"
        },
        "item": {
          "id": "45c7ed2c-12df-436a-bc50-20b316143389",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "efcfc60a-1e04-48a0-8286-87a0fc24efe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c7ed2c-12df-436a-bc50-20b316143389",
        "cursor": {
          "ref": "b5316e5c-c519-4846-b31c-32c2f8699d3a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "deecf455-fdd4-43ff-ae52-3bd4df5d64f3"
        },
        "item": {
          "id": "45c7ed2c-12df-436a-bc50-20b316143389",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "efcfc60a-1e04-48a0-8286-87a0fc24efe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a65ad4-7e09-42f1-a930-3481afe70794",
        "cursor": {
          "ref": "0d50c13e-a3cd-406a-874f-1c35ca6b58c1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a1003e9a-7a8c-480a-b5d2-166420ecf795"
        },
        "item": {
          "id": "40a65ad4-7e09-42f1-a930-3481afe70794",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca12c08d-edf4-49b5-84ef-9a54ad48512b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7b26d5-2608-453c-8060-04b71b35d1e3",
        "cursor": {
          "ref": "e17aa635-2d3a-4292-857b-51f816a6bee1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "34a9c8b0-6dd9-4ab4-8443-aff6dd5c9c5d"
        },
        "item": {
          "id": "0a7b26d5-2608-453c-8060-04b71b35d1e3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b839a441-e93a-4016-8319-4008e740f274",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}